/*************************************************************************/
/*  global_constants.cpp                                                 */
/*************************************************************************/
/*                       This file is part of:                           */
/*                           GODOT ENGINE                                */
/*                      https://godotengine.org                          */
/*************************************************************************/
/* Copyright (c) 2007-2019 Juan Linietsky, Ariel Manzur.                 */
/* Copyright (c) 2014-2019 Godot Engine contributors (cf. AUTHORS.md).   */
/*                                                                       */
/* Permission is hereby granted, free of charge, to any person obtaining */
/* a copy of this software and associated documentation files (the       */
/* "Software"), to deal in the Software without restriction, including   */
/* without limitation the rights to use, copy, modify, merge, publish,   */
/* distribute, sublicense, and/or sell copies of the Software, and to    */
/* permit persons to whom the Software is furnished to do so, subject to */
/* the following conditions:                                             */
/*                                                                       */
/* The above copyright notice and this permission notice shall be        */
/* included in all copies or substantial portions of the Software.       */
/*                                                                       */
/* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,       */
/* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF    */
/* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.*/
/* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY  */
/* CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  */
/* TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE     */
/* SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                */
/*************************************************************************/

#include "global_constants.h"

#include "core/input/input_event.h"
#include "core/os/keyboard.h"
#include "core/type_info.h"
#include "core/method_bind.h"


struct _GlobalConstant {

#ifdef DEBUG_METHODS_ENABLED
    StringName enum_name;
    bool ignore_value_in_docs;
#endif
    const char *name;
    int value;

    _GlobalConstant() = default;

#ifdef DEBUG_METHODS_ENABLED
    _GlobalConstant(StringName p_enum_name, const char *p_name, int p_value, bool p_ignore_value_in_docs = false) :
            enum_name(eastl::move(p_enum_name)),
            ignore_value_in_docs(p_ignore_value_in_docs),
            name(p_name),
            value(p_value) {
    }
#else
    _GlobalConstant(const char *p_name, int p_value) :
            name(p_name),
            value(p_value) {
    }
#endif
};

static Vector<_GlobalConstant> _global_constants;

#ifdef DEBUG_METHODS_ENABLED

#define BIND_GLOBAL_CONSTANT(m_constant) \
    _global_constants.emplace_back(StringName(), #m_constant, m_constant);

#define BIND_STATIC_GLOBAL_ENUM_CONSTANT(m_constant); \
    _global_constants.emplace_back(__constant_get_enum_name(m_constant, #m_constant), #m_constant, int(m_constant))
#define BIND_GLOBAL_CLASS_ENUM_CONSTANT(m_class,m_constant) \
    _global_constants.emplace_back(StringName(#m_class), #m_constant, int(m_class::m_constant));

#define BIND_GLOBAL_ENUM_CONSTANT_CUSTOM(m_custom_name, m_constant) \
    _global_constants.emplace_back(__constant_get_enum_name(m_constant, #m_constant), m_custom_name, int(m_constant));

#else

#define BIND_GLOBAL_CONSTANT(m_constant) \
    _global_constants.emplace_back(#m_constant, int(m_constant));

#define BIND_GLOBAL_ENUM_CONSTANT(m_constant) \
    _global_constants.emplace_back(#m_constant, int(m_constant));

#define BIND_GLOBAL_ENUM_CONSTANT_CUSTOM(m_custom_name, m_constant) \
    _global_constants.emplace_back(m_custom_name, int(m_constant));

#define BIND_STATIC_GLOBAL_ENUM_CONSTANT(m_constant); \
    _global_constants.emplace_back(#m_constant, int(m_constant));

#define BIND_GLOBAL_CLASS_ENUM_CONSTANT(m_class,m_constant) \
    _global_constants.emplace_back(#m_constant, int(m_class::m_constant));

#endif

VARIANT_ENUM_CAST(KeyList);
VARIANT_ENUM_CAST(KeyModifierMask);
VARIANT_ENUM_CAST(ButtonList);
VARIANT_ENUM_CAST(JoystickList);
VARIANT_ENUM_CAST(MidiMessageList);

void register_global_constants() {

    // Create a dummy class where we can add global enums etc.
    ClassDB::add_namespace("@","");
    SE_NAMESPACE(Godot)

    BIND_GLOBAL_CLASS_ENUM_CONSTANT(Margin,Left)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(Margin, Top)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(Margin, Right)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(Margin, Bottom)

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(CORNER_TOP_LEFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(CORNER_TOP_RIGHT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(CORNER_BOTTOM_RIGHT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(CORNER_BOTTOM_LEFT);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(VERTICAL);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(HORIZONTAL);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(HALIGN_LEFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(HALIGN_CENTER);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(HALIGN_RIGHT);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(VALIGN_TOP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(VALIGN_CENTER);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(VALIGN_BOTTOM);

    // huge list of keys
    BIND_GLOBAL_CONSTANT(SPKEY)

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ESCAPE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_TAB);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BACKTAB);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BACKSPACE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ENTER);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_ENTER);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_INSERT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_DELETE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_PAUSE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_PRINT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_SYSREQ);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_CLEAR);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_HOME);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_END);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LEFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_UP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_RIGHT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_DOWN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_PAGEUP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_PAGEDOWN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_SHIFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_CONTROL);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_META);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ALT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_CAPSLOCK);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_NUMLOCK);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_SCROLLLOCK);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F1);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F2);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F3);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F4);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F5);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F6);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F7);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F8);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F9);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F10);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F11);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F12);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F13);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F14);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F15);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F16);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_MULTIPLY);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_DIVIDE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_SUBTRACT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_PERIOD);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_ADD);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_0);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_1);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_2);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_3);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_4);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_5);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_6);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_7);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_8);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_KP_9);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_SUPER_L);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_SUPER_R);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MENU);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_HYPER_L);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_HYPER_R);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_HELP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_DIRECTION_L);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_DIRECTION_R);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BACK);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_FORWARD);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_STOP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_REFRESH);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_VOLUMEDOWN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_VOLUMEMUTE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_VOLUMEUP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BASSBOOST);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BASSUP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BASSDOWN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_TREBLEUP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_TREBLEDOWN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MEDIAPLAY);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MEDIASTOP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MEDIAPREVIOUS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MEDIANEXT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MEDIARECORD);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_HOMEPAGE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_FAVORITES);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_SEARCH);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_STANDBY);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_OPENURL);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCHMAIL);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCHMEDIA);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCH0);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCH1);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCH2);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCH3);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCH4);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCH5);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCH6);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCH7);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCH8);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCH9);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCHA);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCHB);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCHC);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCHD);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCHE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LAUNCHF);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_UNKNOWN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_SPACE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_EXCLAM);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_QUOTEDBL);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_NUMBERSIGN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_DOLLAR);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_PERCENT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_AMPERSAND);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_APOSTROPHE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_PARENLEFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_PARENRIGHT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ASTERISK);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_PLUS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_COMMA);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MINUS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_PERIOD);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_SLASH);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_0);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_1);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_2);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_3);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_4);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_5);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_6);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_7);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_8);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_9);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_COLON);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_SEMICOLON);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_LESS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_EQUAL);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_GREATER);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_QUESTION);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_AT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_A);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_B);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_C);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_D);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_E);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_F);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_G);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_H);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_I);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_J);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_K);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_L);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_M);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_N);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_O);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_P);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_Q);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_R);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_S);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_T);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_U);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_V);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_W);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_X);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_Y);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_Z);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BRACKETLEFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BACKSLASH);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BRACKETRIGHT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ASCIICIRCUM);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_UNDERSCORE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_QUOTELEFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BRACELEFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BAR);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BRACERIGHT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ASCIITILDE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_NOBREAKSPACE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_EXCLAMDOWN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_CENT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_STERLING);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_CURRENCY);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_YEN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_BROKENBAR);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_SECTION);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_DIAERESIS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_COPYRIGHT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ORDFEMININE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_GUILLEMOTLEFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_NOTSIGN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_HYPHEN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_REGISTERED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MACRON);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_DEGREE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_PLUSMINUS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_TWOSUPERIOR);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_THREESUPERIOR);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ACUTE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MU);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_PARAGRAPH);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_PERIODCENTERED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_CEDILLA);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ONESUPERIOR);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MASCULINE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_GUILLEMOTRIGHT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ONEQUARTER);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ONEHALF);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_THREEQUARTERS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_QUESTIONDOWN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_AGRAVE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_AACUTE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ACIRCUMFLEX);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ATILDE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ADIAERESIS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ARING);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_AE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_CCEDILLA);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_EGRAVE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_EACUTE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ECIRCUMFLEX);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_EDIAERESIS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_IGRAVE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_IACUTE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ICIRCUMFLEX);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_IDIAERESIS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ETH);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_NTILDE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_OGRAVE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_OACUTE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_OCIRCUMFLEX);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_OTILDE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_ODIAERESIS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MULTIPLY);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_OOBLIQUE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_UGRAVE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_UACUTE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_UCIRCUMFLEX);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_UDIAERESIS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_YACUTE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_THORN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_SSHARP);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_DIVISION);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_YDIAERESIS);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_CODE_MASK);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MODIFIER_MASK);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MASK_SHIFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MASK_ALT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MASK_META);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MASK_CTRL);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MASK_CMD);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MASK_KPAD);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(KEY_MASK_GROUP_SWITCH);

    // mouse
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_LEFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_RIGHT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_MIDDLE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_XBUTTON1);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_XBUTTON2);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_WHEEL_UP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_WHEEL_DOWN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_WHEEL_LEFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_WHEEL_RIGHT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_MASK_LEFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_MASK_RIGHT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_MASK_MIDDLE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_MASK_XBUTTON1);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(BUTTON_MASK_XBUTTON2);

    //joypads
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_INVALID_OPTION);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_0);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_1);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_2);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_3);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_4);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_5);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_6);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_7);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_8);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_9);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_10);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_11);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_12);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_13);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_14);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_15);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_BUTTON_MAX);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_SONY_CIRCLE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_SONY_X);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_SONY_SQUARE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_SONY_TRIANGLE);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_XBOX_B);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_XBOX_A);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_XBOX_X);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_XBOX_Y);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_DS_A);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_DS_B);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_DS_X);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_DS_Y);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_VR_GRIP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_VR_PAD);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_VR_TRIGGER);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_OCULUS_AX);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_OCULUS_BY);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_OCULUS_MENU);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_OPENVR_MENU);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_SELECT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_START);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_DPAD_UP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_DPAD_DOWN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_DPAD_LEFT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_DPAD_RIGHT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_L);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_L2);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_L3);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_R);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_R2);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_R3);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_AXIS_0);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_AXIS_1);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_AXIS_2);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_AXIS_3);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_AXIS_4);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_AXIS_5);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_AXIS_6);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_AXIS_7);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_AXIS_8);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_AXIS_9);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_AXIS_MAX);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_ANALOG_LX);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_ANALOG_LY);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_ANALOG_RX);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_ANALOG_RY);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_ANALOG_L2);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_ANALOG_R2);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_VR_ANALOG_TRIGGER);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_VR_ANALOG_GRIP);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_OPENVR_TOUCHPADX);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(JOY_OPENVR_TOUCHPADY);

    // midi
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(MIDI_MESSAGE_NOTE_OFF);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(MIDI_MESSAGE_NOTE_ON);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(MIDI_MESSAGE_AFTERTOUCH);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(MIDI_MESSAGE_CONTROL_CHANGE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(MIDI_MESSAGE_PROGRAM_CHANGE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(MIDI_MESSAGE_CHANNEL_PRESSURE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(MIDI_MESSAGE_PITCH_BEND);

    // error list

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(OK); // (0)
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(FAILED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_UNAVAILABLE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_UNCONFIGURED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_UNAUTHORIZED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_PARAMETER_RANGE_ERROR); // (5)
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_OUT_OF_MEMORY);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_FILE_NOT_FOUND);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_FILE_BAD_DRIVE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_FILE_BAD_PATH);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_FILE_NO_PERMISSION); // (10)
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_FILE_ALREADY_IN_USE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_FILE_CANT_OPEN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_FILE_CANT_WRITE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_FILE_CANT_READ);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_FILE_UNRECOGNIZED); // (15)
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_FILE_CORRUPT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_FILE_MISSING_DEPENDENCIES);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_FILE_EOF);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_CANT_OPEN);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_CANT_CREATE); // (20)
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_QUERY_FAILED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_ALREADY_IN_USE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_LOCKED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_TIMEOUT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_CANT_CONNECT); // (25)
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_CANT_RESOLVE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_CONNECTION_ERROR);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_CANT_ACQUIRE_RESOURCE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_CANT_FORK);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_INVALID_DATA); // (30)
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_INVALID_PARAMETER);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_ALREADY_EXISTS);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_DOES_NOT_EXIST);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_DATABASE_CANT_READ);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_DATABASE_CANT_WRITE); // (35)
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_COMPILATION_FAILED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_METHOD_NOT_FOUND);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_LINK_FAILED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_SCRIPT_FAILED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_CYCLIC_LINK); // (40)
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_INVALID_DECLARATION);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_DUPLICATE_SYMBOL);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_PARSE_ERROR);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_BUSY);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_SKIP); // (45)
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_HELP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_BUG);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(ERR_PRINTER_ON_FIRE);


    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,None)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,Range)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,ExpRange)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,Enum)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,ExpEasing)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,Flags)

    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,Layers2DRenderer)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,Layers2DPhysics)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,Layers3DRenderer)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,Layers3DPhysics)

    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,File)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,Dir)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,GlobalFile)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,GlobalDir)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,ResourceType)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,MultilineText)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,PlaceholderText)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,ColorNoAlpha)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,ImageCompressLossy)
    BIND_GLOBAL_CLASS_ENUM_CONSTANT(PropertyHint,ImageCompressLossless)

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_STORAGE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_EDITOR);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_CHECKABLE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_CHECKED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_INTERNATIONALIZED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_GROUP);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_CATEGORY);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_NO_INSTANCE_STATE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_RESTART_IF_CHANGED);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_SCRIPT_VARIABLE);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_ARRAY);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_DEFAULT);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_DEFAULT_INTL);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(PROPERTY_USAGE_NOEDITOR);

    BIND_STATIC_GLOBAL_ENUM_CONSTANT(METHOD_FLAG_NORMAL);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(METHOD_FLAG_EDITOR);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(METHOD_FLAG_CONST);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(METHOD_FLAG_VIRTUAL);
    BIND_STATIC_GLOBAL_ENUM_CONSTANT(METHOD_FLAGS_DEFAULT);

    //_global_constants.emplace_back(__constant_get_enum_name(m_constant, #m_constant), m_custom_name, int(m_constant));
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_NIL", VariantType::NIL);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_BOOL", VariantType::BOOL);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_INT", VariantType::INT);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_REAL", VariantType::FLOAT);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_STRING", VariantType::STRING);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_VECTOR2", VariantType::VECTOR2); // 5
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_RECT2", VariantType::RECT2);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_VECTOR3", VariantType::VECTOR3);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_TRANSFORM2D", VariantType::TRANSFORM2D);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_PLANE", VariantType::PLANE);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_QUAT", VariantType::QUAT); // 10
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_AABB", VariantType::AABB);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_BASIS", VariantType::BASIS);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_TRANSFORM", VariantType::TRANSFORM);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_COLOR", VariantType::COLOR);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_STRING_NAME", VariantType::STRING_NAME);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_NODE_PATH", VariantType::NODE_PATH); // 15
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_RID", VariantType::_RID);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_OBJECT", VariantType::OBJECT);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_DICTIONARY", VariantType::DICTIONARY); // 20
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_ARRAY", VariantType::ARRAY);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_RAW_ARRAY", VariantType::POOL_BYTE_ARRAY);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_INT_ARRAY", VariantType::POOL_INT_ARRAY);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_REAL_ARRAY", VariantType::POOL_REAL_ARRAY);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_STRING_ARRAY", VariantType::POOL_STRING_ARRAY);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_VECTOR2_ARRAY", VariantType::POOL_VECTOR2_ARRAY); // 25
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_VECTOR3_ARRAY", VariantType::POOL_VECTOR3_ARRAY);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_COLOR_ARRAY", VariantType::POOL_COLOR_ARRAY);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("TYPE_MAX", VariantType::VARIANT_MAX);

    //comparison
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("OP_EQUAL", Variant::OP_EQUAL);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("OP_NOT_EQUAL", Variant::OP_NOT_EQUAL);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("OP_LESS", Variant::OP_LESS);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("OP_GREATER", Variant::OP_GREATER);
    BIND_GLOBAL_ENUM_CONSTANT_CUSTOM("OP_MAX", Variant::OP_MAX);

    SE_END();
}

void unregister_global_constants() {

    _global_constants.clear();
}

int GlobalConstants::get_global_constant_count() {

    return _global_constants.size();
}

#ifdef DEBUG_METHODS_ENABLED
StringName GlobalConstants::get_global_constant_enum(int p_idx) {

    return _global_constants[p_idx].enum_name;
}
#else
StringName GlobalConstants::get_global_constant_enum(int p_idx) {

    return StringName();
}
#endif

const char *GlobalConstants::get_global_constant_name(int p_idx) {

    return _global_constants[p_idx].name;
}

int GlobalConstants::get_global_constant_value(int p_idx) {

    return _global_constants[p_idx].value;
}
