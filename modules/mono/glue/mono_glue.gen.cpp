/* THIS FILE IS GENERATED DO NOT EDIT */
#include "modules/mono/glue/glue_header.h"
#include "core/method_bind.h"
#include "core/pool_vector.h"

#ifdef MONO_GLUE_ENABLED
#include "scene/3d/arvr_nodes.h"
#include "servers/arvr/arvr_interface.h"
#include "servers/arvr/arvr_positional_tracker.h"
#include "servers/arvr_server.h"
#include "core/math/a_star.h"
#include "scene/gui/dialogs.h"
#include "scene/2d/animated_sprite.h"
#include "scene/3d/sprite_3d.h"
#include "scene/resources/texture.h"
#include "scene/resources/animation.h"
#include "scene/animation/animation_tree.h"
#include "scene/animation/animation_blend_tree.h"
#include "scene/animation/animation_blend_space_1d.h"
#include "scene/animation/animation_blend_space_2d.h"
#include "scene/animation/animation_node_state_machine.h"
#include "scene/animation/animation_player.h"
#include "editor/animation_track_editor.h"
#include "scene/animation/animation_tree_player.h"
#include "scene/3d/area.h"
#include "scene/2d/area_2d.h"
#include "scene/resources/mesh.h"
#include "servers/audio_server.h"
#include "servers/audio/audio_effect.h"
#include "servers/audio/effects/audio_effect_amplify.h"
#include "servers/audio/effects/audio_effect_filter.h"
#include "servers/audio/effects/audio_effect_chorus.h"
#include "servers/audio/effects/audio_effect_compressor.h"
#include "servers/audio/effects/audio_effect_delay.h"
#include "servers/audio/effects/audio_effect_distortion.h"
#include "servers/audio/effects/audio_effect_eq.h"
#include "servers/audio/effects/audio_effect_limiter.h"
#include "servers/audio/effects/audio_effect_panner.h"
#include "servers/audio/effects/audio_effect_phaser.h"
#include "servers/audio/effects/audio_effect_pitch_shift.h"
#include "servers/audio/effects/audio_effect_record.h"
#include "servers/audio/effects/audio_effect_reverb.h"
#include "servers/audio/effects/audio_effect_spectrum_analyzer.h"
#include "servers/audio/effects/audio_effect_stereo_enhance.h"
#include "servers/audio/audio_stream.h"
#include "servers/audio/effects/audio_stream_generator.h"
#include "modules/stb_vorbis/audio_stream_ogg_vorbis.h"
#include "scene/audio/audio_stream_player.h"
#include "scene/2d/audio_stream_player_2d.h"
#include "scene/3d/audio_stream_player_3d.h"
#include "scene/resources/audio_stream_sample.h"
#include "scene/2d/back_buffer_copy.h"
#include "scene/3d/baked_lightmap.h"
#include "scene/gui/base_button.h"
#include "scene/resources/bit_map.h"
#include "scene/resources/font.h"
#include "scene/2d/skeleton_2d.h"
#include "scene/3d/bone_attachment.h"
#include "scene/gui/box_container.h"
#include "scene/resources/box_shape.h"
#include "scene/gui/button.h"
#include "scene/3d/cpu_particles.h"
#include "scene/2d/cpu_particles_2d.h"
#include "modules/csg/csg_shape.h"
#include "modules/mono/csharp_script.h"
#include "scene/3d/camera.h"
#include "scene/2d/camera_2d.h"
#include "servers/camera/camera_feed.h"
#include "servers/camera_server.h"
#include "scene/resources/camera_texture.h"
#include "scene/2d/canvas_item.h"
#include "scene/main/canvas_layer.h"
#include "scene/2d/canvas_modulate.h"
#include "scene/resources/primitive_meshes.h"
#include "scene/resources/capsule_shape.h"
#include "scene/resources/capsule_shape_2d.h"
#include "scene/gui/center_container.h"
#include "scene/gui/rich_text_effect.h"
#include "scene/gui/check_box.h"
#include "scene/gui/check_button.h"
#include "scene/resources/circle_shape_2d.h"
#include "scene/3d/collision_object.h"
#include "scene/2d/collision_object_2d.h"
#include "scene/3d/collision_polygon.h"
#include "scene/2d/collision_polygon_2d.h"
#include "scene/3d/collision_shape.h"
#include "scene/2d/collision_shape_2d.h"
#include "scene/gui/color_picker.h"
#include "scene/gui/color_rect.h"
#include "scene/resources/concave_polygon_shape.h"
#include "scene/resources/concave_polygon_shape_2d.h"
#include "scene/3d/physics_joint.h"
#include "core/io/config_file.h"
#include "scene/gui/container.h"
#include "scene/gui/control.h"
#include "scene/resources/convex_polygon_shape.h"
#include "scene/resources/convex_polygon_shape_2d.h"
#include "core/crypto/crypto.h"
#include "scene/resources/curve.h"
#include "scene/resources/cylinder_shape.h"
#include "scene/2d/joints_2d.h"
#include "scene/3d/light.h"
#include "scene/resources/dynamic_font.h"
#include "editor/editor_export.h"
#include "editor/editor_feature_profile.h"
#include "editor/editor_file_dialog.h"
#include "editor/editor_file_system.h"
#include "editor/import/editor_import_plugin.h"
#include "editor/editor_inspector.h"
#include "editor/editor_plugin.h"
#include "modules/gdnavigation/navigation_mesh_generator.h"
#include "editor/property_editor.h"
#include "editor/editor_resource_preview.h"
#include "editor/import/resource_importer_scene.h"
#include "editor/editor_run_script.h"
#include "editor/editor_data.h"
#include "editor/editor_settings.h"
#include "editor/plugins/spatial_editor_plugin.h"
#include "editor/editor_spin_slider.h"
#include "editor/editor_vcs_interface.h"
#include "core/io/marshalls.h"
#include "scene/resources/environment.h"
#include "core/math/expression.h"
#include "scene/gui/file_dialog.h"
#include "core/func_ref.h"
#include "modules/gdscript/gdscript.h"
#include "modules/gdscript/gdscript_function.h"
#include "scene/3d/gi_probe.h"
#include "scene/3d/visual_instance.h"
#include "scene/resources/gradient.h"
#include "scene/gui/graph_edit.h"
#include "scene/gui/graph_node.h"
#include "scene/gui/grid_container.h"
#include "modules/gridmap/grid_map.h"
#include "scene/gui/scroll_bar.h"
#include "scene/gui/separator.h"
#include "scene/gui/slider.h"
#include "scene/gui/split_container.h"
#include "core/io/http_client.h"
#include "scene/main/http_request.h"
#include "core/crypto/hashing_context.h"
#include "scene/resources/height_map_shape.h"
#include "core/io/ip.h"
#include "core/image.h"
#include "scene/3d/immediate_geometry.h"
#include "core/os/input.h"
#include "core/os/input_event.h"
#include "core/input_map.h"
#include "scene/main/instance_placeholder.h"
#include "scene/3d/interpolated_camera.h"
#include "scene/gui/item_list.h"
#include "core/bind/core_bind.h"
#include "modules/jsonrpc/jsonrpc.h"
#include "scene/3d/physics_body.h"
#include "scene/2d/physics_body_2d.h"
#include "scene/gui/label.h"
#include "scene/2d/light_2d.h"
#include "scene/2d/light_occluder_2d.h"
#include "scene/2d/line_2d.h"
#include "scene/gui/line_edit.h"
#include "scene/resources/line_shape_2d.h"
#include "scene/gui/link_button.h"
#include "scene/3d/listener.h"
#include "core/os/main_loop.h"
#include "scene/gui/margin_container.h"
#include "scene/resources/material.h"
#include "scene/gui/menu_button.h"
#include "scene/resources/mesh_data_tool.h"
#include "scene/3d/mesh_instance.h"
#include "scene/2d/mesh_instance_2d.h"
#include "scene/resources/mesh_library.h"
#include "scene/resources/multimesh.h"
#include "scene/3d/multimesh_instance.h"
#include "scene/2d/multimesh_instance_2d.h"
#include "core/io/multiplayer_api.h"
#include "scene/3d/navigation.h"
#include "scene/2d/navigation_2d.h"
#include "scene/3d/navigation_agent.h"
#include "scene/2d/navigation_agent_2d.h"
#include "modules/gdnavigation/navigation_mesh_generator.h"
#include "scene/3d/navigation_mesh_instance.h"
#include "scene/3d/navigation_obstacle.h"
#include "scene/2d/navigation_obstacle_2d.h"
#include "scene/2d/navigation_polygon.h"
#include "modules/enet/networked_multiplayer_enet.h"
#include "core/io/networked_multiplayer_peer.h"
#include "scene/gui/nine_patch_rect.h"
#include "scene/main/node.h"
#include "scene/2d/node_2d.h"
#include "modules/opensimplex/noise_texture.h"
#include "core/object.h"
#include "modules/opensimplex/open_simplex_noise.h"
#include "scene/gui/option_button.h"
#include "core/io/pck_packer.h"
#include "core/compressed_translation.h"
#include "core/packed_data_container.h"
#include "scene/resources/packed_scene.h"
#include "core/io/packet_peer.h"
#include "core/io/packet_peer_udp.h"
#include "scene/gui/panel.h"
#include "scene/gui/panel_container.h"
#include "scene/resources/sky.h"
#include "scene/2d/parallax_background.h"
#include "scene/2d/parallax_layer.h"
#include "scene/3d/particles.h"
#include "scene/2d/particles_2d.h"
#include "scene/resources/particles_material.h"
#include "scene/3d/path.h"
#include "scene/2d/path_2d.h"
#include "main/performance.h"
#include "servers/physics_2d_server.h"
#include "servers/physics_server.h"
#include "scene/resources/physics_material.h"
#include "scene/resources/plane_shape.h"
#include "scene/2d/polygon_2d.h"
#include "scene/resources/polygon_path_finder.h"
#include "scene/gui/popup.h"
#include "scene/gui/popup_menu.h"
#include "scene/2d/position_2d.h"
#include "scene/3d/position_3d.h"
#include "scene/gui/progress_bar.h"
#include "core/project_settings.h"
#include "scene/3d/proximity_group.h"
#include "core/math/random_number_generator.h"
#include "scene/gui/range.h"
#include "scene/3d/ray_cast.h"
#include "scene/2d/ray_cast_2d.h"
#include "scene/resources/ray_shape.h"
#include "scene/resources/segment_shape_2d.h"
#include "scene/resources/rectangle_shape_2d.h"
#include "core/reference.h"
#include "scene/gui/reference_rect.h"
#include "scene/3d/reflection_probe.h"
#include "modules/regex/regex.h"
#include "scene/3d/remote_transform.h"
#include "scene/2d/remote_transform_2d.h"
#include "core/resources_subsystem/resource.h"
#include "core/io/resource_loader.h"
#include "core/io/resource_saver.h"
#include "core/io/resource_importer.h"
#include "scene/main/resource_preloader.h"
#include "scene/gui/rich_text_label.h"
#include "scene/main/scene_tree.h"
#include "core/script_language.h"
#include "editor/script_create_dialog.h"
#include "editor/plugins/script_editor_plugin.h"
#include "scene/gui/scroll_container.h"
#include "scene/resources/shader.h"
#include "scene/resources/shape.h"
#include "scene/resources/shape_2d.h"
#include "scene/gui/shortcut.h"
#include "scene/3d/skeleton.h"
#include "scene/animation/skeleton_ik.h"
#include "scene/resources/skin.h"
#include "scene/3d/soft_body.h"
#include "scene/3d/spatial.h"
#include "scene/3d/spatial_velocity_tracker.h"
#include "scene/resources/sphere_shape.h"
#include "scene/gui/spin_box.h"
#include "scene/3d/spring_arm.h"
#include "scene/2d/sprite.h"
#include "core/io/stream_peer.h"
#include "core/io/stream_peer_ssl.h"
#include "core/io/stream_peer_tcp.h"
#include "scene/resources/style_box.h"
#include "scene/resources/surface_tool.h"
#include "core/io/tcp_server.h"
#include "scene/gui/tab_container.h"
#include "scene/gui/tabs.h"
#include "scene/gui/text_edit.h"
#include "scene/resources/text_file.h"
#include "scene/gui/texture_button.h"
#include "scene/gui/texture_progress.h"
#include "scene/gui/texture_rect.h"
#include "scene/resources/theme.h"
#include "scene/2d/tile_map.h"
#include "scene/resources/tile_set.h"
#include "scene/main/timer.h"
#include "scene/gui/tool_button.h"
#include "scene/2d/touch_screen_button.h"
#include "core/translation.h"
#include "scene/gui/tree.h"
#include "core/math/triangle_mesh.h"
#include "scene/animation/tween.h"
#include "modules/upnp/upnp.h"
#include "modules/upnp/upnp_device.h"
#include "core/undo_redo.h"
#include "scene/3d/vehicle_body.h"
#include "scene/gui/video_player.h"
#include "scene/resources/video_stream.h"
#include "scene/main/viewport.h"
#include "scene/gui/viewport_container.h"
#include "scene/3d/visibility_notifier.h"
#include "scene/2d/visibility_notifier_2d.h"
#include "modules/visual_script/visual_script.h"
#include "modules/visual_script/visual_script_nodes.h"
#include "modules/visual_script/visual_script_builtin_funcs.h"
#include "modules/visual_script/visual_script_flow_control.h"
#include "modules/visual_script/visual_script_func_nodes.h"
#include "modules/visual_script/visual_script_expression.h"
#include "modules/visual_script/visual_script_yield_nodes.h"
#include "servers/visual_server.h"
#include "scene/resources/visual_shader.h"
#include "scene/resources/visual_shader_nodes.h"
#include "modules/webrtc/webrtc_data_channel.h"
#include "modules/webrtc/webrtc_multiplayer.h"
#include "modules/webrtc/webrtc_peer_connection.h"
#include "modules/websocket/websocket_client.h"
#include "modules/websocket/websocket_multiplayer_peer.h"
#include "modules/websocket/websocket_peer.h"
#include "modules/websocket/websocket_server.h"
#include "scene/resources/world.h"
#include "scene/resources/world_2d.h"
#include "scene/resources/curve_texture.h"
#include "scene/3d/world_environment.h"
#include "core/io/xml_parser.h"
#include "scene/2d/y_sort.h"
#include "modules/mono/mono_gd/gd_mono.h"
#include "modules/visual_script/visual_script_editor.h"

struct AutoRef {
    Object *self;
    AutoRef(Object *s) : self(s) {}
    template<class T>
    operator Ref<T>() {
        return Ref<T>((T*)self);
    }
};
void godot_icall_ARVRAnchor_set_anchor_id_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ARVRAnchor *>(ptr)->set_anchor_id(arg1_in);
}

int32_t godot_icall_ARVRAnchor_get_anchor_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ARVRAnchor *>(ptr)->get_anchor_id();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_ARVRAnchor_get_anchor_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ARVRAnchor *>(ptr)->get_anchor_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_ARVRAnchor_get_is_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ARVRAnchor *>(ptr)->get_is_active();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ARVRAnchor_get_size_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRAnchor *>(ptr)->get_size();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_ARVRAnchor_get_plane_8702117d(Object * ptr, GDMonoMarshal::M_Plane* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Plane(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRAnchor *>(ptr)->get_plane();
    *arg_ret = MARSHALLED_OUT(Plane, ret);
}

MonoObject* godot_icall_ARVRAnchor_get_mesh_1372d766(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ARVRAnchor *>(ptr)->get_mesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_ARVRAnchor_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ARVRAnchor")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_ARVRCamera_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ARVRCamera")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ARVRController_set_controller_id_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ARVRController *>(ptr)->set_controller_id(arg1_in);
}

int32_t godot_icall_ARVRController_get_controller_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ARVRController *>(ptr)->get_controller_id();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_ARVRController_get_controller_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ARVRController *>(ptr)->get_controller_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_ARVRController_get_joystick_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ARVRController *>(ptr)->get_joystick_id();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_ARVRController_is_button_pressed_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ARVRController *>(ptr)->is_button_pressed(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_ARVRController_get_joystick_axis_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ARVRController *>(ptr)->get_joystick_axis(arg1_in);
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_ARVRController_get_is_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ARVRController *>(ptr)->get_is_active();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_ARVRController_get_hand_d5e4e3f7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ARVRController *>(ptr)->get_hand();
    return (int32_t)ret;
}

void godot_icall_ARVRController_get_rumble_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRController *>(ptr)->get_rumble();
    *arg_ret = (float)ret;
}

void godot_icall_ARVRController_set_rumble_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ARVRController *>(ptr)->set_rumble(arg1_in);
}

MonoObject* godot_icall_ARVRController_get_mesh_1372d766(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ARVRController *>(ptr)->get_mesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_ARVRController_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ARVRController")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoString* godot_icall_ARVRInterface_get_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ARVRInterface *>(ptr)->get_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_ARVRInterface_get_capabilities_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ARVRInterface *>(ptr)->get_capabilities();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_ARVRInterface_is_primary_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ARVRInterface *>(ptr)->is_primary();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ARVRInterface_set_is_primary_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ARVRInterface *>(ptr)->set_is_primary(arg1_in);
}

MonoBoolean godot_icall_ARVRInterface_is_initialized_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ARVRInterface *>(ptr)->is_initialized();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ARVRInterface_set_is_initialized_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ARVRInterface *>(ptr)->set_is_initialized(arg1_in);
}

MonoBoolean godot_icall_ARVRInterface_initialize_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ARVRInterface *>(ptr)->initialize();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ARVRInterface_uninitialize_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<ARVRInterface *>(ptr)->uninitialize();
}

int32_t godot_icall_ARVRInterface_get_tracking_status_f6a5f17b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ARVRInterface *>(ptr)->get_tracking_status();
    return (int32_t)ret;
}

void godot_icall_ARVRInterface_get_render_targetsize_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRInterface *>(ptr)->get_render_targetsize();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoBoolean godot_icall_ARVRInterface_is_stereo_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ARVRInterface *>(ptr)->is_stereo();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_ARVRInterface_get_anchor_detection_is_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ARVRInterface *>(ptr)->get_anchor_detection_is_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ARVRInterface_set_anchor_detection_is_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ARVRInterface *>(ptr)->set_anchor_detection_is_enabled(arg1_in);
}

int32_t godot_icall_ARVRInterface_get_camera_feed_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ARVRInterface *>(ptr)->get_camera_feed_id();
    return static_cast<int32_t>(ret);
}

void godot_icall_ARVROrigin_set_world_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ARVROrigin *>(ptr)->set_world_scale(arg1_in);
}

void godot_icall_ARVROrigin_get_world_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVROrigin *>(ptr)->get_world_scale();
    *arg_ret = (float)ret;
}

Object* godot_icall_ARVROrigin_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ARVROrigin")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_ARVRPositionalTracker_get_type_3def433(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ARVRPositionalTracker *>(ptr)->get_type();
    return (int32_t)ret;
}

MonoString* godot_icall_ARVRPositionalTracker_get_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ARVRPositionalTracker *>(ptr)->get_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_ARVRPositionalTracker_get_joy_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ARVRPositionalTracker *>(ptr)->get_joy_id();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_ARVRPositionalTracker_get_tracks_orientation_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ARVRPositionalTracker *>(ptr)->get_tracks_orientation();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ARVRPositionalTracker_get_orientation_4746c0fd(Object * ptr, GDMonoMarshal::M_Basis* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Basis(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRPositionalTracker *>(ptr)->get_orientation();
    *arg_ret = MARSHALLED_OUT(Basis, ret);
}

MonoBoolean godot_icall_ARVRPositionalTracker_get_tracks_position_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ARVRPositionalTracker *>(ptr)->get_tracks_position();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ARVRPositionalTracker_get_position_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRPositionalTracker *>(ptr)->get_position();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

int32_t godot_icall_ARVRPositionalTracker_get_hand_d5e4e3f7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ARVRPositionalTracker *>(ptr)->get_hand();
    return (int32_t)ret;
}

void godot_icall_ARVRPositionalTracker_get_transform_8cf6bc63(Object * ptr, MonoBoolean arg1, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<ARVRPositionalTracker *>(ptr)->get_transform(arg1_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

MonoObject* godot_icall_ARVRPositionalTracker_get_mesh_1372d766(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ARVRPositionalTracker *>(ptr)->get_mesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_ARVRPositionalTracker_get_rumble_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRPositionalTracker *>(ptr)->get_rumble();
    *arg_ret = (float)ret;
}

void godot_icall_ARVRPositionalTracker_set_rumble_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ARVRPositionalTracker *>(ptr)->set_rumble(arg1_in);
}

Object* godot_icall_ARVRPositionalTracker_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ARVRPositionalTracker")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ARVRServer_get_world_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRServer *>(ptr)->get_world_scale();
    *arg_ret = (float)ret;
}

void godot_icall_ARVRServer_set_world_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ARVRServer *>(ptr)->set_world_scale(arg1_in);
}

void godot_icall_ARVRServer_get_reference_frame_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRServer *>(ptr)->get_reference_frame();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_ARVRServer_center_on_hmd_cc7f5ed8(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<ARVRServer *>(ptr)->center_on_hmd((ARVRServer::RotationMode)arg1_in, arg2_in);
}

void godot_icall_ARVRServer_get_hmd_transform_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRServer *>(ptr)->get_hmd_transform();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

int32_t godot_icall_ARVRServer_get_interface_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ARVRServer *>(ptr)->get_interface_count();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_ARVRServer_get_interface_7b663ebe(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ARVRServer *>(ptr)->get_interface(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Array* godot_icall_ARVRServer_get_interfaces_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ARVRServer *>(ptr)->get_interfaces();
    return memnew(Array(Variant::from(ret)));
}

MonoObject* godot_icall_ARVRServer_find_interface_39e1471b(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ARVRServer *>(ptr)->find_interface(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_ARVRServer_get_tracker_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ARVRServer *>(ptr)->get_tracker_count();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_ARVRServer_get_tracker_f630cd43(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ARVRServer *>(ptr)->get_tracker(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_ARVRServer_get_primary_interface_884d6079(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ARVRServer *>(ptr)->get_primary_interface();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_ARVRServer_set_primary_interface_5af581eb(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ARVRServer *>(ptr)->set_primary_interface(AutoRef(arg1));
}

void godot_icall_ARVRServer_get_last_process_usec_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRServer *>(ptr)->get_last_process_usec();
    *arg_ret = (uint64_t)ret;
}

void godot_icall_ARVRServer_get_last_commit_usec_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRServer *>(ptr)->get_last_commit_usec();
    *arg_ret = (uint64_t)ret;
}

void godot_icall_ARVRServer_get_last_frame_usec_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ARVRServer *>(ptr)->get_last_frame_usec();
    *arg_ret = (uint64_t)ret;
}

Object* godot_icall_ARVRServer_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("ARVRServer");
}

int32_t godot_icall_AStar_get_available_point_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AStar *>(ptr)->get_available_point_id();
    return static_cast<int32_t>(ret);
}

void godot_icall_AStar_add_point_36094f7f(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    float arg3_in = static_cast<float>(*arg3);
    static_cast<AStar *>(ptr)->add_point(arg1_in, arg2_in, arg3_in);
}

void godot_icall_AStar_get_point_position_237286f3(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AStar *>(ptr)->get_point_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_AStar_set_point_position_3c383c4b(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<AStar *>(ptr)->set_point_position(arg1_in, arg2_in);
}

void godot_icall_AStar_get_point_weight_scale_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AStar *>(ptr)->get_point_weight_scale(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AStar_set_point_weight_scale_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AStar *>(ptr)->set_point_weight_scale(arg1_in, arg2_in);
}

void godot_icall_AStar_remove_point_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AStar *>(ptr)->remove_point(arg1_in);
}

MonoBoolean godot_icall_AStar_has_point_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AStar *>(ptr)->has_point(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoArray* godot_icall_AStar_get_point_connections_67f65c91(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AStar *>(ptr)->get_point_connections(arg1_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

Array* godot_icall_AStar_get_points_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AStar *>(ptr)->get_points();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_AStar_set_point_disabled_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<AStar *>(ptr)->set_point_disabled(arg1_in, arg2_in);
}

MonoBoolean godot_icall_AStar_is_point_disabled_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AStar *>(ptr)->is_point_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AStar_connect_points_c76f61ef(Object * ptr, int32_t arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<AStar *>(ptr)->connect_points(arg1_in, arg2_in, arg3_in);
}

void godot_icall_AStar_disconnect_points_c76f61ef(Object * ptr, int32_t arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<AStar *>(ptr)->disconnect_points(arg1_in, arg2_in, arg3_in);
}

MonoBoolean godot_icall_AStar_are_points_connected_ae770043(Object * ptr, int32_t arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    auto ret = static_cast<AStar *>(ptr)->are_points_connected(arg1_in, arg2_in, arg3_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_AStar_get_point_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AStar *>(ptr)->get_point_count();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_AStar_get_point_capacity_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AStar *>(ptr)->get_point_capacity();
    return static_cast<int32_t>(ret);
}

void godot_icall_AStar_reserve_space_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AStar *>(ptr)->reserve_space(arg1_in);
}

void godot_icall_AStar_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AStar *>(ptr)->clear();
}

int32_t godot_icall_AStar_get_closest_point_25107057(Object * ptr, GDMonoMarshal::M_Vector3* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<AStar *>(ptr)->get_closest_point(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_AStar_get_closest_position_in_segment_af4cfa14(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    auto ret = static_cast<AStar *>(ptr)->get_closest_position_in_segment(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

MonoArray* godot_icall_AStar_get_point_path_4de928b5(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<AStar *>(ptr)->get_point_path(arg1_in, arg2_in);
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

MonoArray* godot_icall_AStar_get_id_path_b2a2ff5c(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<AStar *>(ptr)->get_id_path(arg1_in, arg2_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

Object* godot_icall_AStar_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AStar")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_AStar2D_get_available_point_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AStar2D *>(ptr)->get_available_point_id();
    return static_cast<int32_t>(ret);
}

void godot_icall_AStar2D_add_point_36094ebe(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    float arg3_in = static_cast<float>(*arg3);
    static_cast<AStar2D *>(ptr)->add_point(arg1_in, arg2_in, arg3_in);
}

void godot_icall_AStar2D_get_point_position_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AStar2D *>(ptr)->get_point_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_AStar2D_set_point_position_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<AStar2D *>(ptr)->set_point_position(arg1_in, arg2_in);
}

void godot_icall_AStar2D_get_point_weight_scale_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AStar2D *>(ptr)->get_point_weight_scale(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AStar2D_set_point_weight_scale_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AStar2D *>(ptr)->set_point_weight_scale(arg1_in, arg2_in);
}

void godot_icall_AStar2D_remove_point_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AStar2D *>(ptr)->remove_point(arg1_in);
}

MonoBoolean godot_icall_AStar2D_has_point_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AStar2D *>(ptr)->has_point(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoArray* godot_icall_AStar2D_get_point_connections_67f65c91(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AStar2D *>(ptr)->get_point_connections(arg1_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

Array* godot_icall_AStar2D_get_points_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AStar2D *>(ptr)->get_points();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_AStar2D_set_point_disabled_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<AStar2D *>(ptr)->set_point_disabled(arg1_in, arg2_in);
}

MonoBoolean godot_icall_AStar2D_is_point_disabled_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AStar2D *>(ptr)->is_point_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AStar2D_connect_points_c76f61ef(Object * ptr, int32_t arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<AStar2D *>(ptr)->connect_points(arg1_in, arg2_in, arg3_in);
}

void godot_icall_AStar2D_disconnect_points_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<AStar2D *>(ptr)->disconnect_points(arg1_in, arg2_in);
}

MonoBoolean godot_icall_AStar2D_are_points_connected_c8b57d14(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<AStar2D *>(ptr)->are_points_connected(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_AStar2D_get_point_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AStar2D *>(ptr)->get_point_count();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_AStar2D_get_point_capacity_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AStar2D *>(ptr)->get_point_capacity();
    return static_cast<int32_t>(ret);
}

void godot_icall_AStar2D_reserve_space_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AStar2D *>(ptr)->reserve_space(arg1_in);
}

void godot_icall_AStar2D_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AStar2D *>(ptr)->clear();
}

int32_t godot_icall_AStar2D_get_closest_point_25107011(Object * ptr, GDMonoMarshal::M_Vector2* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<AStar2D *>(ptr)->get_closest_point(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_AStar2D_get_closest_position_in_segment_af4cfa54(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<AStar2D *>(ptr)->get_closest_position_in_segment(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoArray* godot_icall_AStar2D_get_point_path_927c2e4c(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<AStar2D *>(ptr)->get_point_path(arg1_in, arg2_in);
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

MonoArray* godot_icall_AStar2D_get_id_path_b2a2ff5c(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<AStar2D *>(ptr)->get_id_path(arg1_in, arg2_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

Object* godot_icall_AStar2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AStar2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoObject* godot_icall_AcceptDialog_get_ok_e2789eb5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AcceptDialog *>(ptr)->get_ok();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_AcceptDialog_get_label_61b2c65d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AcceptDialog *>(ptr)->get_label();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_AcceptDialog_set_hide_on_ok_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AcceptDialog *>(ptr)->set_hide_on_ok(arg1_in);
}

MonoBoolean godot_icall_AcceptDialog_get_hide_on_ok_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AcceptDialog *>(ptr)->get_hide_on_ok();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_AcceptDialog_add_button_bb9add4(Object * ptr, MonoString* arg1, MonoBoolean arg2, MonoString* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    TmpString<512> arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    auto ret = static_cast<AcceptDialog *>(ptr)->add_button(arg1_in, arg2_in, arg3_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_AcceptDialog_add_cancel_b17e1b44(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AcceptDialog *>(ptr)->add_cancel(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_AcceptDialog_register_text_enter_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AcceptDialog *>(ptr)->register_text_enter((Node*)arg1);
}

void godot_icall_AcceptDialog_set_text_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AcceptDialog *>(ptr)->set_text(arg1_in);
}

MonoString* godot_icall_AcceptDialog_get_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AcceptDialog *>(ptr)->get_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AcceptDialog_set_autowrap_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AcceptDialog *>(ptr)->set_autowrap(arg1_in);
}

MonoBoolean godot_icall_AcceptDialog_has_autowrap_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AcceptDialog *>(ptr)->has_autowrap();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_AcceptDialog_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AcceptDialog")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimatedSprite_set_sprite_frames_abe58830(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimatedSprite *>(ptr)->set_sprite_frames(AutoRef(arg1));
}

MonoObject* godot_icall_AnimatedSprite_get_sprite_frames_593d5734(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimatedSprite *>(ptr)->get_sprite_frames();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AnimatedSprite_set_animation_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimatedSprite *>(ptr)->set_animation(arg1_in);
}

MonoString* godot_icall_AnimatedSprite_get_animation_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimatedSprite *>(ptr)->get_animation();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimatedSprite__set_playing_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimatedSprite *>(ptr)->_set_playing(arg1_in);
}

MonoBoolean godot_icall_AnimatedSprite__is_playing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimatedSprite *>(ptr)->_is_playing();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimatedSprite_play_f253b141(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<AnimatedSprite *>(ptr)->play(arg1_in, arg2_in);
}

void godot_icall_AnimatedSprite_stop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimatedSprite *>(ptr)->stop();
}

MonoBoolean godot_icall_AnimatedSprite_is_playing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimatedSprite *>(ptr)->is_playing();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimatedSprite_set_centered_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimatedSprite *>(ptr)->set_centered(arg1_in);
}

MonoBoolean godot_icall_AnimatedSprite_is_centered_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimatedSprite *>(ptr)->is_centered();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimatedSprite_set_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<AnimatedSprite *>(ptr)->set_offset(arg1_in);
}

void godot_icall_AnimatedSprite_get_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimatedSprite *>(ptr)->get_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_AnimatedSprite_set_flip_h_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimatedSprite *>(ptr)->set_flip_h(arg1_in);
}

MonoBoolean godot_icall_AnimatedSprite_is_flipped_h_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimatedSprite *>(ptr)->is_flipped_h();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimatedSprite_set_flip_v_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimatedSprite *>(ptr)->set_flip_v(arg1_in);
}

MonoBoolean godot_icall_AnimatedSprite_is_flipped_v_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimatedSprite *>(ptr)->is_flipped_v();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimatedSprite_set_frame_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimatedSprite *>(ptr)->set_frame(arg1_in);
}

int32_t godot_icall_AnimatedSprite_get_frame_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimatedSprite *>(ptr)->get_frame();
    return static_cast<int32_t>(ret);
}

void godot_icall_AnimatedSprite_set_speed_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimatedSprite *>(ptr)->set_speed_scale(arg1_in);
}

void godot_icall_AnimatedSprite_get_speed_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimatedSprite *>(ptr)->get_speed_scale();
    *arg_ret = (float)ret;
}

Object* godot_icall_AnimatedSprite_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimatedSprite")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimatedSprite3D_set_sprite_frames_abe58830(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimatedSprite3D *>(ptr)->set_sprite_frames(AutoRef(arg1));
}

MonoObject* godot_icall_AnimatedSprite3D_get_sprite_frames_593d5734(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimatedSprite3D *>(ptr)->get_sprite_frames();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AnimatedSprite3D_set_animation_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimatedSprite3D *>(ptr)->set_animation(arg1_in);
}

MonoString* godot_icall_AnimatedSprite3D_get_animation_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimatedSprite3D *>(ptr)->get_animation();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimatedSprite3D__set_playing_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimatedSprite3D *>(ptr)->_set_playing(arg1_in);
}

MonoBoolean godot_icall_AnimatedSprite3D__is_playing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimatedSprite3D *>(ptr)->_is_playing();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimatedSprite3D_play_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimatedSprite3D *>(ptr)->play(arg1_in);
}

void godot_icall_AnimatedSprite3D_stop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimatedSprite3D *>(ptr)->stop();
}

MonoBoolean godot_icall_AnimatedSprite3D_is_playing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimatedSprite3D *>(ptr)->is_playing();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimatedSprite3D_set_frame_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimatedSprite3D *>(ptr)->set_frame(arg1_in);
}

int32_t godot_icall_AnimatedSprite3D_get_frame_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimatedSprite3D *>(ptr)->get_frame();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_AnimatedSprite3D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimatedSprite3D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimatedTexture_set_frames_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimatedTexture *>(ptr)->set_frames(arg1_in);
}

int32_t godot_icall_AnimatedTexture_get_frames_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimatedTexture *>(ptr)->get_frames();
    return static_cast<int32_t>(ret);
}

void godot_icall_AnimatedTexture_set_fps_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimatedTexture *>(ptr)->set_fps(arg1_in);
}

void godot_icall_AnimatedTexture_get_fps_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimatedTexture *>(ptr)->get_fps();
    *arg_ret = (float)ret;
}

void godot_icall_AnimatedTexture_set_frame_texture_f20a84e(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimatedTexture *>(ptr)->set_frame_texture(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_AnimatedTexture_get_frame_texture_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AnimatedTexture *>(ptr)->get_frame_texture(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AnimatedTexture_set_frame_delay_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimatedTexture *>(ptr)->set_frame_delay(arg1_in, arg2_in);
}

void godot_icall_AnimatedTexture_get_frame_delay_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AnimatedTexture *>(ptr)->get_frame_delay(arg1_in);
    *arg_ret = (float)ret;
}

Object* godot_icall_AnimatedTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimatedTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_Animation_add_track_cbc2cf56(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->add_track((Animation::TrackType)arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Animation_remove_track_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Animation *>(ptr)->remove_track(arg1_in);
}

int32_t godot_icall_Animation_get_track_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Animation *>(ptr)->get_track_count();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_Animation_track_get_type_bb8cc7be(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Animation *>(ptr)->track_get_type(arg1_in);
    return (int32_t)ret;
}

NodePath* godot_icall_Animation_track_get_path_1640f2b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Animation *>(ptr)->track_get_path(arg1_in);
    return memnew(NodePath(ret));
}

void godot_icall_Animation_track_set_path_e024f6ac(Object * ptr, int32_t arg1, NodePath* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Animation *>(ptr)->track_set_path(arg1_in, *arg2);
}

int32_t godot_icall_Animation_find_track_58fff67d(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Animation *>(ptr)->find_track(*arg1);
    return static_cast<int32_t>(ret);
}

void godot_icall_Animation_track_move_up_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Animation *>(ptr)->track_move_up(arg1_in);
}

void godot_icall_Animation_track_move_down_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Animation *>(ptr)->track_move_down(arg1_in);
}

void godot_icall_Animation_track_move_to_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Animation *>(ptr)->track_move_to(arg1_in, arg2_in);
}

void godot_icall_Animation_track_swap_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Animation *>(ptr)->track_swap(arg1_in, arg2_in);
}

void godot_icall_Animation_track_set_imported_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Animation *>(ptr)->track_set_imported(arg1_in, arg2_in);
}

MonoBoolean godot_icall_Animation_track_is_imported_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Animation *>(ptr)->track_is_imported(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Animation_track_set_enabled_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Animation *>(ptr)->track_set_enabled(arg1_in, arg2_in);
}

MonoBoolean godot_icall_Animation_track_is_enabled_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Animation *>(ptr)->track_is_enabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_Animation_transform_track_insert_key_8357667f(Object * ptr, int32_t arg1, float* arg2, GDMonoMarshal::M_Vector3* arg3, GDMonoMarshal::M_Quat* arg4, GDMonoMarshal::M_Vector3* arg5) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    Vector3 arg3_in = MARSHALLED_IN(Vector3, arg3);
    Quat arg4_in = MARSHALLED_IN(Quat, arg4);
    Vector3 arg5_in = MARSHALLED_IN(Vector3, arg5);
    auto ret = static_cast<Animation *>(ptr)->transform_track_insert_key(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Animation_track_insert_key_392ade45(Object * ptr, int32_t arg1, float* arg2, MonoObject* arg3, float* arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    float arg4_in = static_cast<float>(*arg4);
    static_cast<Animation *>(ptr)->track_insert_key(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_Animation_track_remove_key_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Animation *>(ptr)->track_remove_key(arg1_in, arg2_in);
}

void godot_icall_Animation_track_remove_key_at_position_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Animation *>(ptr)->track_remove_key_at_position(arg1_in, arg2_in);
}

void godot_icall_Animation_track_set_key_value_fede7226(Object * ptr, int32_t arg1, int32_t arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<Animation *>(ptr)->track_set_key_value(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Animation_track_set_key_transition_ac8ee9bf(Object * ptr, int32_t arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    static_cast<Animation *>(ptr)->track_set_key_transition(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Animation_track_set_key_time_ac8ee9bf(Object * ptr, int32_t arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    static_cast<Animation *>(ptr)->track_set_key_time(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Animation_track_get_key_transition_4da5f18d(Object * ptr, int32_t arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->track_get_key_transition(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

int32_t godot_icall_Animation_track_get_key_count_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Animation *>(ptr)->track_get_key_count(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_Animation_track_get_key_value_fd743645(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->track_get_key_value(arg1_in, arg2_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_Animation_track_get_key_time_4da5f18d(Object * ptr, int32_t arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->track_get_key_time(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

int32_t godot_icall_Animation_track_find_key_c6209323(Object * ptr, int32_t arg1, float* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    bool arg3_in = static_cast<bool>(arg3);
    auto ret = static_cast<Animation *>(ptr)->track_find_key(arg1_in, arg2_in, arg3_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Animation_track_set_interpolation_type_7e4973f5(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<Animation *>(ptr)->track_set_interpolation_type(arg1_in, (Animation::InterpolationType)arg2_in);
}

int32_t godot_icall_Animation_track_get_interpolation_type_608357f0(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Animation *>(ptr)->track_get_interpolation_type(arg1_in);
    return (int32_t)ret;
}

void godot_icall_Animation_track_set_interpolation_loop_wrap_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Animation *>(ptr)->track_set_interpolation_loop_wrap(arg1_in, arg2_in);
}

MonoBoolean godot_icall_Animation_track_get_interpolation_loop_wrap_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Animation *>(ptr)->track_get_interpolation_loop_wrap(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall_Animation_transform_track_interpolate_c5ebfde(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<Animation *>(ptr)->transform_track_interpolate(arg1_in, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_Animation_value_track_set_update_mode_54480b3f(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<Animation *>(ptr)->value_track_set_update_mode(arg1_in, (Animation::UpdateMode)arg2_in);
}

int32_t godot_icall_Animation_value_track_get_update_mode_b1d4cb04(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Animation *>(ptr)->value_track_get_update_mode(arg1_in);
    return (int32_t)ret;
}

MonoArray* godot_icall_Animation_value_track_get_key_indices_be9f6b60(Object * ptr, int32_t arg1, float* arg2, float* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    auto ret = static_cast<Animation *>(ptr)->value_track_get_key_indices(arg1_in, arg2_in, arg3_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

MonoArray* godot_icall_Animation_method_track_get_key_indices_be9f6b60(Object * ptr, int32_t arg1, float* arg2, float* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    auto ret = static_cast<Animation *>(ptr)->method_track_get_key_indices(arg1_in, arg2_in, arg3_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

MonoString* godot_icall_Animation_method_track_get_name_4aee5da5(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->method_track_get_name(arg1_in, arg2_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Array* godot_icall_Animation_method_track_get_params_dd0526d1(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->method_track_get_params(arg1_in, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

int32_t godot_icall_Animation_bezier_track_insert_key_3c0d4033(Object * ptr, int32_t arg1, float* arg2, float* arg3, GDMonoMarshal::M_Vector2* arg4, GDMonoMarshal::M_Vector2* arg5) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    Vector2 arg4_in = MARSHALLED_IN(Vector2, arg4);
    Vector2 arg5_in = MARSHALLED_IN(Vector2, arg5);
    auto ret = static_cast<Animation *>(ptr)->bezier_track_insert_key(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Animation_bezier_track_set_key_value_ac8ee9bf(Object * ptr, int32_t arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    static_cast<Animation *>(ptr)->bezier_track_set_key_value(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Animation_bezier_track_set_key_in_handle_f91f3ee4(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<Animation *>(ptr)->bezier_track_set_key_in_handle(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Animation_bezier_track_set_key_out_handle_f91f3ee4(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<Animation *>(ptr)->bezier_track_set_key_out_handle(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Animation_bezier_track_get_key_value_4da5f18d(Object * ptr, int32_t arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->bezier_track_get_key_value(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

void godot_icall_Animation_bezier_track_get_key_in_handle_804c9047(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->bezier_track_get_key_in_handle(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Animation_bezier_track_get_key_out_handle_804c9047(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->bezier_track_get_key_out_handle(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Animation_bezier_track_interpolate_7d59488a(Object * ptr, int32_t arg1, float* arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<Animation *>(ptr)->bezier_track_interpolate(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

int32_t godot_icall_Animation_audio_track_insert_key_2ba73f6b(Object * ptr, int32_t arg1, float* arg2, Object * arg3, float* arg4, float* arg5) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg4_in = static_cast<float>(*arg4);
    float arg5_in = static_cast<float>(*arg5);
    auto ret = static_cast<Animation *>(ptr)->audio_track_insert_key(arg1_in, arg2_in, AutoRef(arg3), arg4_in, arg5_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Animation_audio_track_set_key_stream_230432cf(Object * ptr, int32_t arg1, int32_t arg2, Object * arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Animation *>(ptr)->audio_track_set_key_stream(arg1_in, arg2_in, AutoRef(arg3));
}

void godot_icall_Animation_audio_track_set_key_start_offset_ac8ee9bf(Object * ptr, int32_t arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    static_cast<Animation *>(ptr)->audio_track_set_key_start_offset(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Animation_audio_track_set_key_end_offset_ac8ee9bf(Object * ptr, int32_t arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    static_cast<Animation *>(ptr)->audio_track_set_key_end_offset(arg1_in, arg2_in, arg3_in);
}

MonoObject* godot_icall_Animation_audio_track_get_key_stream_75ed72c6(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->audio_track_get_key_stream(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Animation_audio_track_get_key_start_offset_4da5f18d(Object * ptr, int32_t arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->audio_track_get_key_start_offset(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

void godot_icall_Animation_audio_track_get_key_end_offset_4da5f18d(Object * ptr, int32_t arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->audio_track_get_key_end_offset(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

int32_t godot_icall_Animation_animation_track_insert_key_5b3bbb51(Object * ptr, int32_t arg1, float* arg2, MonoString* arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    auto ret = static_cast<Animation *>(ptr)->animation_track_insert_key(arg1_in, arg2_in, arg3_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Animation_animation_track_set_key_animation_3c628a19(Object * ptr, int32_t arg1, int32_t arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    static_cast<Animation *>(ptr)->animation_track_set_key_animation(arg1_in, arg2_in, arg3_in);
}

MonoString* godot_icall_Animation_animation_track_get_key_animation_4aee5da5(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Animation *>(ptr)->animation_track_get_key_animation(arg1_in, arg2_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Animation_set_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Animation *>(ptr)->set_length(arg1_in);
}

void godot_icall_Animation_get_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Animation *>(ptr)->get_length();
    *arg_ret = (float)ret;
}

void godot_icall_Animation_set_loop_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Animation *>(ptr)->set_loop(arg1_in);
}

MonoBoolean godot_icall_Animation_has_loop_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Animation *>(ptr)->has_loop();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Animation_set_step_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Animation *>(ptr)->set_step(arg1_in);
}

void godot_icall_Animation_get_step_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Animation *>(ptr)->get_step();
    *arg_ret = (float)ret;
}

void godot_icall_Animation_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Animation *>(ptr)->clear();
}

void godot_icall_Animation_copy_track_30d41189(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Animation *>(ptr)->copy_track(arg1_in, AutoRef(arg2));
}

Object* godot_icall_Animation_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Animation")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_AnimationNode_get_input_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationNode *>(ptr)->get_input_count();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_AnimationNode_get_input_name_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AnimationNode *>(ptr)->get_input_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationNode_add_input_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<AnimationNode *>(ptr)->add_input(arg1_in);
}

void godot_icall_AnimationNode_remove_input_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimationNode *>(ptr)->remove_input(arg1_in);
}

void godot_icall_AnimationNode_set_filter_path_7e2f7417(Object * ptr, NodePath* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<AnimationNode *>(ptr)->set_filter_path(*arg1, arg2_in);
}

MonoBoolean godot_icall_AnimationNode_is_path_filtered_dfaf606e(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationNode *>(ptr)->is_path_filtered(*arg1);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationNode_set_filter_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationNode *>(ptr)->set_filter_enabled(arg1_in);
}

MonoBoolean godot_icall_AnimationNode_is_filter_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationNode *>(ptr)->is_filter_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationNode__set_filters_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimationNode *>(ptr)->_set_filters(*arg1);
}

Array* godot_icall_AnimationNode__get_filters_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationNode *>(ptr)->_get_filters();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_AnimationNode_blend_animation_dab76a1f(Object * ptr, MonoString* arg1, float* arg2, float* arg3, MonoBoolean arg4, float* arg5) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    bool arg4_in = static_cast<bool>(arg4);
    float arg5_in = static_cast<float>(*arg5);
    static_cast<AnimationNode *>(ptr)->blend_animation(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

void godot_icall_AnimationNode_blend_node_add2e684(Object * ptr, MonoString* arg1, Object * arg2, float* arg3, MonoBoolean arg4, float* arg5, int32_t arg6, MonoBoolean arg7, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg3_in = static_cast<float>(*arg3);
    bool arg4_in = static_cast<bool>(arg4);
    float arg5_in = static_cast<float>(*arg5);
    int64_t arg6_in = (int64_t)arg6;
    bool arg7_in = static_cast<bool>(arg7);
    auto ret = static_cast<AnimationNode *>(ptr)->blend_node(arg1_in, AutoRef(arg2), arg3_in, arg4_in, arg5_in, (AnimationNode::FilterAction)arg6_in, arg7_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationNode_blend_input_9e42561b(Object * ptr, int32_t arg1, float* arg2, MonoBoolean arg3, float* arg4, int32_t arg5, MonoBoolean arg6, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    bool arg3_in = static_cast<bool>(arg3);
    float arg4_in = static_cast<float>(*arg4);
    int64_t arg5_in = (int64_t)arg5;
    bool arg6_in = static_cast<bool>(arg6);
    auto ret = static_cast<AnimationNode *>(ptr)->blend_input(arg1_in, arg2_in, arg3_in, arg4_in, (AnimationNode::FilterAction)arg5_in, arg6_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationNode_set_parameter_3a208116(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<AnimationNode *>(ptr)->set_parameter(arg1_in, arg2_in);
}

MonoObject* godot_icall_AnimationNode_get_parameter_6732bfd8(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationNode *>(ptr)->get_parameter(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

Object* godot_icall_AnimationNode_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNode")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeAdd2_set_use_sync_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationNodeAdd2 *>(ptr)->set_use_sync(arg1_in);
}

MonoBoolean godot_icall_AnimationNodeAdd2_is_using_sync_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationNodeAdd2 *>(ptr)->is_using_sync();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_AnimationNodeAdd2_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeAdd2")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeAdd3_set_use_sync_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationNodeAdd3 *>(ptr)->set_use_sync(arg1_in);
}

MonoBoolean godot_icall_AnimationNodeAdd3_is_using_sync_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationNodeAdd3 *>(ptr)->is_using_sync();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_AnimationNodeAdd3_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeAdd3")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeAnimation_set_animation_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationNodeAnimation *>(ptr)->set_animation(arg1_in);
}

MonoString* godot_icall_AnimationNodeAnimation_get_animation_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationNodeAnimation *>(ptr)->get_animation();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_AnimationNodeAnimation_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeAnimation")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeBlend2_set_use_sync_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationNodeBlend2 *>(ptr)->set_use_sync(arg1_in);
}

MonoBoolean godot_icall_AnimationNodeBlend2_is_using_sync_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationNodeBlend2 *>(ptr)->is_using_sync();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_AnimationNodeBlend2_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeBlend2")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeBlend3_set_use_sync_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationNodeBlend3 *>(ptr)->set_use_sync(arg1_in);
}

MonoBoolean godot_icall_AnimationNodeBlend3_is_using_sync_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationNodeBlend3 *>(ptr)->is_using_sync();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_AnimationNodeBlend3_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeBlend3")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeBlendSpace1D_add_blend_point_3a3e0496(Object * ptr, Object * arg1, float* arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<AnimationNodeBlendSpace1D *>(ptr)->add_blend_point(AutoRef(arg1), arg2_in, arg3_in);
}

void godot_icall_AnimationNodeBlendSpace1D_set_blend_point_position_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimationNodeBlendSpace1D *>(ptr)->set_blend_point_position(arg1_in, arg2_in);
}

void godot_icall_AnimationNodeBlendSpace1D_get_blend_point_position_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AnimationNodeBlendSpace1D *>(ptr)->get_blend_point_position(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationNodeBlendSpace1D_set_blend_point_node_3c4e944d(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimationNodeBlendSpace1D *>(ptr)->set_blend_point_node(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_AnimationNodeBlendSpace1D_get_blend_point_node_51338372(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AnimationNodeBlendSpace1D *>(ptr)->get_blend_point_node(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AnimationNodeBlendSpace1D_remove_blend_point_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimationNodeBlendSpace1D *>(ptr)->remove_blend_point(arg1_in);
}

int32_t godot_icall_AnimationNodeBlendSpace1D_get_blend_point_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationNodeBlendSpace1D *>(ptr)->get_blend_point_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_AnimationNodeBlendSpace1D_set_min_space_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationNodeBlendSpace1D *>(ptr)->set_min_space(arg1_in);
}

void godot_icall_AnimationNodeBlendSpace1D_get_min_space_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeBlendSpace1D *>(ptr)->get_min_space();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationNodeBlendSpace1D_set_max_space_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationNodeBlendSpace1D *>(ptr)->set_max_space(arg1_in);
}

void godot_icall_AnimationNodeBlendSpace1D_get_max_space_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeBlendSpace1D *>(ptr)->get_max_space();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationNodeBlendSpace1D_set_snap_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationNodeBlendSpace1D *>(ptr)->set_snap(arg1_in);
}

void godot_icall_AnimationNodeBlendSpace1D_get_snap_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeBlendSpace1D *>(ptr)->get_snap();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationNodeBlendSpace1D_set_value_label_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationNodeBlendSpace1D *>(ptr)->set_value_label(arg1_in);
}

MonoString* godot_icall_AnimationNodeBlendSpace1D_get_value_label_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationNodeBlendSpace1D *>(ptr)->get_value_label();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationNodeBlendSpace1D__add_blend_point_3c4e944d(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimationNodeBlendSpace1D *>(ptr)->_add_blend_point(arg1_in, AutoRef(arg2));
}

Object* godot_icall_AnimationNodeBlendSpace1D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeBlendSpace1D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeBlendSpace2D_add_blend_point_9edf5fd8(Object * ptr, Object * arg1, GDMonoMarshal::M_Vector2* arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->add_blend_point(AutoRef(arg1), arg2_in, arg3_in);
}

void godot_icall_AnimationNodeBlendSpace2D_set_blend_point_position_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->set_blend_point_position(arg1_in, arg2_in);
}

void godot_icall_AnimationNodeBlendSpace2D_get_blend_point_position_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->get_blend_point_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_AnimationNodeBlendSpace2D_set_blend_point_node_3c4e944d(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->set_blend_point_node(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_AnimationNodeBlendSpace2D_get_blend_point_node_51338372(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->get_blend_point_node(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AnimationNodeBlendSpace2D_remove_blend_point_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->remove_blend_point(arg1_in);
}

int32_t godot_icall_AnimationNodeBlendSpace2D_get_blend_point_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->get_blend_point_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_AnimationNodeBlendSpace2D_add_triangle_2b70940c(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->add_triangle(arg1_in, arg2_in, arg3_in, arg4_in);
}

int32_t godot_icall_AnimationNodeBlendSpace2D_get_triangle_point_4170d7f7(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->get_triangle_point(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_AnimationNodeBlendSpace2D_remove_triangle_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->remove_triangle(arg1_in);
}

int32_t godot_icall_AnimationNodeBlendSpace2D_get_triangle_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->get_triangle_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_AnimationNodeBlendSpace2D_set_min_space_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->set_min_space(arg1_in);
}

void godot_icall_AnimationNodeBlendSpace2D_get_min_space_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->get_min_space();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_AnimationNodeBlendSpace2D_set_max_space_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->set_max_space(arg1_in);
}

void godot_icall_AnimationNodeBlendSpace2D_get_max_space_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->get_max_space();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_AnimationNodeBlendSpace2D_set_snap_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->set_snap(arg1_in);
}

void godot_icall_AnimationNodeBlendSpace2D_get_snap_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->get_snap();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_AnimationNodeBlendSpace2D_set_x_label_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->set_x_label(arg1_in);
}

MonoString* godot_icall_AnimationNodeBlendSpace2D_get_x_label_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->get_x_label();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationNodeBlendSpace2D_set_y_label_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->set_y_label(arg1_in);
}

MonoString* godot_icall_AnimationNodeBlendSpace2D_get_y_label_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->get_y_label();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationNodeBlendSpace2D__add_blend_point_3c4e944d(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->_add_blend_point(arg1_in, AutoRef(arg2));
}

void godot_icall_AnimationNodeBlendSpace2D__set_triangles_6b64efb8(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecInt(arg1);
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->_set_triangles(arg1_in);
}

MonoArray* godot_icall_AnimationNodeBlendSpace2D__get_triangles_2a166acd(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->_get_triangles();
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

void godot_icall_AnimationNodeBlendSpace2D_set_auto_triangles_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->set_auto_triangles(arg1_in);
}

MonoBoolean godot_icall_AnimationNodeBlendSpace2D_get_auto_triangles_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->get_auto_triangles();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationNodeBlendSpace2D_set_blend_mode_d5986668(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AnimationNodeBlendSpace2D *>(ptr)->set_blend_mode((AnimationNodeBlendSpace2D::BlendMode)arg1_in);
}

int32_t godot_icall_AnimationNodeBlendSpace2D_get_blend_mode_b446b64b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationNodeBlendSpace2D *>(ptr)->get_blend_mode();
    return (int32_t)ret;
}

Object* godot_icall_AnimationNodeBlendSpace2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeBlendSpace2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeBlendTree_add_node_282761f1(Object * ptr, MonoString* arg1, Object * arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<AnimationNodeBlendTree *>(ptr)->add_node(arg1_in, AutoRef(arg2), arg3_in);
}

MonoObject* godot_icall_AnimationNodeBlendTree_get_node_10519192(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationNodeBlendTree *>(ptr)->get_node(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AnimationNodeBlendTree_remove_node_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationNodeBlendTree *>(ptr)->remove_node(arg1_in);
}

void godot_icall_AnimationNodeBlendTree_rename_node_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<AnimationNodeBlendTree *>(ptr)->rename_node(arg1_in, arg2_in);
}

MonoBoolean godot_icall_AnimationNodeBlendTree_has_node_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationNodeBlendTree *>(ptr)->has_node(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationNodeBlendTree_connect_node_cd41be07(Object * ptr, MonoString* arg1, int32_t arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    static_cast<AnimationNodeBlendTree *>(ptr)->connect_node(arg1_in, arg2_in, arg3_in);
}

void godot_icall_AnimationNodeBlendTree_disconnect_node_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<AnimationNodeBlendTree *>(ptr)->disconnect_node(arg1_in, arg2_in);
}

void godot_icall_AnimationNodeBlendTree_set_node_position_20e37454(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<AnimationNodeBlendTree *>(ptr)->set_node_position(arg1_in, arg2_in);
}

void godot_icall_AnimationNodeBlendTree_get_node_position_edf24f59(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationNodeBlendTree *>(ptr)->get_node_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_AnimationNodeBlendTree_set_graph_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<AnimationNodeBlendTree *>(ptr)->set_graph_offset(arg1_in);
}

void godot_icall_AnimationNodeBlendTree_get_graph_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeBlendTree *>(ptr)->get_graph_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

Object* godot_icall_AnimationNodeBlendTree_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeBlendTree")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeOneShot_set_fadein_time_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationNodeOneShot *>(ptr)->set_fadein_time(arg1_in);
}

void godot_icall_AnimationNodeOneShot_get_fadein_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeOneShot *>(ptr)->get_fadein_time();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationNodeOneShot_set_fadeout_time_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationNodeOneShot *>(ptr)->set_fadeout_time(arg1_in);
}

void godot_icall_AnimationNodeOneShot_get_fadeout_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeOneShot *>(ptr)->get_fadeout_time();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationNodeOneShot_set_autorestart_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationNodeOneShot *>(ptr)->set_autorestart(arg1_in);
}

MonoBoolean godot_icall_AnimationNodeOneShot_has_autorestart_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationNodeOneShot *>(ptr)->has_autorestart();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationNodeOneShot_set_autorestart_delay_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationNodeOneShot *>(ptr)->set_autorestart_delay(arg1_in);
}

void godot_icall_AnimationNodeOneShot_get_autorestart_delay_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeOneShot *>(ptr)->get_autorestart_delay();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationNodeOneShot_set_autorestart_random_delay_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationNodeOneShot *>(ptr)->set_autorestart_random_delay(arg1_in);
}

void godot_icall_AnimationNodeOneShot_get_autorestart_random_delay_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeOneShot *>(ptr)->get_autorestart_random_delay();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationNodeOneShot_set_mix_mode_27e6dc0e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AnimationNodeOneShot *>(ptr)->set_mix_mode((AnimationNodeOneShot::MixMode)arg1_in);
}

int32_t godot_icall_AnimationNodeOneShot_get_mix_mode_e5402b5e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationNodeOneShot *>(ptr)->get_mix_mode();
    return (int32_t)ret;
}

void godot_icall_AnimationNodeOneShot_set_use_sync_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationNodeOneShot *>(ptr)->set_use_sync(arg1_in);
}

MonoBoolean godot_icall_AnimationNodeOneShot_is_using_sync_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationNodeOneShot *>(ptr)->is_using_sync();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_AnimationNodeOneShot_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeOneShot")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AnimationNodeOutput_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeOutput")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeStateMachine_add_node_282761f1(Object * ptr, MonoString* arg1, Object * arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<AnimationNodeStateMachine *>(ptr)->add_node(arg1_in, AutoRef(arg2), arg3_in);
}

MonoObject* godot_icall_AnimationNodeStateMachine_get_node_10519192(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationNodeStateMachine *>(ptr)->get_node(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AnimationNodeStateMachine_remove_node_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationNodeStateMachine *>(ptr)->remove_node(arg1_in);
}

void godot_icall_AnimationNodeStateMachine_rename_node_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<AnimationNodeStateMachine *>(ptr)->rename_node(arg1_in, arg2_in);
}

MonoBoolean godot_icall_AnimationNodeStateMachine_has_node_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationNodeStateMachine *>(ptr)->has_node(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_AnimationNodeStateMachine_get_node_name_d8e2f69f(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationNodeStateMachine *>(ptr)->get_node_name(AutoRef(arg1));
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationNodeStateMachine_set_node_position_20e37454(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<AnimationNodeStateMachine *>(ptr)->set_node_position(arg1_in, arg2_in);
}

void godot_icall_AnimationNodeStateMachine_get_node_position_edf24f59(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationNodeStateMachine *>(ptr)->get_node_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoBoolean godot_icall_AnimationNodeStateMachine_has_transition_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<AnimationNodeStateMachine *>(ptr)->has_transition(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationNodeStateMachine_add_transition_44de9378(Object * ptr, MonoString* arg1, MonoString* arg2, Object * arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<AnimationNodeStateMachine *>(ptr)->add_transition(arg1_in, arg2_in, AutoRef(arg3));
}

MonoObject* godot_icall_AnimationNodeStateMachine_get_transition_f8aed41e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AnimationNodeStateMachine *>(ptr)->get_transition(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoString* godot_icall_AnimationNodeStateMachine_get_transition_from_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AnimationNodeStateMachine *>(ptr)->get_transition_from(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_AnimationNodeStateMachine_get_transition_to_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AnimationNodeStateMachine *>(ptr)->get_transition_to(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_AnimationNodeStateMachine_get_transition_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationNodeStateMachine *>(ptr)->get_transition_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_AnimationNodeStateMachine_remove_transition_by_index_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimationNodeStateMachine *>(ptr)->remove_transition_by_index(arg1_in);
}

void godot_icall_AnimationNodeStateMachine_remove_transition_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<AnimationNodeStateMachine *>(ptr)->remove_transition(arg1_in, arg2_in);
}

void godot_icall_AnimationNodeStateMachine_set_start_node_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationNodeStateMachine *>(ptr)->set_start_node(arg1_in);
}

MonoString* godot_icall_AnimationNodeStateMachine_get_start_node_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationNodeStateMachine *>(ptr)->get_start_node();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationNodeStateMachine_set_end_node_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationNodeStateMachine *>(ptr)->set_end_node(arg1_in);
}

MonoString* godot_icall_AnimationNodeStateMachine_get_end_node_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationNodeStateMachine *>(ptr)->get_end_node();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationNodeStateMachine_set_graph_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<AnimationNodeStateMachine *>(ptr)->set_graph_offset(arg1_in);
}

void godot_icall_AnimationNodeStateMachine_get_graph_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeStateMachine *>(ptr)->get_graph_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

Object* godot_icall_AnimationNodeStateMachine_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeStateMachine")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeStateMachinePlayback_travel_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationNodeStateMachinePlayback *>(ptr)->travel(arg1_in);
}

void godot_icall_AnimationNodeStateMachinePlayback_start_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationNodeStateMachinePlayback *>(ptr)->start(arg1_in);
}

void godot_icall_AnimationNodeStateMachinePlayback_stop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimationNodeStateMachinePlayback *>(ptr)->stop();
}

MonoBoolean godot_icall_AnimationNodeStateMachinePlayback_is_playing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationNodeStateMachinePlayback *>(ptr)->is_playing();
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_AnimationNodeStateMachinePlayback_get_current_node_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationNodeStateMachinePlayback *>(ptr)->get_current_node();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoArray* godot_icall_AnimationNodeStateMachinePlayback_get_travel_path_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationNodeStateMachinePlayback *>(ptr)->get_travel_path();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

Object* godot_icall_AnimationNodeStateMachinePlayback_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeStateMachinePlayback")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeStateMachineTransition_set_switch_mode_e40baecb(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AnimationNodeStateMachineTransition *>(ptr)->set_switch_mode((AnimationNodeStateMachineTransition::SwitchMode)arg1_in);
}

int32_t godot_icall_AnimationNodeStateMachineTransition_get_switch_mode_ab638406(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationNodeStateMachineTransition *>(ptr)->get_switch_mode();
    return (int32_t)ret;
}

void godot_icall_AnimationNodeStateMachineTransition_set_auto_advance_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationNodeStateMachineTransition *>(ptr)->set_auto_advance(arg1_in);
}

MonoBoolean godot_icall_AnimationNodeStateMachineTransition_has_auto_advance_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationNodeStateMachineTransition *>(ptr)->has_auto_advance();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationNodeStateMachineTransition_set_advance_condition_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationNodeStateMachineTransition *>(ptr)->set_advance_condition(arg1_in);
}

MonoString* godot_icall_AnimationNodeStateMachineTransition_get_advance_condition_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationNodeStateMachineTransition *>(ptr)->get_advance_condition();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationNodeStateMachineTransition_set_xfade_time_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationNodeStateMachineTransition *>(ptr)->set_xfade_time(arg1_in);
}

void godot_icall_AnimationNodeStateMachineTransition_get_xfade_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeStateMachineTransition *>(ptr)->get_xfade_time();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationNodeStateMachineTransition_set_disabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationNodeStateMachineTransition *>(ptr)->set_disabled(arg1_in);
}

MonoBoolean godot_icall_AnimationNodeStateMachineTransition_is_disabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationNodeStateMachineTransition *>(ptr)->is_disabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationNodeStateMachineTransition_set_priority_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimationNodeStateMachineTransition *>(ptr)->set_priority(arg1_in);
}

int32_t godot_icall_AnimationNodeStateMachineTransition_get_priority_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationNodeStateMachineTransition *>(ptr)->get_priority();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_AnimationNodeStateMachineTransition_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeStateMachineTransition")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AnimationNodeTimeScale_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeTimeScale")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AnimationNodeTimeSeek_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeTimeSeek")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationNodeTransition_set_enabled_inputs_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AnimationNodeTransition *>(ptr)->set_enabled_inputs(arg1_in);
}

int32_t godot_icall_AnimationNodeTransition_get_enabled_inputs_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationNodeTransition *>(ptr)->get_enabled_inputs();
    return static_cast<int32_t>(ret);
}

void godot_icall_AnimationNodeTransition_set_input_as_auto_advance_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<AnimationNodeTransition *>(ptr)->set_input_as_auto_advance(arg1_in, arg2_in);
}

MonoBoolean godot_icall_AnimationNodeTransition_is_input_set_as_auto_advance_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AnimationNodeTransition *>(ptr)->is_input_set_as_auto_advance(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationNodeTransition_set_input_caption_cd663605(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<AnimationNodeTransition *>(ptr)->set_input_caption(arg1_in, arg2_in);
}

MonoString* godot_icall_AnimationNodeTransition_get_input_caption_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AnimationNodeTransition *>(ptr)->get_input_caption(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationNodeTransition_set_cross_fade_time_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationNodeTransition *>(ptr)->set_cross_fade_time(arg1_in);
}

void godot_icall_AnimationNodeTransition_get_cross_fade_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationNodeTransition *>(ptr)->get_cross_fade_time();
    *arg_ret = (float)ret;
}

Object* godot_icall_AnimationNodeTransition_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationNodeTransition")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_AnimationPlayer_add_animation_8f586397(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationPlayer *>(ptr)->add_animation(arg1_in, AutoRef(arg2));
    return (int32_t)ret;
}

void godot_icall_AnimationPlayer_remove_animation_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationPlayer *>(ptr)->remove_animation(arg1_in);
}

void godot_icall_AnimationPlayer_rename_animation_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<AnimationPlayer *>(ptr)->rename_animation(arg1_in, arg2_in);
}

MonoBoolean godot_icall_AnimationPlayer_has_animation_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationPlayer *>(ptr)->has_animation(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_AnimationPlayer_get_animation_e39805ea(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_animation(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoArray* godot_icall_AnimationPlayer_get_animation_list_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_animation_list();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall_AnimationPlayer_animation_set_next_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<AnimationPlayer *>(ptr)->animation_set_next(arg1_in, arg2_in);
}

MonoString* godot_icall_AnimationPlayer_animation_get_next_67c8521(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationPlayer *>(ptr)->animation_get_next(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationPlayer_set_blend_time_a190525(Object * ptr, MonoString* arg1, MonoString* arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    float arg3_in = static_cast<float>(*arg3);
    static_cast<AnimationPlayer *>(ptr)->set_blend_time(arg1_in, arg2_in, arg3_in);
}

void godot_icall_AnimationPlayer_get_blend_time_f30f92e2(Object * ptr, MonoString* arg1, MonoString* arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_blend_time(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationPlayer_set_default_blend_time_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationPlayer *>(ptr)->set_default_blend_time(arg1_in);
}

void godot_icall_AnimationPlayer_get_default_blend_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_default_blend_time();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationPlayer_play_9cc8e3fe(Object * ptr, MonoString* arg1, float* arg2, float* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<AnimationPlayer *>(ptr)->play(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_AnimationPlayer_play_backwards_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimationPlayer *>(ptr)->play_backwards(arg1_in, arg2_in);
}

void godot_icall_AnimationPlayer_stop_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationPlayer *>(ptr)->stop(arg1_in);
}

MonoBoolean godot_icall_AnimationPlayer_is_playing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationPlayer *>(ptr)->is_playing();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationPlayer_set_current_animation_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationPlayer *>(ptr)->set_current_animation(arg1_in);
}

MonoString* godot_icall_AnimationPlayer_get_current_animation_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_current_animation();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationPlayer_set_assigned_animation_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationPlayer *>(ptr)->set_assigned_animation(arg1_in);
}

MonoString* godot_icall_AnimationPlayer_get_assigned_animation_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_assigned_animation();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationPlayer_queue_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationPlayer *>(ptr)->queue(arg1_in);
}

MonoArray* godot_icall_AnimationPlayer_get_queue_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_queue();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall_AnimationPlayer_clear_queue_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimationPlayer *>(ptr)->clear_queue();
}

void godot_icall_AnimationPlayer_set_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationPlayer *>(ptr)->set_active(arg1_in);
}

MonoBoolean godot_icall_AnimationPlayer_is_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationPlayer *>(ptr)->is_active();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationPlayer_set_speed_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationPlayer *>(ptr)->set_speed_scale(arg1_in);
}

void godot_icall_AnimationPlayer_get_speed_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_speed_scale();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationPlayer_get_playing_speed_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_playing_speed();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationPlayer_set_autoplay_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationPlayer *>(ptr)->set_autoplay(arg1_in);
}

MonoString* godot_icall_AnimationPlayer_get_autoplay_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_autoplay();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationPlayer_set_root_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimationPlayer *>(ptr)->set_root(*arg1);
}

NodePath* godot_icall_AnimationPlayer_get_root_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_root();
    return memnew(NodePath(ret));
}

MonoString* godot_icall_AnimationPlayer_find_animation_d552467f(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationPlayer *>(ptr)->find_animation(AutoRef(arg1));
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationPlayer_clear_caches_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimationPlayer *>(ptr)->clear_caches();
}

void godot_icall_AnimationPlayer_set_animation_process_mode_4a40838(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AnimationPlayer *>(ptr)->set_animation_process_mode((AnimationPlayer::AnimationProcessMode)arg1_in);
}

int32_t godot_icall_AnimationPlayer_get_animation_process_mode_c27dd72c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_animation_process_mode();
    return (int32_t)ret;
}

void godot_icall_AnimationPlayer_set_method_call_mode_2b481378(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AnimationPlayer *>(ptr)->set_method_call_mode((AnimationPlayer::AnimationMethodCallMode)arg1_in);
}

int32_t godot_icall_AnimationPlayer_get_method_call_mode_d9e9edec(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_method_call_mode();
    return (int32_t)ret;
}

void godot_icall_AnimationPlayer_get_current_animation_position_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_current_animation_position();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationPlayer_get_current_animation_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationPlayer *>(ptr)->get_current_animation_length();
    *arg_ret = (float)ret;
}

void godot_icall_AnimationPlayer_seek_accc42bb(Object * ptr, float* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<AnimationPlayer *>(ptr)->seek(arg1_in, arg2_in);
}

void godot_icall_AnimationPlayer_advance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationPlayer *>(ptr)->advance(arg1_in);
}

Object* godot_icall_AnimationPlayer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationPlayer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AnimationRootNode_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationRootNode")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AnimationTrackEditPlugin_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationTrackEditPlugin")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationTree_set_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationTree *>(ptr)->set_active(arg1_in);
}

MonoBoolean godot_icall_AnimationTree_is_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationTree *>(ptr)->is_active();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationTree_set_tree_root_6d83da7f(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimationTree *>(ptr)->set_tree_root(AutoRef(arg1));
}

MonoObject* godot_icall_AnimationTree_get_tree_root_9ba324ed(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationTree *>(ptr)->get_tree_root();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AnimationTree_set_process_mode_a3bcacdf(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AnimationTree *>(ptr)->set_process_mode((AnimationTree::AnimationProcessMode)arg1_in);
}

int32_t godot_icall_AnimationTree_get_process_mode_61967b8d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationTree *>(ptr)->get_process_mode();
    return (int32_t)ret;
}

void godot_icall_AnimationTree_set_animation_player_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimationTree *>(ptr)->set_animation_player(*arg1);
}

NodePath* godot_icall_AnimationTree_get_animation_player_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationTree *>(ptr)->get_animation_player();
    return memnew(NodePath(ret));
}

void godot_icall_AnimationTree_set_root_motion_track_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimationTree *>(ptr)->set_root_motion_track(*arg1);
}

NodePath* godot_icall_AnimationTree_get_root_motion_track_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationTree *>(ptr)->get_root_motion_track();
    return memnew(NodePath(ret));
}

void godot_icall_AnimationTree_get_root_motion_transform_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AnimationTree *>(ptr)->get_root_motion_transform();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_AnimationTree_rename_parameter_fc93f18d(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<AnimationTree *>(ptr)->rename_parameter(arg1_in, arg2_in);
}

void godot_icall_AnimationTree_advance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationTree *>(ptr)->advance(arg1_in);
}

Object* godot_icall_AnimationTree_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationTree")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AnimationTreePlayer_add_node_f7ea0eb3(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<AnimationTreePlayer *>(ptr)->add_node((AnimationTreePlayer::NodeType)arg1_in, arg2_in);
}

MonoBoolean godot_icall_AnimationTreePlayer_node_exists_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->node_exists(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_AnimationTreePlayer_node_rename_3c6126d5(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->node_rename(arg1_in, arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall_AnimationTreePlayer_node_get_type_a1db4784(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->node_get_type(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_AnimationTreePlayer_node_get_input_count_79b61600(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->node_get_input_count(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_AnimationTreePlayer_node_get_input_source_58fcd4d0(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->node_get_input_source(arg1_in, arg2_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationTreePlayer_animation_node_set_animation_2c878695(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationTreePlayer *>(ptr)->animation_node_set_animation(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_AnimationTreePlayer_animation_node_get_animation_e39805ea(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->animation_node_get_animation(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AnimationTreePlayer_animation_node_set_master_animation_71d57a09(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<AnimationTreePlayer *>(ptr)->animation_node_set_master_animation(arg1_in, arg2_in);
}

MonoString* godot_icall_AnimationTreePlayer_animation_node_get_master_animation_67c8521(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->animation_node_get_master_animation(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AnimationTreePlayer_animation_node_get_position_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->animation_node_get_position(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationTreePlayer_animation_node_set_filter_path_28dd9f8f(Object * ptr, MonoString* arg1, NodePath* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<AnimationTreePlayer *>(ptr)->animation_node_set_filter_path(arg1_in, *arg2, arg3_in);
}

void godot_icall_AnimationTreePlayer_oneshot_node_set_fadein_time_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_set_fadein_time(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_oneshot_node_get_fadein_time_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_get_fadein_time(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationTreePlayer_oneshot_node_set_fadeout_time_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_set_fadeout_time(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_oneshot_node_get_fadeout_time_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_get_fadeout_time(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationTreePlayer_oneshot_node_set_autorestart_f253b141(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_set_autorestart(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_oneshot_node_set_autorestart_delay_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_set_autorestart_delay(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_oneshot_node_set_autorestart_random_delay_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_set_autorestart_random_delay(arg1_in, arg2_in);
}

MonoBoolean godot_icall_AnimationTreePlayer_oneshot_node_has_autorestart_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_has_autorestart(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationTreePlayer_oneshot_node_get_autorestart_delay_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_get_autorestart_delay(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationTreePlayer_oneshot_node_get_autorestart_random_delay_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_get_autorestart_random_delay(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationTreePlayer_oneshot_node_start_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_start(arg1_in);
}

void godot_icall_AnimationTreePlayer_oneshot_node_stop_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_stop(arg1_in);
}

MonoBoolean godot_icall_AnimationTreePlayer_oneshot_node_is_active_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_is_active(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationTreePlayer_oneshot_node_set_filter_path_28dd9f8f(Object * ptr, MonoString* arg1, NodePath* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<AnimationTreePlayer *>(ptr)->oneshot_node_set_filter_path(arg1_in, *arg2, arg3_in);
}

void godot_icall_AnimationTreePlayer_mix_node_set_amount_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimationTreePlayer *>(ptr)->mix_node_set_amount(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_mix_node_get_amount_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->mix_node_get_amount(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationTreePlayer_blend2_node_set_amount_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimationTreePlayer *>(ptr)->blend2_node_set_amount(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_blend2_node_get_amount_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->blend2_node_get_amount(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationTreePlayer_blend2_node_set_filter_path_28dd9f8f(Object * ptr, MonoString* arg1, NodePath* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<AnimationTreePlayer *>(ptr)->blend2_node_set_filter_path(arg1_in, *arg2, arg3_in);
}

void godot_icall_AnimationTreePlayer_blend3_node_set_amount_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimationTreePlayer *>(ptr)->blend3_node_set_amount(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_blend3_node_get_amount_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->blend3_node_get_amount(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationTreePlayer_blend4_node_set_amount_20e37454(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<AnimationTreePlayer *>(ptr)->blend4_node_set_amount(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_blend4_node_get_amount_edf24f59(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->blend4_node_get_amount(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_AnimationTreePlayer_timescale_node_set_scale_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimationTreePlayer *>(ptr)->timescale_node_set_scale(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_timescale_node_get_scale_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->timescale_node_get_scale(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationTreePlayer_timeseek_node_seek_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimationTreePlayer *>(ptr)->timeseek_node_seek(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_transition_node_set_input_count_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<AnimationTreePlayer *>(ptr)->transition_node_set_input_count(arg1_in, arg2_in);
}

int32_t godot_icall_AnimationTreePlayer_transition_node_get_input_count_79b61600(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->transition_node_get_input_count(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_AnimationTreePlayer_transition_node_delete_input_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<AnimationTreePlayer *>(ptr)->transition_node_delete_input(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_transition_node_set_input_auto_advance_ba4ce609(Object * ptr, MonoString* arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<AnimationTreePlayer *>(ptr)->transition_node_set_input_auto_advance(arg1_in, arg2_in, arg3_in);
}

MonoBoolean godot_icall_AnimationTreePlayer_transition_node_has_input_auto_advance_19efc97a(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->transition_node_has_input_auto_advance(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationTreePlayer_transition_node_set_xfade_time_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AnimationTreePlayer *>(ptr)->transition_node_set_xfade_time(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_transition_node_get_xfade_time_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->transition_node_get_xfade_time(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AnimationTreePlayer_transition_node_set_current_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<AnimationTreePlayer *>(ptr)->transition_node_set_current(arg1_in, arg2_in);
}

int32_t godot_icall_AnimationTreePlayer_transition_node_get_current_79b61600(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->transition_node_get_current(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_AnimationTreePlayer_node_set_position_20e37454(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<AnimationTreePlayer *>(ptr)->node_set_position(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_node_get_position_edf24f59(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->node_get_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_AnimationTreePlayer_remove_node_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AnimationTreePlayer *>(ptr)->remove_node(arg1_in);
}

int32_t godot_icall_AnimationTreePlayer_connect_nodes_d940c18b(Object * ptr, MonoString* arg1, MonoString* arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->connect_nodes(arg1_in, arg2_in, arg3_in);
    return (int32_t)ret;
}

MonoBoolean godot_icall_AnimationTreePlayer_are_nodes_connected_14f34319(Object * ptr, MonoString* arg1, MonoString* arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->are_nodes_connected(arg1_in, arg2_in, arg3_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationTreePlayer_disconnect_nodes_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<AnimationTreePlayer *>(ptr)->disconnect_nodes(arg1_in, arg2_in);
}

void godot_icall_AnimationTreePlayer_set_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AnimationTreePlayer *>(ptr)->set_active(arg1_in);
}

MonoBoolean godot_icall_AnimationTreePlayer_is_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->is_active();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AnimationTreePlayer_set_base_path_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimationTreePlayer *>(ptr)->set_base_path(*arg1);
}

NodePath* godot_icall_AnimationTreePlayer_get_base_path_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->get_base_path();
    return memnew(NodePath(ret));
}

void godot_icall_AnimationTreePlayer_set_master_player_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimationTreePlayer *>(ptr)->set_master_player(*arg1);
}

NodePath* godot_icall_AnimationTreePlayer_get_master_player_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->get_master_player();
    return memnew(NodePath(ret));
}

MonoArray* godot_icall_AnimationTreePlayer_get_node_vector_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->get_node_vector();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall_AnimationTreePlayer_set_animation_process_mode_ee6d703c(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AnimationTreePlayer *>(ptr)->set_animation_process_mode((AnimationTreePlayer::AnimationProcessMode)arg1_in);
}

int32_t godot_icall_AnimationTreePlayer_get_animation_process_mode_1cc4cf30(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AnimationTreePlayer *>(ptr)->get_animation_process_mode();
    return (int32_t)ret;
}

void godot_icall_AnimationTreePlayer_advance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AnimationTreePlayer *>(ptr)->advance(arg1_in);
}

void godot_icall_AnimationTreePlayer_reset_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimationTreePlayer *>(ptr)->reset();
}

void godot_icall_AnimationTreePlayer_recompute_caches_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AnimationTreePlayer *>(ptr)->recompute_caches();
}

Object* godot_icall_AnimationTreePlayer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AnimationTreePlayer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Area_set_space_override_mode_f76f65b6(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Area *>(ptr)->set_space_override_mode((Area::SpaceOverride)arg1_in);
}

int32_t godot_icall_Area_get_space_override_mode_56d1dce1(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Area *>(ptr)->get_space_override_mode();
    return (int32_t)ret;
}

void godot_icall_Area_set_gravity_is_point_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Area *>(ptr)->set_gravity_is_point(arg1_in);
}

MonoBoolean godot_icall_Area_is_gravity_a_point_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area *>(ptr)->is_gravity_a_point();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Area_set_gravity_distance_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Area *>(ptr)->set_gravity_distance_scale(arg1_in);
}

void godot_icall_Area_get_gravity_distance_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area *>(ptr)->get_gravity_distance_scale();
    *arg_ret = (float)ret;
}

void godot_icall_Area_set_gravity_vector_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Area *>(ptr)->set_gravity_vector(arg1_in);
}

void godot_icall_Area_get_gravity_vector_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area *>(ptr)->get_gravity_vector();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Area_set_gravity_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Area *>(ptr)->set_gravity(arg1_in);
}

void godot_icall_Area_get_gravity_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area *>(ptr)->get_gravity();
    *arg_ret = (float)ret;
}

void godot_icall_Area_set_angular_damp_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Area *>(ptr)->set_angular_damp(arg1_in);
}

void godot_icall_Area_get_angular_damp_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area *>(ptr)->get_angular_damp();
    *arg_ret = (float)ret;
}

void godot_icall_Area_set_linear_damp_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Area *>(ptr)->set_linear_damp(arg1_in);
}

void godot_icall_Area_get_linear_damp_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area *>(ptr)->get_linear_damp();
    *arg_ret = (float)ret;
}

void godot_icall_Area_set_priority_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Area *>(ptr)->set_priority(arg1_in);
}

void godot_icall_Area_get_priority_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area *>(ptr)->get_priority();
    *arg_ret = (float)ret;
}

void godot_icall_Area_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<Area *>(ptr)->set_collision_mask(arg1_in);
}

uint32_t godot_icall_Area_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<Area *>(ptr)->get_collision_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_Area_set_collision_layer_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<Area *>(ptr)->set_collision_layer(arg1_in);
}

uint32_t godot_icall_Area_get_collision_layer_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<Area *>(ptr)->get_collision_layer();
    return static_cast<uint32_t>(ret);
}

void godot_icall_Area_set_collision_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Area *>(ptr)->set_collision_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_Area_get_collision_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Area *>(ptr)->get_collision_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Area_set_collision_layer_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Area *>(ptr)->set_collision_layer_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_Area_get_collision_layer_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Area *>(ptr)->get_collision_layer_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Area_set_monitorable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Area *>(ptr)->set_monitorable(arg1_in);
}

MonoBoolean godot_icall_Area_is_monitorable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area *>(ptr)->is_monitorable();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Area_set_monitoring_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Area *>(ptr)->set_monitoring(arg1_in);
}

MonoBoolean godot_icall_Area_is_monitoring_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area *>(ptr)->is_monitoring();
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall_Area_get_overlapping_bodies_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Area *>(ptr)->get_overlapping_bodies();
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_Area_get_overlapping_areas_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Area *>(ptr)->get_overlapping_areas();
    return memnew(Array(Variant::from(ret)));
}

MonoBoolean godot_icall_Area_overlaps_body_1746f8cd(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area *>(ptr)->overlaps_body((Node*)arg1);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Area_overlaps_area_1746f8cd(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area *>(ptr)->overlaps_area((Node*)arg1);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Area_set_audio_bus_override_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Area *>(ptr)->set_audio_bus_override(arg1_in);
}

MonoBoolean godot_icall_Area_is_overriding_audio_bus_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area *>(ptr)->is_overriding_audio_bus();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Area_set_audio_bus_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Area *>(ptr)->set_audio_bus(arg1_in);
}

MonoString* godot_icall_Area_get_audio_bus_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Area *>(ptr)->get_audio_bus();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Area_set_use_reverb_bus_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Area *>(ptr)->set_use_reverb_bus(arg1_in);
}

MonoBoolean godot_icall_Area_is_using_reverb_bus_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area *>(ptr)->is_using_reverb_bus();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Area_set_reverb_bus_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Area *>(ptr)->set_reverb_bus(arg1_in);
}

MonoString* godot_icall_Area_get_reverb_bus_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Area *>(ptr)->get_reverb_bus();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Area_set_reverb_amount_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Area *>(ptr)->set_reverb_amount(arg1_in);
}

void godot_icall_Area_get_reverb_amount_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area *>(ptr)->get_reverb_amount();
    *arg_ret = (float)ret;
}

void godot_icall_Area_set_reverb_uniformity_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Area *>(ptr)->set_reverb_uniformity(arg1_in);
}

void godot_icall_Area_get_reverb_uniformity_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area *>(ptr)->get_reverb_uniformity();
    *arg_ret = (float)ret;
}

Object* godot_icall_Area_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Area")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Area2D_set_space_override_mode_aebe927c(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Area2D *>(ptr)->set_space_override_mode((Area2D::SpaceOverride)arg1_in);
}

int32_t godot_icall_Area2D_get_space_override_mode_22ce4d5f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Area2D *>(ptr)->get_space_override_mode();
    return (int32_t)ret;
}

void godot_icall_Area2D_set_gravity_is_point_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Area2D *>(ptr)->set_gravity_is_point(arg1_in);
}

MonoBoolean godot_icall_Area2D_is_gravity_a_point_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area2D *>(ptr)->is_gravity_a_point();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Area2D_set_gravity_distance_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Area2D *>(ptr)->set_gravity_distance_scale(arg1_in);
}

void godot_icall_Area2D_get_gravity_distance_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area2D *>(ptr)->get_gravity_distance_scale();
    *arg_ret = (float)ret;
}

void godot_icall_Area2D_set_gravity_vector_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Area2D *>(ptr)->set_gravity_vector(arg1_in);
}

void godot_icall_Area2D_get_gravity_vector_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area2D *>(ptr)->get_gravity_vector();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Area2D_set_gravity_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Area2D *>(ptr)->set_gravity(arg1_in);
}

void godot_icall_Area2D_get_gravity_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area2D *>(ptr)->get_gravity();
    *arg_ret = (float)ret;
}

void godot_icall_Area2D_set_linear_damp_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Area2D *>(ptr)->set_linear_damp(arg1_in);
}

void godot_icall_Area2D_get_linear_damp_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area2D *>(ptr)->get_linear_damp();
    *arg_ret = (float)ret;
}

void godot_icall_Area2D_set_angular_damp_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Area2D *>(ptr)->set_angular_damp(arg1_in);
}

void godot_icall_Area2D_get_angular_damp_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area2D *>(ptr)->get_angular_damp();
    *arg_ret = (float)ret;
}

void godot_icall_Area2D_set_priority_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Area2D *>(ptr)->set_priority(arg1_in);
}

void godot_icall_Area2D_get_priority_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Area2D *>(ptr)->get_priority();
    *arg_ret = (float)ret;
}

void godot_icall_Area2D_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<Area2D *>(ptr)->set_collision_mask(arg1_in);
}

uint32_t godot_icall_Area2D_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<Area2D *>(ptr)->get_collision_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_Area2D_set_collision_layer_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<Area2D *>(ptr)->set_collision_layer(arg1_in);
}

uint32_t godot_icall_Area2D_get_collision_layer_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<Area2D *>(ptr)->get_collision_layer();
    return static_cast<uint32_t>(ret);
}

void godot_icall_Area2D_set_collision_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Area2D *>(ptr)->set_collision_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_Area2D_get_collision_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Area2D *>(ptr)->get_collision_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Area2D_set_collision_layer_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Area2D *>(ptr)->set_collision_layer_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_Area2D_get_collision_layer_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Area2D *>(ptr)->get_collision_layer_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Area2D_set_monitoring_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Area2D *>(ptr)->set_monitoring(arg1_in);
}

MonoBoolean godot_icall_Area2D_is_monitoring_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area2D *>(ptr)->is_monitoring();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Area2D_set_monitorable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Area2D *>(ptr)->set_monitorable(arg1_in);
}

MonoBoolean godot_icall_Area2D_is_monitorable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area2D *>(ptr)->is_monitorable();
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall_Area2D_get_overlapping_bodies_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Area2D *>(ptr)->get_overlapping_bodies();
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_Area2D_get_overlapping_areas_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Area2D *>(ptr)->get_overlapping_areas();
    return memnew(Array(Variant::from(ret)));
}

MonoBoolean godot_icall_Area2D_overlaps_body_1746f8cd(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area2D *>(ptr)->overlaps_body((Node*)arg1);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Area2D_overlaps_area_1746f8cd(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area2D *>(ptr)->overlaps_area((Node*)arg1);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Area2D_set_audio_bus_name_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Area2D *>(ptr)->set_audio_bus_name(arg1_in);
}

MonoString* godot_icall_Area2D_get_audio_bus_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Area2D *>(ptr)->get_audio_bus_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Area2D_set_audio_bus_override_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Area2D *>(ptr)->set_audio_bus_override(arg1_in);
}

MonoBoolean godot_icall_Area2D_is_overriding_audio_bus_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Area2D *>(ptr)->is_overriding_audio_bus();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_Area2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Area2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ArrayMesh_add_blend_shape_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<ArrayMesh *>(ptr)->add_blend_shape(arg1_in);
}

int32_t godot_icall_ArrayMesh_get_blend_shape_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ArrayMesh *>(ptr)->get_blend_shape_count();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_ArrayMesh_get_blend_shape_name_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ArrayMesh *>(ptr)->get_blend_shape_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_ArrayMesh_clear_blend_shapes_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<ArrayMesh *>(ptr)->clear_blend_shapes();
}

void godot_icall_ArrayMesh_set_blend_shape_mode_688c4423(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<ArrayMesh *>(ptr)->set_blend_shape_mode((Mesh::BlendShapeMode)arg1_in);
}

int32_t godot_icall_ArrayMesh_get_blend_shape_mode_96a5a341(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ArrayMesh *>(ptr)->get_blend_shape_mode();
    return (int32_t)ret;
}

void godot_icall_ArrayMesh_add_surface_from_arrays_11c236d3(Object * ptr, int32_t arg1, Array* arg2, Array* arg3, uint32_t arg4) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    uint32_t arg4_in = static_cast<uint32_t>(arg4);
    static_cast<ArrayMesh *>(ptr)->_add_surface_from_arrays((Mesh::PrimitiveType)arg1_in, *arg2, *arg3, arg4_in);
}

void godot_icall_ArrayMesh_surface_remove_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ArrayMesh *>(ptr)->surface_remove(arg1_in);
}

void godot_icall_ArrayMesh_surface_update_region_677e35b2(Object * ptr, int32_t arg1, int32_t arg2, MonoArray* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto arg3_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg3);
    static_cast<ArrayMesh *>(ptr)->surface_update_region(arg1_in, arg2_in, arg3_in);
}

int32_t godot_icall_ArrayMesh_surface_get_array_len_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ArrayMesh *>(ptr)->surface_get_array_len(arg1_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_ArrayMesh_surface_get_array_index_len_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ArrayMesh *>(ptr)->surface_get_array_index_len(arg1_in);
    return static_cast<int32_t>(ret);
}

uint32_t godot_icall_ArrayMesh_surface_get_format_52dccd8b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ArrayMesh *>(ptr)->surface_get_format(arg1_in);
    return static_cast<uint32_t>(ret);
}

int32_t godot_icall_ArrayMesh_surface_get_primitive_type_e7759a5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ArrayMesh *>(ptr)->surface_get_primitive_type(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_ArrayMesh_surface_find_by_name_7be523(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<ArrayMesh *>(ptr)->surface_find_by_name(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_ArrayMesh_surface_set_name_cd663605(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<ArrayMesh *>(ptr)->surface_set_name(arg1_in, arg2_in);
}

MonoString* godot_icall_ArrayMesh_surface_get_name_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ArrayMesh *>(ptr)->surface_get_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_ArrayMesh_regen_normalmaps_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<ArrayMesh *>(ptr)->regen_normalmaps();
}

int32_t godot_icall_ArrayMesh_lightmap_unwrap_79aa5b0f(Object * ptr, GDMonoMarshal::M_Transform* arg1, float* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Transform arg1_in = MARSHALLED_IN(Transform, arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<ArrayMesh *>(ptr)->lightmap_unwrap(arg1_in, arg2_in);
    return (int32_t)ret;
}

void godot_icall_ArrayMesh_set_custom_aabb_ff67b409(Object * ptr, GDMonoMarshal::M_AABB* arg1) {
    ERR_FAIL_NULL(ptr);
    AABB arg1_in = MARSHALLED_IN(AABB, arg1);
    static_cast<ArrayMesh *>(ptr)->set_custom_aabb(arg1_in);
}

void godot_icall_ArrayMesh_get_custom_aabb_2dbf935b(Object * ptr, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ArrayMesh *>(ptr)->get_custom_aabb();
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

Object* godot_icall_ArrayMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ArrayMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AtlasTexture_set_atlas_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AtlasTexture *>(ptr)->set_atlas(AutoRef(arg1));
}

MonoObject* godot_icall_AtlasTexture_get_atlas_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AtlasTexture *>(ptr)->get_atlas();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AtlasTexture_set_region_a5ed61f1(Object * ptr, GDMonoMarshal::M_Rect2* arg1) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    static_cast<AtlasTexture *>(ptr)->set_region(arg1_in);
}

void godot_icall_AtlasTexture_get_region_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AtlasTexture *>(ptr)->get_region();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_AtlasTexture_set_margin_a5ed61f1(Object * ptr, GDMonoMarshal::M_Rect2* arg1) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    static_cast<AtlasTexture *>(ptr)->set_margin(arg1_in);
}

void godot_icall_AtlasTexture_get_margin_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AtlasTexture *>(ptr)->get_margin();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_AtlasTexture_set_filter_clip_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AtlasTexture *>(ptr)->set_filter_clip(arg1_in);
}

MonoBoolean godot_icall_AtlasTexture_has_filter_clip_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AtlasTexture *>(ptr)->has_filter_clip();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_AtlasTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AtlasTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AudioBusLayout_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioBusLayout")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectAmplify_set_volume_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectAmplify *>(ptr)->set_volume_db(arg1_in);
}

void godot_icall_AudioEffectAmplify_get_volume_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectAmplify *>(ptr)->get_volume_db();
    *arg_ret = (float)ret;
}

Object* godot_icall_AudioEffectAmplify_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectAmplify")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AudioEffectBandLimitFilter_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectBandLimitFilter")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AudioEffectBandPassFilter_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectBandPassFilter")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectChorus_set_voice_count_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AudioEffectChorus *>(ptr)->set_voice_count(arg1_in);
}

int32_t godot_icall_AudioEffectChorus_get_voice_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioEffectChorus *>(ptr)->get_voice_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_AudioEffectChorus_set_voice_delay_ms_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AudioEffectChorus *>(ptr)->set_voice_delay_ms(arg1_in, arg2_in);
}

void godot_icall_AudioEffectChorus_get_voice_delay_ms_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioEffectChorus *>(ptr)->get_voice_delay_ms(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectChorus_set_voice_rate_hz_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AudioEffectChorus *>(ptr)->set_voice_rate_hz(arg1_in, arg2_in);
}

void godot_icall_AudioEffectChorus_get_voice_rate_hz_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioEffectChorus *>(ptr)->get_voice_rate_hz(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectChorus_set_voice_depth_ms_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AudioEffectChorus *>(ptr)->set_voice_depth_ms(arg1_in, arg2_in);
}

void godot_icall_AudioEffectChorus_get_voice_depth_ms_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioEffectChorus *>(ptr)->get_voice_depth_ms(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectChorus_set_voice_level_db_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AudioEffectChorus *>(ptr)->set_voice_level_db(arg1_in, arg2_in);
}

void godot_icall_AudioEffectChorus_get_voice_level_db_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioEffectChorus *>(ptr)->get_voice_level_db(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectChorus_set_voice_cutoff_hz_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AudioEffectChorus *>(ptr)->set_voice_cutoff_hz(arg1_in, arg2_in);
}

void godot_icall_AudioEffectChorus_get_voice_cutoff_hz_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioEffectChorus *>(ptr)->get_voice_cutoff_hz(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectChorus_set_voice_pan_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AudioEffectChorus *>(ptr)->set_voice_pan(arg1_in, arg2_in);
}

void godot_icall_AudioEffectChorus_get_voice_pan_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioEffectChorus *>(ptr)->get_voice_pan(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectChorus_set_wet_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectChorus *>(ptr)->set_wet(arg1_in);
}

void godot_icall_AudioEffectChorus_get_wet_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectChorus *>(ptr)->get_wet();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectChorus_set_dry_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectChorus *>(ptr)->set_dry(arg1_in);
}

void godot_icall_AudioEffectChorus_get_dry_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectChorus *>(ptr)->get_dry();
    *arg_ret = (float)ret;
}

Object* godot_icall_AudioEffectChorus_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectChorus")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectCompressor_set_threshold_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectCompressor *>(ptr)->set_threshold(arg1_in);
}

void godot_icall_AudioEffectCompressor_get_threshold_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectCompressor *>(ptr)->get_threshold();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectCompressor_set_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectCompressor *>(ptr)->set_ratio(arg1_in);
}

void godot_icall_AudioEffectCompressor_get_ratio_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectCompressor *>(ptr)->get_ratio();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectCompressor_set_gain_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectCompressor *>(ptr)->set_gain(arg1_in);
}

void godot_icall_AudioEffectCompressor_get_gain_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectCompressor *>(ptr)->get_gain();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectCompressor_set_attack_us_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectCompressor *>(ptr)->set_attack_us(arg1_in);
}

void godot_icall_AudioEffectCompressor_get_attack_us_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectCompressor *>(ptr)->get_attack_us();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectCompressor_set_release_ms_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectCompressor *>(ptr)->set_release_ms(arg1_in);
}

void godot_icall_AudioEffectCompressor_get_release_ms_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectCompressor *>(ptr)->get_release_ms();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectCompressor_set_mix_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectCompressor *>(ptr)->set_mix(arg1_in);
}

void godot_icall_AudioEffectCompressor_get_mix_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectCompressor *>(ptr)->get_mix();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectCompressor_set_sidechain_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AudioEffectCompressor *>(ptr)->set_sidechain(arg1_in);
}

MonoString* godot_icall_AudioEffectCompressor_get_sidechain_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioEffectCompressor *>(ptr)->get_sidechain();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_AudioEffectCompressor_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectCompressor")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectDelay_set_dry_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_dry(arg1_in);
}

void godot_icall_AudioEffectDelay_get_dry_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDelay *>(ptr)->get_dry();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectDelay_set_tap1_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_tap1_active(arg1_in);
}

MonoBoolean godot_icall_AudioEffectDelay_is_tap1_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioEffectDelay *>(ptr)->is_tap1_active();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioEffectDelay_set_tap1_delay_ms_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_tap1_delay_ms(arg1_in);
}

void godot_icall_AudioEffectDelay_get_tap1_delay_ms_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDelay *>(ptr)->get_tap1_delay_ms();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectDelay_set_tap1_level_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_tap1_level_db(arg1_in);
}

void godot_icall_AudioEffectDelay_get_tap1_level_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDelay *>(ptr)->get_tap1_level_db();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectDelay_set_tap1_pan_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_tap1_pan(arg1_in);
}

void godot_icall_AudioEffectDelay_get_tap1_pan_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDelay *>(ptr)->get_tap1_pan();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectDelay_set_tap2_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_tap2_active(arg1_in);
}

MonoBoolean godot_icall_AudioEffectDelay_is_tap2_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioEffectDelay *>(ptr)->is_tap2_active();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioEffectDelay_set_tap2_delay_ms_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_tap2_delay_ms(arg1_in);
}

void godot_icall_AudioEffectDelay_get_tap2_delay_ms_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDelay *>(ptr)->get_tap2_delay_ms();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectDelay_set_tap2_level_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_tap2_level_db(arg1_in);
}

void godot_icall_AudioEffectDelay_get_tap2_level_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDelay *>(ptr)->get_tap2_level_db();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectDelay_set_tap2_pan_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_tap2_pan(arg1_in);
}

void godot_icall_AudioEffectDelay_get_tap2_pan_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDelay *>(ptr)->get_tap2_pan();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectDelay_set_feedback_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_feedback_active(arg1_in);
}

MonoBoolean godot_icall_AudioEffectDelay_is_feedback_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioEffectDelay *>(ptr)->is_feedback_active();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioEffectDelay_set_feedback_delay_ms_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_feedback_delay_ms(arg1_in);
}

void godot_icall_AudioEffectDelay_get_feedback_delay_ms_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDelay *>(ptr)->get_feedback_delay_ms();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectDelay_set_feedback_level_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_feedback_level_db(arg1_in);
}

void godot_icall_AudioEffectDelay_get_feedback_level_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDelay *>(ptr)->get_feedback_level_db();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectDelay_set_feedback_lowpass_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDelay *>(ptr)->set_feedback_lowpass(arg1_in);
}

void godot_icall_AudioEffectDelay_get_feedback_lowpass_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDelay *>(ptr)->get_feedback_lowpass();
    *arg_ret = (float)ret;
}

Object* godot_icall_AudioEffectDelay_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectDelay")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectDistortion_set_mode_93254fee(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AudioEffectDistortion *>(ptr)->set_mode((AudioEffectDistortion::Mode)arg1_in);
}

int32_t godot_icall_AudioEffectDistortion_get_mode_20e05fe9(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioEffectDistortion *>(ptr)->get_mode();
    return (int32_t)ret;
}

void godot_icall_AudioEffectDistortion_set_pre_gain_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDistortion *>(ptr)->set_pre_gain(arg1_in);
}

void godot_icall_AudioEffectDistortion_get_pre_gain_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDistortion *>(ptr)->get_pre_gain();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectDistortion_set_keep_hf_hz_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDistortion *>(ptr)->set_keep_hf_hz(arg1_in);
}

void godot_icall_AudioEffectDistortion_get_keep_hf_hz_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDistortion *>(ptr)->get_keep_hf_hz();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectDistortion_set_drive_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDistortion *>(ptr)->set_drive(arg1_in);
}

void godot_icall_AudioEffectDistortion_get_drive_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDistortion *>(ptr)->get_drive();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectDistortion_set_post_gain_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectDistortion *>(ptr)->set_post_gain(arg1_in);
}

void godot_icall_AudioEffectDistortion_get_post_gain_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectDistortion *>(ptr)->get_post_gain();
    *arg_ret = (float)ret;
}

Object* godot_icall_AudioEffectDistortion_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectDistortion")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectEQ_set_band_gain_db_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AudioEffectEQ *>(ptr)->set_band_gain_db(arg1_in, arg2_in);
}

void godot_icall_AudioEffectEQ_get_band_gain_db_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioEffectEQ *>(ptr)->get_band_gain_db(arg1_in);
    *arg_ret = (float)ret;
}

int32_t godot_icall_AudioEffectEQ_get_band_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioEffectEQ *>(ptr)->get_band_count();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_AudioEffectEQ_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectEQ")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AudioEffectEQ10_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectEQ10")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AudioEffectEQ21_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectEQ21")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AudioEffectEQ6_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectEQ6")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectFilter_set_cutoff_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectFilter *>(ptr)->set_cutoff(arg1_in);
}

void godot_icall_AudioEffectFilter_get_cutoff_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectFilter *>(ptr)->get_cutoff();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectFilter_set_resonance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectFilter *>(ptr)->set_resonance(arg1_in);
}

void godot_icall_AudioEffectFilter_get_resonance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectFilter *>(ptr)->get_resonance();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectFilter_set_gain_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectFilter *>(ptr)->set_gain(arg1_in);
}

void godot_icall_AudioEffectFilter_get_gain_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectFilter *>(ptr)->get_gain();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectFilter_set_db_9ca4c4fa(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AudioEffectFilter *>(ptr)->set_db((AudioEffectFilter::FilterDB)arg1_in);
}

int32_t godot_icall_AudioEffectFilter_get_db_4a7e236a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioEffectFilter *>(ptr)->get_db();
    return (int32_t)ret;
}

Object* godot_icall_AudioEffectFilter_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectFilter")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AudioEffectHighPassFilter_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectHighPassFilter")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AudioEffectHighShelfFilter_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectHighShelfFilter")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectLimiter_set_ceiling_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectLimiter *>(ptr)->set_ceiling_db(arg1_in);
}

void godot_icall_AudioEffectLimiter_get_ceiling_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectLimiter *>(ptr)->get_ceiling_db();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectLimiter_set_threshold_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectLimiter *>(ptr)->set_threshold_db(arg1_in);
}

void godot_icall_AudioEffectLimiter_get_threshold_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectLimiter *>(ptr)->get_threshold_db();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectLimiter_set_soft_clip_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectLimiter *>(ptr)->set_soft_clip_db(arg1_in);
}

void godot_icall_AudioEffectLimiter_get_soft_clip_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectLimiter *>(ptr)->get_soft_clip_db();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectLimiter_set_soft_clip_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectLimiter *>(ptr)->set_soft_clip_ratio(arg1_in);
}

void godot_icall_AudioEffectLimiter_get_soft_clip_ratio_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectLimiter *>(ptr)->get_soft_clip_ratio();
    *arg_ret = (float)ret;
}

Object* godot_icall_AudioEffectLimiter_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectLimiter")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AudioEffectLowPassFilter_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectLowPassFilter")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AudioEffectLowShelfFilter_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectLowShelfFilter")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_AudioEffectNotchFilter_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectNotchFilter")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectPanner_set_pan_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectPanner *>(ptr)->set_pan(arg1_in);
}

void godot_icall_AudioEffectPanner_get_pan_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectPanner *>(ptr)->get_pan();
    *arg_ret = (float)ret;
}

Object* godot_icall_AudioEffectPanner_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectPanner")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectPhaser_set_range_min_hz_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectPhaser *>(ptr)->set_range_min_hz(arg1_in);
}

void godot_icall_AudioEffectPhaser_get_range_min_hz_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectPhaser *>(ptr)->get_range_min_hz();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectPhaser_set_range_max_hz_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectPhaser *>(ptr)->set_range_max_hz(arg1_in);
}

void godot_icall_AudioEffectPhaser_get_range_max_hz_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectPhaser *>(ptr)->get_range_max_hz();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectPhaser_set_rate_hz_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectPhaser *>(ptr)->set_rate_hz(arg1_in);
}

void godot_icall_AudioEffectPhaser_get_rate_hz_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectPhaser *>(ptr)->get_rate_hz();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectPhaser_set_feedback_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectPhaser *>(ptr)->set_feedback(arg1_in);
}

void godot_icall_AudioEffectPhaser_get_feedback_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectPhaser *>(ptr)->get_feedback();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectPhaser_set_depth_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectPhaser *>(ptr)->set_depth(arg1_in);
}

void godot_icall_AudioEffectPhaser_get_depth_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectPhaser *>(ptr)->get_depth();
    *arg_ret = (float)ret;
}

Object* godot_icall_AudioEffectPhaser_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectPhaser")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectPitchShift_set_pitch_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectPitchShift *>(ptr)->set_pitch_scale(arg1_in);
}

void godot_icall_AudioEffectPitchShift_get_pitch_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectPitchShift *>(ptr)->get_pitch_scale();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectPitchShift_set_oversampling_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AudioEffectPitchShift *>(ptr)->set_oversampling(arg1_in);
}

int32_t godot_icall_AudioEffectPitchShift_get_oversampling_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioEffectPitchShift *>(ptr)->get_oversampling();
    return static_cast<int32_t>(ret);
}

void godot_icall_AudioEffectPitchShift_set_fft_size_5bab9b66(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AudioEffectPitchShift *>(ptr)->set_fft_size((AudioEffectPitchShift::FFT_Size)arg1_in);
}

int32_t godot_icall_AudioEffectPitchShift_get_fft_size_898b6606(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioEffectPitchShift *>(ptr)->get_fft_size();
    return (int32_t)ret;
}

Object* godot_icall_AudioEffectPitchShift_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectPitchShift")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectRecord_set_recording_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioEffectRecord *>(ptr)->set_recording_active(arg1_in);
}

MonoBoolean godot_icall_AudioEffectRecord_is_recording_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioEffectRecord *>(ptr)->is_recording_active();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioEffectRecord_set_format_3546ab06(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AudioEffectRecord *>(ptr)->set_format((AudioStreamSample::Format)arg1_in);
}

int32_t godot_icall_AudioEffectRecord_get_format_b2e2f671(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioEffectRecord *>(ptr)->get_format();
    return (int32_t)ret;
}

MonoObject* godot_icall_AudioEffectRecord_get_recording_e109af33(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioEffectRecord *>(ptr)->get_recording();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_AudioEffectRecord_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectRecord")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectReverb_set_predelay_msec_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectReverb *>(ptr)->set_predelay_msec(arg1_in);
}

void godot_icall_AudioEffectReverb_get_predelay_msec_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectReverb *>(ptr)->get_predelay_msec();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectReverb_set_predelay_feedback_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectReverb *>(ptr)->set_predelay_feedback(arg1_in);
}

void godot_icall_AudioEffectReverb_get_predelay_feedback_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectReverb *>(ptr)->get_predelay_feedback();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectReverb_set_room_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectReverb *>(ptr)->set_room_size(arg1_in);
}

void godot_icall_AudioEffectReverb_get_room_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectReverb *>(ptr)->get_room_size();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectReverb_set_damping_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectReverb *>(ptr)->set_damping(arg1_in);
}

void godot_icall_AudioEffectReverb_get_damping_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectReverb *>(ptr)->get_damping();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectReverb_set_spread_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectReverb *>(ptr)->set_spread(arg1_in);
}

void godot_icall_AudioEffectReverb_get_spread_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectReverb *>(ptr)->get_spread();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectReverb_set_dry_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectReverb *>(ptr)->set_dry(arg1_in);
}

void godot_icall_AudioEffectReverb_get_dry_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectReverb *>(ptr)->get_dry();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectReverb_set_wet_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectReverb *>(ptr)->set_wet(arg1_in);
}

void godot_icall_AudioEffectReverb_get_wet_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectReverb *>(ptr)->get_wet();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectReverb_set_hpf_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectReverb *>(ptr)->set_hpf(arg1_in);
}

void godot_icall_AudioEffectReverb_get_hpf_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectReverb *>(ptr)->get_hpf();
    *arg_ret = (float)ret;
}

Object* godot_icall_AudioEffectReverb_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectReverb")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectSpectrumAnalyzer_set_buffer_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectSpectrumAnalyzer *>(ptr)->set_buffer_length(arg1_in);
}

void godot_icall_AudioEffectSpectrumAnalyzer_get_buffer_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectSpectrumAnalyzer *>(ptr)->get_buffer_length();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectSpectrumAnalyzer_set_tap_back_pos_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectSpectrumAnalyzer *>(ptr)->set_tap_back_pos(arg1_in);
}

void godot_icall_AudioEffectSpectrumAnalyzer_get_tap_back_pos_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectSpectrumAnalyzer *>(ptr)->get_tap_back_pos();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectSpectrumAnalyzer_set_fft_size_6979952f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AudioEffectSpectrumAnalyzer *>(ptr)->set_fft_size((AudioEffectSpectrumAnalyzer::FFT_Size)arg1_in);
}

int32_t godot_icall_AudioEffectSpectrumAnalyzer_get_fft_size_97d9743d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioEffectSpectrumAnalyzer *>(ptr)->get_fft_size();
    return (int32_t)ret;
}

Object* godot_icall_AudioEffectSpectrumAnalyzer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectSpectrumAnalyzer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioEffectSpectrumAnalyzerInstance_get_magnitude_for_frequency_range_daad5017(Object * ptr, float* arg1, float* arg2, int32_t arg3, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    float arg2_in = static_cast<float>(*arg2);
    int64_t arg3_in = (int64_t)arg3;
    auto ret = static_cast<AudioEffectSpectrumAnalyzerInstance *>(ptr)->get_magnitude_for_frequency_range(arg1_in, arg2_in, (AudioEffectSpectrumAnalyzerInstance::MagnitudeMode)arg3_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_AudioEffectStereoEnhance_set_pan_pullout_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectStereoEnhance *>(ptr)->set_pan_pullout(arg1_in);
}

void godot_icall_AudioEffectStereoEnhance_get_pan_pullout_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectStereoEnhance *>(ptr)->get_pan_pullout();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectStereoEnhance_set_time_pullout_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectStereoEnhance *>(ptr)->set_time_pullout(arg1_in);
}

void godot_icall_AudioEffectStereoEnhance_get_time_pullout_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectStereoEnhance *>(ptr)->get_time_pullout();
    *arg_ret = (float)ret;
}

void godot_icall_AudioEffectStereoEnhance_set_surround_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioEffectStereoEnhance *>(ptr)->set_surround(arg1_in);
}

void godot_icall_AudioEffectStereoEnhance_get_surround_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioEffectStereoEnhance *>(ptr)->get_surround();
    *arg_ret = (float)ret;
}

Object* godot_icall_AudioEffectStereoEnhance_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioEffectStereoEnhance")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioServer_set_bus_count_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AudioServer *>(ptr)->set_bus_count(arg1_in);
}

int32_t godot_icall_AudioServer_get_bus_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioServer *>(ptr)->get_bus_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_AudioServer_remove_bus_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AudioServer *>(ptr)->remove_bus(arg1_in);
}

void godot_icall_AudioServer_add_bus_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AudioServer *>(ptr)->add_bus(arg1_in);
}

void godot_icall_AudioServer_move_bus_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<AudioServer *>(ptr)->move_bus(arg1_in, arg2_in);
}

void godot_icall_AudioServer_set_bus_name_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<AudioServer *>(ptr)->set_bus_name(arg1_in, arg2_in);
}

MonoString* godot_icall_AudioServer_get_bus_name_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioServer *>(ptr)->get_bus_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_AudioServer_get_bus_index_79b61600(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AudioServer *>(ptr)->get_bus_index(arg1_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_AudioServer_get_bus_channels_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioServer *>(ptr)->get_bus_channels(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_AudioServer_set_bus_volume_db_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<AudioServer *>(ptr)->set_bus_volume_db(arg1_in, arg2_in);
}

void godot_icall_AudioServer_get_bus_volume_db_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioServer *>(ptr)->get_bus_volume_db(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_AudioServer_set_bus_send_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<AudioServer *>(ptr)->set_bus_send(arg1_in, arg2_in);
}

MonoString* godot_icall_AudioServer_get_bus_send_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioServer *>(ptr)->get_bus_send(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AudioServer_set_bus_solo_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<AudioServer *>(ptr)->set_bus_solo(arg1_in, arg2_in);
}

MonoBoolean godot_icall_AudioServer_is_bus_solo_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioServer *>(ptr)->is_bus_solo(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioServer_set_bus_mute_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<AudioServer *>(ptr)->set_bus_mute(arg1_in, arg2_in);
}

MonoBoolean godot_icall_AudioServer_is_bus_mute_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioServer *>(ptr)->is_bus_mute(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioServer_set_bus_bypass_effects_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<AudioServer *>(ptr)->set_bus_bypass_effects(arg1_in, arg2_in);
}

MonoBoolean godot_icall_AudioServer_is_bus_bypassing_effects_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioServer *>(ptr)->is_bus_bypassing_effects(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioServer_add_bus_effect_540e2d5a(Object * ptr, int32_t arg1, Object * arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<AudioServer *>(ptr)->add_bus_effect(arg1_in, AutoRef(arg2), arg3_in);
}

void godot_icall_AudioServer_remove_bus_effect_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<AudioServer *>(ptr)->remove_bus_effect(arg1_in, arg2_in);
}

int32_t godot_icall_AudioServer_get_bus_effect_count_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioServer *>(ptr)->get_bus_effect_count(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_AudioServer_get_bus_effect_d45a0ee2(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<AudioServer *>(ptr)->get_bus_effect(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_AudioServer_get_bus_effect_instance_b0e6ba58(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<AudioServer *>(ptr)->get_bus_effect_instance(arg1_in, arg2_in, arg3_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AudioServer_swap_bus_effects_7de57286(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<AudioServer *>(ptr)->swap_bus_effects(arg1_in, arg2_in, arg3_in);
}

void godot_icall_AudioServer_set_bus_effect_enabled_c76f61ef(Object * ptr, int32_t arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<AudioServer *>(ptr)->set_bus_effect_enabled(arg1_in, arg2_in, arg3_in);
}

MonoBoolean godot_icall_AudioServer_is_bus_effect_enabled_c8b57d14(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<AudioServer *>(ptr)->is_bus_effect_enabled(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioServer_get_bus_peak_volume_left_db_4da5f18d(Object * ptr, int32_t arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<AudioServer *>(ptr)->get_bus_peak_volume_left_db(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

void godot_icall_AudioServer_get_bus_peak_volume_right_db_4da5f18d(Object * ptr, int32_t arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<AudioServer *>(ptr)->get_bus_peak_volume_right_db(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

void godot_icall_AudioServer_set_global_rate_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioServer *>(ptr)->set_global_rate_scale(arg1_in);
}

void godot_icall_AudioServer_get_global_rate_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioServer *>(ptr)->get_global_rate_scale();
    *arg_ret = (float)ret;
}

void godot_icall_AudioServer_lock_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AudioServer *>(ptr)->lock();
}

void godot_icall_AudioServer_unlock_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AudioServer *>(ptr)->unlock();
}

int32_t godot_icall_AudioServer_get_speaker_mode_3ef5979c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioServer *>(ptr)->get_speaker_mode();
    return (int32_t)ret;
}

void godot_icall_AudioServer_get_mix_rate_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioServer *>(ptr)->get_mix_rate();
    *arg_ret = (float)ret;
}

Array* godot_icall_AudioServer_get_device_list_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioServer *>(ptr)->get_device_list();
    return memnew(Array(Variant::from(ret)));
}

MonoString* godot_icall_AudioServer_get_device_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioServer *>(ptr)->get_device();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AudioServer_set_device_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AudioServer *>(ptr)->set_device(arg1_in);
}

void godot_icall_AudioServer_get_time_to_next_mix_27c6b046(Object * ptr, double* arg_ret) {
    if (ptr == nullptr) { *arg_ret = double(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioServer *>(ptr)->get_time_to_next_mix();
    *arg_ret = (double)ret;
}

void godot_icall_AudioServer_get_time_since_last_mix_27c6b046(Object * ptr, double* arg_ret) {
    if (ptr == nullptr) { *arg_ret = double(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioServer *>(ptr)->get_time_since_last_mix();
    *arg_ret = (double)ret;
}

void godot_icall_AudioServer_get_output_latency_27c6b046(Object * ptr, double* arg_ret) {
    if (ptr == nullptr) { *arg_ret = double(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioServer *>(ptr)->get_output_latency();
    *arg_ret = (double)ret;
}

Array* godot_icall_AudioServer_capture_get_device_list_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioServer *>(ptr)->capture_get_device_list();
    return memnew(Array(Variant::from(ret)));
}

MonoString* godot_icall_AudioServer_capture_get_device_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioServer *>(ptr)->capture_get_device();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AudioServer_capture_set_device_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AudioServer *>(ptr)->capture_set_device(arg1_in);
}

void godot_icall_AudioServer_set_bus_layout_b0d80c79(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AudioServer *>(ptr)->set_bus_layout(AutoRef(arg1));
}

MonoObject* godot_icall_AudioServer_generate_bus_layout_6e79daeb(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioServer *>(ptr)->generate_bus_layout();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_AudioServer_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("AudioServer");
}

void godot_icall_AudioStream_get_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStream *>(ptr)->get_length();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamGenerator_set_mix_rate_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamGenerator *>(ptr)->set_mix_rate(arg1_in);
}

void godot_icall_AudioStreamGenerator_get_mix_rate_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamGenerator *>(ptr)->get_mix_rate();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamGenerator_set_buffer_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamGenerator *>(ptr)->set_buffer_length(arg1_in);
}

void godot_icall_AudioStreamGenerator_get_buffer_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamGenerator *>(ptr)->get_buffer_length();
    *arg_ret = (float)ret;
}

Object* godot_icall_AudioStreamGenerator_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioStreamGenerator")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoBoolean godot_icall_AudioStreamGeneratorPlayback_push_frame_fba3d544(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<AudioStreamGeneratorPlayback *>(ptr)->push_frame(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_AudioStreamGeneratorPlayback_can_push_buffer_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<AudioStreamGeneratorPlayback *>(ptr)->can_push_buffer(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_AudioStreamGeneratorPlayback_push_buffer_89e18627(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    PoolVector2Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg1);
    auto ret = static_cast<AudioStreamGeneratorPlayback *>(ptr)->push_buffer(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_AudioStreamGeneratorPlayback_get_frames_available_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioStreamGeneratorPlayback *>(ptr)->get_frames_available();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_AudioStreamGeneratorPlayback_get_skips_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioStreamGeneratorPlayback *>(ptr)->get_skips();
    return static_cast<int32_t>(ret);
}

void godot_icall_AudioStreamGeneratorPlayback_clear_buffer_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AudioStreamGeneratorPlayback *>(ptr)->clear_buffer();
}

Object* godot_icall_AudioStreamMicrophone_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioStreamMicrophone")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioStreamOGGVorbis_set_data_da545cc0(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolByteArray arg1_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg1);
    static_cast<AudioStreamOGGVorbis *>(ptr)->set_data(arg1_in);
}

MonoArray* godot_icall_AudioStreamOGGVorbis_get_data_8edaba4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioStreamOGGVorbis *>(ptr)->get_data();
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

void godot_icall_AudioStreamOGGVorbis_set_loop_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioStreamOGGVorbis *>(ptr)->set_loop(arg1_in);
}

MonoBoolean godot_icall_AudioStreamOGGVorbis_has_loop_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioStreamOGGVorbis *>(ptr)->has_loop();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioStreamOGGVorbis_set_loop_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamOGGVorbis *>(ptr)->set_loop_offset(arg1_in);
}

void godot_icall_AudioStreamOGGVorbis_get_loop_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamOGGVorbis *>(ptr)->get_loop_offset();
    *arg_ret = (float)ret;
}

Object* godot_icall_AudioStreamOGGVorbis_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioStreamOGGVorbis")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioStreamPlayer_set_stream_2cfa5de3(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AudioStreamPlayer *>(ptr)->set_stream(AutoRef(arg1));
}

MonoObject* godot_icall_AudioStreamPlayer_get_stream_da5bac81(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioStreamPlayer *>(ptr)->get_stream();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AudioStreamPlayer_set_volume_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer *>(ptr)->set_volume_db(arg1_in);
}

void godot_icall_AudioStreamPlayer_get_volume_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer *>(ptr)->get_volume_db();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer_set_pitch_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer *>(ptr)->set_pitch_scale(arg1_in);
}

void godot_icall_AudioStreamPlayer_get_pitch_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer *>(ptr)->get_pitch_scale();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer_play_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer *>(ptr)->play(arg1_in);
}

void godot_icall_AudioStreamPlayer_seek_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer *>(ptr)->seek(arg1_in);
}

void godot_icall_AudioStreamPlayer_stop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AudioStreamPlayer *>(ptr)->stop();
}

MonoBoolean godot_icall_AudioStreamPlayer_is_playing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioStreamPlayer *>(ptr)->is_playing();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioStreamPlayer_get_playback_position_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer *>(ptr)->get_playback_position();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer_set_bus_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AudioStreamPlayer *>(ptr)->set_bus(arg1_in);
}

MonoString* godot_icall_AudioStreamPlayer_get_bus_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioStreamPlayer *>(ptr)->get_bus();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AudioStreamPlayer_set_autoplay_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioStreamPlayer *>(ptr)->set_autoplay(arg1_in);
}

MonoBoolean godot_icall_AudioStreamPlayer_is_autoplay_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioStreamPlayer *>(ptr)->is_autoplay_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioStreamPlayer_set_mix_target_d64a92ab(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AudioStreamPlayer *>(ptr)->set_mix_target((AudioStreamPlayer::MixTarget)arg1_in);
}

int32_t godot_icall_AudioStreamPlayer_get_mix_target_dd824166(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioStreamPlayer *>(ptr)->get_mix_target();
    return (int32_t)ret;
}

void godot_icall_AudioStreamPlayer__set_playing_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioStreamPlayer *>(ptr)->_set_playing(arg1_in);
}

void godot_icall_AudioStreamPlayer_set_stream_paused_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioStreamPlayer *>(ptr)->set_stream_paused(arg1_in);
}

MonoBoolean godot_icall_AudioStreamPlayer_get_stream_paused_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioStreamPlayer *>(ptr)->get_stream_paused();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_AudioStreamPlayer_get_stream_playback_adb77a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioStreamPlayer *>(ptr)->get_stream_playback();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_AudioStreamPlayer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioStreamPlayer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioStreamPlayer2D_set_stream_2cfa5de3(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AudioStreamPlayer2D *>(ptr)->set_stream(AutoRef(arg1));
}

MonoObject* godot_icall_AudioStreamPlayer2D_get_stream_da5bac81(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioStreamPlayer2D *>(ptr)->get_stream();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AudioStreamPlayer2D_set_volume_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer2D *>(ptr)->set_volume_db(arg1_in);
}

void godot_icall_AudioStreamPlayer2D_get_volume_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer2D *>(ptr)->get_volume_db();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer2D_set_pitch_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer2D *>(ptr)->set_pitch_scale(arg1_in);
}

void godot_icall_AudioStreamPlayer2D_get_pitch_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer2D *>(ptr)->get_pitch_scale();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer2D_play_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer2D *>(ptr)->play(arg1_in);
}

void godot_icall_AudioStreamPlayer2D_seek_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer2D *>(ptr)->seek(arg1_in);
}

void godot_icall_AudioStreamPlayer2D_stop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AudioStreamPlayer2D *>(ptr)->stop();
}

MonoBoolean godot_icall_AudioStreamPlayer2D_is_playing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioStreamPlayer2D *>(ptr)->is_playing();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioStreamPlayer2D_get_playback_position_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer2D *>(ptr)->get_playback_position();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer2D_set_bus_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AudioStreamPlayer2D *>(ptr)->set_bus(arg1_in);
}

MonoString* godot_icall_AudioStreamPlayer2D_get_bus_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioStreamPlayer2D *>(ptr)->get_bus();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AudioStreamPlayer2D_set_autoplay_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioStreamPlayer2D *>(ptr)->set_autoplay(arg1_in);
}

MonoBoolean godot_icall_AudioStreamPlayer2D_is_autoplay_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioStreamPlayer2D *>(ptr)->is_autoplay_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioStreamPlayer2D__set_playing_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioStreamPlayer2D *>(ptr)->_set_playing(arg1_in);
}

void godot_icall_AudioStreamPlayer2D_set_max_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer2D *>(ptr)->set_max_distance(arg1_in);
}

void godot_icall_AudioStreamPlayer2D_get_max_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer2D *>(ptr)->get_max_distance();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer2D_set_attenuation_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer2D *>(ptr)->set_attenuation(arg1_in);
}

void godot_icall_AudioStreamPlayer2D_get_attenuation_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer2D *>(ptr)->get_attenuation();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer2D_set_area_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<AudioStreamPlayer2D *>(ptr)->set_area_mask(arg1_in);
}

uint32_t godot_icall_AudioStreamPlayer2D_get_area_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<AudioStreamPlayer2D *>(ptr)->get_area_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_AudioStreamPlayer2D_set_stream_paused_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioStreamPlayer2D *>(ptr)->set_stream_paused(arg1_in);
}

MonoBoolean godot_icall_AudioStreamPlayer2D_get_stream_paused_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioStreamPlayer2D *>(ptr)->get_stream_paused();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_AudioStreamPlayer2D_get_stream_playback_adb77a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioStreamPlayer2D *>(ptr)->get_stream_playback();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_AudioStreamPlayer2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioStreamPlayer2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioStreamPlayer3D_set_stream_2cfa5de3(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_stream(AutoRef(arg1));
}

MonoObject* godot_icall_AudioStreamPlayer3D_get_stream_da5bac81(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_stream();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AudioStreamPlayer3D_set_unit_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_unit_db(arg1_in);
}

void godot_icall_AudioStreamPlayer3D_get_unit_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_unit_db();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer3D_set_unit_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_unit_size(arg1_in);
}

void godot_icall_AudioStreamPlayer3D_get_unit_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_unit_size();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer3D_set_max_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_max_db(arg1_in);
}

void godot_icall_AudioStreamPlayer3D_get_max_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_max_db();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer3D_set_pitch_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_pitch_scale(arg1_in);
}

void godot_icall_AudioStreamPlayer3D_get_pitch_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_pitch_scale();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer3D_play_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->play(arg1_in);
}

void godot_icall_AudioStreamPlayer3D_seek_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->seek(arg1_in);
}

void godot_icall_AudioStreamPlayer3D_stop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<AudioStreamPlayer3D *>(ptr)->stop();
}

MonoBoolean godot_icall_AudioStreamPlayer3D_is_playing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->is_playing();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioStreamPlayer3D_get_playback_position_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_playback_position();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer3D_set_bus_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<AudioStreamPlayer3D *>(ptr)->set_bus(arg1_in);
}

MonoString* godot_icall_AudioStreamPlayer3D_get_bus_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_bus();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_AudioStreamPlayer3D_set_autoplay_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_autoplay(arg1_in);
}

MonoBoolean godot_icall_AudioStreamPlayer3D_is_autoplay_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->is_autoplay_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioStreamPlayer3D__set_playing_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->_set_playing(arg1_in);
}

void godot_icall_AudioStreamPlayer3D_set_max_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_max_distance(arg1_in);
}

void godot_icall_AudioStreamPlayer3D_get_max_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_max_distance();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer3D_set_area_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_area_mask(arg1_in);
}

uint32_t godot_icall_AudioStreamPlayer3D_get_area_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_area_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_AudioStreamPlayer3D_set_emission_angle_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_emission_angle(arg1_in);
}

void godot_icall_AudioStreamPlayer3D_get_emission_angle_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_emission_angle();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer3D_set_emission_angle_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_emission_angle_enabled(arg1_in);
}

MonoBoolean godot_icall_AudioStreamPlayer3D_is_emission_angle_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->is_emission_angle_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_AudioStreamPlayer3D_set_emission_angle_filter_attenuation_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_emission_angle_filter_attenuation_db(arg1_in);
}

void godot_icall_AudioStreamPlayer3D_get_emission_angle_filter_attenuation_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_emission_angle_filter_attenuation_db();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer3D_set_attenuation_filter_cutoff_hz_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_attenuation_filter_cutoff_hz(arg1_in);
}

void godot_icall_AudioStreamPlayer3D_get_attenuation_filter_cutoff_hz_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_attenuation_filter_cutoff_hz();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer3D_set_attenuation_filter_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_attenuation_filter_db(arg1_in);
}

void godot_icall_AudioStreamPlayer3D_get_attenuation_filter_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_attenuation_filter_db();
    *arg_ret = (float)ret;
}

void godot_icall_AudioStreamPlayer3D_set_attenuation_model_f86b3544(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AudioStreamPlayer3D *>(ptr)->set_attenuation_model((AudioStreamPlayer3D::AttenuationModel)arg1_in);
}

int32_t godot_icall_AudioStreamPlayer3D_get_attenuation_model_8519a477(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_attenuation_model();
    return (int32_t)ret;
}

void godot_icall_AudioStreamPlayer3D_set_out_of_range_mode_4e1cae68(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AudioStreamPlayer3D *>(ptr)->set_out_of_range_mode((AudioStreamPlayer3D::OutOfRangeMode)arg1_in);
}

int32_t godot_icall_AudioStreamPlayer3D_get_out_of_range_mode_6d6ee4b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_out_of_range_mode();
    return (int32_t)ret;
}

void godot_icall_AudioStreamPlayer3D_set_doppler_tracking_b2527ea(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AudioStreamPlayer3D *>(ptr)->set_doppler_tracking((AudioStreamPlayer3D::DopplerTracking)arg1_in);
}

int32_t godot_icall_AudioStreamPlayer3D_get_doppler_tracking_2769fc25(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_doppler_tracking();
    return (int32_t)ret;
}

void godot_icall_AudioStreamPlayer3D_set_stream_paused_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioStreamPlayer3D *>(ptr)->set_stream_paused(arg1_in);
}

MonoBoolean godot_icall_AudioStreamPlayer3D_get_stream_paused_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_stream_paused();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_AudioStreamPlayer3D_get_stream_playback_adb77a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioStreamPlayer3D *>(ptr)->get_stream_playback();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_AudioStreamPlayer3D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioStreamPlayer3D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioStreamRandomPitch_set_audio_stream_2cfa5de3(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<AudioStreamRandomPitch *>(ptr)->set_audio_stream(AutoRef(arg1));
}

MonoObject* godot_icall_AudioStreamRandomPitch_get_audio_stream_da5bac81(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioStreamRandomPitch *>(ptr)->get_audio_stream();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_AudioStreamRandomPitch_set_random_pitch_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<AudioStreamRandomPitch *>(ptr)->set_random_pitch(arg1_in);
}

void godot_icall_AudioStreamRandomPitch_get_random_pitch_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<AudioStreamRandomPitch *>(ptr)->get_random_pitch();
    *arg_ret = (float)ret;
}

Object* godot_icall_AudioStreamRandomPitch_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioStreamRandomPitch")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_AudioStreamSample_set_data_627085c1(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecByte(arg1);
    static_cast<AudioStreamSample *>(ptr)->set_data(arg1_in);
}

MonoArray* godot_icall_AudioStreamSample_get_data_8edaba4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<AudioStreamSample *>(ptr)->get_data();
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

void godot_icall_AudioStreamSample_set_format_3546ab06(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AudioStreamSample *>(ptr)->set_format((AudioStreamSample::Format)arg1_in);
}

int32_t godot_icall_AudioStreamSample_get_format_b2e2f671(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioStreamSample *>(ptr)->get_format();
    return (int32_t)ret;
}

void godot_icall_AudioStreamSample_set_loop_mode_65756368(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<AudioStreamSample *>(ptr)->set_loop_mode((AudioStreamSample::LoopMode)arg1_in);
}

int32_t godot_icall_AudioStreamSample_get_loop_mode_6dcc834b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioStreamSample *>(ptr)->get_loop_mode();
    return (int32_t)ret;
}

void godot_icall_AudioStreamSample_set_loop_begin_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AudioStreamSample *>(ptr)->set_loop_begin(arg1_in);
}

int32_t godot_icall_AudioStreamSample_get_loop_begin_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioStreamSample *>(ptr)->get_loop_begin();
    return static_cast<int32_t>(ret);
}

void godot_icall_AudioStreamSample_set_loop_end_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AudioStreamSample *>(ptr)->set_loop_end(arg1_in);
}

int32_t godot_icall_AudioStreamSample_get_loop_end_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioStreamSample *>(ptr)->get_loop_end();
    return static_cast<int32_t>(ret);
}

void godot_icall_AudioStreamSample_set_mix_rate_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<AudioStreamSample *>(ptr)->set_mix_rate(arg1_in);
}

int32_t godot_icall_AudioStreamSample_get_mix_rate_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<AudioStreamSample *>(ptr)->get_mix_rate();
    return static_cast<int32_t>(ret);
}

void godot_icall_AudioStreamSample_set_stereo_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<AudioStreamSample *>(ptr)->set_stereo(arg1_in);
}

MonoBoolean godot_icall_AudioStreamSample_is_stereo_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<AudioStreamSample *>(ptr)->is_stereo();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_AudioStreamSample_save_to_wav_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<AudioStreamSample *>(ptr)->save_to_wav(arg1_in);
    return (int32_t)ret;
}

Object* godot_icall_AudioStreamSample_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "AudioStreamSample")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_BackBufferCopy_set_rect_a5ed61f1(Object * ptr, GDMonoMarshal::M_Rect2* arg1) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    static_cast<BackBufferCopy *>(ptr)->set_rect(arg1_in);
}

void godot_icall_BackBufferCopy_get_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<BackBufferCopy *>(ptr)->get_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_BackBufferCopy_set_copy_mode_e241b099(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<BackBufferCopy *>(ptr)->set_copy_mode((BackBufferCopy::CopyMode)arg1_in);
}

int32_t godot_icall_BackBufferCopy_get_copy_mode_dfd96c34(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<BackBufferCopy *>(ptr)->get_copy_mode();
    return (int32_t)ret;
}

Object* godot_icall_BackBufferCopy_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "BackBufferCopy")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_BakedLightmap_set_light_data_4f60b80c(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<BakedLightmap *>(ptr)->set_light_data(AutoRef(arg1));
}

MonoObject* godot_icall_BakedLightmap_get_light_data_7dc28760(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<BakedLightmap *>(ptr)->get_light_data();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_BakedLightmap_set_bake_cell_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<BakedLightmap *>(ptr)->set_bake_cell_size(arg1_in);
}

void godot_icall_BakedLightmap_get_bake_cell_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<BakedLightmap *>(ptr)->get_bake_cell_size();
    *arg_ret = (float)ret;
}

void godot_icall_BakedLightmap_set_capture_cell_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<BakedLightmap *>(ptr)->set_capture_cell_size(arg1_in);
}

void godot_icall_BakedLightmap_get_capture_cell_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<BakedLightmap *>(ptr)->get_capture_cell_size();
    *arg_ret = (float)ret;
}

void godot_icall_BakedLightmap_set_bake_quality_a7280410(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<BakedLightmap *>(ptr)->set_bake_quality((BakedLightmap::BakeQuality)arg1_in);
}

int32_t godot_icall_BakedLightmap_get_bake_quality_cb066063(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<BakedLightmap *>(ptr)->get_bake_quality();
    return (int32_t)ret;
}

void godot_icall_BakedLightmap_set_bake_mode_e2d9693c(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<BakedLightmap *>(ptr)->set_bake_mode((BakedLightmap::BakeMode)arg1_in);
}

int32_t godot_icall_BakedLightmap_get_bake_mode_3853b39f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<BakedLightmap *>(ptr)->get_bake_mode();
    return (int32_t)ret;
}

void godot_icall_BakedLightmap_set_extents_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<BakedLightmap *>(ptr)->set_extents(arg1_in);
}

void godot_icall_BakedLightmap_get_extents_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<BakedLightmap *>(ptr)->get_extents();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_BakedLightmap_set_bake_default_texels_per_unit_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<BakedLightmap *>(ptr)->set_bake_default_texels_per_unit(arg1_in);
}

void godot_icall_BakedLightmap_get_bake_default_texels_per_unit_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<BakedLightmap *>(ptr)->get_bake_default_texels_per_unit();
    *arg_ret = (float)ret;
}

void godot_icall_BakedLightmap_set_propagation_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<BakedLightmap *>(ptr)->set_propagation(arg1_in);
}

void godot_icall_BakedLightmap_get_propagation_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<BakedLightmap *>(ptr)->get_propagation();
    *arg_ret = (float)ret;
}

void godot_icall_BakedLightmap_set_energy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<BakedLightmap *>(ptr)->set_energy(arg1_in);
}

void godot_icall_BakedLightmap_get_energy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<BakedLightmap *>(ptr)->get_energy();
    *arg_ret = (float)ret;
}

void godot_icall_BakedLightmap_set_hdr_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<BakedLightmap *>(ptr)->set_hdr(arg1_in);
}

MonoBoolean godot_icall_BakedLightmap_is_hdr_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<BakedLightmap *>(ptr)->is_hdr();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_BakedLightmap_set_image_path_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<BakedLightmap *>(ptr)->set_image_path(arg1_in);
}

MonoString* godot_icall_BakedLightmap_get_image_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<BakedLightmap *>(ptr)->get_image_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_BakedLightmap_bake_82641f9a(Object * ptr, Object * arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<BakedLightmap *>(ptr)->bake((Node*)arg1, arg2_in);
    return (int32_t)ret;
}

void godot_icall_BakedLightmap_debug_bake_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<BakedLightmap *>(ptr)->debug_bake();
}

Object* godot_icall_BakedLightmap_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "BakedLightmap")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_BakedLightmapData__set_user_data_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<BakedLightmapData *>(ptr)->_set_user_data(*arg1);
}

Array* godot_icall_BakedLightmapData__get_user_data_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<BakedLightmapData *>(ptr)->_get_user_data();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_BakedLightmapData_set_bounds_ff67b409(Object * ptr, GDMonoMarshal::M_AABB* arg1) {
    ERR_FAIL_NULL(ptr);
    AABB arg1_in = MARSHALLED_IN(AABB, arg1);
    static_cast<BakedLightmapData *>(ptr)->set_bounds(arg1_in);
}

void godot_icall_BakedLightmapData_get_bounds_2dbf935b(Object * ptr, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<BakedLightmapData *>(ptr)->get_bounds();
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

void godot_icall_BakedLightmapData_set_cell_space_transform_655b85c9(Object * ptr, GDMonoMarshal::M_Transform* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform arg1_in = MARSHALLED_IN(Transform, arg1);
    static_cast<BakedLightmapData *>(ptr)->set_cell_space_transform(arg1_in);
}

void godot_icall_BakedLightmapData_get_cell_space_transform_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<BakedLightmapData *>(ptr)->get_cell_space_transform();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_BakedLightmapData_set_cell_subdiv_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<BakedLightmapData *>(ptr)->set_cell_subdiv(arg1_in);
}

int32_t godot_icall_BakedLightmapData_get_cell_subdiv_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<BakedLightmapData *>(ptr)->get_cell_subdiv();
    return static_cast<int32_t>(ret);
}

void godot_icall_BakedLightmapData_set_octree_da545cc0(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolByteArray arg1_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg1);
    static_cast<BakedLightmapData *>(ptr)->set_octree(arg1_in);
}

MonoArray* godot_icall_BakedLightmapData_get_octree_8edaba4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<BakedLightmapData *>(ptr)->get_octree();
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

void godot_icall_BakedLightmapData_set_energy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<BakedLightmapData *>(ptr)->set_energy(arg1_in);
}

void godot_icall_BakedLightmapData_get_energy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<BakedLightmapData *>(ptr)->get_energy();
    *arg_ret = (float)ret;
}

void godot_icall_BakedLightmapData_add_user_6eb93a29(Object * ptr, NodePath* arg1, Object * arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<BakedLightmapData *>(ptr)->add_user(*arg1, AutoRef(arg2), arg3_in);
}

int32_t godot_icall_BakedLightmapData_get_user_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<BakedLightmapData *>(ptr)->get_user_count();
    return static_cast<int32_t>(ret);
}

NodePath* godot_icall_BakedLightmapData_get_user_path_1640f2b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<BakedLightmapData *>(ptr)->get_user_path(arg1_in);
    return memnew(NodePath(ret));
}

MonoObject* godot_icall_BakedLightmapData_get_user_lightmap_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<BakedLightmapData *>(ptr)->get_user_lightmap(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_BakedLightmapData_clear_users_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<BakedLightmapData *>(ptr)->clear_users();
}

Object* godot_icall_BakedLightmapData_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "BakedLightmapData")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_BaseButton_set_pressed_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<BaseButton *>(ptr)->set_pressed(arg1_in);
}

MonoBoolean godot_icall_BaseButton_is_pressed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<BaseButton *>(ptr)->is_pressed();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_BaseButton_is_hovered_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<BaseButton *>(ptr)->is_hovered();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_BaseButton_set_toggle_mode_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<BaseButton *>(ptr)->set_toggle_mode(arg1_in);
}

MonoBoolean godot_icall_BaseButton_is_toggle_mode_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<BaseButton *>(ptr)->is_toggle_mode();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_BaseButton_set_shortcut_in_tooltip_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<BaseButton *>(ptr)->set_shortcut_in_tooltip(arg1_in);
}

MonoBoolean godot_icall_BaseButton_is_shortcut_in_tooltip_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<BaseButton *>(ptr)->is_shortcut_in_tooltip_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_BaseButton_set_disabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<BaseButton *>(ptr)->set_disabled(arg1_in);
}

MonoBoolean godot_icall_BaseButton_is_disabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<BaseButton *>(ptr)->is_disabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_BaseButton_set_action_mode_115a4545(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<BaseButton *>(ptr)->set_action_mode((BaseButton::ActionMode)arg1_in);
}

int32_t godot_icall_BaseButton_get_action_mode_77d6ae80(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<BaseButton *>(ptr)->get_action_mode();
    return (int32_t)ret;
}

void godot_icall_BaseButton_set_button_mask_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<BaseButton *>(ptr)->set_button_mask(arg1_in);
}

int32_t godot_icall_BaseButton_get_button_mask_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<BaseButton *>(ptr)->get_button_mask();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_BaseButton_get_draw_mode_8c3a3bf7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<BaseButton *>(ptr)->get_draw_mode();
    return (int32_t)ret;
}

void godot_icall_BaseButton_set_enabled_focus_mode_ec5f3255(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<BaseButton *>(ptr)->set_enabled_focus_mode((Control::FocusMode)arg1_in);
}

int32_t godot_icall_BaseButton_get_enabled_focus_mode_2e93c450(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<BaseButton *>(ptr)->get_enabled_focus_mode();
    return (int32_t)ret;
}

void godot_icall_BaseButton_set_keep_pressed_outside_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<BaseButton *>(ptr)->set_keep_pressed_outside(arg1_in);
}

MonoBoolean godot_icall_BaseButton_is_keep_pressed_outside_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<BaseButton *>(ptr)->is_keep_pressed_outside();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_BaseButton_set_shortcut_4a8acc0d(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<BaseButton *>(ptr)->set_shortcut(AutoRef(arg1));
}

MonoObject* godot_icall_BaseButton_get_shortcut_78ac1b5f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<BaseButton *>(ptr)->get_shortcut();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_BaseButton_set_button_group_cf618eb2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<BaseButton *>(ptr)->set_button_group(AutoRef(arg1));
}

MonoObject* godot_icall_BaseButton_get_button_group_fdc159b2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<BaseButton *>(ptr)->get_button_group();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_BitMap_create_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<BitMap *>(ptr)->create(arg1_in);
}

void godot_icall_BitMap_create_from_image_alpha_2b2bd4f0(Object * ptr, Object * arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<BitMap *>(ptr)->create_from_image_alpha(AutoRef(arg1), arg2_in);
}

void godot_icall_BitMap_set_bit_cd723547(Object * ptr, GDMonoMarshal::M_Vector2* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<BitMap *>(ptr)->set_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_BitMap_get_bit_fba3d544(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<BitMap *>(ptr)->get_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_BitMap_set_bit_rect_9e4cc3f(Object * ptr, GDMonoMarshal::M_Rect2* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<BitMap *>(ptr)->set_bit_rect(arg1_in, arg2_in);
}

int32_t godot_icall_BitMap_get_true_bit_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<BitMap *>(ptr)->get_true_bit_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_BitMap_get_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<BitMap *>(ptr)->get_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_BitMap__set_data_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<BitMap *>(ptr)->_set_data(*arg1);
}

Dictionary* godot_icall_BitMap__get_data_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<BitMap *>(ptr)->_get_data();
    return memnew(Dictionary(ret));
}

void godot_icall_BitMap_grow_mask_44225da7(Object * ptr, int32_t arg1, GDMonoMarshal::M_Rect2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    static_cast<BitMap *>(ptr)->grow_mask(arg1_in, arg2_in);
}

Array* godot_icall_BitMap_opaque_to_polygons_dce17cda(Object * ptr, GDMonoMarshal::M_Rect2* arg1, float* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<BitMap *>(ptr)->opaque_to_polygons(arg1_in, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_BitMap_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "BitMap")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_BitmapFont_create_from_fnt_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<BitmapFont *>(ptr)->create_from_fnt(arg1_in);
    return (int32_t)ret;
}

void godot_icall_BitmapFont_set_height_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<BitmapFont *>(ptr)->set_height(arg1_in);
}

void godot_icall_BitmapFont_set_ascent_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<BitmapFont *>(ptr)->set_ascent(arg1_in);
}

void godot_icall_BitmapFont_add_kerning_pair_6f53a9ee(Object * ptr, uint16_t arg1, uint16_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    uint16_t arg1_in = static_cast<uint16_t>(arg1);
    uint16_t arg2_in = static_cast<uint16_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<BitmapFont *>(ptr)->add_kerning_pair(arg1_in, arg2_in, arg3_in);
}

int32_t godot_icall_BitmapFont_get_kerning_pair_13a314c5(Object * ptr, uint16_t arg1, uint16_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    uint16_t arg1_in = static_cast<uint16_t>(arg1);
    uint16_t arg2_in = static_cast<uint16_t>(arg2);
    auto ret = static_cast<BitmapFont *>(ptr)->get_kerning_pair(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_BitmapFont_add_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<BitmapFont *>(ptr)->add_texture(AutoRef(arg1));
}

void godot_icall_BitmapFont_add_char_e4f36219(Object * ptr, uint16_t arg1, int32_t arg2, GDMonoMarshal::M_Rect2* arg3, GDMonoMarshal::M_Vector2* arg4, float* arg5) {
    ERR_FAIL_NULL(ptr);
    uint16_t arg1_in = static_cast<uint16_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Rect2 arg3_in = MARSHALLED_IN(Rect2, arg3);
    Vector2 arg4_in = MARSHALLED_IN(Vector2, arg4);
    float arg5_in = static_cast<float>(*arg5);
    static_cast<BitmapFont *>(ptr)->add_char(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

int32_t godot_icall_BitmapFont_get_texture_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<BitmapFont *>(ptr)->get_texture_count();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_BitmapFont_get_texture_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<BitmapFont *>(ptr)->get_texture(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_BitmapFont_get_char_size_d3a9011d(Object * ptr, uint16_t arg1, uint16_t arg2, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    uint16_t arg1_in = static_cast<uint16_t>(arg1);
    uint16_t arg2_in = static_cast<uint16_t>(arg2);
    auto ret = static_cast<BitmapFont *>(ptr)->get_char_size(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_BitmapFont_set_distance_field_hint_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<BitmapFont *>(ptr)->set_distance_field_hint(arg1_in);
}

void godot_icall_BitmapFont_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<BitmapFont *>(ptr)->clear();
}

void godot_icall_BitmapFont__set_chars_fb3c9f9f(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolIntArray arg1_in = GDMonoMarshal::mono_array_to_PoolIntArray(arg1);
    static_cast<BitmapFont *>(ptr)->_set_chars(arg1_in);
}

MonoArray* godot_icall_BitmapFont__get_chars_2a166acd(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<BitmapFont *>(ptr)->_get_chars();
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

void godot_icall_BitmapFont__set_kernings_fb3c9f9f(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolIntArray arg1_in = GDMonoMarshal::mono_array_to_PoolIntArray(arg1);
    static_cast<BitmapFont *>(ptr)->_set_kernings(arg1_in);
}

MonoArray* godot_icall_BitmapFont__get_kernings_2a166acd(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<BitmapFont *>(ptr)->_get_kernings();
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

void godot_icall_BitmapFont__set_textures_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<BitmapFont *>(ptr)->_set_textures(arg1->vals());
}

Array* godot_icall_BitmapFont__get_textures_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<BitmapFont *>(ptr)->_get_textures();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_BitmapFont_set_fallback_2e442cf9(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<BitmapFont *>(ptr)->set_fallback(AutoRef(arg1));
}

MonoObject* godot_icall_BitmapFont_get_fallback_dcddfb6b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<BitmapFont *>(ptr)->get_fallback();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_BitmapFont_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "BitmapFont")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Bone2D_set_rest_dfe2915f(Object * ptr, GDMonoMarshal::M_Transform2D* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    static_cast<Bone2D *>(ptr)->set_rest(arg1_in);
}

void godot_icall_Bone2D_get_rest_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Bone2D *>(ptr)->get_rest();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_Bone2D_apply_rest_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Bone2D *>(ptr)->apply_rest();
}

void godot_icall_Bone2D_get_skeleton_rest_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Bone2D *>(ptr)->get_skeleton_rest();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

int32_t godot_icall_Bone2D_get_index_in_skeleton_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Bone2D *>(ptr)->get_index_in_skeleton();
    return static_cast<int32_t>(ret);
}

void godot_icall_Bone2D_set_default_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Bone2D *>(ptr)->set_default_length(arg1_in);
}

void godot_icall_Bone2D_get_default_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Bone2D *>(ptr)->get_default_length();
    *arg_ret = (float)ret;
}

Object* godot_icall_Bone2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Bone2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_BoneAttachment_set_bone_name_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<BoneAttachment *>(ptr)->set_bone_name(arg1_in);
}

MonoString* godot_icall_BoneAttachment_get_bone_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<BoneAttachment *>(ptr)->get_bone_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_BoneAttachment_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "BoneAttachment")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_BoxContainer_add_spacer_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<BoxContainer *>(ptr)->add_spacer(arg1_in);
}

int32_t godot_icall_BoxContainer_get_alignment_3db3ff71(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<BoxContainer *>(ptr)->get_alignment();
    return (int32_t)ret;
}

void godot_icall_BoxContainer_set_alignment_8f9220f3(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<BoxContainer *>(ptr)->set_alignment((BoxContainer::AlignMode)arg1_in);
}

void godot_icall_BoxShape_set_extents_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<BoxShape *>(ptr)->set_extents(arg1_in);
}

void godot_icall_BoxShape_get_extents_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<BoxShape *>(ptr)->get_extents();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

Object* godot_icall_BoxShape_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "BoxShape")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Button_set_text_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Button *>(ptr)->set_text(arg1_in);
}

MonoString* godot_icall_Button_get_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Button *>(ptr)->get_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Button_set_button_icon_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Button *>(ptr)->set_button_icon(AutoRef(arg1));
}

MonoObject* godot_icall_Button_get_button_icon_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Button *>(ptr)->get_button_icon();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Button_set_expand_icon_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Button *>(ptr)->set_expand_icon(arg1_in);
}

MonoBoolean godot_icall_Button_is_expand_icon_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Button *>(ptr)->is_expand_icon();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Button_set_flat_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Button *>(ptr)->set_flat(arg1_in);
}

void godot_icall_Button_set_clip_text_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Button *>(ptr)->set_clip_text(arg1_in);
}

MonoBoolean godot_icall_Button_get_clip_text_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Button *>(ptr)->get_clip_text();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Button_set_text_align_5526e9c9(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Button *>(ptr)->set_text_align((Button::TextAlign)arg1_in);
}

int32_t godot_icall_Button_get_text_align_9400389b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Button *>(ptr)->get_text_align();
    return (int32_t)ret;
}

MonoBoolean godot_icall_Button_is_flat_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Button *>(ptr)->is_flat();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_Button_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Button")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoObject* godot_icall_ButtonGroup_get_pressed_button_6f36e66e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ButtonGroup *>(ptr)->get_pressed_button();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Array* godot_icall_ButtonGroup_get_buttons_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ButtonGroup *>(ptr)->get_buttons();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_ButtonGroup_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ButtonGroup")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CPUParticles_set_emitting_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CPUParticles *>(ptr)->set_emitting(arg1_in);
}

void godot_icall_CPUParticles_set_amount_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CPUParticles *>(ptr)->set_amount(arg1_in);
}

void godot_icall_CPUParticles_set_lifetime_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles *>(ptr)->set_lifetime(arg1_in);
}

void godot_icall_CPUParticles_set_one_shot_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CPUParticles *>(ptr)->set_one_shot(arg1_in);
}

void godot_icall_CPUParticles_set_pre_process_time_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles *>(ptr)->set_pre_process_time(arg1_in);
}

void godot_icall_CPUParticles_set_explosiveness_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles *>(ptr)->set_explosiveness_ratio(arg1_in);
}

void godot_icall_CPUParticles_set_randomness_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles *>(ptr)->set_randomness_ratio(arg1_in);
}

void godot_icall_CPUParticles_set_lifetime_randomness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles *>(ptr)->set_lifetime_randomness(arg1_in);
}

void godot_icall_CPUParticles_set_use_local_coordinates_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CPUParticles *>(ptr)->set_use_local_coordinates(arg1_in);
}

void godot_icall_CPUParticles_set_fixed_fps_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CPUParticles *>(ptr)->set_fixed_fps(arg1_in);
}

void godot_icall_CPUParticles_set_fractional_delta_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CPUParticles *>(ptr)->set_fractional_delta(arg1_in);
}

void godot_icall_CPUParticles_set_speed_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles *>(ptr)->set_speed_scale(arg1_in);
}

MonoBoolean godot_icall_CPUParticles_is_emitting_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CPUParticles *>(ptr)->is_emitting();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_CPUParticles_get_amount_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CPUParticles *>(ptr)->get_amount();
    return static_cast<int32_t>(ret);
}

void godot_icall_CPUParticles_get_lifetime_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_lifetime();
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_CPUParticles_get_one_shot_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CPUParticles *>(ptr)->get_one_shot();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CPUParticles_get_pre_process_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_pre_process_time();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles_get_explosiveness_ratio_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_explosiveness_ratio();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles_get_randomness_ratio_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_randomness_ratio();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles_get_lifetime_randomness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_lifetime_randomness();
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_CPUParticles_get_use_local_coordinates_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CPUParticles *>(ptr)->get_use_local_coordinates();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_CPUParticles_get_fixed_fps_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CPUParticles *>(ptr)->get_fixed_fps();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_CPUParticles_get_fractional_delta_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CPUParticles *>(ptr)->get_fractional_delta();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CPUParticles_get_speed_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_speed_scale();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles_set_draw_order_2112a4ca(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CPUParticles *>(ptr)->set_draw_order((CPUParticles::DrawOrder)arg1_in);
}

int32_t godot_icall_CPUParticles_get_draw_order_57695d85(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CPUParticles *>(ptr)->get_draw_order();
    return (int32_t)ret;
}

void godot_icall_CPUParticles_set_mesh_d5d30806(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CPUParticles *>(ptr)->set_mesh(AutoRef(arg1));
}

MonoObject* godot_icall_CPUParticles_get_mesh_1372d766(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CPUParticles *>(ptr)->get_mesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CPUParticles_restart_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<CPUParticles *>(ptr)->restart();
}

void godot_icall_CPUParticles_set_direction_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<CPUParticles *>(ptr)->set_direction(arg1_in);
}

void godot_icall_CPUParticles_get_direction_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_direction();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_CPUParticles_set_spread_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles *>(ptr)->set_spread(arg1_in);
}

void godot_icall_CPUParticles_get_spread_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_spread();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles_set_flatness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles *>(ptr)->set_flatness(arg1_in);
}

void godot_icall_CPUParticles_get_flatness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_flatness();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles_set_param_a810fa37(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<CPUParticles *>(ptr)->set_param((CPUParticles::Parameter)arg1_in, arg2_in);
}

void godot_icall_CPUParticles_get_param_6b4f30f5(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<CPUParticles *>(ptr)->get_param((CPUParticles::Parameter)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles_set_param_randomness_a810fa37(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<CPUParticles *>(ptr)->set_param_randomness((CPUParticles::Parameter)arg1_in, arg2_in);
}

void godot_icall_CPUParticles_get_param_randomness_6b4f30f5(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<CPUParticles *>(ptr)->get_param_randomness((CPUParticles::Parameter)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles_set_param_curve_6fa1bca6(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CPUParticles *>(ptr)->set_param_curve((CPUParticles::Parameter)arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_CPUParticles_get_param_curve_c99d09e2(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<CPUParticles *>(ptr)->get_param_curve((CPUParticles::Parameter)arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CPUParticles_set_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<CPUParticles *>(ptr)->set_color(arg1_in);
}

void godot_icall_CPUParticles_get_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_CPUParticles_set_color_ramp_487c5873(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CPUParticles *>(ptr)->set_color_ramp(AutoRef(arg1));
}

MonoObject* godot_icall_CPUParticles_get_color_ramp_76d5a6f1(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CPUParticles *>(ptr)->get_color_ramp();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CPUParticles_set_particle_flag_440013aa(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<CPUParticles *>(ptr)->set_particle_flag((CPUParticles::Flags)arg1_in, arg2_in);
}

MonoBoolean godot_icall_CPUParticles_get_particle_flag_8b445db5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<CPUParticles *>(ptr)->get_particle_flag((CPUParticles::Flags)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CPUParticles_set_emission_shape_1801db0(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CPUParticles *>(ptr)->set_emission_shape((CPUParticles::EmissionShape)arg1_in);
}

int32_t godot_icall_CPUParticles_get_emission_shape_12316583(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CPUParticles *>(ptr)->get_emission_shape();
    return (int32_t)ret;
}

void godot_icall_CPUParticles_set_emission_sphere_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles *>(ptr)->set_emission_sphere_radius(arg1_in);
}

void godot_icall_CPUParticles_get_emission_sphere_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_emission_sphere_radius();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles_set_emission_box_extents_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<CPUParticles *>(ptr)->set_emission_box_extents(arg1_in);
}

void godot_icall_CPUParticles_get_emission_box_extents_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_emission_box_extents();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_CPUParticles_set_emission_points_88c6a314(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolVector3Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector3Array(arg1);
    static_cast<CPUParticles *>(ptr)->set_emission_points(arg1_in);
}

MonoArray* godot_icall_CPUParticles_get_emission_points_36607e58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CPUParticles *>(ptr)->get_emission_points();
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

void godot_icall_CPUParticles_set_emission_normals_88c6a314(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolVector3Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector3Array(arg1);
    static_cast<CPUParticles *>(ptr)->set_emission_normals(arg1_in);
}

MonoArray* godot_icall_CPUParticles_get_emission_normals_36607e58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CPUParticles *>(ptr)->get_emission_normals();
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

void godot_icall_CPUParticles_set_emission_colors_22e90985(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolColorArray arg1_in = GDMonoMarshal::mono_array_to_PoolColorArray(arg1);
    static_cast<CPUParticles *>(ptr)->set_emission_colors(arg1_in);
}

MonoArray* godot_icall_CPUParticles_get_emission_colors_e048d8e7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CPUParticles *>(ptr)->get_emission_colors();
    return GDMonoMarshal::PoolColorArray_to_mono_array(ret);
}

void godot_icall_CPUParticles_get_gravity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles *>(ptr)->get_gravity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_CPUParticles_set_gravity_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<CPUParticles *>(ptr)->set_gravity(arg1_in);
}

void godot_icall_CPUParticles_convert_from_particles_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CPUParticles *>(ptr)->convert_from_particles((Node*)arg1);
}

Object* godot_icall_CPUParticles_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CPUParticles")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CPUParticles2D_set_emitting_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CPUParticles2D *>(ptr)->set_emitting(arg1_in);
}

void godot_icall_CPUParticles2D_set_amount_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CPUParticles2D *>(ptr)->set_amount(arg1_in);
}

void godot_icall_CPUParticles2D_set_lifetime_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles2D *>(ptr)->set_lifetime(arg1_in);
}

void godot_icall_CPUParticles2D_set_one_shot_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CPUParticles2D *>(ptr)->set_one_shot(arg1_in);
}

void godot_icall_CPUParticles2D_set_pre_process_time_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles2D *>(ptr)->set_pre_process_time(arg1_in);
}

void godot_icall_CPUParticles2D_set_explosiveness_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles2D *>(ptr)->set_explosiveness_ratio(arg1_in);
}

void godot_icall_CPUParticles2D_set_randomness_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles2D *>(ptr)->set_randomness_ratio(arg1_in);
}

void godot_icall_CPUParticles2D_set_lifetime_randomness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles2D *>(ptr)->set_lifetime_randomness(arg1_in);
}

void godot_icall_CPUParticles2D_set_use_local_coordinates_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CPUParticles2D *>(ptr)->set_use_local_coordinates(arg1_in);
}

void godot_icall_CPUParticles2D_set_fixed_fps_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CPUParticles2D *>(ptr)->set_fixed_fps(arg1_in);
}

void godot_icall_CPUParticles2D_set_fractional_delta_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CPUParticles2D *>(ptr)->set_fractional_delta(arg1_in);
}

void godot_icall_CPUParticles2D_set_speed_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles2D *>(ptr)->set_speed_scale(arg1_in);
}

MonoBoolean godot_icall_CPUParticles2D_is_emitting_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CPUParticles2D *>(ptr)->is_emitting();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_CPUParticles2D_get_amount_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_amount();
    return static_cast<int32_t>(ret);
}

void godot_icall_CPUParticles2D_get_lifetime_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_lifetime();
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_CPUParticles2D_get_one_shot_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_one_shot();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CPUParticles2D_get_pre_process_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_pre_process_time();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles2D_get_explosiveness_ratio_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_explosiveness_ratio();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles2D_get_randomness_ratio_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_randomness_ratio();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles2D_get_lifetime_randomness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_lifetime_randomness();
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_CPUParticles2D_get_use_local_coordinates_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_use_local_coordinates();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_CPUParticles2D_get_fixed_fps_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_fixed_fps();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_CPUParticles2D_get_fractional_delta_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_fractional_delta();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CPUParticles2D_get_speed_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_speed_scale();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles2D_set_draw_order_955be194(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CPUParticles2D *>(ptr)->set_draw_order((CPUParticles2D::DrawOrder)arg1_in);
}

int32_t godot_icall_CPUParticles2D_get_draw_order_61478e47(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_draw_order();
    return (int32_t)ret;
}

void godot_icall_CPUParticles2D_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CPUParticles2D *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_CPUParticles2D_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CPUParticles2D_set_normalmap_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CPUParticles2D *>(ptr)->set_normalmap(AutoRef(arg1));
}

MonoObject* godot_icall_CPUParticles2D_get_normalmap_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_normalmap();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CPUParticles2D_restart_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<CPUParticles2D *>(ptr)->restart();
}

void godot_icall_CPUParticles2D_set_direction_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<CPUParticles2D *>(ptr)->set_direction(arg1_in);
}

void godot_icall_CPUParticles2D_get_direction_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_direction();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_CPUParticles2D_set_spread_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles2D *>(ptr)->set_spread(arg1_in);
}

void godot_icall_CPUParticles2D_get_spread_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_spread();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles2D_set_param_2433341d(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<CPUParticles2D *>(ptr)->set_param((CPUParticles2D::Parameter)arg1_in, arg2_in);
}

void godot_icall_CPUParticles2D_get_param_29f23ad7(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_param((CPUParticles2D::Parameter)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles2D_set_param_randomness_2433341d(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<CPUParticles2D *>(ptr)->set_param_randomness((CPUParticles2D::Parameter)arg1_in, arg2_in);
}

void godot_icall_CPUParticles2D_get_param_randomness_29f23ad7(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_param_randomness((CPUParticles2D::Parameter)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles2D_set_param_curve_6ae3f28c(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CPUParticles2D *>(ptr)->set_param_curve((CPUParticles2D::Parameter)arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_CPUParticles2D_get_param_curve_8200600(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_param_curve((CPUParticles2D::Parameter)arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CPUParticles2D_set_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<CPUParticles2D *>(ptr)->set_color(arg1_in);
}

void godot_icall_CPUParticles2D_get_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_CPUParticles2D_set_color_ramp_487c5873(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CPUParticles2D *>(ptr)->set_color_ramp(AutoRef(arg1));
}

MonoObject* godot_icall_CPUParticles2D_get_color_ramp_76d5a6f1(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_color_ramp();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CPUParticles2D_set_particle_flag_57f31e35(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<CPUParticles2D *>(ptr)->set_particle_flag((CPUParticles2D::Flags)arg1_in, arg2_in);
}

MonoBoolean godot_icall_CPUParticles2D_get_particle_flag_32bc0553(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_particle_flag((CPUParticles2D::Flags)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CPUParticles2D_set_emission_shape_9e23388a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CPUParticles2D *>(ptr)->set_emission_shape((CPUParticles2D::EmissionShape)arg1_in);
}

int32_t godot_icall_CPUParticles2D_get_emission_shape_10c78dc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_emission_shape();
    return (int32_t)ret;
}

void godot_icall_CPUParticles2D_set_emission_sphere_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CPUParticles2D *>(ptr)->set_emission_sphere_radius(arg1_in);
}

void godot_icall_CPUParticles2D_get_emission_sphere_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_emission_sphere_radius();
    *arg_ret = (float)ret;
}

void godot_icall_CPUParticles2D_set_emission_rect_extents_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<CPUParticles2D *>(ptr)->set_emission_rect_extents(arg1_in);
}

void godot_icall_CPUParticles2D_get_emission_rect_extents_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_emission_rect_extents();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_CPUParticles2D_set_emission_points_3a3116bd(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolVector2Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg1);
    static_cast<CPUParticles2D *>(ptr)->set_emission_points(arg1_in);
}

MonoArray* godot_icall_CPUParticles2D_get_emission_points_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_emission_points();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_CPUParticles2D_set_emission_normals_3a3116bd(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolVector2Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg1);
    static_cast<CPUParticles2D *>(ptr)->set_emission_normals(arg1_in);
}

MonoArray* godot_icall_CPUParticles2D_get_emission_normals_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_emission_normals();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_CPUParticles2D_set_emission_colors_22e90985(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolColorArray arg1_in = GDMonoMarshal::mono_array_to_PoolColorArray(arg1);
    static_cast<CPUParticles2D *>(ptr)->set_emission_colors(arg1_in);
}

MonoArray* godot_icall_CPUParticles2D_get_emission_colors_e048d8e7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_emission_colors();
    return GDMonoMarshal::PoolColorArray_to_mono_array(ret);
}

void godot_icall_CPUParticles2D_get_gravity_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CPUParticles2D *>(ptr)->get_gravity();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_CPUParticles2D_set_gravity_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<CPUParticles2D *>(ptr)->set_gravity(arg1_in);
}

void godot_icall_CPUParticles2D_convert_from_particles_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CPUParticles2D *>(ptr)->convert_from_particles((Node*)arg1);
}

Object* godot_icall_CPUParticles2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CPUParticles2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CSGBox_set_width_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CSGBox *>(ptr)->set_width(arg1_in);
}

void godot_icall_CSGBox_get_width_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CSGBox *>(ptr)->get_width();
    *arg_ret = (float)ret;
}

void godot_icall_CSGBox_set_height_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CSGBox *>(ptr)->set_height(arg1_in);
}

void godot_icall_CSGBox_get_height_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CSGBox *>(ptr)->get_height();
    *arg_ret = (float)ret;
}

void godot_icall_CSGBox_set_depth_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CSGBox *>(ptr)->set_depth(arg1_in);
}

void godot_icall_CSGBox_get_depth_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CSGBox *>(ptr)->get_depth();
    *arg_ret = (float)ret;
}

void godot_icall_CSGBox_set_material_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CSGBox *>(ptr)->set_material(AutoRef(arg1));
}

MonoObject* godot_icall_CSGBox_get_material_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CSGBox *>(ptr)->get_material();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_CSGBox_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CSGBox")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_CSGCombiner_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CSGCombiner")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CSGCylinder_set_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CSGCylinder *>(ptr)->set_radius(arg1_in);
}

void godot_icall_CSGCylinder_get_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CSGCylinder *>(ptr)->get_radius();
    *arg_ret = (float)ret;
}

void godot_icall_CSGCylinder_set_height_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CSGCylinder *>(ptr)->set_height(arg1_in);
}

void godot_icall_CSGCylinder_get_height_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CSGCylinder *>(ptr)->get_height();
    *arg_ret = (float)ret;
}

void godot_icall_CSGCylinder_set_sides_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CSGCylinder *>(ptr)->set_sides(arg1_in);
}

int32_t godot_icall_CSGCylinder_get_sides_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CSGCylinder *>(ptr)->get_sides();
    return static_cast<int32_t>(ret);
}

void godot_icall_CSGCylinder_set_cone_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CSGCylinder *>(ptr)->set_cone(arg1_in);
}

MonoBoolean godot_icall_CSGCylinder_is_cone_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CSGCylinder *>(ptr)->is_cone();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CSGCylinder_set_material_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CSGCylinder *>(ptr)->set_material(AutoRef(arg1));
}

MonoObject* godot_icall_CSGCylinder_get_material_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CSGCylinder *>(ptr)->get_material();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CSGCylinder_set_smooth_faces_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CSGCylinder *>(ptr)->set_smooth_faces(arg1_in);
}

MonoBoolean godot_icall_CSGCylinder_get_smooth_faces_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CSGCylinder *>(ptr)->get_smooth_faces();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_CSGCylinder_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CSGCylinder")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CSGMesh_set_mesh_d5d30806(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CSGMesh *>(ptr)->set_mesh(AutoRef(arg1));
}

MonoObject* godot_icall_CSGMesh_get_mesh_1372d766(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CSGMesh *>(ptr)->get_mesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CSGMesh_set_material_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CSGMesh *>(ptr)->set_material(AutoRef(arg1));
}

MonoObject* godot_icall_CSGMesh_get_material_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CSGMesh *>(ptr)->get_material();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_CSGMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CSGMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CSGPolygon_set_polygon_b8a866ba(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    static_cast<CSGPolygon *>(ptr)->set_polygon(arg1_in);
}

MonoArray* godot_icall_CSGPolygon_get_polygon_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CSGPolygon *>(ptr)->get_polygon();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_CSGPolygon_set_mode_5d42f9e1(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CSGPolygon *>(ptr)->set_mode((CSGPolygon::Mode)arg1_in);
}

int32_t godot_icall_CSGPolygon_get_mode_26446cac(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CSGPolygon *>(ptr)->get_mode();
    return (int32_t)ret;
}

void godot_icall_CSGPolygon_set_depth_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CSGPolygon *>(ptr)->set_depth(arg1_in);
}

void godot_icall_CSGPolygon_get_depth_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CSGPolygon *>(ptr)->get_depth();
    *arg_ret = (float)ret;
}

void godot_icall_CSGPolygon_set_spin_degrees_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CSGPolygon *>(ptr)->set_spin_degrees(arg1_in);
}

void godot_icall_CSGPolygon_get_spin_degrees_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CSGPolygon *>(ptr)->get_spin_degrees();
    *arg_ret = (float)ret;
}

void godot_icall_CSGPolygon_set_spin_sides_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CSGPolygon *>(ptr)->set_spin_sides(arg1_in);
}

int32_t godot_icall_CSGPolygon_get_spin_sides_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CSGPolygon *>(ptr)->get_spin_sides();
    return static_cast<int32_t>(ret);
}

void godot_icall_CSGPolygon_set_path_node_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CSGPolygon *>(ptr)->set_path_node(*arg1);
}

NodePath* godot_icall_CSGPolygon_get_path_node_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CSGPolygon *>(ptr)->get_path_node();
    return memnew(NodePath(ret));
}

void godot_icall_CSGPolygon_set_path_interval_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CSGPolygon *>(ptr)->set_path_interval(arg1_in);
}

void godot_icall_CSGPolygon_get_path_interval_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CSGPolygon *>(ptr)->get_path_interval();
    *arg_ret = (float)ret;
}

void godot_icall_CSGPolygon_set_path_rotation_545b4963(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CSGPolygon *>(ptr)->set_path_rotation((CSGPolygon::PathRotation)arg1_in);
}

int32_t godot_icall_CSGPolygon_get_path_rotation_3cc3a1ae(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CSGPolygon *>(ptr)->get_path_rotation();
    return (int32_t)ret;
}

void godot_icall_CSGPolygon_set_path_local_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CSGPolygon *>(ptr)->set_path_local(arg1_in);
}

MonoBoolean godot_icall_CSGPolygon_is_path_local_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CSGPolygon *>(ptr)->is_path_local();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CSGPolygon_set_path_continuous_u_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CSGPolygon *>(ptr)->set_path_continuous_u(arg1_in);
}

MonoBoolean godot_icall_CSGPolygon_is_path_continuous_u_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CSGPolygon *>(ptr)->is_path_continuous_u();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CSGPolygon_set_path_joined_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CSGPolygon *>(ptr)->set_path_joined(arg1_in);
}

MonoBoolean godot_icall_CSGPolygon_is_path_joined_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CSGPolygon *>(ptr)->is_path_joined();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CSGPolygon_set_material_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CSGPolygon *>(ptr)->set_material(AutoRef(arg1));
}

MonoObject* godot_icall_CSGPolygon_get_material_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CSGPolygon *>(ptr)->get_material();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CSGPolygon_set_smooth_faces_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CSGPolygon *>(ptr)->set_smooth_faces(arg1_in);
}

MonoBoolean godot_icall_CSGPolygon_get_smooth_faces_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CSGPolygon *>(ptr)->get_smooth_faces();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_CSGPolygon_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CSGPolygon")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CSGPrimitive_set_invert_faces_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CSGPrimitive *>(ptr)->set_invert_faces(arg1_in);
}

MonoBoolean godot_icall_CSGPrimitive_is_inverting_faces_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CSGPrimitive *>(ptr)->is_inverting_faces();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_CSGShape_is_root_shape_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CSGShape *>(ptr)->is_root_shape();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CSGShape_set_operation_cd5dbaf8(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CSGShape *>(ptr)->set_operation((CSGShape::Operation)arg1_in);
}

int32_t godot_icall_CSGShape_get_operation_f9764c1b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CSGShape *>(ptr)->get_operation();
    return (int32_t)ret;
}

void godot_icall_CSGShape_set_snap_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CSGShape *>(ptr)->set_snap(arg1_in);
}

void godot_icall_CSGShape_get_snap_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CSGShape *>(ptr)->get_snap();
    *arg_ret = (float)ret;
}

void godot_icall_CSGShape_set_use_collision_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CSGShape *>(ptr)->set_use_collision(arg1_in);
}

MonoBoolean godot_icall_CSGShape_is_using_collision_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CSGShape *>(ptr)->is_using_collision();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CSGShape_set_collision_layer_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<CSGShape *>(ptr)->set_collision_layer(arg1_in);
}

uint32_t godot_icall_CSGShape_get_collision_layer_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<CSGShape *>(ptr)->get_collision_layer();
    return static_cast<uint32_t>(ret);
}

void godot_icall_CSGShape_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<CSGShape *>(ptr)->set_collision_mask(arg1_in);
}

uint32_t godot_icall_CSGShape_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<CSGShape *>(ptr)->get_collision_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_CSGShape_set_collision_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<CSGShape *>(ptr)->set_collision_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_CSGShape_get_collision_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<CSGShape *>(ptr)->get_collision_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CSGShape_set_collision_layer_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<CSGShape *>(ptr)->set_collision_layer_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_CSGShape_get_collision_layer_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<CSGShape *>(ptr)->get_collision_layer_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CSGShape_set_calculate_tangents_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CSGShape *>(ptr)->set_calculate_tangents(arg1_in);
}

MonoBoolean godot_icall_CSGShape_is_calculating_tangents_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CSGShape *>(ptr)->is_calculating_tangents();
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall_CSGShape_get_meshes_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CSGShape *>(ptr)->get_meshes();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_CSGSphere_set_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CSGSphere *>(ptr)->set_radius(arg1_in);
}

void godot_icall_CSGSphere_get_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CSGSphere *>(ptr)->get_radius();
    *arg_ret = (float)ret;
}

void godot_icall_CSGSphere_set_radial_segments_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CSGSphere *>(ptr)->set_radial_segments(arg1_in);
}

int32_t godot_icall_CSGSphere_get_radial_segments_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CSGSphere *>(ptr)->get_radial_segments();
    return static_cast<int32_t>(ret);
}

void godot_icall_CSGSphere_set_rings_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CSGSphere *>(ptr)->set_rings(arg1_in);
}

int32_t godot_icall_CSGSphere_get_rings_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CSGSphere *>(ptr)->get_rings();
    return static_cast<int32_t>(ret);
}

void godot_icall_CSGSphere_set_smooth_faces_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CSGSphere *>(ptr)->set_smooth_faces(arg1_in);
}

MonoBoolean godot_icall_CSGSphere_get_smooth_faces_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CSGSphere *>(ptr)->get_smooth_faces();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CSGSphere_set_material_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CSGSphere *>(ptr)->set_material(AutoRef(arg1));
}

MonoObject* godot_icall_CSGSphere_get_material_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CSGSphere *>(ptr)->get_material();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_CSGSphere_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CSGSphere")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CSGTorus_set_inner_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CSGTorus *>(ptr)->set_inner_radius(arg1_in);
}

void godot_icall_CSGTorus_get_inner_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CSGTorus *>(ptr)->get_inner_radius();
    *arg_ret = (float)ret;
}

void godot_icall_CSGTorus_set_outer_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CSGTorus *>(ptr)->set_outer_radius(arg1_in);
}

void godot_icall_CSGTorus_get_outer_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CSGTorus *>(ptr)->get_outer_radius();
    *arg_ret = (float)ret;
}

void godot_icall_CSGTorus_set_sides_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CSGTorus *>(ptr)->set_sides(arg1_in);
}

int32_t godot_icall_CSGTorus_get_sides_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CSGTorus *>(ptr)->get_sides();
    return static_cast<int32_t>(ret);
}

void godot_icall_CSGTorus_set_ring_sides_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CSGTorus *>(ptr)->set_ring_sides(arg1_in);
}

int32_t godot_icall_CSGTorus_get_ring_sides_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CSGTorus *>(ptr)->get_ring_sides();
    return static_cast<int32_t>(ret);
}

void godot_icall_CSGTorus_set_material_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CSGTorus *>(ptr)->set_material(AutoRef(arg1));
}

MonoObject* godot_icall_CSGTorus_get_material_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CSGTorus *>(ptr)->get_material();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CSGTorus_set_smooth_faces_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CSGTorus *>(ptr)->set_smooth_faces(arg1_in);
}

MonoBoolean godot_icall_CSGTorus_get_smooth_faces_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CSGTorus *>(ptr)->get_smooth_faces();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_CSGTorus_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CSGTorus")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoObject* godot_icall_CSharpScript_new_e5975f9d(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int vararg_length = mono_array_length(arg1);
    int total_length = 0 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg1, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[0 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    auto ret = static_cast<CSharpScript *>(ptr)->_new(call_args.data(), total_length, vcall_error);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

Object* godot_icall_CSharpScript_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CSharpScript")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Camera_project_ray_normal_af4cfa15(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Camera *>(ptr)->project_ray_normal(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Camera_project_local_ray_normal_af4cfa15(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Camera *>(ptr)->project_local_ray_normal(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Camera_project_ray_origin_af4cfa15(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Camera *>(ptr)->project_ray_origin(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Camera_unproject_position_af4cfa55(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    auto ret = static_cast<Camera *>(ptr)->unproject_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoBoolean godot_icall_Camera_is_position_behind_fba3d547(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    auto ret = static_cast<Camera *>(ptr)->is_position_behind(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Camera_project_position_436aef32(Object * ptr, GDMonoMarshal::M_Vector2* arg1, float* arg2, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<Camera *>(ptr)->project_position(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Camera_set_perspective_106d7437(Object * ptr, float* arg1, float* arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    static_cast<Camera *>(ptr)->set_perspective(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Camera_set_orthogonal_106d7437(Object * ptr, float* arg1, float* arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    static_cast<Camera *>(ptr)->set_orthogonal(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Camera_set_frustum_6524c12b(Object * ptr, float* arg1, GDMonoMarshal::M_Vector2* arg2, float* arg3, float* arg4) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    static_cast<Camera *>(ptr)->set_frustum(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_Camera_make_current_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Camera *>(ptr)->make_current();
}

void godot_icall_Camera_clear_current_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Camera *>(ptr)->clear_current(arg1_in);
}

void godot_icall_Camera_set_current_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Camera *>(ptr)->set_current(arg1_in);
}

MonoBoolean godot_icall_Camera_is_current_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Camera *>(ptr)->is_current();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Camera_get_camera_transform_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera *>(ptr)->get_camera_transform();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_Camera_get_fov_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera *>(ptr)->get_fov();
    *arg_ret = (float)ret;
}

void godot_icall_Camera_get_frustum_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera *>(ptr)->get_frustum_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Camera_get_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera *>(ptr)->get_size();
    *arg_ret = (float)ret;
}

void godot_icall_Camera_get_zfar_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera *>(ptr)->get_zfar();
    *arg_ret = (float)ret;
}

void godot_icall_Camera_get_znear_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera *>(ptr)->get_znear();
    *arg_ret = (float)ret;
}

void godot_icall_Camera_set_fov_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Camera *>(ptr)->set_fov(arg1_in);
}

void godot_icall_Camera_set_frustum_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Camera *>(ptr)->set_frustum_offset(arg1_in);
}

void godot_icall_Camera_set_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Camera *>(ptr)->set_size(arg1_in);
}

void godot_icall_Camera_set_zfar_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Camera *>(ptr)->set_zfar(arg1_in);
}

void godot_icall_Camera_set_znear_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Camera *>(ptr)->set_znear(arg1_in);
}

int32_t godot_icall_Camera_get_projection_88fcd902(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Camera *>(ptr)->get_projection();
    return (int32_t)ret;
}

void godot_icall_Camera_set_projection_a16bdaa7(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Camera *>(ptr)->set_projection((Camera::Projection)arg1_in);
}

void godot_icall_Camera_set_h_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Camera *>(ptr)->set_h_offset(arg1_in);
}

void godot_icall_Camera_get_h_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera *>(ptr)->get_h_offset();
    *arg_ret = (float)ret;
}

void godot_icall_Camera_set_v_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Camera *>(ptr)->set_v_offset(arg1_in);
}

void godot_icall_Camera_get_v_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera *>(ptr)->get_v_offset();
    *arg_ret = (float)ret;
}

void godot_icall_Camera_set_cull_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<Camera *>(ptr)->set_cull_mask(arg1_in);
}

uint32_t godot_icall_Camera_get_cull_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<Camera *>(ptr)->get_cull_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_Camera_set_environment_5a081814(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Camera *>(ptr)->set_environment(AutoRef(arg1));
}

MonoObject* godot_icall_Camera_get_environment_8929e758(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Camera *>(ptr)->get_environment();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Camera_set_keep_aspect_mode_5ba4721b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Camera *>(ptr)->set_keep_aspect_mode((Camera::KeepAspect)arg1_in);
}

int32_t godot_icall_Camera_get_keep_aspect_mode_fa75fc56(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Camera *>(ptr)->get_keep_aspect_mode();
    return (int32_t)ret;
}

void godot_icall_Camera_set_doppler_tracking_5f2987cf(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Camera *>(ptr)->set_doppler_tracking((Camera::DopplerTracking)arg1_in);
}

int32_t godot_icall_Camera_get_doppler_tracking_60c0809a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Camera *>(ptr)->get_doppler_tracking();
    return (int32_t)ret;
}

Array* godot_icall_Camera_get_frustum_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Camera *>(ptr)->get_frustum();
    return memnew(Array(Variant::from(ret)));
}

RID* godot_icall_Camera_get_camera_rid_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Camera *>(ptr)->get_camera_rid();
    return memnew(RID(ret));
}

void godot_icall_Camera_set_cull_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Camera *>(ptr)->set_cull_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_Camera_get_cull_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Camera *>(ptr)->get_cull_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_Camera_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Camera")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Camera2D_set_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Camera2D *>(ptr)->set_offset(arg1_in);
}

void godot_icall_Camera2D_get_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera2D *>(ptr)->get_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Camera2D_set_anchor_mode_bba4ca92(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Camera2D *>(ptr)->set_anchor_mode((Camera2D::AnchorMode)arg1_in);
}

int32_t godot_icall_Camera2D_get_anchor_mode_c519117d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Camera2D *>(ptr)->get_anchor_mode();
    return (int32_t)ret;
}

void godot_icall_Camera2D_set_rotating_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Camera2D *>(ptr)->set_rotating(arg1_in);
}

MonoBoolean godot_icall_Camera2D_is_rotating_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Camera2D *>(ptr)->is_rotating();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Camera2D_make_current_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Camera2D *>(ptr)->make_current();
}

void godot_icall_Camera2D_clear_current_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Camera2D *>(ptr)->clear_current();
}

void godot_icall_Camera2D_set_process_mode_e082b8b5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Camera2D *>(ptr)->set_process_mode((Camera2D::Camera2DProcessMode)arg1_in);
}

int32_t godot_icall_Camera2D_get_process_mode_1ea487b7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Camera2D *>(ptr)->get_process_mode();
    return (int32_t)ret;
}

void godot_icall_Camera2D__set_current_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Camera2D *>(ptr)->_set_current(arg1_in);
}

MonoBoolean godot_icall_Camera2D_is_current_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Camera2D *>(ptr)->is_current();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Camera2D_set_limit_d167c784(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Camera2D *>(ptr)->set_limit((Margin)arg1_in, arg2_in);
}

int32_t godot_icall_Camera2D_get_limit_bbd2c228(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Camera2D *>(ptr)->get_limit((Margin)arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Camera2D_set_limit_smoothing_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Camera2D *>(ptr)->set_limit_smoothing_enabled(arg1_in);
}

MonoBoolean godot_icall_Camera2D_is_limit_smoothing_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Camera2D *>(ptr)->is_limit_smoothing_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Camera2D_set_v_drag_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Camera2D *>(ptr)->set_v_drag_enabled(arg1_in);
}

MonoBoolean godot_icall_Camera2D_is_v_drag_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Camera2D *>(ptr)->is_v_drag_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Camera2D_set_h_drag_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Camera2D *>(ptr)->set_h_drag_enabled(arg1_in);
}

MonoBoolean godot_icall_Camera2D_is_h_drag_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Camera2D *>(ptr)->is_h_drag_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Camera2D_set_v_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Camera2D *>(ptr)->set_v_offset(arg1_in);
}

void godot_icall_Camera2D_get_v_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera2D *>(ptr)->get_v_offset();
    *arg_ret = (float)ret;
}

void godot_icall_Camera2D_set_h_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Camera2D *>(ptr)->set_h_offset(arg1_in);
}

void godot_icall_Camera2D_get_h_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera2D *>(ptr)->get_h_offset();
    *arg_ret = (float)ret;
}

void godot_icall_Camera2D_set_drag_margin_86b3589f(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Camera2D *>(ptr)->set_drag_margin((Margin)arg1_in, arg2_in);
}

void godot_icall_Camera2D_get_drag_margin_cb96d2bf(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Camera2D *>(ptr)->get_drag_margin((Margin)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Camera2D_get_camera_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera2D *>(ptr)->get_camera_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Camera2D_get_camera_screen_center_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera2D *>(ptr)->get_camera_screen_center();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Camera2D_set_zoom_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Camera2D *>(ptr)->set_zoom(arg1_in);
}

void godot_icall_Camera2D_get_zoom_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera2D *>(ptr)->get_zoom();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Camera2D_set_custom_viewport_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Camera2D *>(ptr)->set_custom_viewport((Node*)arg1);
}

MonoObject* godot_icall_Camera2D_get_custom_viewport_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Camera2D *>(ptr)->get_custom_viewport();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_Camera2D_set_follow_smoothing_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Camera2D *>(ptr)->set_follow_smoothing(arg1_in);
}

void godot_icall_Camera2D_get_follow_smoothing_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Camera2D *>(ptr)->get_follow_smoothing();
    *arg_ret = (float)ret;
}

void godot_icall_Camera2D_set_enable_follow_smoothing_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Camera2D *>(ptr)->set_enable_follow_smoothing(arg1_in);
}

MonoBoolean godot_icall_Camera2D_is_follow_smoothing_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Camera2D *>(ptr)->is_follow_smoothing_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Camera2D_force_update_scroll_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Camera2D *>(ptr)->force_update_scroll();
}

void godot_icall_Camera2D_reset_smoothing_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Camera2D *>(ptr)->reset_smoothing();
}

void godot_icall_Camera2D_align_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Camera2D *>(ptr)->align();
}

void godot_icall_Camera2D_set_screen_drawing_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Camera2D *>(ptr)->set_screen_drawing_enabled(arg1_in);
}

MonoBoolean godot_icall_Camera2D_is_screen_drawing_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Camera2D *>(ptr)->is_screen_drawing_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Camera2D_set_limit_drawing_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Camera2D *>(ptr)->set_limit_drawing_enabled(arg1_in);
}

MonoBoolean godot_icall_Camera2D_is_limit_drawing_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Camera2D *>(ptr)->is_limit_drawing_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Camera2D_set_margin_drawing_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Camera2D *>(ptr)->set_margin_drawing_enabled(arg1_in);
}

MonoBoolean godot_icall_Camera2D_is_margin_drawing_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Camera2D *>(ptr)->is_margin_drawing_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_Camera2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Camera2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_CameraFeed_get_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CameraFeed *>(ptr)->get_id();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_CameraFeed_get_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CameraFeed *>(ptr)->get_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_CameraFeed_is_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CameraFeed *>(ptr)->is_active();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CameraFeed_set_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CameraFeed *>(ptr)->set_active(arg1_in);
}

int32_t godot_icall_CameraFeed_get_position_ea1c3c3(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CameraFeed *>(ptr)->get_position();
    return (int32_t)ret;
}

void godot_icall_CameraFeed_get_transform_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CameraFeed *>(ptr)->get_transform();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_CameraFeed_set_transform_dfe2915f(Object * ptr, GDMonoMarshal::M_Transform2D* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    static_cast<CameraFeed *>(ptr)->set_transform(arg1_in);
}

Object* godot_icall_CameraFeed_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CameraFeed")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoObject* godot_icall_CameraServer_get_feed_10f953fe(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<CameraServer *>(ptr)->get_feed(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_CameraServer_get_feed_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CameraServer *>(ptr)->get_feed_count();
    return static_cast<int32_t>(ret);
}

Array* godot_icall_CameraServer_get_feeds_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CameraServer *>(ptr)->get_feeds();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_CameraServer_add_feed_587b6a20(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CameraServer *>(ptr)->add_feed(AutoRef(arg1));
}

void godot_icall_CameraServer_remove_feed_587b6a20(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CameraServer *>(ptr)->remove_feed(AutoRef(arg1));
}

Object* godot_icall_CameraServer_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("CameraServer");
}

void godot_icall_CameraTexture_set_camera_feed_id_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CameraTexture *>(ptr)->set_camera_feed_id(arg1_in);
}

int32_t godot_icall_CameraTexture_get_camera_feed_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CameraTexture *>(ptr)->get_camera_feed_id();
    return static_cast<int32_t>(ret);
}

void godot_icall_CameraTexture_set_which_feed_53fa9ccc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CameraTexture *>(ptr)->set_which_feed((CameraServer::FeedImage)arg1_in);
}

int32_t godot_icall_CameraTexture_get_which_feed_915c6ba0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CameraTexture *>(ptr)->get_which_feed();
    return (int32_t)ret;
}

void godot_icall_CameraTexture_set_camera_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CameraTexture *>(ptr)->set_camera_active(arg1_in);
}

MonoBoolean godot_icall_CameraTexture_get_camera_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CameraTexture *>(ptr)->get_camera_active();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_CameraTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CameraTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

RID* godot_icall_CanvasItem_get_canvas_item_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CanvasItem *>(ptr)->get_canvas_item();
    return memnew(RID(ret));
}

void godot_icall_CanvasItem_set_visible_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CanvasItem *>(ptr)->set_visible(arg1_in);
}

MonoBoolean godot_icall_CanvasItem_is_visible_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CanvasItem *>(ptr)->is_visible();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_CanvasItem_is_visible_in_tree_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CanvasItem *>(ptr)->is_visible_in_tree();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CanvasItem_show_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<CanvasItem *>(ptr)->show();
}

void godot_icall_CanvasItem_hide_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<CanvasItem *>(ptr)->hide();
}

void godot_icall_CanvasItem_update_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<CanvasItem *>(ptr)->update();
}

void godot_icall_CanvasItem_set_as_toplevel_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CanvasItem *>(ptr)->set_as_toplevel(arg1_in);
}

MonoBoolean godot_icall_CanvasItem_is_set_as_toplevel_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CanvasItem *>(ptr)->is_set_as_toplevel();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CanvasItem_set_light_mask_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CanvasItem *>(ptr)->set_light_mask(arg1_in);
}

int32_t godot_icall_CanvasItem_get_light_mask_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CanvasItem *>(ptr)->get_light_mask();
    return static_cast<int32_t>(ret);
}

void godot_icall_CanvasItem_set_modulate_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<CanvasItem *>(ptr)->set_modulate(arg1_in);
}

void godot_icall_CanvasItem_get_modulate_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasItem *>(ptr)->get_modulate();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_CanvasItem_set_self_modulate_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<CanvasItem *>(ptr)->set_self_modulate(arg1_in);
}

void godot_icall_CanvasItem_get_self_modulate_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasItem *>(ptr)->get_self_modulate();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_CanvasItem_set_draw_behind_parent_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CanvasItem *>(ptr)->set_draw_behind_parent(arg1_in);
}

MonoBoolean godot_icall_CanvasItem_is_draw_behind_parent_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CanvasItem *>(ptr)->is_draw_behind_parent_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CanvasItem__set_on_top_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CanvasItem *>(ptr)->_set_on_top(arg1_in);
}

MonoBoolean godot_icall_CanvasItem__is_on_top_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CanvasItem *>(ptr)->_is_on_top();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CanvasItem_draw_line_771a9ffa(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Color* arg3, float* arg4, MonoBoolean arg5) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Color arg3_in = MARSHALLED_IN(Color, arg3);
    float arg4_in = static_cast<float>(*arg4);
    bool arg5_in = static_cast<bool>(arg5);
    static_cast<CanvasItem *>(ptr)->draw_line(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

void godot_icall_CanvasItem_draw_polyline_1827a6ed(Object * ptr, MonoArray* arg1, GDMonoMarshal::M_Color* arg2, float* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    float arg3_in = static_cast<float>(*arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<CanvasItem *>(ptr)->draw_polyline(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_CanvasItem_draw_polyline_colors_23432b86(Object * ptr, MonoArray* arg1, MonoArray* arg2, float* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecColor(arg2);
    float arg3_in = static_cast<float>(*arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<CanvasItem *>(ptr)->draw_polyline_colors(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_CanvasItem_draw_arc_cadffc3d(Object * ptr, GDMonoMarshal::M_Vector2* arg1, float* arg2, float* arg3, float* arg4, int32_t arg5, GDMonoMarshal::M_Color* arg6, float* arg7, MonoBoolean arg8) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    Color arg6_in = MARSHALLED_IN(Color, arg6);
    float arg7_in = static_cast<float>(*arg7);
    bool arg8_in = static_cast<bool>(arg8);
    static_cast<CanvasItem *>(ptr)->draw_arc(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in, arg7_in, arg8_in);
}

void godot_icall_CanvasItem_draw_multiline_1827a6ed(Object * ptr, MonoArray* arg1, GDMonoMarshal::M_Color* arg2, float* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    float arg3_in = static_cast<float>(*arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<CanvasItem *>(ptr)->draw_multiline(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_CanvasItem_draw_multiline_colors_23432b86(Object * ptr, MonoArray* arg1, MonoArray* arg2, float* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecColor(arg2);
    float arg3_in = static_cast<float>(*arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<CanvasItem *>(ptr)->draw_multiline_colors(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_CanvasItem_draw_rect_36dc5966(Object * ptr, GDMonoMarshal::M_Rect2* arg1, GDMonoMarshal::M_Color* arg2, MonoBoolean arg3, float* arg4, MonoBoolean arg5) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    bool arg3_in = static_cast<bool>(arg3);
    float arg4_in = static_cast<float>(*arg4);
    bool arg5_in = static_cast<bool>(arg5);
    static_cast<CanvasItem *>(ptr)->draw_rect(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

void godot_icall_CanvasItem_draw_circle_51f0a17(Object * ptr, GDMonoMarshal::M_Vector2* arg1, float* arg2, GDMonoMarshal::M_Color* arg3) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    float arg2_in = static_cast<float>(*arg2);
    Color arg3_in = MARSHALLED_IN(Color, arg3);
    static_cast<CanvasItem *>(ptr)->draw_circle(arg1_in, arg2_in, arg3_in);
}

void godot_icall_CanvasItem_draw_texture_309be515(Object * ptr, Object * arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Color* arg3, Object * arg4) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Color arg3_in = MARSHALLED_IN(Color, arg3);
    static_cast<CanvasItem *>(ptr)->draw_texture(AutoRef(arg1), arg2_in, arg3_in, AutoRef(arg4));
}

void godot_icall_CanvasItem_draw_texture_rect_9417c5c7(Object * ptr, Object * arg1, GDMonoMarshal::M_Rect2* arg2, MonoBoolean arg3, GDMonoMarshal::M_Color* arg4, MonoBoolean arg5, Object * arg6) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    bool arg3_in = static_cast<bool>(arg3);
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    bool arg5_in = static_cast<bool>(arg5);
    static_cast<CanvasItem *>(ptr)->draw_texture_rect(AutoRef(arg1), arg2_in, arg3_in, arg4_in, arg5_in, AutoRef(arg6));
}

void godot_icall_CanvasItem_draw_texture_rect_region_11d263fb(Object * ptr, Object * arg1, GDMonoMarshal::M_Rect2* arg2, GDMonoMarshal::M_Rect2* arg3, GDMonoMarshal::M_Color* arg4, MonoBoolean arg5, Object * arg6, MonoBoolean arg7) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    Rect2 arg3_in = MARSHALLED_IN(Rect2, arg3);
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    bool arg5_in = static_cast<bool>(arg5);
    bool arg7_in = static_cast<bool>(arg7);
    static_cast<CanvasItem *>(ptr)->draw_texture_rect_region(AutoRef(arg1), arg2_in, arg3_in, arg4_in, arg5_in, AutoRef(arg6), arg7_in);
}

void godot_icall_CanvasItem_draw_style_box_bb7e1d49(Object * ptr, Object * arg1, GDMonoMarshal::M_Rect2* arg2) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    static_cast<CanvasItem *>(ptr)->draw_style_box(AutoRef(arg1), arg2_in);
}

void godot_icall_CanvasItem_draw_primitive_79ff6de2(Object * ptr, MonoArray* arg1, MonoArray* arg2, MonoArray* arg3, Object * arg4, float* arg5, Object * arg6) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    PoolColorArray arg2_in = GDMonoMarshal::mono_array_to_PoolColorArray(arg2);
    PoolVector2Array arg3_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg3);
    float arg5_in = static_cast<float>(*arg5);
    static_cast<CanvasItem *>(ptr)->draw_primitive(arg1_in, arg2_in, arg3_in, AutoRef(arg4), arg5_in, AutoRef(arg6));
}

void godot_icall_CanvasItem_draw_polygon_7e2c1116(Object * ptr, Array* arg1, MonoArray* arg2, MonoArray* arg3, Object * arg4, Object * arg5, MonoBoolean arg6) {
    ERR_FAIL_NULL(ptr);
    PoolColorArray arg2_in = GDMonoMarshal::mono_array_to_PoolColorArray(arg2);
    PoolVector2Array arg3_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg3);
    bool arg6_in = static_cast<bool>(arg6);
    static_cast<CanvasItem *>(ptr)->draw_polygon(Variant(*arg1).as<Vector<Vector2>>(), arg2_in, arg3_in, AutoRef(arg4), AutoRef(arg5), arg6_in);
}

void godot_icall_CanvasItem_draw_colored_polygon_e53fc01c(Object * ptr, Array* arg1, GDMonoMarshal::M_Color* arg2, MonoArray* arg3, Object * arg4, Object * arg5, MonoBoolean arg6) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    PoolVector2Array arg3_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg3);
    bool arg6_in = static_cast<bool>(arg6);
    static_cast<CanvasItem *>(ptr)->draw_colored_polygon(Variant(*arg1).as<Vector<Vector2>>(), arg2_in, arg3_in, AutoRef(arg4), AutoRef(arg5), arg6_in);
}

void godot_icall_CanvasItem_draw_string_fc035fd4(Object * ptr, Object * arg1, GDMonoMarshal::M_Vector2* arg2, MonoString* arg3, GDMonoMarshal::M_Color* arg4, int32_t arg5) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    TmpString<512> arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    static_cast<CanvasItem *>(ptr)->draw_string(AutoRef(arg1), arg2_in, arg3_in, arg4_in, arg5_in);
}

void godot_icall_CanvasItem_draw_char_85ef288e(Object * ptr, Object * arg1, GDMonoMarshal::M_Vector2* arg2, uint16_t arg3, uint16_t arg4, GDMonoMarshal::M_Color* arg5, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    uint16_t arg3_in = static_cast<uint16_t>(arg3);
    uint16_t arg4_in = static_cast<uint16_t>(arg4);
    Color arg5_in = MARSHALLED_IN(Color, arg5);
    auto ret = static_cast<CanvasItem *>(ptr)->draw_char(AutoRef(arg1), arg2_in, arg3_in, arg4_in, arg5_in);
    *arg_ret = (float)ret;
}

void godot_icall_CanvasItem_draw_mesh_93491e15(Object * ptr, Object * arg1, Object * arg2, Object * arg3, GDMonoMarshal::M_Transform2D* arg4, GDMonoMarshal::M_Color* arg5) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg4_in = MARSHALLED_IN(Transform2D, arg4);
    Color arg5_in = MARSHALLED_IN(Color, arg5);
    static_cast<CanvasItem *>(ptr)->draw_mesh(AutoRef(arg1), AutoRef(arg2), AutoRef(arg3), arg4_in, arg5_in);
}

void godot_icall_CanvasItem_draw_multimesh_11e9bc6a(Object * ptr, Object * arg1, Object * arg2, Object * arg3) {
    ERR_FAIL_NULL(ptr);
    static_cast<CanvasItem *>(ptr)->draw_multimesh(AutoRef(arg1), AutoRef(arg2), AutoRef(arg3));
}

void godot_icall_CanvasItem_draw_set_transform_b2021883(Object * ptr, GDMonoMarshal::M_Vector2* arg1, float* arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    float arg2_in = static_cast<float>(*arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<CanvasItem *>(ptr)->draw_set_transform(arg1_in, arg2_in, arg3_in);
}

void godot_icall_CanvasItem_draw_set_transform_matrix_dfe2915f(Object * ptr, GDMonoMarshal::M_Transform2D* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    static_cast<CanvasItem *>(ptr)->draw_set_transform_matrix(arg1_in);
}

void godot_icall_CanvasItem_get_transform_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasItem *>(ptr)->get_transform();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_CanvasItem_get_global_transform_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasItem *>(ptr)->get_global_transform();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_CanvasItem_get_global_transform_with_canvas_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasItem *>(ptr)->get_global_transform_with_canvas();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_CanvasItem_get_viewport_transform_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasItem *>(ptr)->get_viewport_transform();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_CanvasItem_get_viewport_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasItem *>(ptr)->get_viewport_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_CanvasItem_get_canvas_transform_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasItem *>(ptr)->get_canvas_transform();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_CanvasItem_get_local_mouse_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasItem *>(ptr)->get_local_mouse_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_CanvasItem_get_global_mouse_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasItem *>(ptr)->get_global_mouse_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

RID* godot_icall_CanvasItem_get_canvas_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CanvasItem *>(ptr)->get_canvas();
    return memnew(RID(ret));
}

MonoObject* godot_icall_CanvasItem_get_world_2d_84187b39(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CanvasItem *>(ptr)->get_world_2d();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CanvasItem_set_material_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CanvasItem *>(ptr)->set_material(AutoRef(arg1));
}

MonoObject* godot_icall_CanvasItem_get_material_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CanvasItem *>(ptr)->get_material();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CanvasItem_set_use_parent_material_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CanvasItem *>(ptr)->set_use_parent_material(arg1_in);
}

MonoBoolean godot_icall_CanvasItem_get_use_parent_material_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CanvasItem *>(ptr)->get_use_parent_material();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CanvasItem_set_notify_local_transform_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CanvasItem *>(ptr)->set_notify_local_transform(arg1_in);
}

MonoBoolean godot_icall_CanvasItem_is_local_transform_notification_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CanvasItem *>(ptr)->is_local_transform_notification_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CanvasItem_set_notify_transform_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CanvasItem *>(ptr)->set_notify_transform(arg1_in);
}

MonoBoolean godot_icall_CanvasItem_is_transform_notification_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CanvasItem *>(ptr)->is_transform_notification_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CanvasItem_force_update_transform_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<CanvasItem *>(ptr)->force_update_transform();
}

void godot_icall_CanvasItem_make_canvas_position_local_af4cfa54(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<CanvasItem *>(ptr)->make_canvas_position_local(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoObject* godot_icall_CanvasItem_make_input_local_20195f48(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CanvasItem *>(ptr)->make_input_local(AutoRef(arg1));
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CanvasItemMaterial_set_blend_mode_a00da937(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CanvasItemMaterial *>(ptr)->set_blend_mode((CanvasItemMaterial::BlendMode)arg1_in);
}

int32_t godot_icall_CanvasItemMaterial_get_blend_mode_d0caa552(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CanvasItemMaterial *>(ptr)->get_blend_mode();
    return (int32_t)ret;
}

void godot_icall_CanvasItemMaterial_set_light_mode_758f5f38(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CanvasItemMaterial *>(ptr)->set_light_mode((CanvasItemMaterial::LightMode)arg1_in);
}

int32_t godot_icall_CanvasItemMaterial_get_light_mode_2327c2db(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CanvasItemMaterial *>(ptr)->get_light_mode();
    return (int32_t)ret;
}

void godot_icall_CanvasItemMaterial_set_particles_animation_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CanvasItemMaterial *>(ptr)->set_particles_animation(arg1_in);
}

MonoBoolean godot_icall_CanvasItemMaterial_get_particles_animation_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CanvasItemMaterial *>(ptr)->get_particles_animation();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CanvasItemMaterial_set_particles_anim_h_frames_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CanvasItemMaterial *>(ptr)->set_particles_anim_h_frames(arg1_in);
}

int32_t godot_icall_CanvasItemMaterial_get_particles_anim_h_frames_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CanvasItemMaterial *>(ptr)->get_particles_anim_h_frames();
    return static_cast<int32_t>(ret);
}

void godot_icall_CanvasItemMaterial_set_particles_anim_v_frames_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CanvasItemMaterial *>(ptr)->set_particles_anim_v_frames(arg1_in);
}

int32_t godot_icall_CanvasItemMaterial_get_particles_anim_v_frames_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CanvasItemMaterial *>(ptr)->get_particles_anim_v_frames();
    return static_cast<int32_t>(ret);
}

void godot_icall_CanvasItemMaterial_set_particles_anim_loop_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CanvasItemMaterial *>(ptr)->set_particles_anim_loop(arg1_in);
}

MonoBoolean godot_icall_CanvasItemMaterial_get_particles_anim_loop_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CanvasItemMaterial *>(ptr)->get_particles_anim_loop();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_CanvasItemMaterial_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CanvasItemMaterial")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CanvasLayer_set_layer_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CanvasLayer *>(ptr)->set_layer(arg1_in);
}

int32_t godot_icall_CanvasLayer_get_layer_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CanvasLayer *>(ptr)->get_layer();
    return static_cast<int32_t>(ret);
}

void godot_icall_CanvasLayer_set_transform_dfe2915f(Object * ptr, GDMonoMarshal::M_Transform2D* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    static_cast<CanvasLayer *>(ptr)->set_transform(arg1_in);
}

void godot_icall_CanvasLayer_get_transform_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasLayer *>(ptr)->get_transform();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_CanvasLayer_set_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<CanvasLayer *>(ptr)->set_offset(arg1_in);
}

void godot_icall_CanvasLayer_get_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasLayer *>(ptr)->get_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_CanvasLayer_set_rotation_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CanvasLayer *>(ptr)->set_rotation(arg1_in);
}

void godot_icall_CanvasLayer_get_rotation_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasLayer *>(ptr)->get_rotation();
    *arg_ret = (float)ret;
}

void godot_icall_CanvasLayer_set_rotation_degrees_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CanvasLayer *>(ptr)->set_rotation_degrees(arg1_in);
}

void godot_icall_CanvasLayer_get_rotation_degrees_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasLayer *>(ptr)->get_rotation_degrees();
    *arg_ret = (float)ret;
}

void godot_icall_CanvasLayer_set_scale_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<CanvasLayer *>(ptr)->set_scale(arg1_in);
}

void godot_icall_CanvasLayer_get_scale_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasLayer *>(ptr)->get_scale();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_CanvasLayer_set_follow_viewport_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CanvasLayer *>(ptr)->set_follow_viewport(arg1_in);
}

MonoBoolean godot_icall_CanvasLayer_is_following_viewport_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CanvasLayer *>(ptr)->is_following_viewport();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CanvasLayer_set_follow_viewport_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CanvasLayer *>(ptr)->set_follow_viewport_scale(arg1_in);
}

void godot_icall_CanvasLayer_get_follow_viewport_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasLayer *>(ptr)->get_follow_viewport_scale();
    *arg_ret = (float)ret;
}

void godot_icall_CanvasLayer_set_custom_viewport_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CanvasLayer *>(ptr)->set_custom_viewport((Node*)arg1);
}

MonoObject* godot_icall_CanvasLayer_get_custom_viewport_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CanvasLayer *>(ptr)->get_custom_viewport();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

RID* godot_icall_CanvasLayer_get_canvas_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CanvasLayer *>(ptr)->get_canvas();
    return memnew(RID(ret));
}

Object* godot_icall_CanvasLayer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CanvasLayer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CanvasModulate_set_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<CanvasModulate *>(ptr)->set_color(arg1_in);
}

void godot_icall_CanvasModulate_get_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CanvasModulate *>(ptr)->get_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

Object* godot_icall_CanvasModulate_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CanvasModulate")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CapsuleMesh_set_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CapsuleMesh *>(ptr)->set_radius(arg1_in);
}

void godot_icall_CapsuleMesh_get_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CapsuleMesh *>(ptr)->get_radius();
    *arg_ret = (float)ret;
}

void godot_icall_CapsuleMesh_set_mid_height_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CapsuleMesh *>(ptr)->set_mid_height(arg1_in);
}

void godot_icall_CapsuleMesh_get_mid_height_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CapsuleMesh *>(ptr)->get_mid_height();
    *arg_ret = (float)ret;
}

void godot_icall_CapsuleMesh_set_radial_segments_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CapsuleMesh *>(ptr)->set_radial_segments(arg1_in);
}

int32_t godot_icall_CapsuleMesh_get_radial_segments_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CapsuleMesh *>(ptr)->get_radial_segments();
    return static_cast<int32_t>(ret);
}

void godot_icall_CapsuleMesh_set_rings_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CapsuleMesh *>(ptr)->set_rings(arg1_in);
}

int32_t godot_icall_CapsuleMesh_get_rings_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CapsuleMesh *>(ptr)->get_rings();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_CapsuleMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CapsuleMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CapsuleShape_set_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CapsuleShape *>(ptr)->set_radius(arg1_in);
}

void godot_icall_CapsuleShape_get_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CapsuleShape *>(ptr)->get_radius();
    *arg_ret = (float)ret;
}

void godot_icall_CapsuleShape_set_height_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CapsuleShape *>(ptr)->set_height(arg1_in);
}

void godot_icall_CapsuleShape_get_height_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CapsuleShape *>(ptr)->get_height();
    *arg_ret = (float)ret;
}

Object* godot_icall_CapsuleShape_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CapsuleShape")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CapsuleShape2D_set_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CapsuleShape2D *>(ptr)->set_radius(arg1_in);
}

void godot_icall_CapsuleShape2D_get_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CapsuleShape2D *>(ptr)->get_radius();
    *arg_ret = (float)ret;
}

void godot_icall_CapsuleShape2D_set_height_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CapsuleShape2D *>(ptr)->set_height(arg1_in);
}

void godot_icall_CapsuleShape2D_get_height_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CapsuleShape2D *>(ptr)->get_height();
    *arg_ret = (float)ret;
}

Object* godot_icall_CapsuleShape2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CapsuleShape2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CenterContainer_set_use_top_left_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CenterContainer *>(ptr)->set_use_top_left(arg1_in);
}

MonoBoolean godot_icall_CenterContainer_is_using_top_left_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CenterContainer *>(ptr)->is_using_top_left();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_CenterContainer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CenterContainer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CharFXTransform_get_relative_index_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CharFXTransform *>(ptr)->get_relative_index();
    *arg_ret = (uint64_t)ret;
}

void godot_icall_CharFXTransform_set_relative_index_9d9e6424(Object * ptr, uint64_t* arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = static_cast<int64_t>(*arg1);
    static_cast<CharFXTransform *>(ptr)->set_relative_index(arg1_in);
}

void godot_icall_CharFXTransform_get_absolute_index_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CharFXTransform *>(ptr)->get_absolute_index();
    *arg_ret = (uint64_t)ret;
}

void godot_icall_CharFXTransform_set_absolute_index_9d9e6424(Object * ptr, uint64_t* arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = static_cast<int64_t>(*arg1);
    static_cast<CharFXTransform *>(ptr)->set_absolute_index(arg1_in);
}

void godot_icall_CharFXTransform_get_elapsed_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CharFXTransform *>(ptr)->get_elapsed_time();
    *arg_ret = (float)ret;
}

void godot_icall_CharFXTransform_set_elapsed_time_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CharFXTransform *>(ptr)->set_elapsed_time(arg1_in);
}

MonoBoolean godot_icall_CharFXTransform_is_visible_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CharFXTransform *>(ptr)->is_visible();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CharFXTransform_set_visibility_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CharFXTransform *>(ptr)->set_visibility(arg1_in);
}

void godot_icall_CharFXTransform_get_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CharFXTransform *>(ptr)->get_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_CharFXTransform_set_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<CharFXTransform *>(ptr)->set_offset(arg1_in);
}

void godot_icall_CharFXTransform_get_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CharFXTransform *>(ptr)->get_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_CharFXTransform_set_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<CharFXTransform *>(ptr)->set_color(arg1_in);
}

Dictionary* godot_icall_CharFXTransform_get_environment_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CharFXTransform *>(ptr)->get_environment();
    return memnew(Dictionary(ret));
}

void godot_icall_CharFXTransform_set_environment_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CharFXTransform *>(ptr)->set_environment(*arg1);
}

int32_t godot_icall_CharFXTransform_get_character_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CharFXTransform *>(ptr)->get_character();
    return static_cast<int32_t>(ret);
}

void godot_icall_CharFXTransform_set_character_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CharFXTransform *>(ptr)->set_character(arg1_in);
}

Object* godot_icall_CharFXTransform_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CharFXTransform")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_CheckBox_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CheckBox")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_CheckButton_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CheckButton")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CircleShape2D_set_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CircleShape2D *>(ptr)->set_radius(arg1_in);
}

void godot_icall_CircleShape2D_get_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CircleShape2D *>(ptr)->get_radius();
    *arg_ret = (float)ret;
}

Object* godot_icall_CircleShape2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CircleShape2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ClippedCamera_set_margin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ClippedCamera *>(ptr)->set_margin(arg1_in);
}

void godot_icall_ClippedCamera_get_margin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ClippedCamera *>(ptr)->get_margin();
    *arg_ret = (float)ret;
}

void godot_icall_ClippedCamera_set_process_mode_2429f099(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<ClippedCamera *>(ptr)->set_process_mode((ClippedCamera::ProcessMode)arg1_in);
}

int32_t godot_icall_ClippedCamera_get_process_mode_8cbd2c34(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ClippedCamera *>(ptr)->get_process_mode();
    return (int32_t)ret;
}

void godot_icall_ClippedCamera_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<ClippedCamera *>(ptr)->set_collision_mask(arg1_in);
}

uint32_t godot_icall_ClippedCamera_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<ClippedCamera *>(ptr)->get_collision_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_ClippedCamera_set_collision_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<ClippedCamera *>(ptr)->set_collision_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_ClippedCamera_get_collision_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ClippedCamera *>(ptr)->get_collision_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ClippedCamera_add_exception_rid_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ClippedCamera *>(ptr)->add_exception_rid(*arg1);
}

void godot_icall_ClippedCamera_add_exception_ad798950(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ClippedCamera *>(ptr)->add_exception((Object*)arg1);
}

void godot_icall_ClippedCamera_remove_exception_rid_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ClippedCamera *>(ptr)->remove_exception_rid(*arg1);
}

void godot_icall_ClippedCamera_remove_exception_ad798950(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ClippedCamera *>(ptr)->remove_exception((Object*)arg1);
}

void godot_icall_ClippedCamera_set_clip_to_areas_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ClippedCamera *>(ptr)->set_clip_to_areas(arg1_in);
}

MonoBoolean godot_icall_ClippedCamera_is_clip_to_areas_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ClippedCamera *>(ptr)->is_clip_to_areas_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ClippedCamera_get_clip_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ClippedCamera *>(ptr)->get_clip_offset();
    *arg_ret = (float)ret;
}

void godot_icall_ClippedCamera_set_clip_to_bodies_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ClippedCamera *>(ptr)->set_clip_to_bodies(arg1_in);
}

MonoBoolean godot_icall_ClippedCamera_is_clip_to_bodies_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ClippedCamera *>(ptr)->is_clip_to_bodies_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ClippedCamera_clear_exceptions_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<ClippedCamera *>(ptr)->clear_exceptions();
}

Object* godot_icall_ClippedCamera_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ClippedCamera")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CollisionObject_set_ray_pickable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CollisionObject *>(ptr)->set_ray_pickable(arg1_in);
}

MonoBoolean godot_icall_CollisionObject_is_ray_pickable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CollisionObject *>(ptr)->is_ray_pickable();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CollisionObject_set_capture_input_on_drag_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CollisionObject *>(ptr)->set_capture_input_on_drag(arg1_in);
}

MonoBoolean godot_icall_CollisionObject_get_capture_input_on_drag_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CollisionObject *>(ptr)->get_capture_input_on_drag();
    return static_cast<MonoBoolean>(ret);
}

RID* godot_icall_CollisionObject_get_rid_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CollisionObject *>(ptr)->get_rid();
    return memnew(RID(ret));
}

uint32_t godot_icall_CollisionObject_create_shape_owner_16add217(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<CollisionObject *>(ptr)->create_shape_owner((Object*)arg1);
    return static_cast<uint32_t>(ret);
}

void godot_icall_CollisionObject_remove_shape_owner_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<CollisionObject *>(ptr)->remove_shape_owner(arg1_in);
}

Array* godot_icall_CollisionObject_get_shape_owners_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CollisionObject *>(ptr)->_get_shape_owners();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_CollisionObject_shape_owner_set_transform_9412c56e(Object * ptr, uint32_t arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<CollisionObject *>(ptr)->shape_owner_set_transform(arg1_in, arg2_in);
}

void godot_icall_CollisionObject_shape_owner_get_transform_b92094ef(Object * ptr, uint32_t arg1, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    auto ret = static_cast<CollisionObject *>(ptr)->shape_owner_get_transform(arg1_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

MonoObject* godot_icall_CollisionObject_shape_owner_get_owner_5b891387(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    auto ret = static_cast<CollisionObject *>(ptr)->shape_owner_get_owner(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_CollisionObject_shape_owner_set_disabled_5111c220(Object * ptr, uint32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<CollisionObject *>(ptr)->shape_owner_set_disabled(arg1_in, arg2_in);
}

MonoBoolean godot_icall_CollisionObject_is_shape_owner_disabled_242501fd(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    auto ret = static_cast<CollisionObject *>(ptr)->is_shape_owner_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CollisionObject_shape_owner_add_shape_4d99221(Object * ptr, uint32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<CollisionObject *>(ptr)->shape_owner_add_shape(arg1_in, AutoRef(arg2));
}

int32_t godot_icall_CollisionObject_shape_owner_get_shape_count_c289d68a(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    auto ret = static_cast<CollisionObject *>(ptr)->shape_owner_get_shape_count(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_CollisionObject_shape_owner_get_shape_ea16b84(Object * ptr, uint32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<CollisionObject *>(ptr)->shape_owner_get_shape(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_CollisionObject_shape_owner_get_shape_index_5251d601(Object * ptr, uint32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<CollisionObject *>(ptr)->shape_owner_get_shape_index(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_CollisionObject_shape_owner_remove_shape_e86fd299(Object * ptr, uint32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<CollisionObject *>(ptr)->shape_owner_remove_shape(arg1_in, arg2_in);
}

void godot_icall_CollisionObject_shape_owner_clear_shapes_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<CollisionObject *>(ptr)->shape_owner_clear_shapes(arg1_in);
}

uint32_t godot_icall_CollisionObject_shape_find_owner_52dccd8b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<CollisionObject *>(ptr)->shape_find_owner(arg1_in);
    return static_cast<uint32_t>(ret);
}

RID* godot_icall_CollisionObject2D_get_rid_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CollisionObject2D *>(ptr)->get_rid();
    return memnew(RID(ret));
}

void godot_icall_CollisionObject2D_set_pickable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CollisionObject2D *>(ptr)->set_pickable(arg1_in);
}

MonoBoolean godot_icall_CollisionObject2D_is_pickable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CollisionObject2D *>(ptr)->is_pickable();
    return static_cast<MonoBoolean>(ret);
}

uint32_t godot_icall_CollisionObject2D_create_shape_owner_16add217(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<CollisionObject2D *>(ptr)->create_shape_owner((Object*)arg1);
    return static_cast<uint32_t>(ret);
}

void godot_icall_CollisionObject2D_remove_shape_owner_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<CollisionObject2D *>(ptr)->remove_shape_owner(arg1_in);
}

Array* godot_icall_CollisionObject2D_get_shape_owners_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CollisionObject2D *>(ptr)->_get_shape_owners();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_CollisionObject2D_shape_owner_set_transform_fdabd1fc(Object * ptr, uint32_t arg1, GDMonoMarshal::M_Transform2D* arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    Transform2D arg2_in = MARSHALLED_IN(Transform2D, arg2);
    static_cast<CollisionObject2D *>(ptr)->shape_owner_set_transform(arg1_in, arg2_in);
}

void godot_icall_CollisionObject2D_shape_owner_get_transform_4a357fdc(Object * ptr, uint32_t arg1, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    auto ret = static_cast<CollisionObject2D *>(ptr)->shape_owner_get_transform(arg1_in);
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

MonoObject* godot_icall_CollisionObject2D_shape_owner_get_owner_5b891387(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    auto ret = static_cast<CollisionObject2D *>(ptr)->shape_owner_get_owner(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_CollisionObject2D_shape_owner_set_disabled_5111c220(Object * ptr, uint32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<CollisionObject2D *>(ptr)->shape_owner_set_disabled(arg1_in, arg2_in);
}

MonoBoolean godot_icall_CollisionObject2D_is_shape_owner_disabled_242501fd(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    auto ret = static_cast<CollisionObject2D *>(ptr)->is_shape_owner_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CollisionObject2D_shape_owner_set_one_way_collision_5111c220(Object * ptr, uint32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<CollisionObject2D *>(ptr)->shape_owner_set_one_way_collision(arg1_in, arg2_in);
}

MonoBoolean godot_icall_CollisionObject2D_is_shape_owner_one_way_collision_enabled_242501fd(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    auto ret = static_cast<CollisionObject2D *>(ptr)->is_shape_owner_one_way_collision_enabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CollisionObject2D_shape_owner_set_one_way_collision_margin_3b334990(Object * ptr, uint32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<CollisionObject2D *>(ptr)->shape_owner_set_one_way_collision_margin(arg1_in, arg2_in);
}

void godot_icall_CollisionObject2D_get_shape_owner_one_way_collision_margin_f32dc711(Object * ptr, uint32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    auto ret = static_cast<CollisionObject2D *>(ptr)->get_shape_owner_one_way_collision_margin(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_CollisionObject2D_shape_owner_add_shape_ad9c187f(Object * ptr, uint32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<CollisionObject2D *>(ptr)->shape_owner_add_shape(arg1_in, AutoRef(arg2));
}

int32_t godot_icall_CollisionObject2D_shape_owner_get_shape_count_c289d68a(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    auto ret = static_cast<CollisionObject2D *>(ptr)->shape_owner_get_shape_count(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_CollisionObject2D_shape_owner_get_shape_15c778dd(Object * ptr, uint32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<CollisionObject2D *>(ptr)->shape_owner_get_shape(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_CollisionObject2D_shape_owner_get_shape_index_5251d601(Object * ptr, uint32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<CollisionObject2D *>(ptr)->shape_owner_get_shape_index(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_CollisionObject2D_shape_owner_remove_shape_e86fd299(Object * ptr, uint32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<CollisionObject2D *>(ptr)->shape_owner_remove_shape(arg1_in, arg2_in);
}

void godot_icall_CollisionObject2D_shape_owner_clear_shapes_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<CollisionObject2D *>(ptr)->shape_owner_clear_shapes(arg1_in);
}

uint32_t godot_icall_CollisionObject2D_shape_find_owner_52dccd8b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<CollisionObject2D *>(ptr)->shape_find_owner(arg1_in);
    return static_cast<uint32_t>(ret);
}

void godot_icall_CollisionPolygon_set_depth_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CollisionPolygon *>(ptr)->set_depth(arg1_in);
}

void godot_icall_CollisionPolygon_get_depth_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CollisionPolygon *>(ptr)->get_depth();
    *arg_ret = (float)ret;
}

void godot_icall_CollisionPolygon_set_polygon_b8a866ba(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    static_cast<CollisionPolygon *>(ptr)->set_polygon(arg1_in);
}

MonoArray* godot_icall_CollisionPolygon_get_polygon_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CollisionPolygon *>(ptr)->get_polygon();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_CollisionPolygon_set_disabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CollisionPolygon *>(ptr)->set_disabled(arg1_in);
}

MonoBoolean godot_icall_CollisionPolygon_is_disabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CollisionPolygon *>(ptr)->is_disabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_CollisionPolygon_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CollisionPolygon")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CollisionPolygon2D_set_polygon_b8a866ba(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    static_cast<CollisionPolygon2D *>(ptr)->set_polygon(arg1_in);
}

MonoArray* godot_icall_CollisionPolygon2D_get_polygon_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CollisionPolygon2D *>(ptr)->get_polygon();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_CollisionPolygon2D_set_build_mode_feac42ae(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CollisionPolygon2D *>(ptr)->set_build_mode((CollisionPolygon2D::BuildMode)arg1_in);
}

int32_t godot_icall_CollisionPolygon2D_get_build_mode_df5c6729(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CollisionPolygon2D *>(ptr)->get_build_mode();
    return (int32_t)ret;
}

void godot_icall_CollisionPolygon2D_set_disabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CollisionPolygon2D *>(ptr)->set_disabled(arg1_in);
}

MonoBoolean godot_icall_CollisionPolygon2D_is_disabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CollisionPolygon2D *>(ptr)->is_disabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CollisionPolygon2D_set_one_way_collision_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CollisionPolygon2D *>(ptr)->set_one_way_collision(arg1_in);
}

MonoBoolean godot_icall_CollisionPolygon2D_is_one_way_collision_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CollisionPolygon2D *>(ptr)->is_one_way_collision_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CollisionPolygon2D_set_one_way_collision_margin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CollisionPolygon2D *>(ptr)->set_one_way_collision_margin(arg1_in);
}

void godot_icall_CollisionPolygon2D_get_one_way_collision_margin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CollisionPolygon2D *>(ptr)->get_one_way_collision_margin();
    *arg_ret = (float)ret;
}

Object* godot_icall_CollisionPolygon2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CollisionPolygon2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CollisionShape_resource_changed_7ce53eb(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CollisionShape *>(ptr)->resource_changed(AutoRef(arg1));
}

void godot_icall_CollisionShape_set_shape_f51cd014(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CollisionShape *>(ptr)->set_shape(AutoRef(arg1));
}

MonoObject* godot_icall_CollisionShape_get_shape_34362f58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CollisionShape *>(ptr)->get_shape();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CollisionShape_set_disabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CollisionShape *>(ptr)->set_disabled(arg1_in);
}

MonoBoolean godot_icall_CollisionShape_is_disabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CollisionShape *>(ptr)->is_disabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CollisionShape_make_convex_from_brothers_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<CollisionShape *>(ptr)->make_convex_from_brothers();
}

Object* godot_icall_CollisionShape_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CollisionShape")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CollisionShape2D_set_shape_2fd85eda(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CollisionShape2D *>(ptr)->set_shape(AutoRef(arg1));
}

MonoObject* godot_icall_CollisionShape2D_get_shape_dd79a98a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CollisionShape2D *>(ptr)->get_shape();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CollisionShape2D_set_disabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CollisionShape2D *>(ptr)->set_disabled(arg1_in);
}

MonoBoolean godot_icall_CollisionShape2D_is_disabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CollisionShape2D *>(ptr)->is_disabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CollisionShape2D_set_one_way_collision_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<CollisionShape2D *>(ptr)->set_one_way_collision(arg1_in);
}

MonoBoolean godot_icall_CollisionShape2D_is_one_way_collision_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<CollisionShape2D *>(ptr)->is_one_way_collision_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_CollisionShape2D_set_one_way_collision_margin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CollisionShape2D *>(ptr)->set_one_way_collision_margin(arg1_in);
}

void godot_icall_CollisionShape2D_get_one_way_collision_margin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CollisionShape2D *>(ptr)->get_one_way_collision_margin();
    *arg_ret = (float)ret;
}

Object* godot_icall_CollisionShape2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CollisionShape2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ColorPicker_set_pick_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ColorPicker *>(ptr)->set_pick_color(arg1_in);
}

void godot_icall_ColorPicker_get_pick_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ColorPicker *>(ptr)->get_pick_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_ColorPicker_set_hsv_mode_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ColorPicker *>(ptr)->set_hsv_mode(arg1_in);
}

MonoBoolean godot_icall_ColorPicker_is_hsv_mode_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ColorPicker *>(ptr)->is_hsv_mode();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ColorPicker_set_raw_mode_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ColorPicker *>(ptr)->set_raw_mode(arg1_in);
}

MonoBoolean godot_icall_ColorPicker_is_raw_mode_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ColorPicker *>(ptr)->is_raw_mode();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ColorPicker_set_deferred_mode_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ColorPicker *>(ptr)->set_deferred_mode(arg1_in);
}

MonoBoolean godot_icall_ColorPicker_is_deferred_mode_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ColorPicker *>(ptr)->is_deferred_mode();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ColorPicker_set_edit_alpha_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ColorPicker *>(ptr)->set_edit_alpha(arg1_in);
}

MonoBoolean godot_icall_ColorPicker_is_editing_alpha_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ColorPicker *>(ptr)->is_editing_alpha();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ColorPicker_set_presets_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ColorPicker *>(ptr)->set_presets_enabled(arg1_in);
}

MonoBoolean godot_icall_ColorPicker_are_presets_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ColorPicker *>(ptr)->are_presets_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ColorPicker_set_presets_visible_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ColorPicker *>(ptr)->set_presets_visible(arg1_in);
}

MonoBoolean godot_icall_ColorPicker_are_presets_visible_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ColorPicker *>(ptr)->are_presets_visible();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ColorPicker_add_preset_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ColorPicker *>(ptr)->add_preset(arg1_in);
}

void godot_icall_ColorPicker_erase_preset_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ColorPicker *>(ptr)->erase_preset(arg1_in);
}

MonoArray* godot_icall_ColorPicker_get_presets_e048d8e7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ColorPicker *>(ptr)->get_presets();
    return GDMonoMarshal::PoolColorArray_to_mono_array(ret);
}

Object* godot_icall_ColorPicker_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ColorPicker")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ColorPickerButton_set_pick_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ColorPickerButton *>(ptr)->set_pick_color(arg1_in);
}

void godot_icall_ColorPickerButton_get_pick_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ColorPickerButton *>(ptr)->get_pick_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

MonoObject* godot_icall_ColorPickerButton_get_picker_14ab49ac(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ColorPickerButton *>(ptr)->get_picker();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_ColorPickerButton_get_popup_3384f56d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ColorPickerButton *>(ptr)->get_popup();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_ColorPickerButton_set_edit_alpha_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ColorPickerButton *>(ptr)->set_edit_alpha(arg1_in);
}

MonoBoolean godot_icall_ColorPickerButton_is_editing_alpha_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ColorPickerButton *>(ptr)->is_editing_alpha();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_ColorPickerButton_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ColorPickerButton")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ColorRect_set_frame_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ColorRect *>(ptr)->set_frame_color(arg1_in);
}

void godot_icall_ColorRect_get_frame_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ColorRect *>(ptr)->get_frame_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

Object* godot_icall_ColorRect_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ColorRect")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ConcavePolygonShape_set_faces_88c6a314(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolVector3Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector3Array(arg1);
    static_cast<ConcavePolygonShape *>(ptr)->set_faces(arg1_in);
}

MonoArray* godot_icall_ConcavePolygonShape_get_faces_36607e58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ConcavePolygonShape *>(ptr)->get_faces();
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

Object* godot_icall_ConcavePolygonShape_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ConcavePolygonShape")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ConcavePolygonShape2D_set_segments_3a3116bd(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolVector2Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg1);
    static_cast<ConcavePolygonShape2D *>(ptr)->set_segments(arg1_in);
}

MonoArray* godot_icall_ConcavePolygonShape2D_get_segments_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ConcavePolygonShape2D *>(ptr)->get_segments();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

Object* godot_icall_ConcavePolygonShape2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ConcavePolygonShape2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ConeTwistJoint_set_param_6f26d559(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<ConeTwistJoint *>(ptr)->set_param((ConeTwistJoint::Param)arg1_in, arg2_in);
}

void godot_icall_ConeTwistJoint_get_param_63b80b0(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<ConeTwistJoint *>(ptr)->get_param((ConeTwistJoint::Param)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_ConeTwistJoint__set_swing_span_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ConeTwistJoint *>(ptr)->_set_swing_span(arg1_in);
}

void godot_icall_ConeTwistJoint__get_swing_span_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ConeTwistJoint *>(ptr)->_get_swing_span();
    *arg_ret = (float)ret;
}

void godot_icall_ConeTwistJoint__set_twist_span_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ConeTwistJoint *>(ptr)->_set_twist_span(arg1_in);
}

void godot_icall_ConeTwistJoint__get_twist_span_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ConeTwistJoint *>(ptr)->_get_twist_span();
    *arg_ret = (float)ret;
}

Object* godot_icall_ConeTwistJoint_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ConeTwistJoint")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ConfigFile_set_value_5e75b9e1(Object * ptr, MonoString* arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<ConfigFile *>(ptr)->set_value(arg1_in, arg2_in, arg3_in);
}

MonoObject* godot_icall_ConfigFile_get_value_373d864b(Object * ptr, MonoString* arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    auto ret = static_cast<ConfigFile *>(ptr)->get_value(arg1_in, arg2_in, arg3_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoBoolean godot_icall_ConfigFile_has_section_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ConfigFile *>(ptr)->has_section(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_ConfigFile_has_section_key_cdeda881(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<ConfigFile *>(ptr)->has_section_key(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoArray* godot_icall_ConfigFile_get_sections_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ConfigFile *>(ptr)->get_sections();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

MonoArray* godot_icall_ConfigFile_get_section_keys_82ee0a94(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ConfigFile *>(ptr)->get_section_keys(arg1_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall_ConfigFile_erase_section_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<ConfigFile *>(ptr)->erase_section(arg1_in);
}

void godot_icall_ConfigFile_erase_section_key_fc93f18d(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<ConfigFile *>(ptr)->erase_section_key(arg1_in, arg2_in);
}

int32_t godot_icall_ConfigFile_load_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ConfigFile *>(ptr)->load(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_ConfigFile_parse_73262d91(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<ConfigFile *>(ptr)->parse(eastl::move(arg1_in));
    return (int32_t)ret;
}

int32_t godot_icall_ConfigFile_save_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ConfigFile *>(ptr)->save(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_ConfigFile_load_encrypted_c6b9da7a(Object * ptr, MonoString* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecByte(arg2);
    auto ret = static_cast<ConfigFile *>(ptr)->load_encrypted(arg1_in, arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall_ConfigFile_load_encrypted_pass_ce7ee84(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<ConfigFile *>(ptr)->load_encrypted_pass(arg1_in, arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall_ConfigFile_save_encrypted_c6b9da7a(Object * ptr, MonoString* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecByte(arg2);
    auto ret = static_cast<ConfigFile *>(ptr)->save_encrypted(arg1_in, arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall_ConfigFile_save_encrypted_pass_ce7ee84(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<ConfigFile *>(ptr)->save_encrypted_pass(arg1_in, arg2_in);
    return (int32_t)ret;
}

Object* godot_icall_ConfigFile_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ConfigFile")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoObject* godot_icall_ConfirmationDialog_get_cancel_e2789eb5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ConfirmationDialog *>(ptr)->get_cancel();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Object* godot_icall_ConfirmationDialog_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ConfirmationDialog")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Container_queue_sort_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Container *>(ptr)->queue_sort();
}

void godot_icall_Container_fit_child_in_rect_b5b9762f(Object * ptr, Object * arg1, GDMonoMarshal::M_Rect2* arg2) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    static_cast<Container *>(ptr)->fit_child_in_rect((Control*)arg1, arg2_in);
}

Object* godot_icall_Container_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Container")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Control_accept_event_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Control *>(ptr)->accept_event();
}

void godot_icall_Control_get_minimum_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_minimum_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Control_get_combined_minimum_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_combined_minimum_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Control_set_anchors_preset_ee03d5ab(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Control *>(ptr)->set_anchors_preset((Control::LayoutPreset)arg1_in, arg2_in);
}

void godot_icall_Control_set_margins_preset_585d3f2b(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    int64_t arg2_in = (int64_t)arg2;
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<Control *>(ptr)->set_margins_preset((Control::LayoutPreset)arg1_in, (Control::LayoutPresetMode)arg2_in, arg3_in);
}

void godot_icall_Control_set_anchors_and_margins_preset_585d3f2b(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    int64_t arg2_in = (int64_t)arg2;
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<Control *>(ptr)->set_anchors_and_margins_preset((Control::LayoutPreset)arg1_in, (Control::LayoutPresetMode)arg2_in, arg3_in);
}

void godot_icall_Control__set_anchor_86b3589f(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Control *>(ptr)->_set_anchor((Margin)arg1_in, arg2_in);
}

void godot_icall_Control_set_anchor_8dd7d84d(Object * ptr, int32_t arg1, float* arg2, MonoBoolean arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    bool arg3_in = static_cast<bool>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<Control *>(ptr)->set_anchor((Margin)arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_Control_get_anchor_cb96d2bf(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Control *>(ptr)->get_anchor((Margin)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Control_set_margin_86b3589f(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Control *>(ptr)->set_margin((Margin)arg1_in, arg2_in);
}

void godot_icall_Control_set_anchor_and_margin_62a0c351(Object * ptr, int32_t arg1, float* arg2, float* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<Control *>(ptr)->set_anchor_and_margin((Margin)arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_Control_set_begin_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Control *>(ptr)->set_begin(arg1_in);
}

void godot_icall_Control_set_end_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Control *>(ptr)->set_end(arg1_in);
}

void godot_icall_Control_set_position_cd723547(Object * ptr, GDMonoMarshal::M_Vector2* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Control *>(ptr)->set_position(arg1_in, arg2_in);
}

void godot_icall_Control__set_position_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Control *>(ptr)->_set_position(arg1_in);
}

void godot_icall_Control_set_size_cd723547(Object * ptr, GDMonoMarshal::M_Vector2* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Control *>(ptr)->set_size(arg1_in, arg2_in);
}

void godot_icall_Control__set_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Control *>(ptr)->_set_size(arg1_in);
}

void godot_icall_Control_set_custom_minimum_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Control *>(ptr)->set_custom_minimum_size(arg1_in);
}

void godot_icall_Control_set_global_position_cd723547(Object * ptr, GDMonoMarshal::M_Vector2* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Control *>(ptr)->set_global_position(arg1_in, arg2_in);
}

void godot_icall_Control__set_global_position_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Control *>(ptr)->_set_global_position(arg1_in);
}

void godot_icall_Control_set_rotation_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Control *>(ptr)->set_rotation(arg1_in);
}

void godot_icall_Control_set_rotation_degrees_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Control *>(ptr)->set_rotation_degrees(arg1_in);
}

void godot_icall_Control_set_scale_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Control *>(ptr)->set_scale(arg1_in);
}

void godot_icall_Control_set_pivot_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Control *>(ptr)->set_pivot_offset(arg1_in);
}

void godot_icall_Control_get_margin_cb96d2bf(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Control *>(ptr)->get_margin((Margin)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Control_get_begin_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_begin();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Control_get_end_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_end();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Control_get_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Control_get_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Control_get_rotation_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_rotation();
    *arg_ret = (float)ret;
}

void godot_icall_Control_get_rotation_degrees_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_rotation_degrees();
    *arg_ret = (float)ret;
}

void godot_icall_Control_get_scale_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_scale();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Control_get_pivot_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_pivot_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Control_get_custom_minimum_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_custom_minimum_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Control_get_parent_area_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_parent_area_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Control_get_global_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_global_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Control_get_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_Control_get_global_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_global_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_Control_show_modal_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Control *>(ptr)->show_modal(arg1_in);
}

void godot_icall_Control_set_focus_mode_ec5f3255(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Control *>(ptr)->set_focus_mode((Control::FocusMode)arg1_in);
}

int32_t godot_icall_Control_get_focus_mode_2e93c450(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Control *>(ptr)->get_focus_mode();
    return (int32_t)ret;
}

MonoBoolean godot_icall_Control_has_focus_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Control *>(ptr)->has_focus();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Control_grab_focus_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Control *>(ptr)->grab_focus();
}

void godot_icall_Control_release_focus_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Control *>(ptr)->release_focus();
}

MonoObject* godot_icall_Control_get_focus_owner_eb752350(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Control *>(ptr)->get_focus_owner();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_Control_set_h_size_flags_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Control *>(ptr)->set_h_size_flags(arg1_in);
}

int32_t godot_icall_Control_get_h_size_flags_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Control *>(ptr)->get_h_size_flags();
    return static_cast<int32_t>(ret);
}

void godot_icall_Control_set_stretch_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Control *>(ptr)->set_stretch_ratio(arg1_in);
}

void godot_icall_Control_get_stretch_ratio_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Control *>(ptr)->get_stretch_ratio();
    *arg_ret = (float)ret;
}

void godot_icall_Control_set_v_size_flags_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Control *>(ptr)->set_v_size_flags(arg1_in);
}

int32_t godot_icall_Control_get_v_size_flags_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Control *>(ptr)->get_v_size_flags();
    return static_cast<int32_t>(ret);
}

void godot_icall_Control_set_theme_77a4d7dc(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Control *>(ptr)->set_theme(AutoRef(arg1));
}

MonoObject* godot_icall_Control_get_theme_b57e3290(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Control *>(ptr)->get_theme();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Control_add_icon_override_febc050(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Control *>(ptr)->add_icon_override(arg1_in, AutoRef(arg2));
}

void godot_icall_Control_add_shader_override_e2cfa364(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Control *>(ptr)->add_shader_override(arg1_in, AutoRef(arg2));
}

void godot_icall_Control_add_style_override_3f949d2b(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Control *>(ptr)->add_style_override(arg1_in, AutoRef(arg2));
}

void godot_icall_Control_add_font_override_a21a4b98(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Control *>(ptr)->add_font_override(arg1_in, AutoRef(arg2));
}

void godot_icall_Control_add_color_override_8b9666a0(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<Control *>(ptr)->add_color_override(arg1_in, arg2_in);
}

void godot_icall_Control_add_constant_override_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Control *>(ptr)->add_constant_override(arg1_in, arg2_in);
}

MonoObject* godot_icall_Control_get_icon_bcfbe107(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Control *>(ptr)->get_icon(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_Control_get_stylebox_ac08e40f(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Control *>(ptr)->get_stylebox(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_Control_get_font_4abe4d7b(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Control *>(ptr)->get_font(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Control_get_color_aa87570e(Object * ptr, MonoString* arg1, MonoString* arg2, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Control *>(ptr)->get_color(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

int32_t godot_icall_Control_get_constant_7185a084(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Control *>(ptr)->get_constant(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_Control_has_icon_override_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Control *>(ptr)->has_icon_override(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Control_has_shader_override_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Control *>(ptr)->has_shader_override(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Control_has_stylebox_override_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Control *>(ptr)->has_stylebox_override(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Control_has_font_override_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Control *>(ptr)->has_font_override(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Control_has_color_override_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Control *>(ptr)->has_color_override(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Control_has_constant_override_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Control *>(ptr)->has_constant_override(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Control_has_icon_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Control *>(ptr)->has_icon(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Control_has_stylebox_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Control *>(ptr)->has_stylebox(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Control_has_font_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Control *>(ptr)->has_font(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Control_has_color_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Control *>(ptr)->has_color(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Control_has_constant_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Control *>(ptr)->has_constant(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Control_get_parent_control_eb752350(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Control *>(ptr)->get_parent_control();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_Control_set_h_grow_direction_6d106a0e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Control *>(ptr)->set_h_grow_direction((Control::GrowDirection)arg1_in);
}

int32_t godot_icall_Control_get_h_grow_direction_9c31b55e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Control *>(ptr)->get_h_grow_direction();
    return (int32_t)ret;
}

void godot_icall_Control_set_v_grow_direction_6d106a0e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Control *>(ptr)->set_v_grow_direction((Control::GrowDirection)arg1_in);
}

int32_t godot_icall_Control_get_v_grow_direction_9c31b55e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Control *>(ptr)->get_v_grow_direction();
    return (int32_t)ret;
}

void godot_icall_Control_set_tooltip_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Control *>(ptr)->set_tooltip(arg1_in);
}

MonoString* godot_icall_Control_get_tooltip_d8b6703c(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Control *>(ptr)->get_tooltip(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_Control__get_tooltip_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Control *>(ptr)->_get_tooltip();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Control_set_default_cursor_shape_7756431d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Control *>(ptr)->set_default_cursor_shape((Control::CursorShape)arg1_in);
}

int32_t godot_icall_Control_get_default_cursor_shape_b5ef9e4f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Control *>(ptr)->get_default_cursor_shape();
    return (int32_t)ret;
}

int32_t godot_icall_Control_get_cursor_shape_57060915(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Control *>(ptr)->get_cursor_shape(arg1_in);
    return (int32_t)ret;
}

void godot_icall_Control_set_focus_neighbour_3129d85c(Object * ptr, int32_t arg1, NodePath* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Control *>(ptr)->set_focus_neighbour((Margin)arg1_in, *arg2);
}

NodePath* godot_icall_Control_get_focus_neighbour_58103ae(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Control *>(ptr)->get_focus_neighbour((Margin)arg1_in);
    return memnew(NodePath(ret));
}

void godot_icall_Control_set_focus_next_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Control *>(ptr)->set_focus_next(*arg1);
}

NodePath* godot_icall_Control_get_focus_next_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Control *>(ptr)->get_focus_next();
    return memnew(NodePath(ret));
}

void godot_icall_Control_set_focus_previous_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Control *>(ptr)->set_focus_previous(*arg1);
}

NodePath* godot_icall_Control_get_focus_previous_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Control *>(ptr)->get_focus_previous();
    return memnew(NodePath(ret));
}

void godot_icall_Control_force_drag_2d0b887c(Object * ptr, MonoObject* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    static_cast<Control *>(ptr)->force_drag(arg1_in, (Control*)arg2);
}

void godot_icall_Control_set_mouse_filter_42135d0b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Control *>(ptr)->set_mouse_filter((Control::MouseFilter)arg1_in);
}

int32_t godot_icall_Control_get_mouse_filter_5a76cac6(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Control *>(ptr)->get_mouse_filter();
    return (int32_t)ret;
}

void godot_icall_Control_set_clip_contents_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Control *>(ptr)->set_clip_contents(arg1_in);
}

MonoBoolean godot_icall_Control_is_clipping_contents_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Control *>(ptr)->is_clipping_contents();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Control_grab_click_focus_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Control *>(ptr)->grab_click_focus();
}

void godot_icall_Control_set_drag_forwarding_3dddc41c(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Control *>(ptr)->set_drag_forwarding((Control*)arg1);
}

void godot_icall_Control_set_drag_preview_3dddc41c(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Control *>(ptr)->set_drag_preview((Control*)arg1);
}

void godot_icall_Control_warp_mouse_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Control *>(ptr)->warp_mouse(arg1_in);
}

void godot_icall_Control_minimum_size_changed_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Control *>(ptr)->minimum_size_changed();
}

Object* godot_icall_Control_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Control")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ConvexPolygonShape_set_points_b8a866b9(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector3(arg1);
    static_cast<ConvexPolygonShape *>(ptr)->set_points(eastl::move(arg1_in));
}

MonoArray* godot_icall_ConvexPolygonShape_get_points_36607e58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ConvexPolygonShape *>(ptr)->get_points();
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

Object* godot_icall_ConvexPolygonShape_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ConvexPolygonShape")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ConvexPolygonShape2D_set_point_cloud_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ConvexPolygonShape2D *>(ptr)->set_point_cloud(Variant(*arg1).as<Vector<Vector2>>());
}

void godot_icall_ConvexPolygonShape2D_set_points_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ConvexPolygonShape2D *>(ptr)->set_points(Variant(*arg1).as<Vector<Vector2>>());
}

Array* godot_icall_ConvexPolygonShape2D_get_points_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ConvexPolygonShape2D *>(ptr)->get_points();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_ConvexPolygonShape2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ConvexPolygonShape2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoArray* godot_icall_Crypto_generate_random_bytes_f38b97f6(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Crypto *>(ptr)->generate_random_bytes(arg1_in);
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

MonoObject* godot_icall_Crypto_generate_rsa_928cbf6d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Crypto *>(ptr)->generate_rsa(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_Crypto_generate_self_signed_certificate_e5785379(Object * ptr, Object * arg1, MonoString* arg2, MonoString* arg3, MonoString* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    TmpString<512> arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    TmpString<512> arg4_in(GDMonoMarshal::mono_string_to_godot(arg4));
    auto ret = static_cast<Crypto *>(ptr)->generate_self_signed_certificate(AutoRef(arg1), arg2_in, arg3_in, arg4_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_Crypto_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Crypto")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_CryptoKey_save_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<CryptoKey *>(ptr)->save(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_CryptoKey_load_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<CryptoKey *>(ptr)->load(arg1_in);
    return (int32_t)ret;
}

Object* godot_icall_CryptoKey_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CryptoKey")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_CubeMap_get_width_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CubeMap *>(ptr)->get_width();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_CubeMap_get_height_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CubeMap *>(ptr)->get_height();
    return static_cast<int32_t>(ret);
}

void godot_icall_CubeMap_set_flags_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<CubeMap *>(ptr)->set_flags(arg1_in);
}

uint32_t godot_icall_CubeMap_get_flags_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<CubeMap *>(ptr)->get_flags();
    return static_cast<uint32_t>(ret);
}

void godot_icall_CubeMap_set_side_f872ec8f(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CubeMap *>(ptr)->set_side((CubeMap::Side)arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_CubeMap_get_side_447e116f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<CubeMap *>(ptr)->get_side((CubeMap::Side)arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_CubeMap_set_storage_971a4fd3(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<CubeMap *>(ptr)->set_storage((CubeMap::Storage)arg1_in);
}

int32_t godot_icall_CubeMap_get_storage_563b9a91(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CubeMap *>(ptr)->get_storage();
    return (int32_t)ret;
}

void godot_icall_CubeMap_set_lossy_storage_quality_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CubeMap *>(ptr)->set_lossy_storage_quality(arg1_in);
}

void godot_icall_CubeMap_get_lossy_storage_quality_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CubeMap *>(ptr)->get_lossy_storage_quality();
    *arg_ret = (float)ret;
}

Object* godot_icall_CubeMap_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CubeMap")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CubeMesh_set_size_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<CubeMesh *>(ptr)->set_size(arg1_in);
}

void godot_icall_CubeMesh_get_size_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CubeMesh *>(ptr)->get_size();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_CubeMesh_set_subdivide_width_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CubeMesh *>(ptr)->set_subdivide_width(arg1_in);
}

int32_t godot_icall_CubeMesh_get_subdivide_width_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CubeMesh *>(ptr)->get_subdivide_width();
    return static_cast<int32_t>(ret);
}

void godot_icall_CubeMesh_set_subdivide_height_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CubeMesh *>(ptr)->set_subdivide_height(arg1_in);
}

int32_t godot_icall_CubeMesh_get_subdivide_height_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CubeMesh *>(ptr)->get_subdivide_height();
    return static_cast<int32_t>(ret);
}

void godot_icall_CubeMesh_set_subdivide_depth_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CubeMesh *>(ptr)->set_subdivide_depth(arg1_in);
}

int32_t godot_icall_CubeMesh_get_subdivide_depth_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CubeMesh *>(ptr)->get_subdivide_depth();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_CubeMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CubeMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_Curve_get_point_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Curve *>(ptr)->get_point_count();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_Curve_add_point_5c6a6967(Object * ptr, GDMonoMarshal::M_Vector2* arg1, float* arg2, float* arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    int64_t arg4_in = (int64_t)arg4;
    int64_t arg5_in = (int64_t)arg5;
    auto ret = static_cast<Curve *>(ptr)->add_point(arg1_in, arg2_in, arg3_in, (Curve::TangentMode)arg4_in, (Curve::TangentMode)arg5_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Curve_remove_point_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Curve *>(ptr)->remove_point(arg1_in);
}

void godot_icall_Curve_clear_points_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Curve *>(ptr)->clear_points();
}

void godot_icall_Curve_get_point_position_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Curve *>(ptr)->get_point_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Curve_set_point_value_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Curve *>(ptr)->set_point_value(arg1_in, arg2_in);
}

int32_t godot_icall_Curve_set_point_offset_90acacee(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<Curve *>(ptr)->set_point_offset(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Curve_interpolate_f6dda625(Object * ptr, float* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    auto ret = static_cast<Curve *>(ptr)->interpolate(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Curve_interpolate_baked_f6dda625(Object * ptr, float* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    auto ret = static_cast<Curve *>(ptr)->interpolate_baked(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Curve_get_point_left_tangent_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Curve *>(ptr)->get_point_left_tangent(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Curve_get_point_right_tangent_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Curve *>(ptr)->get_point_right_tangent(arg1_in);
    *arg_ret = (float)ret;
}

int32_t godot_icall_Curve_get_point_left_mode_325248d3(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Curve *>(ptr)->get_point_left_mode(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_Curve_get_point_right_mode_325248d3(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Curve *>(ptr)->get_point_right_mode(arg1_in);
    return (int32_t)ret;
}

void godot_icall_Curve_set_point_left_tangent_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Curve *>(ptr)->set_point_left_tangent(arg1_in, arg2_in);
}

void godot_icall_Curve_set_point_right_tangent_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Curve *>(ptr)->set_point_right_tangent(arg1_in, arg2_in);
}

void godot_icall_Curve_set_point_left_mode_92847e76(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<Curve *>(ptr)->set_point_left_mode(arg1_in, (Curve::TangentMode)arg2_in);
}

void godot_icall_Curve_set_point_right_mode_92847e76(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<Curve *>(ptr)->set_point_right_mode(arg1_in, (Curve::TangentMode)arg2_in);
}

void godot_icall_Curve_get_min_value_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Curve *>(ptr)->get_min_value();
    *arg_ret = (float)ret;
}

void godot_icall_Curve_set_min_value_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Curve *>(ptr)->set_min_value(arg1_in);
}

void godot_icall_Curve_get_max_value_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Curve *>(ptr)->get_max_value();
    *arg_ret = (float)ret;
}

void godot_icall_Curve_set_max_value_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Curve *>(ptr)->set_max_value(arg1_in);
}

void godot_icall_Curve_clean_dupes_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Curve *>(ptr)->clean_dupes();
}

void godot_icall_Curve_bake_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Curve *>(ptr)->bake();
}

int32_t godot_icall_Curve_get_bake_resolution_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Curve *>(ptr)->get_bake_resolution();
    return static_cast<int32_t>(ret);
}

void godot_icall_Curve_set_bake_resolution_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Curve *>(ptr)->set_bake_resolution(arg1_in);
}

Array* godot_icall_Curve_get_data_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Curve *>(ptr)->get_data();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_Curve_set_data_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Curve *>(ptr)->set_data(*arg1);
}

Object* godot_icall_Curve_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Curve")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_Curve2D_get_point_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Curve2D *>(ptr)->get_point_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_Curve2D_add_point_a65b9c10(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<Curve2D *>(ptr)->add_point(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_Curve2D_set_point_position_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<Curve2D *>(ptr)->set_point_position(arg1_in, arg2_in);
}

void godot_icall_Curve2D_get_point_position_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Curve2D *>(ptr)->get_point_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Curve2D_set_point_in_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<Curve2D *>(ptr)->set_point_in(arg1_in, arg2_in);
}

void godot_icall_Curve2D_get_point_in_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Curve2D *>(ptr)->get_point_in(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Curve2D_set_point_out_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<Curve2D *>(ptr)->set_point_out(arg1_in, arg2_in);
}

void godot_icall_Curve2D_get_point_out_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Curve2D *>(ptr)->get_point_out(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Curve2D_remove_point_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Curve2D *>(ptr)->remove_point(arg1_in);
}

void godot_icall_Curve2D_clear_points_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Curve2D *>(ptr)->clear_points();
}

void godot_icall_Curve2D_interpolate_f1e0f95c(Object * ptr, int32_t arg1, float* arg2, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<Curve2D *>(ptr)->interpolate(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Curve2D_interpolatef_7cde2f3b(Object * ptr, float* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    auto ret = static_cast<Curve2D *>(ptr)->interpolatef(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Curve2D_set_bake_interval_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Curve2D *>(ptr)->set_bake_interval(arg1_in);
}

void godot_icall_Curve2D_get_bake_interval_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Curve2D *>(ptr)->get_bake_interval();
    *arg_ret = (float)ret;
}

void godot_icall_Curve2D_get_baked_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Curve2D *>(ptr)->get_baked_length();
    *arg_ret = (float)ret;
}

void godot_icall_Curve2D_interpolate_baked_21271c9b(Object * ptr, float* arg1, MonoBoolean arg2, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<Curve2D *>(ptr)->interpolate_baked(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoArray* godot_icall_Curve2D_get_baked_points_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Curve2D *>(ptr)->get_baked_points();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_Curve2D_get_closest_point_af4cfa54(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Curve2D *>(ptr)->get_closest_point(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Curve2D_get_closest_offset_4aafeb98(Object * ptr, GDMonoMarshal::M_Vector2* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Curve2D *>(ptr)->get_closest_offset(arg1_in);
    *arg_ret = (float)ret;
}

MonoArray* godot_icall_Curve2D_tessellate_a3d0d94b(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<Curve2D *>(ptr)->tessellate(arg1_in, arg2_in);
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

Dictionary* godot_icall_Curve2D__get_data_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Curve2D *>(ptr)->_get_data();
    return memnew(Dictionary(ret));
}

void godot_icall_Curve2D__set_data_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Curve2D *>(ptr)->_set_data(*arg1);
}

Object* godot_icall_Curve2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Curve2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_Curve3D_get_point_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Curve3D *>(ptr)->get_point_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_Curve3D_add_point_a65fb4ae(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, GDMonoMarshal::M_Vector3* arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    Vector3 arg3_in = MARSHALLED_IN(Vector3, arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<Curve3D *>(ptr)->add_point(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_Curve3D_set_point_position_3c383c4b(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<Curve3D *>(ptr)->set_point_position(arg1_in, arg2_in);
}

void godot_icall_Curve3D_get_point_position_237286f3(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Curve3D *>(ptr)->get_point_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Curve3D_set_point_tilt_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Curve3D *>(ptr)->set_point_tilt(arg1_in, arg2_in);
}

void godot_icall_Curve3D_get_point_tilt_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Curve3D *>(ptr)->get_point_tilt(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Curve3D_set_point_in_3c383c4b(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<Curve3D *>(ptr)->set_point_in(arg1_in, arg2_in);
}

void godot_icall_Curve3D_get_point_in_237286f3(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Curve3D *>(ptr)->get_point_in(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Curve3D_set_point_out_3c383c4b(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<Curve3D *>(ptr)->set_point_out(arg1_in, arg2_in);
}

void godot_icall_Curve3D_get_point_out_237286f3(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Curve3D *>(ptr)->get_point_out(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Curve3D_remove_point_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Curve3D *>(ptr)->remove_point(arg1_in);
}

void godot_icall_Curve3D_clear_points_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Curve3D *>(ptr)->clear_points();
}

void godot_icall_Curve3D_interpolate_f1e0292d(Object * ptr, int32_t arg1, float* arg2, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<Curve3D *>(ptr)->interpolate(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Curve3D_interpolatef_7cde2ffa(Object * ptr, float* arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    auto ret = static_cast<Curve3D *>(ptr)->interpolatef(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Curve3D_set_bake_interval_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Curve3D *>(ptr)->set_bake_interval(arg1_in);
}

void godot_icall_Curve3D_get_bake_interval_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Curve3D *>(ptr)->get_bake_interval();
    *arg_ret = (float)ret;
}

void godot_icall_Curve3D_set_up_vector_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Curve3D *>(ptr)->set_up_vector_enabled(arg1_in);
}

MonoBoolean godot_icall_Curve3D_is_up_vector_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Curve3D *>(ptr)->is_up_vector_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Curve3D_get_baked_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Curve3D *>(ptr)->get_baked_length();
    *arg_ret = (float)ret;
}

void godot_icall_Curve3D_interpolate_baked_21274c6a(Object * ptr, float* arg1, MonoBoolean arg2, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<Curve3D *>(ptr)->interpolate_baked(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Curve3D_interpolate_baked_up_vector_21274c6a(Object * ptr, float* arg1, MonoBoolean arg2, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<Curve3D *>(ptr)->interpolate_baked_up_vector(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

MonoArray* godot_icall_Curve3D_get_baked_points_36607e58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Curve3D *>(ptr)->get_baked_points();
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

MonoArray* godot_icall_Curve3D_get_baked_tilts_7083ff1a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Curve3D *>(ptr)->get_baked_tilts();
    return GDMonoMarshal::PoolRealArray_to_mono_array(ret);
}

MonoArray* godot_icall_Curve3D_get_baked_up_vectors_36607e58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Curve3D *>(ptr)->get_baked_up_vectors();
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

void godot_icall_Curve3D_get_closest_point_af4cfa14(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    auto ret = static_cast<Curve3D *>(ptr)->get_closest_point(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Curve3D_get_closest_offset_4aafeb9b(Object * ptr, GDMonoMarshal::M_Vector3* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    auto ret = static_cast<Curve3D *>(ptr)->get_closest_offset(arg1_in);
    *arg_ret = (float)ret;
}

MonoArray* godot_icall_Curve3D_tessellate_1d44d7ac(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<Curve3D *>(ptr)->tessellate(arg1_in, arg2_in);
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

Dictionary* godot_icall_Curve3D__get_data_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Curve3D *>(ptr)->_get_data();
    return memnew(Dictionary(ret));
}

void godot_icall_Curve3D__set_data_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Curve3D *>(ptr)->_set_data(*arg1);
}

Object* godot_icall_Curve3D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Curve3D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CurveTexture_set_width_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CurveTexture *>(ptr)->set_width(arg1_in);
}

void godot_icall_CurveTexture_set_curve_dbaac24a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<CurveTexture *>(ptr)->set_curve(AutoRef(arg1));
}

MonoObject* godot_icall_CurveTexture_get_curve_98c1d1a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<CurveTexture *>(ptr)->get_curve();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_CurveTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CurveTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CylinderMesh_set_top_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CylinderMesh *>(ptr)->set_top_radius(arg1_in);
}

void godot_icall_CylinderMesh_get_top_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CylinderMesh *>(ptr)->get_top_radius();
    *arg_ret = (float)ret;
}

void godot_icall_CylinderMesh_set_bottom_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CylinderMesh *>(ptr)->set_bottom_radius(arg1_in);
}

void godot_icall_CylinderMesh_get_bottom_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CylinderMesh *>(ptr)->get_bottom_radius();
    *arg_ret = (float)ret;
}

void godot_icall_CylinderMesh_set_height_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CylinderMesh *>(ptr)->set_height(arg1_in);
}

void godot_icall_CylinderMesh_get_height_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CylinderMesh *>(ptr)->get_height();
    *arg_ret = (float)ret;
}

void godot_icall_CylinderMesh_set_radial_segments_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CylinderMesh *>(ptr)->set_radial_segments(arg1_in);
}

int32_t godot_icall_CylinderMesh_get_radial_segments_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CylinderMesh *>(ptr)->get_radial_segments();
    return static_cast<int32_t>(ret);
}

void godot_icall_CylinderMesh_set_rings_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<CylinderMesh *>(ptr)->set_rings(arg1_in);
}

int32_t godot_icall_CylinderMesh_get_rings_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<CylinderMesh *>(ptr)->get_rings();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_CylinderMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CylinderMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_CylinderShape_set_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CylinderShape *>(ptr)->set_radius(arg1_in);
}

void godot_icall_CylinderShape_get_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CylinderShape *>(ptr)->get_radius();
    *arg_ret = (float)ret;
}

void godot_icall_CylinderShape_set_height_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<CylinderShape *>(ptr)->set_height(arg1_in);
}

void godot_icall_CylinderShape_get_height_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<CylinderShape *>(ptr)->get_height();
    *arg_ret = (float)ret;
}

Object* godot_icall_CylinderShape_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "CylinderShape")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_DampedSpringJoint2D_set_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<DampedSpringJoint2D *>(ptr)->set_length(arg1_in);
}

void godot_icall_DampedSpringJoint2D_get_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<DampedSpringJoint2D *>(ptr)->get_length();
    *arg_ret = (float)ret;
}

void godot_icall_DampedSpringJoint2D_set_rest_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<DampedSpringJoint2D *>(ptr)->set_rest_length(arg1_in);
}

void godot_icall_DampedSpringJoint2D_get_rest_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<DampedSpringJoint2D *>(ptr)->get_rest_length();
    *arg_ret = (float)ret;
}

void godot_icall_DampedSpringJoint2D_set_stiffness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<DampedSpringJoint2D *>(ptr)->set_stiffness(arg1_in);
}

void godot_icall_DampedSpringJoint2D_get_stiffness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<DampedSpringJoint2D *>(ptr)->get_stiffness();
    *arg_ret = (float)ret;
}

void godot_icall_DampedSpringJoint2D_set_damping_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<DampedSpringJoint2D *>(ptr)->set_damping(arg1_in);
}

void godot_icall_DampedSpringJoint2D_get_damping_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<DampedSpringJoint2D *>(ptr)->get_damping();
    *arg_ret = (float)ret;
}

Object* godot_icall_DampedSpringJoint2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "DampedSpringJoint2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_DirectionalLight_set_shadow_mode_db240190(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<DirectionalLight *>(ptr)->set_shadow_mode((DirectionalLight::ShadowMode)arg1_in);
}

int32_t godot_icall_DirectionalLight_get_shadow_mode_9fde0d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<DirectionalLight *>(ptr)->get_shadow_mode();
    return (int32_t)ret;
}

void godot_icall_DirectionalLight_set_shadow_depth_range_3e6f5b29(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<DirectionalLight *>(ptr)->set_shadow_depth_range((DirectionalLight::ShadowDepthRange)arg1_in);
}

int32_t godot_icall_DirectionalLight_get_shadow_depth_range_ecc6a63b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<DirectionalLight *>(ptr)->get_shadow_depth_range();
    return (int32_t)ret;
}

void godot_icall_DirectionalLight_set_blend_splits_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<DirectionalLight *>(ptr)->set_blend_splits(arg1_in);
}

MonoBoolean godot_icall_DirectionalLight_is_blend_splits_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<DirectionalLight *>(ptr)->is_blend_splits_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_DirectionalLight_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "DirectionalLight")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_DynamicFont_set_font_data_b503adb9(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<DynamicFont *>(ptr)->set_font_data(AutoRef(arg1));
}

MonoObject* godot_icall_DynamicFont_get_font_data_74237cab(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<DynamicFont *>(ptr)->get_font_data();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_DynamicFont_set_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<DynamicFont *>(ptr)->set_size(arg1_in);
}

int32_t godot_icall_DynamicFont_get_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<DynamicFont *>(ptr)->get_size();
    return static_cast<int32_t>(ret);
}

void godot_icall_DynamicFont_set_outline_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<DynamicFont *>(ptr)->set_outline_size(arg1_in);
}

int32_t godot_icall_DynamicFont_get_outline_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<DynamicFont *>(ptr)->get_outline_size();
    return static_cast<int32_t>(ret);
}

void godot_icall_DynamicFont_set_outline_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<DynamicFont *>(ptr)->set_outline_color(arg1_in);
}

void godot_icall_DynamicFont_get_outline_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<DynamicFont *>(ptr)->get_outline_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_DynamicFont_set_use_mipmaps_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<DynamicFont *>(ptr)->set_use_mipmaps(arg1_in);
}

MonoBoolean godot_icall_DynamicFont_get_use_mipmaps_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<DynamicFont *>(ptr)->get_use_mipmaps();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_DynamicFont_set_use_filter_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<DynamicFont *>(ptr)->set_use_filter(arg1_in);
}

MonoBoolean godot_icall_DynamicFont_get_use_filter_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<DynamicFont *>(ptr)->get_use_filter();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_DynamicFont_set_spacing_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<DynamicFont *>(ptr)->set_spacing(arg1_in, arg2_in);
}

int32_t godot_icall_DynamicFont_get_spacing_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<DynamicFont *>(ptr)->get_spacing(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_DynamicFont_add_fallback_b503adb9(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<DynamicFont *>(ptr)->add_fallback(AutoRef(arg1));
}

void godot_icall_DynamicFont_set_fallback_57c519ef(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<DynamicFont *>(ptr)->set_fallback(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_DynamicFont_get_fallback_97848ef8(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<DynamicFont *>(ptr)->get_fallback(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_DynamicFont_remove_fallback_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<DynamicFont *>(ptr)->remove_fallback(arg1_in);
}

int32_t godot_icall_DynamicFont_get_fallback_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<DynamicFont *>(ptr)->get_fallback_count();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_DynamicFont_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "DynamicFont")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_DynamicFontData_set_antialiased_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<DynamicFontData *>(ptr)->set_antialiased(arg1_in);
}

MonoBoolean godot_icall_DynamicFontData_is_antialiased_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<DynamicFontData *>(ptr)->is_antialiased();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_DynamicFontData_set_font_path_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<DynamicFontData *>(ptr)->set_font_path(arg1_in);
}

MonoString* godot_icall_DynamicFontData_get_font_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<DynamicFontData *>(ptr)->get_font_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_DynamicFontData_set_hinting_353c5c44(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<DynamicFontData *>(ptr)->set_hinting((DynamicFontData::Hinting)arg1_in);
}

int32_t godot_icall_DynamicFontData_get_hinting_7636ab77(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<DynamicFontData *>(ptr)->get_hinting();
    return (int32_t)ret;
}

Object* godot_icall_DynamicFontData_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "DynamicFontData")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall_EditorExportPlugin_add_shared_object_4b60c74(Object * ptr, MonoString* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecString(arg2);
    static_cast<EditorExportPlugin *>(ptr)->add_shared_object(arg1_in, arg2_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorExportPlugin_add_file_e91798f9(Object * ptr, MonoString* arg1, MonoArray* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecByte(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<EditorExportPlugin *>(ptr)->add_file(arg1_in, arg2_in, arg3_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorExportPlugin_skip_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorExportPlugin *>(ptr)->skip();
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorExportPlugin_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorExportPlugin")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall_EditorFeatureProfile_set_disable_class_f253b141(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<EditorFeatureProfile *>(ptr)->set_disable_class(arg1_in, arg2_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorFeatureProfile_is_class_disabled_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorFeatureProfile *>(ptr)->is_class_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFeatureProfile_set_disable_class_editor_f253b141(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<EditorFeatureProfile *>(ptr)->set_disable_class_editor(arg1_in, arg2_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorFeatureProfile_is_class_editor_disabled_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorFeatureProfile *>(ptr)->is_class_editor_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFeatureProfile_set_disable_class_property_ec7bbd75(Object * ptr, MonoString* arg1, MonoString* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<EditorFeatureProfile *>(ptr)->set_disable_class_property(arg1_in, arg2_in, arg3_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorFeatureProfile_is_class_property_disabled_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<EditorFeatureProfile *>(ptr)->is_class_property_disabled(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFeatureProfile_set_disable_feature_40adab2a(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<EditorFeatureProfile *>(ptr)->set_disable_feature((EditorFeatureProfile::Feature)arg1_in, arg2_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorFeatureProfile_is_feature_disabled_cfe5c55f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<EditorFeatureProfile *>(ptr)->is_feature_disabled((EditorFeatureProfile::Feature)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorFeatureProfile_get_feature_name_f57803d5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<EditorFeatureProfile *>(ptr)->get_feature_name((EditorFeatureProfile::Feature)arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
int32_t godot_icall_EditorFeatureProfile_save_to_file_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorFeatureProfile *>(ptr)->save_to_file(arg1_in);
    return (int32_t)ret;
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
int32_t godot_icall_EditorFeatureProfile_load_from_file_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorFeatureProfile *>(ptr)->load_from_file(arg1_in);
    return (int32_t)ret;
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorFeatureProfile_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorFeatureProfile")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall_EditorFileDialog_clear_filters_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorFileDialog *>(ptr)->clear_filters();
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileDialog_add_filter_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorFileDialog *>(ptr)->add_filter(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorFileDialog_get_current_dir_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorFileDialog *>(ptr)->get_current_dir();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorFileDialog_get_current_file_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorFileDialog *>(ptr)->get_current_file();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorFileDialog_get_current_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorFileDialog *>(ptr)->get_current_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileDialog_set_current_dir_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorFileDialog *>(ptr)->set_current_dir(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileDialog_set_current_file_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorFileDialog *>(ptr)->set_current_file(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileDialog_set_current_path_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorFileDialog *>(ptr)->set_current_path(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileDialog_set_mode_a82b4f65(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<EditorFileDialog *>(ptr)->set_mode((EditorFileDialog::Mode)arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
int32_t godot_icall_EditorFileDialog_get_mode_94ce3420(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<EditorFileDialog *>(ptr)->get_mode();
    return (int32_t)ret;
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorFileDialog_get_vbox_eb5679a1(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorFileDialog *>(ptr)->get_vbox();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileDialog_set_access_44410ee4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<EditorFileDialog *>(ptr)->set_access((EditorFileDialog::Access)arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
int32_t godot_icall_EditorFileDialog_get_access_1c1c9a97(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<EditorFileDialog *>(ptr)->get_access();
    return (int32_t)ret;
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileDialog_set_show_hidden_files_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<EditorFileDialog *>(ptr)->set_show_hidden_files(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorFileDialog_is_showing_hidden_files_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorFileDialog *>(ptr)->is_showing_hidden_files();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileDialog_set_display_mode_2d765637(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<EditorFileDialog *>(ptr)->set_display_mode((EditorFileDialog::DisplayMode)arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
int32_t godot_icall_EditorFileDialog_get_display_mode_c81f6e52(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<EditorFileDialog *>(ptr)->get_display_mode();
    return (int32_t)ret;
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileDialog_set_disable_overwrite_warning_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<EditorFileDialog *>(ptr)->set_disable_overwrite_warning(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorFileDialog_is_overwrite_warning_disabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorFileDialog *>(ptr)->is_overwrite_warning_disabled();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileDialog_invalidate_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorFileDialog *>(ptr)->invalidate();
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorFileDialog_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorFileDialog")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorFileSystem_get_filesystem_fbf6e50(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorFileSystem *>(ptr)->get_filesystem();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorFileSystem_is_scanning_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorFileSystem *>(ptr)->is_scanning();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileSystem_get_scanning_progress_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<EditorFileSystem *>(ptr)->get_scanning_progress();
    *arg_ret = (float)ret;
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileSystem_scan_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorFileSystem *>(ptr)->scan();
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileSystem_scan_changes_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorFileSystem *>(ptr)->scan_changes();
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileSystem_update_file_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorFileSystem *>(ptr)->update_file(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorFileSystem_get_filesystem_path_733cef0e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorFileSystem *>(ptr)->get_filesystem_path(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorFileSystem_get_file_type_98465fb(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorFileSystem *>(ptr)->get_file_type(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorFileSystem_update_script_classes_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorFileSystem *>(ptr)->update_script_classes();
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
int32_t godot_icall_EditorFileSystemDirectory_get_subdir_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->get_subdir_count();
    return static_cast<int32_t>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorFileSystemDirectory_get_subdir_be3439ad(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->get_subdir(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
int32_t godot_icall_EditorFileSystemDirectory_get_file_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->get_file_count();
    return static_cast<int32_t>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorFileSystemDirectory_get_file_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->get_file(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorFileSystemDirectory_get_file_path_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->get_file_path(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorFileSystemDirectory_get_file_type_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->get_file_type(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorFileSystemDirectory_get_file_script_class_name_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->get_file_script_class_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorFileSystemDirectory_get_file_script_class_extends_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->get_file_script_class_extends(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorFileSystemDirectory_get_file_import_is_valid_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->get_file_import_is_valid(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorFileSystemDirectory_get_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->get_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorFileSystemDirectory_get_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->get_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorFileSystemDirectory_get_parent_fbf6e50(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->get_parent();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
int32_t godot_icall_EditorFileSystemDirectory_find_file_index_6d3db7c6(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->find_file_index(arg1_in);
    return static_cast<int32_t>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
int32_t godot_icall_EditorFileSystemDirectory_find_dir_index_6d3db7c6(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorFileSystemDirectory *>(ptr)->find_dir_index(arg1_in);
    return static_cast<int32_t>(ret);
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorFileSystemDirectory_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorFileSystemDirectory")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_EditorImportPlugin_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorImportPlugin")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall_EditorInspector_refresh_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorInspector *>(ptr)->refresh();
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorInspector_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorInspector")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall_EditorInspectorPlugin_add_custom_control_3dddc41c(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorInspectorPlugin *>(ptr)->add_custom_control((Control*)arg1);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorInspectorPlugin_add_property_editor_fd860d4e(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorInspectorPlugin *>(ptr)->add_property_editor(arg1_in, (Control*)arg2);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorInspectorPlugin_add_property_editor_for_multiple_properties_bceb3152(Object * ptr, MonoString* arg1, MonoArray* arg2, Object * arg3) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecString(arg2);
    static_cast<EditorInspectorPlugin *>(ptr)->add_property_editor_for_multiple_properties(arg1_in, arg2_in, (Control*)arg3);
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorInspectorPlugin_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorInspectorPlugin")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall_EditorInterface_inspect_object_bf01414e(Object * ptr, Object * arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<EditorInterface *>(ptr)->inspect_object((Object*)arg1, arg2_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorInterface_get_selection_780b36ac(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorInterface *>(ptr)->get_selection();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorInterface_get_editor_settings_99bdc54d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorInterface *>(ptr)->get_editor_settings();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorInterface_get_script_editor_b03cf41b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorInterface *>(ptr)->get_script_editor();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorInterface_get_base_control_eb752350(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorInterface *>(ptr)->get_base_control();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorInterface_edit_resource_7ce53eb(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorInterface *>(ptr)->edit_resource(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorInterface_open_scene_from_path_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorInterface *>(ptr)->open_scene_from_path(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorInterface_reload_scene_from_path_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorInterface *>(ptr)->reload_scene_from_path(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
Array* godot_icall_EditorInterface_get_open_scenes_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorInterface *>(ptr)->get_open_scenes();
    return memnew(Array(Variant::from(ret)));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorInterface_get_edited_scene_root_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorInterface *>(ptr)->get_edited_scene_root();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorInterface_get_resource_previewer_9f79bd12(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorInterface *>(ptr)->get_resource_previewer();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorInterface_get_resource_filesystem_85c6acdf(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorInterface *>(ptr)->get_resource_file_system();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorInterface_get_editor_viewport_eb752350(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorInterface *>(ptr)->get_editor_viewport();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
Array* godot_icall_EditorInterface_make_mesh_previews_57d4c298(Object * ptr, Array* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<EditorInterface *>(ptr)->_make_mesh_previews(*arg1, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorInterface_select_file_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorInterface *>(ptr)->select_file(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorInterface_get_selected_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorInterface *>(ptr)->get_selected_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorInterface_get_current_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorInterface *>(ptr)->get_current_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorInterface_set_plugin_enabled_f253b141(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<EditorInterface *>(ptr)->set_plugin_enabled(arg1_in, arg2_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorInterface_is_plugin_enabled_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorInterface *>(ptr)->is_plugin_enabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorInterface_get_inspector_771c0899(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorInterface *>(ptr)->get_inspector();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
int32_t godot_icall_EditorInterface_save_scene_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<EditorInterface *>(ptr)->save_scene();
    return (int32_t)ret;
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorInterface_save_scene_as_211c975(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<EditorInterface *>(ptr)->save_scene_as(arg1_in, arg2_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorInterface_set_main_screen_editor_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorInterface *>(ptr)->set_main_screen_editor(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorInterface_set_distraction_free_mode_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<EditorInterface *>(ptr)->set_distraction_free_mode(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_add_control_to_container_8f04cd94(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<EditorPlugin *>(ptr)->add_control_to_container((EditorPlugin::CustomControlContainer)arg1_in, (Control*)arg2);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorPlugin_add_control_to_bottom_panel_a3580764(Object * ptr, Object * arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<EditorPlugin *>(ptr)->add_control_to_bottom_panel((Control*)arg1, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_add_control_to_dock_49de7d02(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<EditorPlugin *>(ptr)->add_control_to_dock((EditorPlugin::DockSlot)arg1_in, (Control*)arg2);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_remove_control_from_docks_3dddc41c(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->remove_control_from_docks((Control*)arg1);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_remove_control_from_bottom_panel_3dddc41c(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->remove_control_from_bottom_panel((Control*)arg1);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_remove_control_from_container_8f04cd94(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<EditorPlugin *>(ptr)->remove_control_from_container((EditorPlugin::CustomControlContainer)arg1_in, (Control*)arg2);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_add_tool_menu_item_dbe800bc(Object * ptr, MonoString* arg1, Object * arg2, MonoString* arg3, MonoObject* arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    Variant arg4_in = GDMonoMarshal::mono_object_to_variant(arg4);
    static_cast<EditorPlugin *>(ptr)->add_tool_menu_item(arg1_in, (Object*)arg2, arg3_in, arg4_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_add_tool_submenu_item_ff7cba0a(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorPlugin *>(ptr)->add_tool_submenu_item(arg1_in, (Object*)arg2);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_remove_tool_menu_item_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorPlugin *>(ptr)->remove_tool_menu_item(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_add_custom_type_46093d7e(Object * ptr, MonoString* arg1, MonoString* arg2, Object * arg3, Object * arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<EditorPlugin *>(ptr)->add_custom_type(arg1_in, arg2_in, AutoRef(arg3), AutoRef(arg4));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_remove_custom_type_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorPlugin *>(ptr)->remove_custom_type(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_add_autoload_singleton_71d57a09(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<EditorPlugin *>(ptr)->add_autoload_singleton(arg1_in, arg2_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_remove_autoload_singleton_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorPlugin *>(ptr)->remove_autoload_singleton(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
int32_t godot_icall_EditorPlugin_update_overlays_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<EditorPlugin *>(ptr)->update_overlays();
    return static_cast<int32_t>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_make_bottom_panel_item_visible_3dddc41c(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->make_bottom_panel_item_visible((Control*)arg1);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_hide_bottom_panel_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->hide_bottom_panel();
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorPlugin_get_undo_redo_d103ffd7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorPlugin *>(ptr)->get_undo_redo();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_queue_save_layout_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->queue_save_layout();
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_add_import_plugin_cf7b8d08(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->add_import_plugin(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_remove_import_plugin_cf7b8d08(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->remove_import_plugin(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_add_scene_import_plugin_a94e748(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->add_scene_import_plugin(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_remove_scene_import_plugin_a94e748(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->remove_scene_import_plugin(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_add_export_plugin_371a38b3(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->add_export_plugin(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_remove_export_plugin_371a38b3(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->remove_export_plugin(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_add_spatial_gizmo_plugin_7a9f2d6b(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->add_spatial_gizmo_plugin(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_remove_spatial_gizmo_plugin_7a9f2d6b(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->remove_spatial_gizmo_plugin(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_add_inspector_plugin_8932c0fc(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->add_inspector_plugin(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_remove_inspector_plugin_8932c0fc(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->remove_inspector_plugin(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_set_input_event_forwarding_always_enabled_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->set_input_event_forwarding_always_enabled();
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorPlugin_set_force_draw_over_forwarding_enabled_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorPlugin *>(ptr)->set_force_draw_over_forwarding_enabled();
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorPlugin_get_editor_interface_2949c0d3(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorPlugin *>(ptr)->get_editor_interface();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorPlugin_get_script_create_dialog_bb0f1784(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorPlugin *>(ptr)->get_script_create_dialog();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorPlugin_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorPlugin")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall_EditorProperty_set_label_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorProperty *>(ptr)->set_label(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorProperty_get_label_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorProperty *>(ptr)->get_label();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorProperty_set_read_only_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<EditorProperty *>(ptr)->set_read_only(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorProperty_is_read_only_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorProperty *>(ptr)->is_read_only();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorProperty_set_checkable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<EditorProperty *>(ptr)->set_checkable(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorProperty_is_checkable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorProperty *>(ptr)->is_checkable();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorProperty_set_checked_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<EditorProperty *>(ptr)->set_checked(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorProperty_is_checked_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorProperty *>(ptr)->is_checked();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorProperty_set_draw_red_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<EditorProperty *>(ptr)->set_draw_red(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorProperty_is_draw_red_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorProperty *>(ptr)->is_draw_red();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorProperty_set_keying_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<EditorProperty *>(ptr)->set_keying(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorProperty_is_keying_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorProperty *>(ptr)->is_keying();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorProperty_get_edited_property_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorProperty *>(ptr)->get_edited_property();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorProperty_get_edited_object_5bd95814(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorProperty *>(ptr)->get_edited_object();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorProperty_get_tooltip_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorProperty *>(ptr)->get_tooltip_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorProperty_add_focusable_3dddc41c(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorProperty *>(ptr)->add_focusable((Control*)arg1);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorProperty_set_bottom_editor_3dddc41c(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorProperty *>(ptr)->set_bottom_editor((Control*)arg1);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorProperty_emit_changed_6b07a116(Object * ptr, MonoString* arg1, MonoObject* arg2, MonoString* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<EditorProperty *>(ptr)->emit_changed(arg1_in, arg2_in, arg3_in, arg4_in);
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorProperty_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorProperty")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_EditorResourceConversionPlugin_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorResourceConversionPlugin")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall_EditorResourcePreview_queue_resource_preview_f8c7c71b(Object * ptr, MonoString* arg1, Object * arg2, MonoString* arg3, MonoObject* arg4) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    Variant arg4_in = GDMonoMarshal::mono_object_to_variant(arg4);
    static_cast<EditorResourcePreview *>(ptr)->queue_resource_preview(arg1_in, (Object*)arg2, arg3_in, arg4_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorResourcePreview_queue_edited_resource_preview_40989ab6(Object * ptr, Object * arg1, Object * arg2, MonoString* arg3, MonoObject* arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    Variant arg4_in = GDMonoMarshal::mono_object_to_variant(arg4);
    static_cast<EditorResourcePreview *>(ptr)->queue_edited_resource_preview(AutoRef(arg1), (Object*)arg2, arg3_in, arg4_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorResourcePreview_add_preview_generator_49d15f9b(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorResourcePreview *>(ptr)->add_preview_generator(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorResourcePreview_remove_preview_generator_49d15f9b(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorResourcePreview *>(ptr)->remove_preview_generator(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorResourcePreview_check_for_invalidation_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorResourcePreview *>(ptr)->check_for_invalidation(arg1_in);
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorResourcePreviewGenerator_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorResourcePreviewGenerator")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorSceneImporter_import_scene_from_other_importer_465afea2(Object * ptr, MonoString* arg1, uint32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<EditorSceneImporter *>(ptr)->import_scene_from_other_importer(arg1_in, arg2_in, arg3_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorSceneImporter_import_animation_from_other_importer_e5807398(Object * ptr, MonoString* arg1, uint32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<EditorSceneImporter *>(ptr)->import_animation_from_other_importer(arg1_in, arg2_in, arg3_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorSceneImporter_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorSceneImporter")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorScenePostImport_get_source_folder_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorScenePostImport *>(ptr)->get_source_folder();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorScenePostImport_get_source_file_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorScenePostImport *>(ptr)->get_source_file();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorScenePostImport_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorScenePostImport")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall_EditorScript_add_root_node_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorScript *>(ptr)->add_root_node((Node*)arg1);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorScript_get_scene_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorScript *>(ptr)->get_scene();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorScript_get_editor_interface_2949c0d3(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorScript *>(ptr)->get_editor_interface();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorScript_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorScript")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall_EditorSelection_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorSelection *>(ptr)->clear();
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSelection_add_node_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorSelection *>(ptr)->add_node((Node*)arg1);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSelection_remove_node_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorSelection *>(ptr)->remove_node((Node*)arg1);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
Array* godot_icall_EditorSelection_get_selected_nodes_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorSelection *>(ptr)->get_selected_nodes();
    return memnew(Array(Variant::from(ret)));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
Array* godot_icall_EditorSelection_get_transformable_selected_nodes_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorSelection *>(ptr)->_get_transformable_selected_nodes();
    return memnew(Array(Variant::from(ret)));
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorSelection_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorSelection")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorSettings_has_setting_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorSettings *>(ptr)->has_setting(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSettings_set_setting_3a208116(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<EditorSettings *>(ptr)->set_setting(arg1_in, arg2_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorSettings_get_setting_6732bfd8(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorSettings *>(ptr)->get_setting(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSettings_erase_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorSettings *>(ptr)->erase(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSettings_set_initial_value_a7febfc1(Object * ptr, MonoString* arg1, MonoObject* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<EditorSettings *>(ptr)->set_initial_value(arg1_in, arg2_in, arg3_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorSettings_property_can_revert_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorSettings *>(ptr)->property_can_revert(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorSettings_property_get_revert_6732bfd8(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorSettings *>(ptr)->property_get_revert(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSettings_add_property_info_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorSettings *>(ptr)->_add_property_info_bind(*arg1);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorSettings_get_settings_dir_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorSettings *>(ptr)->get_settings_dir();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorSettings_get_project_settings_dir_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorSettings *>(ptr)->get_project_settings_dir();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSettings_set_project_metadata_5e75b9e1(Object * ptr, MonoString* arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<EditorSettings *>(ptr)->set_project_metadata(arg1_in, arg2_in, arg3_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorSettings_get_project_metadata_373d864b(Object * ptr, MonoString* arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    auto ret = static_cast<EditorSettings *>(ptr)->get_project_metadata(arg1_in, arg2_in, arg3_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSettings_set_favorites_a4cdc50a(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecString(arg1);
    static_cast<EditorSettings *>(ptr)->set_favorites(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoArray* godot_icall_EditorSettings_get_favorites_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorSettings *>(ptr)->get_favorites();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSettings_set_recent_dirs_a4cdc50a(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecString(arg1);
    static_cast<EditorSettings *>(ptr)->set_recent_dirs(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoArray* godot_icall_EditorSettings_get_recent_dirs_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorSettings *>(ptr)->get_recent_dirs();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmo_add_lines_23c392c(Object * ptr, MonoArray* arg1, Object * arg2, MonoBoolean arg3, GDMonoMarshal::M_Color* arg4) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector3(arg1);
    bool arg3_in = static_cast<bool>(arg3);
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    static_cast<EditorSpatialGizmo *>(ptr)->add_lines(arg1_in, AutoRef(arg2), arg3_in, arg4_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmo_add_mesh_32eec7d8(Object * ptr, Object * arg1, MonoBoolean arg2, Object * arg3, Object * arg4) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<EditorSpatialGizmo *>(ptr)->add_mesh(AutoRef(arg1), arg2_in, AutoRef(arg3), AutoRef(arg4));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmo_add_collision_segments_b8a866b9(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector3(arg1);
    static_cast<EditorSpatialGizmo *>(ptr)->add_collision_segments(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmo_add_collision_triangles_3616c62(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorSpatialGizmo *>(ptr)->add_collision_triangles(AutoRef(arg1));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmo_add_unscaled_billboard_514f3e17(Object * ptr, Object * arg1, float* arg2, GDMonoMarshal::M_Color* arg3) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    Color arg3_in = MARSHALLED_IN(Color, arg3);
    static_cast<EditorSpatialGizmo *>(ptr)->add_unscaled_billboard(AutoRef(arg1), arg2_in, arg3_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmo_add_handles_daf2f38f(Object * ptr, MonoArray* arg1, Object * arg2, MonoBoolean arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector3(arg1);
    bool arg3_in = static_cast<bool>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<EditorSpatialGizmo *>(ptr)->add_handles(eastl::move(arg1_in), AutoRef(arg2), arg3_in, arg4_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmo_set_spatial_node_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorSpatialGizmo *>(ptr)->set_spatial_node((Node*)arg1);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorSpatialGizmo_get_spatial_node_5ca237df(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorSpatialGizmo *>(ptr)->get_spatial_node();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorSpatialGizmo_get_plugin_a8b6fbf9(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorSpatialGizmo *>(ptr)->get_plugin();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmo_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<EditorSpatialGizmo *>(ptr)->clear();
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmo_set_hidden_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<EditorSpatialGizmo *>(ptr)->set_hidden(arg1_in);
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorSpatialGizmo_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorSpatialGizmo")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmoPlugin_create_material_6175c29e(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Color* arg2, MonoBoolean arg3, MonoBoolean arg4, MonoBoolean arg5) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    bool arg3_in = static_cast<bool>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    bool arg5_in = static_cast<bool>(arg5);
    static_cast<EditorSpatialGizmoPlugin *>(ptr)->create_material(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmoPlugin_create_icon_material_79329c02(Object * ptr, MonoString* arg1, Object * arg2, MonoBoolean arg3, GDMonoMarshal::M_Color* arg4) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    bool arg3_in = static_cast<bool>(arg3);
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    static_cast<EditorSpatialGizmoPlugin *>(ptr)->create_icon_material(arg1_in, AutoRef(arg2), arg3_in, arg4_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmoPlugin_create_handle_material_13aa175f(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<EditorSpatialGizmoPlugin *>(ptr)->create_handle_material(arg1_in, arg2_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpatialGizmoPlugin_add_material_1ba33d2e(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<EditorSpatialGizmoPlugin *>(ptr)->add_material(arg1_in, AutoRef(arg2));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_EditorSpatialGizmoPlugin_get_material_2887cae8(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<EditorSpatialGizmoPlugin *>(ptr)->get_material(arg1_in, AutoRef(arg2));
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorSpatialGizmoPlugin_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorSpatialGizmoPlugin")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall_EditorSpinSlider_set_label_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorSpinSlider *>(ptr)->set_label(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorSpinSlider_get_label_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorSpinSlider *>(ptr)->get_label();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpinSlider_set_read_only_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<EditorSpinSlider *>(ptr)->set_read_only(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorSpinSlider_is_read_only_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorSpinSlider *>(ptr)->is_read_only();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorSpinSlider_set_flat_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<EditorSpinSlider *>(ptr)->set_flat(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorSpinSlider_is_flat_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorSpinSlider *>(ptr)->is_flat();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorSpinSlider_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorSpinSlider")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorVCSInterface_is_addon_ready_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorVCSInterface *>(ptr)->is_addon_ready();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorVCSInterface_initialize_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorVCSInterface *>(ptr)->initialize(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorVCSInterface_is_vcs_initialized_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorVCSInterface *>(ptr)->is_vcs_initialized();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
Dictionary* godot_icall_EditorVCSInterface_get_modified_files_data_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorVCSInterface *>(ptr)->get_modified_files_data();
    return memnew(Dictionary(ret));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorVCSInterface_stage_file_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorVCSInterface *>(ptr)->stage_file(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorVCSInterface_unstage_file_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorVCSInterface *>(ptr)->unstage_file(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_EditorVCSInterface_commit_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<EditorVCSInterface *>(ptr)->commit(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
Array* godot_icall_EditorVCSInterface_get_file_diff_679a25ab(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<EditorVCSInterface *>(ptr)->get_file_diff(arg1_in);
    return memnew(Array(Variant::from(ret)));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_EditorVCSInterface_shut_down_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<EditorVCSInterface *>(ptr)->shut_down();
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorVCSInterface_get_project_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorVCSInterface *>(ptr)->get_project_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoString* godot_icall_EditorVCSInterface_get_vcs_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<EditorVCSInterface *>(ptr)->get_vcs_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

#endif // TOOLS_ENABLED
Object* godot_icall_EditorVCSInterface_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EditorVCSInterface")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_EncodedObjectAsID_set_object_id_9d9e6424(Object * ptr, uint64_t* arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = static_cast<int64_t>(*arg1);
    static_cast<EncodedObjectAsID *>(ptr)->set_object_id(arg1_in);
}

void godot_icall_EncodedObjectAsID_get_object_id_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<EncodedObjectAsID *>(ptr)->get_object_id();
    *arg_ret = (uint64_t)ret;
}

Object* godot_icall_EncodedObjectAsID_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "EncodedObjectAsID")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Environment_set_background_5dc487f6(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Environment *>(ptr)->set_background((Environment::BGMode)arg1_in);
}

void godot_icall_Environment_set_sky_e50160c0(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Environment *>(ptr)->set_sky(AutoRef(arg1));
}

void godot_icall_Environment_set_sky_custom_fov_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_sky_custom_fov(arg1_in);
}

void godot_icall_Environment_set_sky_orientation_99ef666f(Object * ptr, GDMonoMarshal::M_Basis* arg1) {
    ERR_FAIL_NULL(ptr);
    Basis arg1_in = MARSHALLED_IN(Basis, arg1);
    static_cast<Environment *>(ptr)->set_sky_orientation(arg1_in);
}

void godot_icall_Environment_set_sky_rotation_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Environment *>(ptr)->set_sky_rotation(arg1_in);
}

void godot_icall_Environment_set_sky_rotation_degrees_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Environment *>(ptr)->set_sky_rotation_degrees(arg1_in);
}

void godot_icall_Environment_set_bg_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<Environment *>(ptr)->set_bg_color(arg1_in);
}

void godot_icall_Environment_set_bg_energy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_bg_energy(arg1_in);
}

void godot_icall_Environment_set_canvas_max_layer_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Environment *>(ptr)->set_canvas_max_layer(arg1_in);
}

void godot_icall_Environment_set_ambient_light_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<Environment *>(ptr)->set_ambient_light_color(arg1_in);
}

void godot_icall_Environment_set_ambient_light_energy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ambient_light_energy(arg1_in);
}

void godot_icall_Environment_set_ambient_light_sky_contribution_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ambient_light_sky_contribution(arg1_in);
}

void godot_icall_Environment_set_camera_feed_id_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Environment *>(ptr)->set_camera_feed_id(arg1_in);
}

int32_t godot_icall_Environment_get_background_8b5e6276(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Environment *>(ptr)->get_background();
    return (int32_t)ret;
}

MonoObject* godot_icall_Environment_get_sky_2420bfa4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Environment *>(ptr)->get_sky();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Environment_get_sky_custom_fov_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_sky_custom_fov();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_get_sky_orientation_4746c0fd(Object * ptr, GDMonoMarshal::M_Basis* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Basis(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_sky_orientation();
    *arg_ret = MARSHALLED_OUT(Basis, ret);
}

void godot_icall_Environment_get_sky_rotation_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_sky_rotation();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Environment_get_sky_rotation_degrees_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_sky_rotation_degrees();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Environment_get_bg_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_bg_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Environment_get_bg_energy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_bg_energy();
    *arg_ret = (float)ret;
}

int32_t godot_icall_Environment_get_canvas_max_layer_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Environment *>(ptr)->get_canvas_max_layer();
    return static_cast<int32_t>(ret);
}

void godot_icall_Environment_get_ambient_light_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ambient_light_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Environment_get_ambient_light_energy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ambient_light_energy();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_get_ambient_light_sky_contribution_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ambient_light_sky_contribution();
    *arg_ret = (float)ret;
}

int32_t godot_icall_Environment_get_camera_feed_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Environment *>(ptr)->get_camera_feed_id();
    return static_cast<int32_t>(ret);
}

void godot_icall_Environment_set_fog_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_fog_enabled(arg1_in);
}

MonoBoolean godot_icall_Environment_is_fog_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->is_fog_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_fog_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<Environment *>(ptr)->set_fog_color(arg1_in);
}

void godot_icall_Environment_get_fog_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_fog_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Environment_set_fog_sun_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<Environment *>(ptr)->set_fog_sun_color(arg1_in);
}

void godot_icall_Environment_get_fog_sun_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_fog_sun_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Environment_set_fog_sun_amount_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_fog_sun_amount(arg1_in);
}

void godot_icall_Environment_get_fog_sun_amount_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_fog_sun_amount();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_fog_depth_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_fog_depth_enabled(arg1_in);
}

MonoBoolean godot_icall_Environment_is_fog_depth_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->is_fog_depth_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_fog_depth_begin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_fog_depth_begin(arg1_in);
}

void godot_icall_Environment_get_fog_depth_begin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_fog_depth_begin();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_fog_depth_end_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_fog_depth_end(arg1_in);
}

void godot_icall_Environment_get_fog_depth_end_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_fog_depth_end();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_fog_depth_curve_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_fog_depth_curve(arg1_in);
}

void godot_icall_Environment_get_fog_depth_curve_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_fog_depth_curve();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_fog_transmit_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_fog_transmit_enabled(arg1_in);
}

MonoBoolean godot_icall_Environment_is_fog_transmit_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->is_fog_transmit_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_fog_transmit_curve_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_fog_transmit_curve(arg1_in);
}

void godot_icall_Environment_get_fog_transmit_curve_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_fog_transmit_curve();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_fog_height_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_fog_height_enabled(arg1_in);
}

MonoBoolean godot_icall_Environment_is_fog_height_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->is_fog_height_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_fog_height_min_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_fog_height_min(arg1_in);
}

void godot_icall_Environment_get_fog_height_min_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_fog_height_min();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_fog_height_max_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_fog_height_max(arg1_in);
}

void godot_icall_Environment_get_fog_height_max_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_fog_height_max();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_fog_height_curve_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_fog_height_curve(arg1_in);
}

void godot_icall_Environment_get_fog_height_curve_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_fog_height_curve();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_tonemapper_8df61ecb(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Environment *>(ptr)->set_tonemapper((Environment::ToneMapper)arg1_in);
}

int32_t godot_icall_Environment_get_tonemapper_3b4fe999(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Environment *>(ptr)->get_tonemapper();
    return (int32_t)ret;
}

void godot_icall_Environment_set_tonemap_exposure_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_tonemap_exposure(arg1_in);
}

void godot_icall_Environment_get_tonemap_exposure_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_tonemap_exposure();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_tonemap_white_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_tonemap_white(arg1_in);
}

void godot_icall_Environment_get_tonemap_white_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_tonemap_white();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_tonemap_auto_exposure_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_tonemap_auto_exposure(arg1_in);
}

MonoBoolean godot_icall_Environment_get_tonemap_auto_exposure_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->get_tonemap_auto_exposure();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_tonemap_auto_exposure_max_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_tonemap_auto_exposure_max(arg1_in);
}

void godot_icall_Environment_get_tonemap_auto_exposure_max_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_tonemap_auto_exposure_max();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_tonemap_auto_exposure_min_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_tonemap_auto_exposure_min(arg1_in);
}

void godot_icall_Environment_get_tonemap_auto_exposure_min_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_tonemap_auto_exposure_min();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_tonemap_auto_exposure_speed_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_tonemap_auto_exposure_speed(arg1_in);
}

void godot_icall_Environment_get_tonemap_auto_exposure_speed_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_tonemap_auto_exposure_speed();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_tonemap_auto_exposure_grey_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_tonemap_auto_exposure_grey(arg1_in);
}

void godot_icall_Environment_get_tonemap_auto_exposure_grey_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_tonemap_auto_exposure_grey();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_ssr_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_ssr_enabled(arg1_in);
}

MonoBoolean godot_icall_Environment_is_ssr_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->is_ssr_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_ssr_max_steps_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Environment *>(ptr)->set_ssr_max_steps(arg1_in);
}

int32_t godot_icall_Environment_get_ssr_max_steps_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Environment *>(ptr)->get_ssr_max_steps();
    return static_cast<int32_t>(ret);
}

void godot_icall_Environment_set_ssr_fade_in_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ssr_fade_in(arg1_in);
}

void godot_icall_Environment_get_ssr_fade_in_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ssr_fade_in();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_ssr_fade_out_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ssr_fade_out(arg1_in);
}

void godot_icall_Environment_get_ssr_fade_out_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ssr_fade_out();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_ssr_depth_tolerance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ssr_depth_tolerance(arg1_in);
}

void godot_icall_Environment_get_ssr_depth_tolerance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ssr_depth_tolerance();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_ssr_rough_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_ssr_rough(arg1_in);
}

MonoBoolean godot_icall_Environment_is_ssr_rough_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->is_ssr_rough();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_ssao_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_ssao_enabled(arg1_in);
}

MonoBoolean godot_icall_Environment_is_ssao_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->is_ssao_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_ssao_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ssao_radius(arg1_in);
}

void godot_icall_Environment_get_ssao_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ssao_radius();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_ssao_intensity_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ssao_intensity(arg1_in);
}

void godot_icall_Environment_get_ssao_intensity_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ssao_intensity();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_ssao_radius2_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ssao_radius2(arg1_in);
}

void godot_icall_Environment_get_ssao_radius2_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ssao_radius2();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_ssao_intensity2_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ssao_intensity2(arg1_in);
}

void godot_icall_Environment_get_ssao_intensity2_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ssao_intensity2();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_ssao_bias_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ssao_bias(arg1_in);
}

void godot_icall_Environment_get_ssao_bias_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ssao_bias();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_ssao_direct_light_affect_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ssao_direct_light_affect(arg1_in);
}

void godot_icall_Environment_get_ssao_direct_light_affect_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ssao_direct_light_affect();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_ssao_ao_channel_affect_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ssao_ao_channel_affect(arg1_in);
}

void godot_icall_Environment_get_ssao_ao_channel_affect_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ssao_ao_channel_affect();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_ssao_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<Environment *>(ptr)->set_ssao_color(arg1_in);
}

void godot_icall_Environment_get_ssao_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ssao_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Environment_set_ssao_blur_43b57e0d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Environment *>(ptr)->set_ssao_blur((Environment::SSAOBlur)arg1_in);
}

int32_t godot_icall_Environment_get_ssao_blur_818cc95f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Environment *>(ptr)->get_ssao_blur();
    return (int32_t)ret;
}

void godot_icall_Environment_set_ssao_quality_44bf4675(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Environment *>(ptr)->set_ssao_quality((Environment::SSAOQuality)arg1_in);
}

int32_t godot_icall_Environment_get_ssao_quality_8296a0f7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Environment *>(ptr)->get_ssao_quality();
    return (int32_t)ret;
}

void godot_icall_Environment_set_ssao_edge_sharpness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_ssao_edge_sharpness(arg1_in);
}

void godot_icall_Environment_get_ssao_edge_sharpness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_ssao_edge_sharpness();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_dof_blur_far_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_dof_blur_far_enabled(arg1_in);
}

MonoBoolean godot_icall_Environment_is_dof_blur_far_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->is_dof_blur_far_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_dof_blur_far_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_dof_blur_far_distance(arg1_in);
}

void godot_icall_Environment_get_dof_blur_far_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_dof_blur_far_distance();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_dof_blur_far_transition_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_dof_blur_far_transition(arg1_in);
}

void godot_icall_Environment_get_dof_blur_far_transition_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_dof_blur_far_transition();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_dof_blur_far_amount_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_dof_blur_far_amount(arg1_in);
}

void godot_icall_Environment_get_dof_blur_far_amount_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_dof_blur_far_amount();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_dof_blur_far_quality_287b91fb(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Environment *>(ptr)->set_dof_blur_far_quality((Environment::DOFBlurQuality)arg1_in);
}

int32_t godot_icall_Environment_get_dof_blur_far_quality_d6db7069(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Environment *>(ptr)->get_dof_blur_far_quality();
    return (int32_t)ret;
}

void godot_icall_Environment_set_dof_blur_near_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_dof_blur_near_enabled(arg1_in);
}

MonoBoolean godot_icall_Environment_is_dof_blur_near_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->is_dof_blur_near_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_dof_blur_near_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_dof_blur_near_distance(arg1_in);
}

void godot_icall_Environment_get_dof_blur_near_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_dof_blur_near_distance();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_dof_blur_near_transition_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_dof_blur_near_transition(arg1_in);
}

void godot_icall_Environment_get_dof_blur_near_transition_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_dof_blur_near_transition();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_dof_blur_near_amount_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_dof_blur_near_amount(arg1_in);
}

void godot_icall_Environment_get_dof_blur_near_amount_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_dof_blur_near_amount();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_dof_blur_near_quality_287b91fb(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Environment *>(ptr)->set_dof_blur_near_quality((Environment::DOFBlurQuality)arg1_in);
}

int32_t godot_icall_Environment_get_dof_blur_near_quality_d6db7069(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Environment *>(ptr)->get_dof_blur_near_quality();
    return (int32_t)ret;
}

void godot_icall_Environment_set_glow_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_glow_enabled(arg1_in);
}

MonoBoolean godot_icall_Environment_is_glow_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->is_glow_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_glow_level_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Environment *>(ptr)->set_glow_level(arg1_in, arg2_in);
}

MonoBoolean godot_icall_Environment_is_glow_level_enabled_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Environment *>(ptr)->is_glow_level_enabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_glow_intensity_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_glow_intensity(arg1_in);
}

void godot_icall_Environment_get_glow_intensity_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_glow_intensity();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_glow_strength_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_glow_strength(arg1_in);
}

void godot_icall_Environment_get_glow_strength_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_glow_strength();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_glow_bloom_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_glow_bloom(arg1_in);
}

void godot_icall_Environment_get_glow_bloom_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_glow_bloom();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_glow_blend_mode_69befe6d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Environment *>(ptr)->set_glow_blend_mode((Environment::GlowBlendMode)arg1_in);
}

int32_t godot_icall_Environment_get_glow_blend_mode_7ac6bd98(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Environment *>(ptr)->get_glow_blend_mode();
    return (int32_t)ret;
}

void godot_icall_Environment_set_glow_hdr_bleed_threshold_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_glow_hdr_bleed_threshold(arg1_in);
}

void godot_icall_Environment_get_glow_hdr_bleed_threshold_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_glow_hdr_bleed_threshold();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_glow_hdr_luminance_cap_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_glow_hdr_luminance_cap(arg1_in);
}

void godot_icall_Environment_get_glow_hdr_luminance_cap_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_glow_hdr_luminance_cap();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_glow_hdr_bleed_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_glow_hdr_bleed_scale(arg1_in);
}

void godot_icall_Environment_get_glow_hdr_bleed_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_glow_hdr_bleed_scale();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_glow_bicubic_upscale_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_glow_bicubic_upscale(arg1_in);
}

MonoBoolean godot_icall_Environment_is_glow_bicubic_upscale_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->is_glow_bicubic_upscale_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_adjustment_enable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Environment *>(ptr)->set_adjustment_enable(arg1_in);
}

MonoBoolean godot_icall_Environment_is_adjustment_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Environment *>(ptr)->is_adjustment_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Environment_set_adjustment_brightness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_adjustment_brightness(arg1_in);
}

void godot_icall_Environment_get_adjustment_brightness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_adjustment_brightness();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_adjustment_contrast_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_adjustment_contrast(arg1_in);
}

void godot_icall_Environment_get_adjustment_contrast_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_adjustment_contrast();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_adjustment_saturation_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Environment *>(ptr)->set_adjustment_saturation(arg1_in);
}

void godot_icall_Environment_get_adjustment_saturation_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Environment *>(ptr)->get_adjustment_saturation();
    *arg_ret = (float)ret;
}

void godot_icall_Environment_set_adjustment_color_correction_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Environment *>(ptr)->set_adjustment_color_correction(AutoRef(arg1));
}

MonoObject* godot_icall_Environment_get_adjustment_color_correction_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Environment *>(ptr)->get_adjustment_color_correction();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_Environment_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Environment")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_Expression_parse_840b1acd(Object * ptr, MonoString* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecString(arg2);
    auto ret = static_cast<Expression *>(ptr)->parse(arg1_in, arg2_in);
    return (int32_t)ret;
}

MonoObject* godot_icall_Expression_execute_4b704ee5(Object * ptr, Array* arg1, Object * arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    bool arg3_in = static_cast<bool>(arg3);
    auto ret = static_cast<Expression *>(ptr)->execute(*arg1, (Object*)arg2, arg3_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoBoolean godot_icall_Expression_has_execute_failed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Expression *>(ptr)->has_execute_failed();
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_Expression_get_error_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Expression *>(ptr)->get_error_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_Expression_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Expression")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_FileDialog_clear_filters_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<FileDialog *>(ptr)->clear_filters();
}

void godot_icall_FileDialog_add_filter_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<FileDialog *>(ptr)->add_filter(arg1_in);
}

void godot_icall_FileDialog_set_filters_a4cdc50a(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecString(arg1);
    static_cast<FileDialog *>(ptr)->set_filters(arg1_in);
}

MonoArray* godot_icall_FileDialog_get_filters_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<FileDialog *>(ptr)->get_filters();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

MonoString* godot_icall_FileDialog_get_current_dir_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<FileDialog *>(ptr)->get_current_dir();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_FileDialog_get_current_file_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<FileDialog *>(ptr)->get_current_file();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_FileDialog_get_current_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<FileDialog *>(ptr)->get_current_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_FileDialog_set_current_dir_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<FileDialog *>(ptr)->set_current_dir(arg1_in);
}

void godot_icall_FileDialog_set_current_file_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<FileDialog *>(ptr)->set_current_file(arg1_in);
}

void godot_icall_FileDialog_set_current_path_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<FileDialog *>(ptr)->set_current_path(arg1_in);
}

void godot_icall_FileDialog_set_mode_overrides_title_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<FileDialog *>(ptr)->set_mode_overrides_title(arg1_in);
}

MonoBoolean godot_icall_FileDialog_is_mode_overriding_title_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<FileDialog *>(ptr)->is_mode_overriding_title();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_FileDialog_set_mode_f90d15da(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<FileDialog *>(ptr)->set_mode((FileDialog::Mode)arg1_in);
}

int32_t godot_icall_FileDialog_get_mode_86c49715(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<FileDialog *>(ptr)->get_mode();
    return (int32_t)ret;
}

MonoObject* godot_icall_FileDialog_get_vbox_eb5679a1(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<FileDialog *>(ptr)->get_vbox();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_FileDialog_get_line_edit_3297ede3(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<FileDialog *>(ptr)->get_line_edit();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_FileDialog_set_access_fcfab4d7(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<FileDialog *>(ptr)->set_access((FileDialog::Access)arg1_in);
}

int32_t godot_icall_FileDialog_get_access_c52e5272(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<FileDialog *>(ptr)->get_access();
    return (int32_t)ret;
}

void godot_icall_FileDialog_set_show_hidden_files_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<FileDialog *>(ptr)->set_show_hidden_files(arg1_in);
}

MonoBoolean godot_icall_FileDialog_is_showing_hidden_files_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<FileDialog *>(ptr)->is_showing_hidden_files();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_FileDialog_deselect_items_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<FileDialog *>(ptr)->deselect_items();
}

void godot_icall_FileDialog_invalidate_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<FileDialog *>(ptr)->invalidate();
}

Object* godot_icall_FileDialog_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "FileDialog")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Font_draw_67a9f450(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2, MonoString* arg3, GDMonoMarshal::M_Color* arg4, int32_t arg5, GDMonoMarshal::M_Color* arg6) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    TmpString<512> arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    Color arg6_in = MARSHALLED_IN(Color, arg6);
    static_cast<Font *>(ptr)->draw(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in);
}

void godot_icall_Font_get_ascent_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Font *>(ptr)->get_ascent();
    *arg_ret = (float)ret;
}

void godot_icall_Font_get_descent_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Font *>(ptr)->get_descent();
    *arg_ret = (float)ret;
}

void godot_icall_Font_get_height_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Font *>(ptr)->get_height();
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_Font_is_distance_field_hint_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Font *>(ptr)->is_distance_field_hint();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Font_get_string_size_187aef93(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Font *>(ptr)->get_string_size(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Font_get_wordwrap_string_size_9941d95(Object * ptr, MonoString* arg1, float* arg2, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<Font *>(ptr)->get_wordwrap_string_size(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoBoolean godot_icall_Font_has_outline_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Font *>(ptr)->has_outline();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Font_draw_char_24a8008b(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2, uint16_t arg3, uint16_t arg4, GDMonoMarshal::M_Color* arg5, MonoBoolean arg6, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    uint16_t arg3_in = static_cast<uint16_t>(arg3);
    uint16_t arg4_in = static_cast<uint16_t>(arg4);
    Color arg5_in = MARSHALLED_IN(Color, arg5);
    bool arg6_in = static_cast<bool>(arg6);
    auto ret = static_cast<Font *>(ptr)->draw_char(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in);
    *arg_ret = (float)ret;
}

void godot_icall_Font_update_changes_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Font *>(ptr)->update_changes();
}

MonoObject* godot_icall_FuncRef_call_func_e5975f9d(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int vararg_length = mono_array_length(arg1);
    int total_length = 0 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg1, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[0 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    auto ret = static_cast<FuncRef *>(ptr)->call_func(call_args.data(), total_length, vcall_error);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoObject* godot_icall_FuncRef_call_funcv_61377341(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<FuncRef *>(ptr)->call_funcv(*arg1);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_FuncRef_set_instance_ad798950(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<FuncRef *>(ptr)->set_instance((Object*)arg1);
}

void godot_icall_FuncRef_set_function_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<FuncRef *>(ptr)->set_function(arg1_in);
}

MonoBoolean godot_icall_FuncRef_is_valid_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<FuncRef *>(ptr)->is_valid();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_FuncRef_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "FuncRef")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoObject* godot_icall_GDScript_new_e5975f9d(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int vararg_length = mono_array_length(arg1);
    int total_length = 0 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg1, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[0 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    auto ret = static_cast<GDScript *>(ptr)->_new(call_args.data(), total_length, vcall_error);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoArray* godot_icall_GDScript_get_as_byte_code_8edaba4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<GDScript *>(ptr)->get_as_byte_code();
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

Object* godot_icall_GDScript_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "GDScript")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoObject* godot_icall_GDScriptFunctionState_resume_2ac9679d(Object * ptr, MonoObject* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    auto ret = static_cast<GDScriptFunctionState *>(ptr)->resume(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoBoolean godot_icall_GDScriptFunctionState_is_valid_9f31871(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<GDScriptFunctionState *>(ptr)->is_valid(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GIProbe_set_probe_data_16797b27(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<GIProbe *>(ptr)->set_probe_data(AutoRef(arg1));
}

MonoObject* godot_icall_GIProbe_get_probe_data_d4d8c645(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<GIProbe *>(ptr)->get_probe_data();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_GIProbe_set_subdiv_283224ce(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<GIProbe *>(ptr)->set_subdiv((GIProbe::Subdiv)arg1_in);
}

int32_t godot_icall_GIProbe_get_subdiv_7e87e149(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<GIProbe *>(ptr)->get_subdiv();
    return (int32_t)ret;
}

void godot_icall_GIProbe_set_extents_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<GIProbe *>(ptr)->set_extents(arg1_in);
}

void godot_icall_GIProbe_get_extents_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GIProbe *>(ptr)->get_extents();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_GIProbe_set_dynamic_range_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<GIProbe *>(ptr)->set_dynamic_range(arg1_in);
}

int32_t godot_icall_GIProbe_get_dynamic_range_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<GIProbe *>(ptr)->get_dynamic_range();
    return static_cast<int32_t>(ret);
}

void godot_icall_GIProbe_set_energy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GIProbe *>(ptr)->set_energy(arg1_in);
}

void godot_icall_GIProbe_get_energy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GIProbe *>(ptr)->get_energy();
    *arg_ret = (float)ret;
}

void godot_icall_GIProbe_set_bias_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GIProbe *>(ptr)->set_bias(arg1_in);
}

void godot_icall_GIProbe_get_bias_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GIProbe *>(ptr)->get_bias();
    *arg_ret = (float)ret;
}

void godot_icall_GIProbe_set_normal_bias_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GIProbe *>(ptr)->set_normal_bias(arg1_in);
}

void godot_icall_GIProbe_get_normal_bias_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GIProbe *>(ptr)->get_normal_bias();
    *arg_ret = (float)ret;
}

void godot_icall_GIProbe_set_propagation_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GIProbe *>(ptr)->set_propagation(arg1_in);
}

void godot_icall_GIProbe_get_propagation_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GIProbe *>(ptr)->get_propagation();
    *arg_ret = (float)ret;
}

void godot_icall_GIProbe_set_interior_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GIProbe *>(ptr)->set_interior(arg1_in);
}

MonoBoolean godot_icall_GIProbe_is_interior_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GIProbe *>(ptr)->is_interior();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GIProbe_set_compress_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GIProbe *>(ptr)->set_compress(arg1_in);
}

MonoBoolean godot_icall_GIProbe_is_compressed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GIProbe *>(ptr)->is_compressed();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GIProbe_bake_26387a5c(Object * ptr, Object * arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<GIProbe *>(ptr)->bake((Node*)arg1, arg2_in);
}

void godot_icall_GIProbe_debug_bake_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<GIProbe *>(ptr)->_debug_bake();
}

Object* godot_icall_GIProbe_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "GIProbe")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_GIProbeData_set_bounds_ff67b409(Object * ptr, GDMonoMarshal::M_AABB* arg1) {
    ERR_FAIL_NULL(ptr);
    AABB arg1_in = MARSHALLED_IN(AABB, arg1);
    static_cast<GIProbeData *>(ptr)->set_bounds(arg1_in);
}

void godot_icall_GIProbeData_get_bounds_2dbf935b(Object * ptr, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GIProbeData *>(ptr)->get_bounds();
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

void godot_icall_GIProbeData_set_cell_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GIProbeData *>(ptr)->set_cell_size(arg1_in);
}

void godot_icall_GIProbeData_get_cell_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GIProbeData *>(ptr)->get_cell_size();
    *arg_ret = (float)ret;
}

void godot_icall_GIProbeData_set_to_cell_xform_655b85c9(Object * ptr, GDMonoMarshal::M_Transform* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform arg1_in = MARSHALLED_IN(Transform, arg1);
    static_cast<GIProbeData *>(ptr)->set_to_cell_xform(arg1_in);
}

void godot_icall_GIProbeData_get_to_cell_xform_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GIProbeData *>(ptr)->get_to_cell_xform();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_GIProbeData_set_dynamic_data_fb3c9f9f(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolIntArray arg1_in = GDMonoMarshal::mono_array_to_PoolIntArray(arg1);
    static_cast<GIProbeData *>(ptr)->set_dynamic_data(arg1_in);
}

MonoArray* godot_icall_GIProbeData_get_dynamic_data_2a166acd(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<GIProbeData *>(ptr)->get_dynamic_data();
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

void godot_icall_GIProbeData_set_dynamic_range_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<GIProbeData *>(ptr)->set_dynamic_range(arg1_in);
}

int32_t godot_icall_GIProbeData_get_dynamic_range_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<GIProbeData *>(ptr)->get_dynamic_range();
    return static_cast<int32_t>(ret);
}

void godot_icall_GIProbeData_set_energy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GIProbeData *>(ptr)->set_energy(arg1_in);
}

void godot_icall_GIProbeData_get_energy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GIProbeData *>(ptr)->get_energy();
    *arg_ret = (float)ret;
}

void godot_icall_GIProbeData_set_bias_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GIProbeData *>(ptr)->set_bias(arg1_in);
}

void godot_icall_GIProbeData_get_bias_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GIProbeData *>(ptr)->get_bias();
    *arg_ret = (float)ret;
}

void godot_icall_GIProbeData_set_normal_bias_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GIProbeData *>(ptr)->set_normal_bias(arg1_in);
}

void godot_icall_GIProbeData_get_normal_bias_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GIProbeData *>(ptr)->get_normal_bias();
    *arg_ret = (float)ret;
}

void godot_icall_GIProbeData_set_propagation_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GIProbeData *>(ptr)->set_propagation(arg1_in);
}

void godot_icall_GIProbeData_get_propagation_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GIProbeData *>(ptr)->get_propagation();
    *arg_ret = (float)ret;
}

void godot_icall_GIProbeData_set_interior_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GIProbeData *>(ptr)->set_interior(arg1_in);
}

MonoBoolean godot_icall_GIProbeData_is_interior_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GIProbeData *>(ptr)->is_interior();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GIProbeData_set_compress_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GIProbeData *>(ptr)->set_compress(arg1_in);
}

MonoBoolean godot_icall_GIProbeData_is_compressed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GIProbeData *>(ptr)->is_compressed();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_GIProbeData_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "GIProbeData")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Generic6DOFJoint__set_angular_hi_limit_x_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Generic6DOFJoint *>(ptr)->_set_angular_hi_limit_x(arg1_in);
}

void godot_icall_Generic6DOFJoint__get_angular_hi_limit_x_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->_get_angular_hi_limit_x();
    *arg_ret = (float)ret;
}

void godot_icall_Generic6DOFJoint__set_angular_lo_limit_x_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Generic6DOFJoint *>(ptr)->_set_angular_lo_limit_x(arg1_in);
}

void godot_icall_Generic6DOFJoint__get_angular_lo_limit_x_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->_get_angular_lo_limit_x();
    *arg_ret = (float)ret;
}

void godot_icall_Generic6DOFJoint__set_angular_hi_limit_y_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Generic6DOFJoint *>(ptr)->_set_angular_hi_limit_y(arg1_in);
}

void godot_icall_Generic6DOFJoint__get_angular_hi_limit_y_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->_get_angular_hi_limit_y();
    *arg_ret = (float)ret;
}

void godot_icall_Generic6DOFJoint__set_angular_lo_limit_y_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Generic6DOFJoint *>(ptr)->_set_angular_lo_limit_y(arg1_in);
}

void godot_icall_Generic6DOFJoint__get_angular_lo_limit_y_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->_get_angular_lo_limit_y();
    *arg_ret = (float)ret;
}

void godot_icall_Generic6DOFJoint__set_angular_hi_limit_z_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Generic6DOFJoint *>(ptr)->_set_angular_hi_limit_z(arg1_in);
}

void godot_icall_Generic6DOFJoint__get_angular_hi_limit_z_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->_get_angular_hi_limit_z();
    *arg_ret = (float)ret;
}

void godot_icall_Generic6DOFJoint__set_angular_lo_limit_z_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Generic6DOFJoint *>(ptr)->_set_angular_lo_limit_z(arg1_in);
}

void godot_icall_Generic6DOFJoint__get_angular_lo_limit_z_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->_get_angular_lo_limit_z();
    *arg_ret = (float)ret;
}

void godot_icall_Generic6DOFJoint_set_param_x_afe4c5c6(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Generic6DOFJoint *>(ptr)->set_param_x((Generic6DOFJoint::Param)arg1_in, arg2_in);
}

void godot_icall_Generic6DOFJoint_get_param_x_171066b4(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->get_param_x((Generic6DOFJoint::Param)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Generic6DOFJoint_set_param_y_afe4c5c6(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Generic6DOFJoint *>(ptr)->set_param_y((Generic6DOFJoint::Param)arg1_in, arg2_in);
}

void godot_icall_Generic6DOFJoint_get_param_y_171066b4(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->get_param_y((Generic6DOFJoint::Param)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Generic6DOFJoint_set_param_z_afe4c5c6(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Generic6DOFJoint *>(ptr)->set_param_z((Generic6DOFJoint::Param)arg1_in, arg2_in);
}

void godot_icall_Generic6DOFJoint_get_param_z_171066b4(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->get_param_z((Generic6DOFJoint::Param)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Generic6DOFJoint_set_flag_x_a5ed5d6b(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Generic6DOFJoint *>(ptr)->set_flag_x((Generic6DOFJoint::Flag)arg1_in, arg2_in);
}

MonoBoolean godot_icall_Generic6DOFJoint_get_flag_x_6eb0fe61(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->get_flag_x((Generic6DOFJoint::Flag)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Generic6DOFJoint_set_flag_y_a5ed5d6b(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Generic6DOFJoint *>(ptr)->set_flag_y((Generic6DOFJoint::Flag)arg1_in, arg2_in);
}

MonoBoolean godot_icall_Generic6DOFJoint_get_flag_y_6eb0fe61(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->get_flag_y((Generic6DOFJoint::Flag)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Generic6DOFJoint_set_flag_z_a5ed5d6b(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Generic6DOFJoint *>(ptr)->set_flag_z((Generic6DOFJoint::Flag)arg1_in, arg2_in);
}

MonoBoolean godot_icall_Generic6DOFJoint_get_flag_z_6eb0fe61(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->get_flag_z((Generic6DOFJoint::Flag)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Generic6DOFJoint_set_precision_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Generic6DOFJoint *>(ptr)->set_precision(arg1_in);
}

int32_t godot_icall_Generic6DOFJoint_get_precision_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Generic6DOFJoint *>(ptr)->get_precision();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_Generic6DOFJoint_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Generic6DOFJoint")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_GeometryInstance_set_material_override_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<GeometryInstance *>(ptr)->set_material_override(AutoRef(arg1));
}

MonoObject* godot_icall_GeometryInstance_get_material_override_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<GeometryInstance *>(ptr)->get_material_override();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_GeometryInstance_set_flag_2816383(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<GeometryInstance *>(ptr)->set_flag((GeometryInstance::Flags)arg1_in, arg2_in);
}

MonoBoolean godot_icall_GeometryInstance_get_flag_b3f4b12b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<GeometryInstance *>(ptr)->get_flag((GeometryInstance::Flags)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GeometryInstance_set_cast_shadows_setting_7dd9c999(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<GeometryInstance *>(ptr)->set_cast_shadows_setting((GeometryInstance::ShadowCastingSetting)arg1_in);
}

int32_t godot_icall_GeometryInstance_get_cast_shadows_setting_ab7918cb(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<GeometryInstance *>(ptr)->get_cast_shadows_setting();
    return (int32_t)ret;
}

void godot_icall_GeometryInstance_set_lod_max_hysteresis_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GeometryInstance *>(ptr)->set_lod_max_hysteresis(arg1_in);
}

void godot_icall_GeometryInstance_get_lod_max_hysteresis_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GeometryInstance *>(ptr)->get_lod_max_hysteresis();
    *arg_ret = (float)ret;
}

void godot_icall_GeometryInstance_set_lod_max_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GeometryInstance *>(ptr)->set_lod_max_distance(arg1_in);
}

void godot_icall_GeometryInstance_get_lod_max_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GeometryInstance *>(ptr)->get_lod_max_distance();
    *arg_ret = (float)ret;
}

void godot_icall_GeometryInstance_set_lod_min_hysteresis_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GeometryInstance *>(ptr)->set_lod_min_hysteresis(arg1_in);
}

void godot_icall_GeometryInstance_get_lod_min_hysteresis_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GeometryInstance *>(ptr)->get_lod_min_hysteresis();
    *arg_ret = (float)ret;
}

void godot_icall_GeometryInstance_set_lod_min_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GeometryInstance *>(ptr)->set_lod_min_distance(arg1_in);
}

void godot_icall_GeometryInstance_get_lod_min_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GeometryInstance *>(ptr)->get_lod_min_distance();
    *arg_ret = (float)ret;
}

void godot_icall_GeometryInstance_set_extra_cull_margin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GeometryInstance *>(ptr)->set_extra_cull_margin(arg1_in);
}

void godot_icall_GeometryInstance_get_extra_cull_margin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GeometryInstance *>(ptr)->get_extra_cull_margin();
    *arg_ret = (float)ret;
}

void godot_icall_GeometryInstance_set_custom_aabb_ff67b409(Object * ptr, GDMonoMarshal::M_AABB* arg1) {
    ERR_FAIL_NULL(ptr);
    AABB arg1_in = MARSHALLED_IN(AABB, arg1);
    static_cast<GeometryInstance *>(ptr)->set_custom_aabb(arg1_in);
}

void godot_icall_Gradient_add_point_938b77da(Object * ptr, float* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<Gradient *>(ptr)->add_point(arg1_in, arg2_in);
}

void godot_icall_Gradient_remove_point_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Gradient *>(ptr)->remove_point(arg1_in);
}

void godot_icall_Gradient_set_offset_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Gradient *>(ptr)->set_offset(arg1_in, arg2_in);
}

void godot_icall_Gradient_get_offset_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Gradient *>(ptr)->get_offset(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Gradient_set_color_932531de(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<Gradient *>(ptr)->set_color(arg1_in, arg2_in);
}

void godot_icall_Gradient_get_color_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Gradient *>(ptr)->get_color(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Gradient_interpolate_3a49f1aa(Object * ptr, float* arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    auto ret = static_cast<Gradient *>(ptr)->get_color_at_offset(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

int32_t godot_icall_Gradient_get_point_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Gradient *>(ptr)->get_points_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_Gradient_set_offsets_da080d07(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecFloat(arg1);
    static_cast<Gradient *>(ptr)->set_offsets(arg1_in);
}

MonoArray* godot_icall_Gradient_get_offsets_7083ff1a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Gradient *>(ptr)->get_offsets();
    return GDMonoMarshal::PoolRealArray_to_mono_array(ret);
}

void godot_icall_Gradient_set_colors_dda43e9e(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecColor(arg1);
    static_cast<Gradient *>(ptr)->set_colors(arg1_in);
}

MonoArray* godot_icall_Gradient_get_colors_e048d8e7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Gradient *>(ptr)->get_colors();
    return GDMonoMarshal::PoolColorArray_to_mono_array(ret);
}

Object* godot_icall_Gradient_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Gradient")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_GradientTexture_set_gradient_487c5873(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<GradientTexture *>(ptr)->set_gradient(AutoRef(arg1));
}

MonoObject* godot_icall_GradientTexture_get_gradient_76d5a6f1(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<GradientTexture *>(ptr)->get_gradient();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_GradientTexture_set_width_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<GradientTexture *>(ptr)->set_width(arg1_in);
}

Object* godot_icall_GradientTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "GradientTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_GraphEdit_connect_node_4f89d9ef(Object * ptr, MonoString* arg1, int32_t arg2, MonoString* arg3, int32_t arg4) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    int32_t arg4_in = static_cast<int32_t>(arg4);
    auto ret = static_cast<GraphEdit *>(ptr)->connect_node(arg1_in, arg2_in, arg3_in, arg4_in);
    return (int32_t)ret;
}

MonoBoolean godot_icall_GraphEdit_is_node_connected_20828817(Object * ptr, MonoString* arg1, int32_t arg2, MonoString* arg3, int32_t arg4) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    int32_t arg4_in = static_cast<int32_t>(arg4);
    auto ret = static_cast<GraphEdit *>(ptr)->is_node_connected(arg1_in, arg2_in, arg3_in, arg4_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GraphEdit_disconnect_node_8c3e67ad(Object * ptr, MonoString* arg1, int32_t arg2, MonoString* arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<GraphEdit *>(ptr)->disconnect_node(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_GraphEdit_set_connection_activity_9383b120(Object * ptr, MonoString* arg1, int32_t arg2, MonoString* arg3, int32_t arg4, float* arg5) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    int32_t arg4_in = static_cast<int32_t>(arg4);
    float arg5_in = static_cast<float>(*arg5);
    static_cast<GraphEdit *>(ptr)->set_connection_activity(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

Array* godot_icall_GraphEdit_get_connection_list_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<GraphEdit *>(ptr)->_get_connection_list();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_GraphEdit_clear_connections_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<GraphEdit *>(ptr)->clear_connections();
}

void godot_icall_GraphEdit_get_scroll_ofs_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GraphEdit *>(ptr)->get_scroll_ofs();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_GraphEdit_set_scroll_ofs_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<GraphEdit *>(ptr)->set_scroll_ofs(arg1_in);
}

void godot_icall_GraphEdit_add_valid_right_disconnect_type_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<GraphEdit *>(ptr)->add_valid_right_disconnect_type(arg1_in);
}

void godot_icall_GraphEdit_remove_valid_right_disconnect_type_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<GraphEdit *>(ptr)->remove_valid_right_disconnect_type(arg1_in);
}

void godot_icall_GraphEdit_add_valid_left_disconnect_type_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<GraphEdit *>(ptr)->add_valid_left_disconnect_type(arg1_in);
}

void godot_icall_GraphEdit_remove_valid_left_disconnect_type_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<GraphEdit *>(ptr)->remove_valid_left_disconnect_type(arg1_in);
}

void godot_icall_GraphEdit_add_valid_connection_type_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<GraphEdit *>(ptr)->add_valid_connection_type(arg1_in, arg2_in);
}

void godot_icall_GraphEdit_remove_valid_connection_type_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<GraphEdit *>(ptr)->remove_valid_connection_type(arg1_in, arg2_in);
}

MonoBoolean godot_icall_GraphEdit_is_valid_connection_type_c8b57d14(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<GraphEdit *>(ptr)->is_valid_connection_type(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GraphEdit_set_zoom_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GraphEdit *>(ptr)->set_zoom(arg1_in);
}

void godot_icall_GraphEdit_get_zoom_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GraphEdit *>(ptr)->get_zoom();
    *arg_ret = (float)ret;
}

void godot_icall_GraphEdit_set_snap_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<GraphEdit *>(ptr)->set_snap(arg1_in);
}

int32_t godot_icall_GraphEdit_get_snap_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<GraphEdit *>(ptr)->get_snap();
    return static_cast<int32_t>(ret);
}

void godot_icall_GraphEdit_set_use_snap_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GraphEdit *>(ptr)->set_use_snap(arg1_in);
}

MonoBoolean godot_icall_GraphEdit_is_using_snap_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GraphEdit *>(ptr)->is_using_snap();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GraphEdit_set_right_disconnects_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GraphEdit *>(ptr)->set_right_disconnects(arg1_in);
}

MonoBoolean godot_icall_GraphEdit_is_right_disconnects_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GraphEdit *>(ptr)->is_right_disconnects_enabled();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_GraphEdit_get_zoom_hbox_333097db(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<GraphEdit *>(ptr)->get_zoom_hbox();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_GraphEdit_set_selected_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<GraphEdit *>(ptr)->set_selected((Node*)arg1);
}

Object* godot_icall_GraphEdit_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "GraphEdit")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_GraphNode_set_title_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<GraphNode *>(ptr)->set_title(arg1_in);
}

MonoString* godot_icall_GraphNode_get_title_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<GraphNode *>(ptr)->get_title();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_GraphNode_set_slot_c3f5dca5(Object * ptr, int32_t arg1, MonoBoolean arg2, int32_t arg3, GDMonoMarshal::M_Color* arg4, MonoBoolean arg5, int32_t arg6, GDMonoMarshal::M_Color* arg7, Object * arg8, Object * arg9) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    bool arg5_in = static_cast<bool>(arg5);
    int32_t arg6_in = static_cast<int32_t>(arg6);
    Color arg7_in = MARSHALLED_IN(Color, arg7);
    static_cast<GraphNode *>(ptr)->set_slot(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in, arg7_in, AutoRef(arg8), AutoRef(arg9));
}

void godot_icall_GraphNode_clear_slot_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<GraphNode *>(ptr)->clear_slot(arg1_in);
}

void godot_icall_GraphNode_clear_all_slots_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<GraphNode *>(ptr)->clear_all_slots();
}

MonoBoolean godot_icall_GraphNode_is_slot_enabled_left_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GraphNode *>(ptr)->is_slot_enabled_left(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_GraphNode_get_slot_type_left_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GraphNode *>(ptr)->get_slot_type_left(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_GraphNode_get_slot_color_left_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GraphNode *>(ptr)->get_slot_color_left(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

MonoBoolean godot_icall_GraphNode_is_slot_enabled_right_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GraphNode *>(ptr)->is_slot_enabled_right(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_GraphNode_get_slot_type_right_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GraphNode *>(ptr)->get_slot_type_right(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_GraphNode_get_slot_color_right_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GraphNode *>(ptr)->get_slot_color_right(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_GraphNode_set_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<GraphNode *>(ptr)->set_offset(arg1_in);
}

void godot_icall_GraphNode_get_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GraphNode *>(ptr)->get_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_GraphNode_set_comment_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GraphNode *>(ptr)->set_comment(arg1_in);
}

MonoBoolean godot_icall_GraphNode_is_comment_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GraphNode *>(ptr)->is_comment();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GraphNode_set_resizable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GraphNode *>(ptr)->set_resizable(arg1_in);
}

MonoBoolean godot_icall_GraphNode_is_resizable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GraphNode *>(ptr)->is_resizable();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GraphNode_set_selected_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GraphNode *>(ptr)->set_selected(arg1_in);
}

MonoBoolean godot_icall_GraphNode_is_selected_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GraphNode *>(ptr)->is_selected();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_GraphNode_get_connection_output_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<GraphNode *>(ptr)->get_connection_output_count();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_GraphNode_get_connection_input_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<GraphNode *>(ptr)->get_connection_input_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_GraphNode_get_connection_output_position_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GraphNode *>(ptr)->get_connection_output_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

int32_t godot_icall_GraphNode_get_connection_output_type_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GraphNode *>(ptr)->get_connection_output_type(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_GraphNode_get_connection_output_color_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GraphNode *>(ptr)->get_connection_output_color(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_GraphNode_get_connection_input_position_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GraphNode *>(ptr)->get_connection_input_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

int32_t godot_icall_GraphNode_get_connection_input_type_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GraphNode *>(ptr)->get_connection_input_type(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_GraphNode_get_connection_input_color_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GraphNode *>(ptr)->get_connection_input_color(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_GraphNode_set_show_close_button_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GraphNode *>(ptr)->set_show_close_button(arg1_in);
}

MonoBoolean godot_icall_GraphNode_is_close_button_visible_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GraphNode *>(ptr)->is_close_button_visible();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GraphNode_set_overlay_f14cc41f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<GraphNode *>(ptr)->set_overlay((GraphNode::Overlay)arg1_in);
}

int32_t godot_icall_GraphNode_get_overlay_717699ea(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<GraphNode *>(ptr)->get_overlay();
    return (int32_t)ret;
}

Object* godot_icall_GraphNode_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "GraphNode")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_GridContainer_set_columns_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<GridContainer *>(ptr)->set_columns(arg1_in);
}

int32_t godot_icall_GridContainer_get_columns_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<GridContainer *>(ptr)->get_columns();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_GridContainer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "GridContainer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_GridMap_set_collision_layer_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<GridMap *>(ptr)->set_collision_layer(arg1_in);
}

uint32_t godot_icall_GridMap_get_collision_layer_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<GridMap *>(ptr)->get_collision_layer();
    return static_cast<uint32_t>(ret);
}

void godot_icall_GridMap_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<GridMap *>(ptr)->set_collision_mask(arg1_in);
}

uint32_t godot_icall_GridMap_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<GridMap *>(ptr)->get_collision_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_GridMap_set_collision_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<GridMap *>(ptr)->set_collision_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_GridMap_get_collision_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GridMap *>(ptr)->get_collision_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GridMap_set_collision_layer_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<GridMap *>(ptr)->set_collision_layer_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_GridMap_get_collision_layer_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GridMap *>(ptr)->get_collision_layer_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GridMap_set_mesh_library_e1f7ded5(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<GridMap *>(ptr)->set_mesh_library(AutoRef(arg1));
}

MonoObject* godot_icall_GridMap_get_mesh_library_1f4f2997(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<GridMap *>(ptr)->get_mesh_library();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_GridMap_set_cell_size_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<GridMap *>(ptr)->set_cell_size(arg1_in);
}

void godot_icall_GridMap_get_cell_size_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GridMap *>(ptr)->get_cell_size();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_GridMap_set_cell_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GridMap *>(ptr)->set_cell_scale(arg1_in);
}

void godot_icall_GridMap_get_cell_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GridMap *>(ptr)->get_cell_scale();
    *arg_ret = (float)ret;
}

void godot_icall_GridMap_set_octant_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<GridMap *>(ptr)->set_octant_size(arg1_in);
}

int32_t godot_icall_GridMap_get_octant_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<GridMap *>(ptr)->get_octant_size();
    return static_cast<int32_t>(ret);
}

void godot_icall_GridMap_set_cell_item_8fb18460(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    static_cast<GridMap *>(ptr)->set_cell_item(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

int32_t godot_icall_GridMap_get_cell_item_6b22cbd1(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<GridMap *>(ptr)->get_cell_item(arg1_in, arg2_in, arg3_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_GridMap_get_cell_item_orientation_6b22cbd1(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<GridMap *>(ptr)->get_cell_item_orientation(arg1_in, arg2_in, arg3_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_GridMap_world_to_map_af4cfa14(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    auto ret = static_cast<GridMap *>(ptr)->world_to_map(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_GridMap_map_to_world_714fddf8(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<GridMap *>(ptr)->map_to_world(arg1_in, arg2_in, arg3_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_GridMap_resource_changed_7ce53eb(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<GridMap *>(ptr)->resource_changed(AutoRef(arg1));
}

void godot_icall_GridMap_set_center_x_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GridMap *>(ptr)->set_center_x(arg1_in);
}

MonoBoolean godot_icall_GridMap_get_center_x_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GridMap *>(ptr)->get_center_x();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GridMap_set_center_y_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GridMap *>(ptr)->set_center_y(arg1_in);
}

MonoBoolean godot_icall_GridMap_get_center_y_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GridMap *>(ptr)->get_center_y();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GridMap_set_center_z_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<GridMap *>(ptr)->set_center_z(arg1_in);
}

MonoBoolean godot_icall_GridMap_get_center_z_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<GridMap *>(ptr)->get_center_z();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_GridMap_set_clip_7daa45ef(Object * ptr, MonoBoolean arg1, MonoBoolean arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int64_t arg4_in = (int64_t)arg4;
    static_cast<GridMap *>(ptr)->set_clip(arg1_in, arg2_in, arg3_in, (Vector3::Axis)arg4_in);
}

void godot_icall_GridMap_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<GridMap *>(ptr)->clear();
}

Array* godot_icall_GridMap_get_used_cells_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<GridMap *>(ptr)->get_used_cells();
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_GridMap_get_meshes_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<GridMap *>(ptr)->get_meshes();
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_GridMap_get_bake_meshes_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<GridMap *>(ptr)->get_bake_meshes();
    return memnew(Array(Variant::from(ret)));
}

RID* godot_icall_GridMap_get_bake_mesh_instance_6012f6e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<GridMap *>(ptr)->get_bake_mesh_instance(arg1_in);
    return memnew(RID(ret));
}

void godot_icall_GridMap_clear_baked_meshes_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<GridMap *>(ptr)->clear_baked_meshes();
}

void godot_icall_GridMap_make_baked_meshes_1e99f42f(Object * ptr, MonoBoolean arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<GridMap *>(ptr)->make_baked_meshes(arg1_in, arg2_in);
}

Object* godot_icall_GridMap_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "GridMap")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_GrooveJoint2D_set_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GrooveJoint2D *>(ptr)->set_length(arg1_in);
}

void godot_icall_GrooveJoint2D_get_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GrooveJoint2D *>(ptr)->get_length();
    *arg_ret = (float)ret;
}

void godot_icall_GrooveJoint2D_set_initial_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<GrooveJoint2D *>(ptr)->set_initial_offset(arg1_in);
}

void godot_icall_GrooveJoint2D_get_initial_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<GrooveJoint2D *>(ptr)->get_initial_offset();
    *arg_ret = (float)ret;
}

Object* godot_icall_GrooveJoint2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "GrooveJoint2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_HBoxContainer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "HBoxContainer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_HScrollBar_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "HScrollBar")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_HSeparator_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "HSeparator")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_HSlider_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "HSlider")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_HSplitContainer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "HSplitContainer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_HTTPClient_connect_to_host_3c965c6e(Object * ptr, MonoString* arg1, int32_t arg2, MonoBoolean arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    auto ret = static_cast<HTTPClient *>(ptr)->connect_to_host(arg1_in, arg2_in, arg3_in, arg4_in);
    return (int32_t)ret;
}

void godot_icall_HTTPClient_set_connection_85f8707(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<HTTPClient *>(ptr)->set_connection(AutoRef(arg1));
}

MonoObject* godot_icall_HTTPClient_get_connection_b6f76265(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<HTTPClient *>(ptr)->get_connection();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_HTTPClient_request_raw_e7f84acd(Object * ptr, int32_t arg1, MonoString* arg2, MonoArray* arg3, MonoArray* arg4) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto arg3_in = GDMonoMarshal::mono_array_to_NC_VecString(arg3);
    auto arg4_in = GDMonoMarshal::mono_array_to_NC_VecByte(arg4);
    auto ret = static_cast<HTTPClient *>(ptr)->request_raw((HTTPClient::Method)arg1_in, arg2_in, arg3_in, arg4_in);
    return (int32_t)ret;
}

int32_t godot_icall_HTTPClient_request_dee5b030(Object * ptr, int32_t arg1, MonoString* arg2, MonoArray* arg3, MonoString* arg4) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto arg3_in = GDMonoMarshal::mono_array_to_NC_VecString(arg3);
    String arg4_in = GDMonoMarshal::mono_string_to_godot(arg4);
    auto ret = static_cast<HTTPClient *>(ptr)->request((HTTPClient::Method)arg1_in, arg2_in, arg3_in, arg4_in);
    return (int32_t)ret;
}

void godot_icall_HTTPClient_close_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<HTTPClient *>(ptr)->close();
}

MonoBoolean godot_icall_HTTPClient_has_response_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<HTTPClient *>(ptr)->has_response();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_HTTPClient_is_response_chunked_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<HTTPClient *>(ptr)->is_response_chunked();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_HTTPClient_get_response_code_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HTTPClient *>(ptr)->get_response_code();
    return static_cast<int32_t>(ret);
}

MonoArray* godot_icall_HTTPClient_get_response_headers_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<HTTPClient *>(ptr)->_get_response_headers();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

Dictionary* godot_icall_HTTPClient_get_response_headers_as_dictionary_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<HTTPClient *>(ptr)->get_response_headers_as_dictionary();
    return memnew(Dictionary(ret));
}

int32_t godot_icall_HTTPClient_get_response_body_length_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HTTPClient *>(ptr)->get_response_body_length();
    return static_cast<int32_t>(ret);
}

MonoArray* godot_icall_HTTPClient_read_response_body_chunk_8edaba4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<HTTPClient *>(ptr)->read_response_body_chunk();
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

void godot_icall_HTTPClient_set_read_chunk_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<HTTPClient *>(ptr)->set_read_chunk_size(arg1_in);
}

int32_t godot_icall_HTTPClient_get_read_chunk_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HTTPClient *>(ptr)->get_read_chunk_size();
    return static_cast<int32_t>(ret);
}

void godot_icall_HTTPClient_set_blocking_mode_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<HTTPClient *>(ptr)->set_blocking_mode(arg1_in);
}

MonoBoolean godot_icall_HTTPClient_is_blocking_mode_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<HTTPClient *>(ptr)->is_blocking_mode_enabled();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_HTTPClient_get_status_e2cdce5c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HTTPClient *>(ptr)->get_status();
    return (int32_t)ret;
}

int32_t godot_icall_HTTPClient_poll_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HTTPClient *>(ptr)->poll();
    return (int32_t)ret;
}

MonoString* godot_icall_HTTPClient_query_string_from_dict_41305e4f(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<HTTPClient *>(ptr)->query_string_from_dict(*arg1);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_HTTPClient_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "HTTPClient")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_HTTPRequest_request_5706dd2e(Object * ptr, MonoString* arg1, MonoArray* arg2, MonoBoolean arg3, int32_t arg4, MonoString* arg5) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecString(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    int64_t arg4_in = (int64_t)arg4;
    TmpString<512> arg5_in(GDMonoMarshal::mono_string_to_godot(arg5));
    auto ret = static_cast<HTTPRequest *>(ptr)->request(arg1_in, arg2_in, arg3_in, (HTTPClient::Method)arg4_in, arg5_in);
    return (int32_t)ret;
}

void godot_icall_HTTPRequest_cancel_request_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<HTTPRequest *>(ptr)->cancel_request();
}

int32_t godot_icall_HTTPRequest_get_http_client_status_e2cdce5c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HTTPRequest *>(ptr)->get_http_client_status();
    return (int32_t)ret;
}

void godot_icall_HTTPRequest_set_use_threads_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<HTTPRequest *>(ptr)->set_use_threads(arg1_in);
}

MonoBoolean godot_icall_HTTPRequest_is_using_threads_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<HTTPRequest *>(ptr)->is_using_threads();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_HTTPRequest_set_body_size_limit_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<HTTPRequest *>(ptr)->set_body_size_limit(arg1_in);
}

int32_t godot_icall_HTTPRequest_get_body_size_limit_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HTTPRequest *>(ptr)->get_body_size_limit();
    return static_cast<int32_t>(ret);
}

void godot_icall_HTTPRequest_set_max_redirects_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<HTTPRequest *>(ptr)->set_max_redirects(arg1_in);
}

int32_t godot_icall_HTTPRequest_get_max_redirects_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HTTPRequest *>(ptr)->get_max_redirects();
    return static_cast<int32_t>(ret);
}

void godot_icall_HTTPRequest_set_download_file_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<HTTPRequest *>(ptr)->set_download_file(arg1_in);
}

MonoString* godot_icall_HTTPRequest_get_download_file_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<HTTPRequest *>(ptr)->get_download_file();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_HTTPRequest_get_downloaded_bytes_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HTTPRequest *>(ptr)->get_downloaded_bytes();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_HTTPRequest_get_body_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HTTPRequest *>(ptr)->get_body_size();
    return static_cast<int32_t>(ret);
}

void godot_icall_HTTPRequest_set_timeout_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<HTTPRequest *>(ptr)->set_timeout(arg1_in);
}

int32_t godot_icall_HTTPRequest_get_timeout_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HTTPRequest *>(ptr)->get_timeout();
    return static_cast<int32_t>(ret);
}

void godot_icall_HTTPRequest_set_download_chunk_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<HTTPRequest *>(ptr)->set_download_chunk_size(arg1_in);
}

int32_t godot_icall_HTTPRequest_get_download_chunk_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HTTPRequest *>(ptr)->get_download_chunk_size();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_HTTPRequest_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "HTTPRequest")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_HashingContext_start_8a77dae5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<HashingContext *>(ptr)->start((HashingContext::HashType)arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_HashingContext_update_4d7ce2f(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    PoolByteArray arg1_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg1);
    auto ret = static_cast<HashingContext *>(ptr)->update(arg1_in);
    return (int32_t)ret;
}

MonoArray* godot_icall_HashingContext_finish_8edaba4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<HashingContext *>(ptr)->finish();
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

Object* godot_icall_HashingContext_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "HashingContext")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_HeightMapShape_set_map_width_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<HeightMapShape *>(ptr)->set_map_width(arg1_in);
}

int32_t godot_icall_HeightMapShape_get_map_width_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HeightMapShape *>(ptr)->get_map_width();
    return static_cast<int32_t>(ret);
}

void godot_icall_HeightMapShape_set_map_depth_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<HeightMapShape *>(ptr)->set_map_depth(arg1_in);
}

int32_t godot_icall_HeightMapShape_get_map_depth_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<HeightMapShape *>(ptr)->get_map_depth();
    return static_cast<int32_t>(ret);
}

void godot_icall_HeightMapShape_set_map_data_b2a2204a(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolRealArray arg1_in = GDMonoMarshal::mono_array_to_PoolRealArray(arg1);
    static_cast<HeightMapShape *>(ptr)->set_map_data(arg1_in);
}

MonoArray* godot_icall_HeightMapShape_get_map_data_7083ff1a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<HeightMapShape *>(ptr)->get_map_data();
    return GDMonoMarshal::PoolRealArray_to_mono_array(ret);
}

Object* godot_icall_HeightMapShape_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "HeightMapShape")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_HingeJoint_set_param_e82ed057(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<HingeJoint *>(ptr)->set_param((HingeJoint::Param)arg1_in, arg2_in);
}

void godot_icall_HingeJoint_get_param_7686921f(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<HingeJoint *>(ptr)->get_param((HingeJoint::Param)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_HingeJoint_set_flag_92fa1aab(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<HingeJoint *>(ptr)->set_flag((HingeJoint::Flag)arg1_in, arg2_in);
}

MonoBoolean godot_icall_HingeJoint_get_flag_81e2bcb4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<HingeJoint *>(ptr)->get_flag((HingeJoint::Flag)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_HingeJoint__set_upper_limit_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<HingeJoint *>(ptr)->_set_upper_limit(arg1_in);
}

void godot_icall_HingeJoint__get_upper_limit_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<HingeJoint *>(ptr)->_get_upper_limit();
    *arg_ret = (float)ret;
}

void godot_icall_HingeJoint__set_lower_limit_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<HingeJoint *>(ptr)->_set_lower_limit(arg1_in);
}

void godot_icall_HingeJoint__get_lower_limit_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<HingeJoint *>(ptr)->_get_lower_limit();
    *arg_ret = (float)ret;
}

Object* godot_icall_HingeJoint_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "HingeJoint")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoString* godot_icall_IP_resolve_hostname_997a524c(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<IP *>(ptr)->resolve_hostname(arg1_in, (IP::Type)arg2_in);
    return GDMonoMarshal::mono_string_from_godot(String(ret));
}

int32_t godot_icall_IP_resolve_hostname_queue_item_4ce004a2(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<IP *>(ptr)->resolve_hostname_queue_item(arg1_in, (IP::Type)arg2_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_IP_get_resolve_item_status_e7569df6(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<IP *>(ptr)->get_resolve_item_status(arg1_in);
    return (int32_t)ret;
}

MonoString* godot_icall_IP_get_resolve_item_address_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<IP *>(ptr)->get_resolve_item_address(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(String(ret));
}

void godot_icall_IP_erase_resolve_item_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<IP *>(ptr)->erase_resolve_item(arg1_in);
}

Array* godot_icall_IP_get_local_addresses_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<IP *>(ptr)->_get_local_addresses();
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_IP_get_local_interfaces_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<IP *>(ptr)->_get_local_interfaces();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_IP_clear_cache_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<IP *>(ptr)->clear_cache(arg1_in);
}

Object* godot_icall_IP_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("IP");
}

int32_t godot_icall_Image_get_width_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Image *>(ptr)->get_width();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_Image_get_height_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Image *>(ptr)->get_height();
    return static_cast<int32_t>(ret);
}

void godot_icall_Image_get_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Image *>(ptr)->get_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoBoolean godot_icall_Image_has_mipmaps_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Image *>(ptr)->has_mipmaps();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_Image_get_format_648eb81f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Image *>(ptr)->get_format();
    return (int32_t)ret;
}

MonoArray* godot_icall_Image_get_data_8edaba4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Image *>(ptr)->get_data();
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

void godot_icall_Image_convert_a6b7694d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Image *>(ptr)->convert((Image::Format)arg1_in);
}

int32_t godot_icall_Image_get_mipmap_offset_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Image *>(ptr)->get_mipmap_offset(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Image_resize_to_po2_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Image *>(ptr)->resize_to_po2(arg1_in);
}

void godot_icall_Image_resize_9f1c1c7a(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int64_t arg3_in = (int64_t)arg3;
    static_cast<Image *>(ptr)->resize(arg1_in, arg2_in, (Image::Interpolation)arg3_in);
}

void godot_icall_Image_shrink_x2_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->shrink_x2();
}

void godot_icall_Image_expand_x2_hq2x_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->expand_x2_hq2x();
}

void godot_icall_Image_crop_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Image *>(ptr)->crop(arg1_in, arg2_in);
}

void godot_icall_Image_flip_x_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->flip_x();
}

void godot_icall_Image_flip_y_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->flip_y();
}

int32_t godot_icall_Image_generate_mipmaps_a4e6027a(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<Image *>(ptr)->generate_mipmaps(arg1_in);
    return (int32_t)ret;
}

void godot_icall_Image_clear_mipmaps_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->clear_mipmaps();
}

void godot_icall_Image_create_d715e7fc(Object * ptr, int32_t arg1, int32_t arg2, MonoBoolean arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    int64_t arg4_in = (int64_t)arg4;
    static_cast<Image *>(ptr)->create(arg1_in, arg2_in, arg3_in, (Image::Format)arg4_in);
}

void godot_icall_Image_create_from_data_757179a0(Object * ptr, int32_t arg1, int32_t arg2, MonoBoolean arg3, int32_t arg4, MonoArray* arg5) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    int64_t arg4_in = (int64_t)arg4;
    PoolByteArray arg5_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg5);

    static_cast<Image *>(ptr)->_create_from_data(arg1_in, arg2_in, arg3_in, (Image::Format)arg4_in, arg5_in);
}

MonoBoolean godot_icall_Image_is_empty_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Image *>(ptr)->empty();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_Image_load_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Image *>(ptr)->load(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_Image_save_png_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Image *>(ptr)->save_png(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_Image_save_exr_8f6427cc(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<Image *>(ptr)->save_exr(arg1_in, arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall_Image_detect_alpha_cf33925f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Image *>(ptr)->detect_alpha();
    return (int32_t)ret;
}

MonoBoolean godot_icall_Image_is_invisible_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Image *>(ptr)->is_invisible();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_Image_detect_used_channels_cbc886f4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Image *>(ptr)->detect_used_channels((ImageCompressSource)arg1_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_Image_compress_d8dd7e0e(Object * ptr, int32_t arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    auto ret = static_cast<Image *>(ptr)->compress((ImageCompressMode)arg1_in, (ImageCompressSource)arg2_in, arg3_in);
    return (int32_t)ret;
}

int32_t godot_icall_Image_compress_from_channels_d8dd7e0e(Object * ptr, int32_t arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    auto ret = static_cast<Image *>(ptr)->compress_from_channels((ImageCompressMode)arg1_in, (ImageUsedChannels)arg2_in, arg3_in);
    return (int32_t)ret;
}

int32_t godot_icall_Image_decompress_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Image *>(ptr)->decompress();
    return (int32_t)ret;
}

MonoBoolean godot_icall_Image_is_compressed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Image *>(ptr)->is_compressed();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Image_fix_alpha_edges_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->fix_alpha_edges();
}

void godot_icall_Image_premultiply_alpha_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->premultiply_alpha();
}

void godot_icall_Image_srgb_to_linear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->srgb_to_linear();
}

void godot_icall_Image_normalmap_to_xy_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->normalmap_to_xy();
}

MonoObject* godot_icall_Image_rgbe_to_srgb_20b1d94c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Image *>(ptr)->rgbe_to_srgb();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Image_bumpmap_to_normalmap_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Image *>(ptr)->bumpmap_to_normalmap(arg1_in);
}

void godot_icall_Image_blit_rect_4915b45b(Object * ptr, Object * arg1, GDMonoMarshal::M_Rect2* arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<Image *>(ptr)->blit_rect(AutoRef(arg1), arg2_in, arg3_in);
}

void godot_icall_Image_blit_rect_mask_d9430c04(Object * ptr, Object * arg1, Object * arg2, GDMonoMarshal::M_Rect2* arg3, GDMonoMarshal::M_Vector2* arg4) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg3_in = MARSHALLED_IN(Rect2, arg3);
    Vector2 arg4_in = MARSHALLED_IN(Vector2, arg4);
    static_cast<Image *>(ptr)->blit_rect_mask(AutoRef(arg1), AutoRef(arg2), arg3_in, arg4_in);
}

void godot_icall_Image_blend_rect_4915b45b(Object * ptr, Object * arg1, GDMonoMarshal::M_Rect2* arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<Image *>(ptr)->blend_rect(AutoRef(arg1), arg2_in, arg3_in);
}

void godot_icall_Image_blend_rect_mask_d9430c04(Object * ptr, Object * arg1, Object * arg2, GDMonoMarshal::M_Rect2* arg3, GDMonoMarshal::M_Vector2* arg4) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg3_in = MARSHALLED_IN(Rect2, arg3);
    Vector2 arg4_in = MARSHALLED_IN(Vector2, arg4);
    static_cast<Image *>(ptr)->blend_rect_mask(AutoRef(arg1), AutoRef(arg2), arg3_in, arg4_in);
}

void godot_icall_Image_fill_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<Image *>(ptr)->fill(arg1_in);
}

void godot_icall_Image_get_used_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Image *>(ptr)->get_used_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

MonoObject* godot_icall_Image_get_rect_16aeda33(Object * ptr, GDMonoMarshal::M_Rect2* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    auto ret = static_cast<Image *>(ptr)->get_rect(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Image_copy_from_e2900e18(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->copy_internals_from(AutoRef(arg1));
}

void godot_icall_Image__set_data_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->_set_data(*arg1);
}

Dictionary* godot_icall_Image__get_data_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Image *>(ptr)->_get_data();
    return memnew(Dictionary(ret));
}

void godot_icall_Image_lock_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->lock();
}

void godot_icall_Image_unlock_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Image *>(ptr)->unlock();
}

void godot_icall_Image_get_pixelv_663fbb0f(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Image *>(ptr)->get_pixelv(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Image_get_pixel_5ce1c579(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Image *>(ptr)->get_pixel(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Image_set_pixelv_a3de0a4(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<Image *>(ptr)->set_pixelv(arg1_in, arg2_in);
}

void godot_icall_Image_set_pixel_8e282c88(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Color* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Color arg3_in = MARSHALLED_IN(Color, arg3);
    static_cast<Image *>(ptr)->set_pixel(arg1_in, arg2_in, arg3_in);
}

int32_t godot_icall_Image_load_png_from_buffer_4d7ce2f(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    PoolByteArray arg1_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg1);
    auto ret = static_cast<Image *>(ptr)->load_png_from_buffer(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_Image_load_jpg_from_buffer_4d7ce2f(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    PoolByteArray arg1_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg1);
    auto ret = static_cast<Image *>(ptr)->load_jpg_from_buffer(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_Image_load_webp_from_buffer_4d7ce2f(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    PoolByteArray arg1_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg1);
    auto ret = static_cast<Image *>(ptr)->load_webp_from_buffer(arg1_in);
    return (int32_t)ret;
}

Object* godot_icall_Image_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Image")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ImageTexture_create_19a1092e(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, uint32_t arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int64_t arg3_in = (int64_t)arg3;
    uint32_t arg4_in = static_cast<uint32_t>(arg4);
    static_cast<ImageTexture *>(ptr)->create(arg1_in, arg2_in, (Image::Format)arg3_in, arg4_in);
}

void godot_icall_ImageTexture_create_from_image_2d3b740c(Object * ptr, Object * arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<ImageTexture *>(ptr)->create_from_image(AutoRef(arg1), arg2_in);
}

int32_t godot_icall_ImageTexture_get_format_648eb81f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ImageTexture *>(ptr)->get_format();
    return (int32_t)ret;
}

void godot_icall_ImageTexture_set_data_e2900e18(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ImageTexture *>(ptr)->set_data(AutoRef(arg1));
}

void godot_icall_ImageTexture_set_storage_620037c(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<ImageTexture *>(ptr)->set_storage((ImageTexture::Storage)arg1_in);
}

int32_t godot_icall_ImageTexture_get_storage_709dce5f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ImageTexture *>(ptr)->get_storage();
    return (int32_t)ret;
}

void godot_icall_ImageTexture_set_lossy_storage_quality_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ImageTexture *>(ptr)->set_lossy_storage_quality(arg1_in);
}

void godot_icall_ImageTexture_get_lossy_storage_quality_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ImageTexture *>(ptr)->get_lossy_storage_quality();
    *arg_ret = (float)ret;
}

void godot_icall_ImageTexture_set_size_override_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<ImageTexture *>(ptr)->set_size_override(arg1_in);
}

Object* godot_icall_ImageTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ImageTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ImmediateGeometry_begin_950bef01(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<ImmediateGeometry *>(ptr)->begin((Mesh::PrimitiveType)arg1_in, AutoRef(arg2));
}

void godot_icall_ImmediateGeometry_set_normal_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<ImmediateGeometry *>(ptr)->set_normal(arg1_in);
}

void godot_icall_ImmediateGeometry_set_tangent_582036ef(Object * ptr, GDMonoMarshal::M_Plane* arg1) {
    ERR_FAIL_NULL(ptr);
    Plane arg1_in = MARSHALLED_IN(Plane, arg1);
    static_cast<ImmediateGeometry *>(ptr)->set_tangent(arg1_in);
}

void godot_icall_ImmediateGeometry_set_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ImmediateGeometry *>(ptr)->set_color(arg1_in);
}

void godot_icall_ImmediateGeometry_set_uv_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<ImmediateGeometry *>(ptr)->set_uv(arg1_in);
}

void godot_icall_ImmediateGeometry_set_uv2_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<ImmediateGeometry *>(ptr)->set_uv2(arg1_in);
}

void godot_icall_ImmediateGeometry_add_vertex_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<ImmediateGeometry *>(ptr)->add_vertex(arg1_in);
}

void godot_icall_ImmediateGeometry_add_sphere_fa9aeafe(Object * ptr, int32_t arg1, int32_t arg2, float* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<ImmediateGeometry *>(ptr)->add_sphere(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_ImmediateGeometry_end_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<ImmediateGeometry *>(ptr)->end();
}

void godot_icall_ImmediateGeometry_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<ImmediateGeometry *>(ptr)->clear();
}

Object* godot_icall_ImmediateGeometry_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ImmediateGeometry")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoBoolean godot_icall_Input_is_key_pressed_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Input *>(ptr)->is_key_pressed(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Input_is_mouse_button_pressed_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Input *>(ptr)->is_mouse_button_pressed(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Input_is_joy_button_pressed_c8b57d14(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Input *>(ptr)->is_joy_button_pressed(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Input_is_action_pressed_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Input *>(ptr)->is_action_pressed(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Input_is_action_just_pressed_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Input *>(ptr)->is_action_just_pressed(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Input_is_action_just_released_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Input *>(ptr)->is_action_just_released(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Input_get_action_strength_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Input *>(ptr)->get_action_strength(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Input_add_joy_mapping_211c975(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Input *>(ptr)->add_joy_mapping(arg1_in, arg2_in);
}

void godot_icall_Input_remove_joy_mapping_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Input *>(ptr)->remove_joy_mapping(arg1_in);
}

void godot_icall_Input_joy_connection_changed_721ffd99(Object * ptr, int32_t arg1, MonoBoolean arg2, MonoString* arg3, MonoString* arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    StringName arg4_in(GDMonoMarshal::mono_string_to_godot(arg4));
    static_cast<Input *>(ptr)->joy_connection_changed(arg1_in, arg2_in, arg3_in, arg4_in);
}

MonoBoolean godot_icall_Input_is_joy_known_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Input *>(ptr)->is_joy_known(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Input_get_joy_axis_4da5f18d(Object * ptr, int32_t arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Input *>(ptr)->get_joy_axis(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

MonoString* godot_icall_Input_get_joy_name_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Input *>(ptr)->get_joy_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_Input_get_joy_guid_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Input *>(ptr)->get_joy_guid(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Array* godot_icall_Input_get_connected_joypads_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Input *>(ptr)->get_connected_joypads();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_Input_get_joy_vibration_strength_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Input *>(ptr)->get_joy_vibration_strength(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Input_get_joy_vibration_duration_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Input *>(ptr)->get_joy_vibration_duration(arg1_in);
    *arg_ret = (float)ret;
}

MonoString* godot_icall_Input_get_joy_button_string_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Input *>(ptr)->get_joy_button_string(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_Input_get_joy_button_index_from_string_6d3db7c6(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Input *>(ptr)->get_joy_button_index_from_string(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_Input_get_joy_axis_string_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Input *>(ptr)->get_joy_axis_string(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_Input_get_joy_axis_index_from_string_6d3db7c6(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Input *>(ptr)->get_joy_axis_index_from_string(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Input_start_joy_vibration_80fde83e(Object * ptr, int32_t arg1, float* arg2, float* arg3, float* arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    static_cast<Input *>(ptr)->start_joy_vibration(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_Input_stop_joy_vibration_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Input *>(ptr)->stop_joy_vibration(arg1_in);
}

void godot_icall_Input_vibrate_handheld_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Input *>(ptr)->vibrate_handheld(arg1_in);
}

void godot_icall_Input_get_gravity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Input *>(ptr)->get_gravity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Input_get_accelerometer_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Input *>(ptr)->get_accelerometer();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Input_get_magnetometer_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Input *>(ptr)->get_magnetometer();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Input_get_gyroscope_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Input *>(ptr)->get_gyroscope();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Input_get_last_mouse_speed_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Input *>(ptr)->get_last_mouse_speed();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

int32_t godot_icall_Input_get_mouse_button_mask_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Input *>(ptr)->get_mouse_button_mask();
    return static_cast<int32_t>(ret);
}

void godot_icall_Input_set_mouse_mode_18983783(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Input *>(ptr)->set_mouse_mode((Input::MouseMode)arg1_in);
}

int32_t godot_icall_Input_get_mouse_mode_c6ba12e1(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Input *>(ptr)->get_mouse_mode();
    return (int32_t)ret;
}

void godot_icall_Input_warp_mouse_position_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Input *>(ptr)->warp_mouse_position(arg1_in);
}

void godot_icall_Input_action_press_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Input *>(ptr)->action_press(arg1_in, arg2_in);
}

void godot_icall_Input_action_release_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Input *>(ptr)->action_release(arg1_in);
}

void godot_icall_Input_set_default_cursor_shape_5eb8710(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Input *>(ptr)->set_default_cursor_shape((Input::CursorShape)arg1_in);
}

int32_t godot_icall_Input_get_current_cursor_shape_c34b6254(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Input *>(ptr)->get_current_cursor_shape();
    return (int32_t)ret;
}

void godot_icall_Input_set_custom_mouse_cursor_2fc04d3e(Object * ptr, Object * arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<Input *>(ptr)->set_custom_mouse_cursor(AutoRef(arg1), (Input::CursorShape)arg2_in, arg3_in);
}

void godot_icall_Input_parse_input_event_7ac4986f(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Input *>(ptr)->parse_input_event(AutoRef(arg1));
}

void godot_icall_Input_set_use_accumulated_input_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Input *>(ptr)->set_use_accumulated_input(arg1_in);
}

Object* godot_icall_Input_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("Input");
}

void godot_icall_InputEvent_set_device_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEvent *>(ptr)->set_device(arg1_in);
}

int32_t godot_icall_InputEvent_get_device_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEvent *>(ptr)->get_device();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_InputEvent_is_action_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<InputEvent *>(ptr)->is_action(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_InputEvent_is_action_pressed_4e9939a1(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<InputEvent *>(ptr)->is_action_pressed(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_InputEvent_is_action_released_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<InputEvent *>(ptr)->is_action_released(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_InputEvent_get_action_strength_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<InputEvent *>(ptr)->get_action_strength(arg1_in);
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_InputEvent_is_pressed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<InputEvent *>(ptr)->is_pressed();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_InputEvent_is_echo_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<InputEvent *>(ptr)->is_echo();
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_InputEvent_as_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<InputEvent *>(ptr)->as_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_InputEvent_shortcut_match_c8931195(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<InputEvent *>(ptr)->shortcut_match(AutoRef(arg1));
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_InputEvent_is_action_type_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<InputEvent *>(ptr)->is_action_type();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_InputEvent_accumulate_c8931195(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<InputEvent *>(ptr)->accumulate(AutoRef(arg1));
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_InputEvent_xformed_by_e2d8d72d(Object * ptr, GDMonoMarshal::M_Transform2D* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    auto ret = static_cast<InputEvent *>(ptr)->xformed_by(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_InputEventAction_set_action_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<InputEventAction *>(ptr)->set_action(arg1_in);
}

MonoString* godot_icall_InputEventAction_get_action_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<InputEventAction *>(ptr)->get_action();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_InputEventAction_set_pressed_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InputEventAction *>(ptr)->set_pressed(arg1_in);
}

void godot_icall_InputEventAction_set_strength_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<InputEventAction *>(ptr)->set_strength(arg1_in);
}

void godot_icall_InputEventAction_get_strength_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventAction *>(ptr)->get_strength();
    *arg_ret = (float)ret;
}

Object* godot_icall_InputEventAction_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "InputEventAction")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_InputEventGesture_set_position_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<InputEventGesture *>(ptr)->set_position(arg1_in);
}

void godot_icall_InputEventGesture_get_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventGesture *>(ptr)->get_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_InputEventJoypadButton_set_button_index_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventJoypadButton *>(ptr)->set_button_index(arg1_in);
}

int32_t godot_icall_InputEventJoypadButton_get_button_index_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventJoypadButton *>(ptr)->get_button_index();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventJoypadButton_set_pressure_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<InputEventJoypadButton *>(ptr)->set_pressure(arg1_in);
}

void godot_icall_InputEventJoypadButton_get_pressure_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventJoypadButton *>(ptr)->get_pressure();
    *arg_ret = (float)ret;
}

void godot_icall_InputEventJoypadButton_set_pressed_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InputEventJoypadButton *>(ptr)->set_pressed(arg1_in);
}

Object* godot_icall_InputEventJoypadButton_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "InputEventJoypadButton")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_InputEventJoypadMotion_set_axis_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventJoypadMotion *>(ptr)->set_axis(arg1_in);
}

int32_t godot_icall_InputEventJoypadMotion_get_axis_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventJoypadMotion *>(ptr)->get_axis();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventJoypadMotion_set_axis_value_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<InputEventJoypadMotion *>(ptr)->set_axis_value(arg1_in);
}

void godot_icall_InputEventJoypadMotion_get_axis_value_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventJoypadMotion *>(ptr)->get_axis_value();
    *arg_ret = (float)ret;
}

Object* godot_icall_InputEventJoypadMotion_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "InputEventJoypadMotion")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_InputEventKey_set_pressed_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InputEventKey *>(ptr)->set_pressed(arg1_in);
}

void godot_icall_InputEventKey_set_scancode_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<InputEventKey *>(ptr)->set_scancode(arg1_in);
}

uint32_t godot_icall_InputEventKey_get_scancode_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<InputEventKey *>(ptr)->get_scancode();
    return static_cast<uint32_t>(ret);
}

void godot_icall_InputEventKey_set_unicode_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<InputEventKey *>(ptr)->set_unicode(arg1_in);
}

uint32_t godot_icall_InputEventKey_get_unicode_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<InputEventKey *>(ptr)->get_unicode();
    return static_cast<uint32_t>(ret);
}

void godot_icall_InputEventKey_set_echo_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InputEventKey *>(ptr)->set_echo(arg1_in);
}

uint32_t godot_icall_InputEventKey_get_scancode_with_modifiers_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<InputEventKey *>(ptr)->get_scancode_with_modifiers();
    return static_cast<uint32_t>(ret);
}

Object* godot_icall_InputEventKey_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "InputEventKey")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_InputEventMIDI_set_channel_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventMIDI *>(ptr)->set_channel(arg1_in);
}

int32_t godot_icall_InputEventMIDI_get_channel_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventMIDI *>(ptr)->get_channel();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventMIDI_set_message_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventMIDI *>(ptr)->set_message(arg1_in);
}

int32_t godot_icall_InputEventMIDI_get_message_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventMIDI *>(ptr)->get_message();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventMIDI_set_pitch_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventMIDI *>(ptr)->set_pitch(arg1_in);
}

int32_t godot_icall_InputEventMIDI_get_pitch_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventMIDI *>(ptr)->get_pitch();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventMIDI_set_velocity_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventMIDI *>(ptr)->set_velocity(arg1_in);
}

int32_t godot_icall_InputEventMIDI_get_velocity_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventMIDI *>(ptr)->get_velocity();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventMIDI_set_instrument_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventMIDI *>(ptr)->set_instrument(arg1_in);
}

int32_t godot_icall_InputEventMIDI_get_instrument_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventMIDI *>(ptr)->get_instrument();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventMIDI_set_pressure_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventMIDI *>(ptr)->set_pressure(arg1_in);
}

int32_t godot_icall_InputEventMIDI_get_pressure_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventMIDI *>(ptr)->get_pressure();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventMIDI_set_controller_number_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventMIDI *>(ptr)->set_controller_number(arg1_in);
}

int32_t godot_icall_InputEventMIDI_get_controller_number_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventMIDI *>(ptr)->get_controller_number();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventMIDI_set_controller_value_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventMIDI *>(ptr)->set_controller_value(arg1_in);
}

int32_t godot_icall_InputEventMIDI_get_controller_value_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventMIDI *>(ptr)->get_controller_value();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_InputEventMIDI_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "InputEventMIDI")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_InputEventMagnifyGesture_set_factor_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<InputEventMagnifyGesture *>(ptr)->set_factor(arg1_in);
}

void godot_icall_InputEventMagnifyGesture_get_factor_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventMagnifyGesture *>(ptr)->get_factor();
    *arg_ret = (float)ret;
}

Object* godot_icall_InputEventMagnifyGesture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "InputEventMagnifyGesture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_InputEventMouse_set_button_mask_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventMouse *>(ptr)->set_button_mask(arg1_in);
}

int32_t godot_icall_InputEventMouse_get_button_mask_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventMouse *>(ptr)->get_button_mask();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventMouse_set_position_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<InputEventMouse *>(ptr)->set_position(arg1_in);
}

void godot_icall_InputEventMouse_get_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventMouse *>(ptr)->get_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_InputEventMouse_set_global_position_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<InputEventMouse *>(ptr)->set_global_position(arg1_in);
}

void godot_icall_InputEventMouse_get_global_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventMouse *>(ptr)->get_global_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_InputEventMouseButton_set_factor_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<InputEventMouseButton *>(ptr)->set_factor(arg1_in);
}

void godot_icall_InputEventMouseButton_get_factor_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventMouseButton *>(ptr)->get_factor();
    *arg_ret = (float)ret;
}

void godot_icall_InputEventMouseButton_set_button_index_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventMouseButton *>(ptr)->set_button_index(arg1_in);
}

int32_t godot_icall_InputEventMouseButton_get_button_index_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventMouseButton *>(ptr)->get_button_index();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventMouseButton_set_pressed_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InputEventMouseButton *>(ptr)->set_pressed(arg1_in);
}

void godot_icall_InputEventMouseButton_set_doubleclick_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InputEventMouseButton *>(ptr)->set_doubleclick(arg1_in);
}

MonoBoolean godot_icall_InputEventMouseButton_is_doubleclick_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<InputEventMouseButton *>(ptr)->is_doubleclick();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_InputEventMouseButton_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "InputEventMouseButton")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_InputEventMouseMotion_set_tilt_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<InputEventMouseMotion *>(ptr)->set_tilt(arg1_in);
}

void godot_icall_InputEventMouseMotion_get_tilt_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventMouseMotion *>(ptr)->get_tilt();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_InputEventMouseMotion_set_pressure_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<InputEventMouseMotion *>(ptr)->set_pressure(arg1_in);
}

void godot_icall_InputEventMouseMotion_get_pressure_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventMouseMotion *>(ptr)->get_pressure();
    *arg_ret = (float)ret;
}

void godot_icall_InputEventMouseMotion_set_relative_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<InputEventMouseMotion *>(ptr)->set_relative(arg1_in);
}

void godot_icall_InputEventMouseMotion_get_relative_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventMouseMotion *>(ptr)->get_relative();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_InputEventMouseMotion_set_speed_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<InputEventMouseMotion *>(ptr)->set_speed(arg1_in);
}

void godot_icall_InputEventMouseMotion_get_speed_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventMouseMotion *>(ptr)->get_speed();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

Object* godot_icall_InputEventMouseMotion_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "InputEventMouseMotion")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_InputEventPanGesture_set_delta_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<InputEventPanGesture *>(ptr)->set_delta(arg1_in);
}

void godot_icall_InputEventPanGesture_get_delta_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventPanGesture *>(ptr)->get_delta();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

Object* godot_icall_InputEventPanGesture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "InputEventPanGesture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_InputEventScreenDrag_set_index_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventScreenDrag *>(ptr)->set_index(arg1_in);
}

int32_t godot_icall_InputEventScreenDrag_get_index_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventScreenDrag *>(ptr)->get_index();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventScreenDrag_set_position_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<InputEventScreenDrag *>(ptr)->set_position(arg1_in);
}

void godot_icall_InputEventScreenDrag_get_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventScreenDrag *>(ptr)->get_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_InputEventScreenDrag_set_relative_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<InputEventScreenDrag *>(ptr)->set_relative(arg1_in);
}

void godot_icall_InputEventScreenDrag_get_relative_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventScreenDrag *>(ptr)->get_relative();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_InputEventScreenDrag_set_speed_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<InputEventScreenDrag *>(ptr)->set_speed(arg1_in);
}

void godot_icall_InputEventScreenDrag_get_speed_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventScreenDrag *>(ptr)->get_speed();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

Object* godot_icall_InputEventScreenDrag_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "InputEventScreenDrag")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_InputEventScreenTouch_set_index_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<InputEventScreenTouch *>(ptr)->set_index(arg1_in);
}

int32_t godot_icall_InputEventScreenTouch_get_index_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<InputEventScreenTouch *>(ptr)->get_index();
    return static_cast<int32_t>(ret);
}

void godot_icall_InputEventScreenTouch_set_position_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<InputEventScreenTouch *>(ptr)->set_position(arg1_in);
}

void godot_icall_InputEventScreenTouch_get_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InputEventScreenTouch *>(ptr)->get_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_InputEventScreenTouch_set_pressed_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InputEventScreenTouch *>(ptr)->set_pressed(arg1_in);
}

Object* godot_icall_InputEventScreenTouch_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "InputEventScreenTouch")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_InputEventWithModifiers_set_alt_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InputEventWithModifiers *>(ptr)->set_alt(arg1_in);
}

MonoBoolean godot_icall_InputEventWithModifiers_get_alt_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<InputEventWithModifiers *>(ptr)->get_alt();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_InputEventWithModifiers_set_shift_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InputEventWithModifiers *>(ptr)->set_shift(arg1_in);
}

MonoBoolean godot_icall_InputEventWithModifiers_get_shift_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<InputEventWithModifiers *>(ptr)->get_shift();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_InputEventWithModifiers_set_control_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InputEventWithModifiers *>(ptr)->set_control(arg1_in);
}

MonoBoolean godot_icall_InputEventWithModifiers_get_control_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<InputEventWithModifiers *>(ptr)->get_control();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_InputEventWithModifiers_set_metakey_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InputEventWithModifiers *>(ptr)->set_metakey(arg1_in);
}

MonoBoolean godot_icall_InputEventWithModifiers_get_metakey_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<InputEventWithModifiers *>(ptr)->get_metakey();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_InputEventWithModifiers_set_command_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InputEventWithModifiers *>(ptr)->set_command(arg1_in);
}

MonoBoolean godot_icall_InputEventWithModifiers_get_command_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<InputEventWithModifiers *>(ptr)->get_command();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_InputMap_has_action_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<InputMap *>(ptr)->has_action(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall_InputMap_get_actions_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<InputMap *>(ptr)->get_actions();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_InputMap_add_action_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<InputMap *>(ptr)->add_action(arg1_in, arg2_in);
}

void godot_icall_InputMap_erase_action_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<InputMap *>(ptr)->erase_action(arg1_in);
}

void godot_icall_InputMap_action_set_deadzone_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<InputMap *>(ptr)->action_set_deadzone(arg1_in, arg2_in);
}

void godot_icall_InputMap_action_add_event_33f388e5(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<InputMap *>(ptr)->action_add_event(arg1_in, AutoRef(arg2));
}

MonoBoolean godot_icall_InputMap_action_has_event_9139c1c5(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<InputMap *>(ptr)->action_has_event(arg1_in, AutoRef(arg2));
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_InputMap_action_erase_event_33f388e5(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<InputMap *>(ptr)->action_erase_event(arg1_in, AutoRef(arg2));
}

void godot_icall_InputMap_action_erase_events_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<InputMap *>(ptr)->action_erase_events(arg1_in);
}

Array* godot_icall_InputMap_get_action_list_6b21c46d(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<InputMap *>(ptr)->_get_action_list(arg1_in);
    return memnew(Array(ret));
}

MonoBoolean godot_icall_InputMap_event_is_action_1bbacb3c(Object * ptr, Object * arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<InputMap *>(ptr)->event_is_action(AutoRef(arg1), arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_InputMap_load_from_globals_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<InputMap *>(ptr)->load_from_globals();
}

Object* godot_icall_InputMap_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("InputMap");
}

Dictionary* godot_icall_InstancePlaceholder_get_stored_values_e7de63e4(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<InstancePlaceholder *>(ptr)->get_stored_values(arg1_in);
    return memnew(Dictionary(ret));
}

MonoObject* godot_icall_InstancePlaceholder_create_instance_5b9db04b(Object * ptr, MonoBoolean arg1, Object * arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<InstancePlaceholder *>(ptr)->create_instance(arg1_in, AutoRef(arg2));
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_InstancePlaceholder_replace_by_instance_cf252e31(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<InstancePlaceholder *>(ptr)->replace_by_instance(AutoRef(arg1));
}

MonoString* godot_icall_InstancePlaceholder_get_instance_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<InstancePlaceholder *>(ptr)->get_instance_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_InterpolatedCamera_set_target_path_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<InterpolatedCamera *>(ptr)->set_target_path(*arg1);
}

NodePath* godot_icall_InterpolatedCamera_get_target_path_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<InterpolatedCamera *>(ptr)->get_target_path();
    return memnew(NodePath(ret));
}

void godot_icall_InterpolatedCamera_set_target_ad798950(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<InterpolatedCamera *>(ptr)->set_target(object_cast<Spatial>(arg1));
}

void godot_icall_InterpolatedCamera_set_speed_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<InterpolatedCamera *>(ptr)->set_speed(arg1_in);
}

void godot_icall_InterpolatedCamera_get_speed_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<InterpolatedCamera *>(ptr)->get_speed();
    *arg_ret = (float)ret;
}

void godot_icall_InterpolatedCamera_set_interpolation_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<InterpolatedCamera *>(ptr)->set_interpolation_enabled(arg1_in);
}

MonoBoolean godot_icall_InterpolatedCamera_is_interpolation_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<InterpolatedCamera *>(ptr)->is_interpolation_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_InterpolatedCamera_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "InterpolatedCamera")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ItemList_add_item_9cb1d76(Object * ptr, MonoString* arg1, Object * arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<ItemList *>(ptr)->add_item(arg1_in, AutoRef(arg2), arg3_in);
}

void godot_icall_ItemList_add_icon_item_9cc90742(Object * ptr, Object * arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<ItemList *>(ptr)->add_icon_item(AutoRef(arg1), arg2_in);
}

void godot_icall_ItemList_set_item_text_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<ItemList *>(ptr)->set_item_text(arg1_in, arg2_in);
}

MonoString* godot_icall_ItemList_get_item_text_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->get_item_text(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_ItemList_set_item_icon_f20a84e(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ItemList *>(ptr)->set_item_icon(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_ItemList_get_item_icon_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->get_item_icon(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_ItemList_set_item_icon_transposed_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<ItemList *>(ptr)->set_item_icon_transposed(arg1_in, arg2_in);
}

MonoBoolean godot_icall_ItemList_is_item_icon_transposed_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->is_item_icon_transposed(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ItemList_set_item_icon_region_44225da7(Object * ptr, int32_t arg1, GDMonoMarshal::M_Rect2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    static_cast<ItemList *>(ptr)->set_item_icon_region(arg1_in, arg2_in);
}

void godot_icall_ItemList_get_item_icon_region_c485f536(Object * ptr, int32_t arg1, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->get_item_icon_region(arg1_in);
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_ItemList_set_item_icon_modulate_932531de(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<ItemList *>(ptr)->set_item_icon_modulate(arg1_in, arg2_in);
}

void godot_icall_ItemList_get_item_icon_modulate_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->get_item_icon_modulate(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_ItemList_set_item_selectable_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<ItemList *>(ptr)->set_item_selectable(arg1_in, arg2_in);
}

MonoBoolean godot_icall_ItemList_is_item_selectable_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->is_item_selectable(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ItemList_set_item_disabled_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<ItemList *>(ptr)->set_item_disabled(arg1_in, arg2_in);
}

MonoBoolean godot_icall_ItemList_is_item_disabled_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->is_item_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ItemList_set_item_metadata_37bef04(Object * ptr, int32_t arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<ItemList *>(ptr)->set_item_metadata(arg1_in, arg2_in);
}

MonoObject* godot_icall_ItemList_get_item_metadata_a9b2673d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->get_item_metadata(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_ItemList_set_item_custom_bg_color_932531de(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<ItemList *>(ptr)->set_item_custom_bg_color(arg1_in, arg2_in);
}

void godot_icall_ItemList_get_item_custom_bg_color_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->get_item_custom_bg_color(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_ItemList_set_item_custom_fg_color_932531de(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<ItemList *>(ptr)->set_item_custom_fg_color(arg1_in, arg2_in);
}

void godot_icall_ItemList_get_item_custom_fg_color_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->get_item_custom_fg_color(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_ItemList_set_item_tooltip_enabled_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<ItemList *>(ptr)->set_item_tooltip_enabled(arg1_in, arg2_in);
}

MonoBoolean godot_icall_ItemList_is_item_tooltip_enabled_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->is_item_tooltip_enabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ItemList_set_item_tooltip_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<ItemList *>(ptr)->set_item_tooltip(arg1_in, arg2_in);
}

MonoString* godot_icall_ItemList_get_item_tooltip_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->get_item_tooltip(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_ItemList_select_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<ItemList *>(ptr)->select(arg1_in, arg2_in);
}

void godot_icall_ItemList_unselect_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ItemList *>(ptr)->unselect(arg1_in);
}

void godot_icall_ItemList_unselect_all_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<ItemList *>(ptr)->unselect_all();
}

MonoBoolean godot_icall_ItemList_is_selected_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<ItemList *>(ptr)->is_selected(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoArray* godot_icall_ItemList_get_selected_items_2a166acd(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ItemList *>(ptr)->get_selected_items();
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

void godot_icall_ItemList_move_item_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<ItemList *>(ptr)->move_item(arg1_in, arg2_in);
}

int32_t godot_icall_ItemList_get_item_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ItemList *>(ptr)->get_item_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_ItemList_remove_item_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ItemList *>(ptr)->remove_item(arg1_in);
}

void godot_icall_ItemList_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<ItemList *>(ptr)->clear();
}

void godot_icall_ItemList_sort_items_by_text_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<ItemList *>(ptr)->sort_items_by_text();
}

void godot_icall_ItemList_set_fixed_column_width_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ItemList *>(ptr)->set_fixed_column_width(arg1_in);
}

int32_t godot_icall_ItemList_get_fixed_column_width_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ItemList *>(ptr)->get_fixed_column_width();
    return static_cast<int32_t>(ret);
}

void godot_icall_ItemList_set_same_column_width_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ItemList *>(ptr)->set_same_column_width(arg1_in);
}

MonoBoolean godot_icall_ItemList_is_same_column_width_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ItemList *>(ptr)->is_same_column_width();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ItemList_set_max_text_lines_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ItemList *>(ptr)->set_max_text_lines(arg1_in);
}

int32_t godot_icall_ItemList_get_max_text_lines_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ItemList *>(ptr)->get_max_text_lines();
    return static_cast<int32_t>(ret);
}

void godot_icall_ItemList_set_max_columns_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ItemList *>(ptr)->set_max_columns(arg1_in);
}

int32_t godot_icall_ItemList_get_max_columns_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ItemList *>(ptr)->get_max_columns();
    return static_cast<int32_t>(ret);
}

void godot_icall_ItemList_set_select_mode_e9c9a461(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<ItemList *>(ptr)->set_select_mode((ItemList::SelectMode)arg1_in);
}

int32_t godot_icall_ItemList_get_select_mode_4182cf2c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ItemList *>(ptr)->get_select_mode();
    return (int32_t)ret;
}

void godot_icall_ItemList_set_icon_mode_fb9050ac(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<ItemList *>(ptr)->set_icon_mode((ItemList::IconMode)arg1_in);
}

int32_t godot_icall_ItemList_get_icon_mode_936fea8f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ItemList *>(ptr)->get_icon_mode();
    return (int32_t)ret;
}

void godot_icall_ItemList_set_fixed_icon_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<ItemList *>(ptr)->set_fixed_icon_size(arg1_in);
}

void godot_icall_ItemList_get_fixed_icon_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ItemList *>(ptr)->get_fixed_icon_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_ItemList_set_icon_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ItemList *>(ptr)->set_icon_scale(arg1_in);
}

void godot_icall_ItemList_get_icon_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ItemList *>(ptr)->get_icon_scale();
    *arg_ret = (float)ret;
}

void godot_icall_ItemList_set_allow_rmb_select_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ItemList *>(ptr)->set_allow_rmb_select(arg1_in);
}

MonoBoolean godot_icall_ItemList_get_allow_rmb_select_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ItemList *>(ptr)->get_allow_rmb_select();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ItemList_set_allow_reselect_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ItemList *>(ptr)->set_allow_reselect(arg1_in);
}

MonoBoolean godot_icall_ItemList_get_allow_reselect_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ItemList *>(ptr)->get_allow_reselect();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ItemList_set_auto_height_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ItemList *>(ptr)->set_auto_height(arg1_in);
}

MonoBoolean godot_icall_ItemList_has_auto_height_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ItemList *>(ptr)->has_auto_height();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_ItemList_is_anything_selected_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ItemList *>(ptr)->is_anything_selected();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_ItemList_get_item_at_position_25107011(Object * ptr, GDMonoMarshal::M_Vector2* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<ItemList *>(ptr)->get_item_at_position(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_ItemList_ensure_current_is_visible_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<ItemList *>(ptr)->ensure_current_is_visible();
}

MonoObject* godot_icall_ItemList_get_v_scroll_37ab5951(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ItemList *>(ptr)->get_v_scroll();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_ItemList__set_items_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ItemList *>(ptr)->_set_items(*arg1);
}

Array* godot_icall_ItemList__get_items_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ItemList *>(ptr)->_get_items();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_ItemList_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ItemList")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_JSONParseResult_get_error_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<JSONParseResult *>(ptr)->get_error();
    return (int32_t)ret;
}

MonoString* godot_icall_JSONParseResult_get_error_string_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<JSONParseResult *>(ptr)->get_error_string();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_JSONParseResult_get_error_line_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<JSONParseResult *>(ptr)->get_error_line();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_JSONParseResult_get_result_a08d6f10(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<JSONParseResult *>(ptr)->get_result();
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_JSONParseResult_set_error_32ed9677(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<JSONParseResult *>(ptr)->set_error((Error)arg1_in);
}

void godot_icall_JSONParseResult_set_error_string_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<JSONParseResult *>(ptr)->set_error_string(arg1_in);
}

void godot_icall_JSONParseResult_set_error_line_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<JSONParseResult *>(ptr)->set_error_line(arg1_in);
}

void godot_icall_JSONParseResult_set_result_62b5905c(Object * ptr, MonoObject* arg1) {
    ERR_FAIL_NULL(ptr);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    static_cast<JSONParseResult *>(ptr)->set_result(arg1_in);
}

Object* godot_icall_JSONParseResult_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "JSONParseResult")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_JSONRPC_set_scope_4cd1e22(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<JSONRPC *>(ptr)->set_scope(arg1_in, (Object*)arg2);
}

MonoObject* godot_icall_JSONRPC_process_action_ee8b7da4(Object * ptr, MonoObject* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<JSONRPC *>(ptr)->process_action(arg1_in, arg2_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoString* godot_icall_JSONRPC_process_string_dcc9abdc(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<JSONRPC *>(ptr)->process_string(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Dictionary* godot_icall_JSONRPC_make_request_b9fe3487(Object * ptr, MonoString* arg1, MonoObject* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    auto ret = static_cast<JSONRPC *>(ptr)->make_request(arg1_in, arg2_in, arg3_in);
    return memnew(Dictionary(ret));
}

Dictionary* godot_icall_JSONRPC_make_response_d7e07b59(Object * ptr, MonoObject* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    auto ret = static_cast<JSONRPC *>(ptr)->make_response(arg1_in, arg2_in);
    return memnew(Dictionary(ret));
}

Dictionary* godot_icall_JSONRPC_make_notification_9bc3858(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    auto ret = static_cast<JSONRPC *>(ptr)->make_notification(arg1_in, arg2_in);
    return memnew(Dictionary(ret));
}

Dictionary* godot_icall_JSONRPC_make_response_error_b5cbfc6d(Object * ptr, int32_t arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    auto ret = static_cast<JSONRPC *>(ptr)->make_response_error(arg1_in, arg2_in, arg3_in);
    return memnew(Dictionary(ret));
}

Object* godot_icall_JSONRPC_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "JSONRPC")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Joint_set_node_a_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Joint *>(ptr)->set_node_a(*arg1);
}

NodePath* godot_icall_Joint_get_node_a_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Joint *>(ptr)->get_node_a();
    return memnew(NodePath(ret));
}

void godot_icall_Joint_set_node_b_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Joint *>(ptr)->set_node_b(*arg1);
}

NodePath* godot_icall_Joint_get_node_b_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Joint *>(ptr)->get_node_b();
    return memnew(NodePath(ret));
}

void godot_icall_Joint_set_solver_priority_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Joint *>(ptr)->set_solver_priority(arg1_in);
}

int32_t godot_icall_Joint_get_solver_priority_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Joint *>(ptr)->get_solver_priority();
    return static_cast<int32_t>(ret);
}

void godot_icall_Joint_set_exclude_nodes_from_collision_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Joint *>(ptr)->set_exclude_nodes_from_collision(arg1_in);
}

MonoBoolean godot_icall_Joint_get_exclude_nodes_from_collision_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Joint *>(ptr)->get_exclude_nodes_from_collision();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Joint2D_set_node_a_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Joint2D *>(ptr)->set_node_a(*arg1);
}

NodePath* godot_icall_Joint2D_get_node_a_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Joint2D *>(ptr)->get_node_a();
    return memnew(NodePath(ret));
}

void godot_icall_Joint2D_set_node_b_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Joint2D *>(ptr)->set_node_b(*arg1);
}

NodePath* godot_icall_Joint2D_get_node_b_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Joint2D *>(ptr)->get_node_b();
    return memnew(NodePath(ret));
}

void godot_icall_Joint2D_set_bias_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Joint2D *>(ptr)->set_bias(arg1_in);
}

void godot_icall_Joint2D_get_bias_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Joint2D *>(ptr)->get_bias();
    *arg_ret = (float)ret;
}

void godot_icall_Joint2D_set_exclude_nodes_from_collision_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Joint2D *>(ptr)->set_exclude_nodes_from_collision(arg1_in);
}

MonoBoolean godot_icall_Joint2D_get_exclude_nodes_from_collision_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Joint2D *>(ptr)->get_exclude_nodes_from_collision();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_KinematicBody_move_and_collide_6581a079(Object * ptr, GDMonoMarshal::M_Vector3* arg1, MonoBoolean arg2, MonoBoolean arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    bool arg2_in = static_cast<bool>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    auto ret = static_cast<KinematicBody *>(ptr)->_move(arg1_in, arg2_in, arg3_in, arg4_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_KinematicBody_move_and_slide_5e9a3c5(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, MonoBoolean arg3, int32_t arg4, float* arg5, MonoBoolean arg6, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    bool arg3_in = static_cast<bool>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    float arg5_in = static_cast<float>(*arg5);
    bool arg6_in = static_cast<bool>(arg6);
    auto ret = static_cast<KinematicBody *>(ptr)->move_and_slide(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_KinematicBody_move_and_slide_with_snap_3088b58(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, GDMonoMarshal::M_Vector3* arg3, MonoBoolean arg4, int32_t arg5, float* arg6, MonoBoolean arg7, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    Vector3 arg3_in = MARSHALLED_IN(Vector3, arg3);
    bool arg4_in = static_cast<bool>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    float arg6_in = static_cast<float>(*arg6);
    bool arg7_in = static_cast<bool>(arg7);
    auto ret = static_cast<KinematicBody *>(ptr)->move_and_slide_with_snap(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in, arg7_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

MonoBoolean godot_icall_KinematicBody_test_move_a1317cdc(Object * ptr, GDMonoMarshal::M_Transform* arg1, GDMonoMarshal::M_Vector3* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Transform arg1_in = MARSHALLED_IN(Transform, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    bool arg3_in = static_cast<bool>(arg3);
    auto ret = static_cast<KinematicBody *>(ptr)->test_move(arg1_in, arg2_in, arg3_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_KinematicBody_is_on_floor_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<KinematicBody *>(ptr)->is_on_floor();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_KinematicBody_is_on_ceiling_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<KinematicBody *>(ptr)->is_on_ceiling();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_KinematicBody_is_on_wall_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<KinematicBody *>(ptr)->is_on_wall();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_KinematicBody_get_floor_normal_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicBody *>(ptr)->get_floor_normal();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_KinematicBody_get_floor_velocity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicBody *>(ptr)->get_floor_velocity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_KinematicBody_set_axis_lock_cb8f1f44(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<KinematicBody *>(ptr)->set_axis_lock((PhysicsServer::BodyAxis)arg1_in, arg2_in);
}

MonoBoolean godot_icall_KinematicBody_get_axis_lock_81481178(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<KinematicBody *>(ptr)->get_axis_lock((PhysicsServer::BodyAxis)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_KinematicBody_set_safe_margin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<KinematicBody *>(ptr)->set_safe_margin(arg1_in);
}

void godot_icall_KinematicBody_get_safe_margin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicBody *>(ptr)->get_safe_margin();
    *arg_ret = (float)ret;
}

int32_t godot_icall_KinematicBody_get_slide_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<KinematicBody *>(ptr)->get_slide_count();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_KinematicBody_get_slide_collision_76c75dcd(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<KinematicBody *>(ptr)->_get_slide_collision(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_KinematicBody_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "KinematicBody")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoObject* godot_icall_KinematicBody2D_move_and_collide_9cbd18b4(Object * ptr, GDMonoMarshal::M_Vector2* arg1, MonoBoolean arg2, MonoBoolean arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    bool arg2_in = static_cast<bool>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    auto ret = static_cast<KinematicBody2D *>(ptr)->_move(arg1_in, arg2_in, arg3_in, arg4_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_KinematicBody2D_move_and_slide_3a69bb33(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, MonoBoolean arg3, int32_t arg4, float* arg5, MonoBoolean arg6, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    bool arg3_in = static_cast<bool>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    float arg5_in = static_cast<float>(*arg5);
    bool arg6_in = static_cast<bool>(arg6);
    auto ret = static_cast<KinematicBody2D *>(ptr)->move_and_slide(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_KinematicBody2D_move_and_slide_with_snap_3f02eca8(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3, MonoBoolean arg4, int32_t arg5, float* arg6, MonoBoolean arg7, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    bool arg4_in = static_cast<bool>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    float arg6_in = static_cast<float>(*arg6);
    bool arg7_in = static_cast<bool>(arg7);
    auto ret = static_cast<KinematicBody2D *>(ptr)->move_and_slide_with_snap(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in, arg7_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoBoolean godot_icall_KinematicBody2D_test_move_37a505a0(Object * ptr, GDMonoMarshal::M_Transform2D* arg1, GDMonoMarshal::M_Vector2* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    bool arg3_in = static_cast<bool>(arg3);
    auto ret = static_cast<KinematicBody2D *>(ptr)->test_move(arg1_in, arg2_in, arg3_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_KinematicBody2D_is_on_floor_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<KinematicBody2D *>(ptr)->is_on_floor();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_KinematicBody2D_is_on_ceiling_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<KinematicBody2D *>(ptr)->is_on_ceiling();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_KinematicBody2D_is_on_wall_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<KinematicBody2D *>(ptr)->is_on_wall();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_KinematicBody2D_get_floor_normal_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicBody2D *>(ptr)->get_floor_normal();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_KinematicBody2D_get_floor_velocity_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicBody2D *>(ptr)->get_floor_velocity();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_KinematicBody2D_set_safe_margin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<KinematicBody2D *>(ptr)->set_safe_margin(arg1_in);
}

void godot_icall_KinematicBody2D_get_safe_margin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicBody2D *>(ptr)->get_safe_margin();
    *arg_ret = (float)ret;
}

int32_t godot_icall_KinematicBody2D_get_slide_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<KinematicBody2D *>(ptr)->get_slide_count();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_KinematicBody2D_get_slide_collision_e7401c33(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<KinematicBody2D *>(ptr)->_get_slide_collision(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_KinematicBody2D_set_sync_to_physics_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<KinematicBody2D *>(ptr)->set_sync_to_physics(arg1_in);
}

MonoBoolean godot_icall_KinematicBody2D_is_sync_to_physics_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<KinematicBody2D *>(ptr)->is_sync_to_physics_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_KinematicBody2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "KinematicBody2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_KinematicCollision_get_position_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicCollision *>(ptr)->get_position();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_KinematicCollision_get_normal_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicCollision *>(ptr)->get_normal();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_KinematicCollision_get_travel_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicCollision *>(ptr)->get_travel();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_KinematicCollision_get_remainder_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicCollision *>(ptr)->get_remainder();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

MonoObject* godot_icall_KinematicCollision_get_local_shape_5bd95814(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<KinematicCollision *>(ptr)->get_local_shape();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_KinematicCollision_get_collider_5bd95814(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<KinematicCollision *>(ptr)->get_collider();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_KinematicCollision_get_collider_id_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicCollision *>(ptr)->get_collider_id();
    *arg_ret = (uint64_t)ret;
}

MonoObject* godot_icall_KinematicCollision_get_collider_shape_5bd95814(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<KinematicCollision *>(ptr)->get_collider_shape();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_KinematicCollision_get_collider_shape_index_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<KinematicCollision *>(ptr)->get_collider_shape_index();
    return static_cast<int32_t>(ret);
}

void godot_icall_KinematicCollision_get_collider_velocity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicCollision *>(ptr)->get_collider_velocity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

MonoObject* godot_icall_KinematicCollision_get_collider_metadata_a08d6f10(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<KinematicCollision *>(ptr)->get_collider_metadata();
    return GDMonoMarshal::variant_to_mono_object(ret);
}

Object* godot_icall_KinematicCollision_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "KinematicCollision")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_KinematicCollision2D_get_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicCollision2D *>(ptr)->get_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_KinematicCollision2D_get_normal_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicCollision2D *>(ptr)->get_normal();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_KinematicCollision2D_get_travel_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicCollision2D *>(ptr)->get_travel();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_KinematicCollision2D_get_remainder_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicCollision2D *>(ptr)->get_remainder();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoObject* godot_icall_KinematicCollision2D_get_local_shape_5bd95814(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<KinematicCollision2D *>(ptr)->get_local_shape();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_KinematicCollision2D_get_collider_5bd95814(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<KinematicCollision2D *>(ptr)->get_collider();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_KinematicCollision2D_get_collider_id_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicCollision2D *>(ptr)->get_collider_id();
    *arg_ret = (uint64_t)ret;
}

MonoObject* godot_icall_KinematicCollision2D_get_collider_shape_5bd95814(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<KinematicCollision2D *>(ptr)->get_collider_shape();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_KinematicCollision2D_get_collider_shape_index_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<KinematicCollision2D *>(ptr)->get_collider_shape_index();
    return static_cast<int32_t>(ret);
}

void godot_icall_KinematicCollision2D_get_collider_velocity_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<KinematicCollision2D *>(ptr)->get_collider_velocity();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoObject* godot_icall_KinematicCollision2D_get_collider_metadata_a08d6f10(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<KinematicCollision2D *>(ptr)->get_collider_metadata();
    return GDMonoMarshal::variant_to_mono_object(ret);
}

Object* godot_icall_KinematicCollision2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "KinematicCollision2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Label_set_align_210ae4fc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Label *>(ptr)->set_align((Label::Align)arg1_in);
}

int32_t godot_icall_Label_get_align_1f690bdf(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Label *>(ptr)->get_align();
    return (int32_t)ret;
}

void godot_icall_Label_set_valign_bc7bac80(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Label *>(ptr)->set_valign((Label::VAlign)arg1_in);
}

int32_t godot_icall_Label_get_valign_6adb7be4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Label *>(ptr)->get_valign();
    return (int32_t)ret;
}

void godot_icall_Label_set_text_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Label *>(ptr)->set_text(arg1_in);
}

MonoString* godot_icall_Label_get_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Label *>(ptr)->get_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Label_set_autowrap_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Label *>(ptr)->set_autowrap(arg1_in);
}

MonoBoolean godot_icall_Label_has_autowrap_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Label *>(ptr)->has_autowrap();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Label_set_clip_text_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Label *>(ptr)->set_clip_text(arg1_in);
}

MonoBoolean godot_icall_Label_is_clipping_text_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Label *>(ptr)->is_clipping_text();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Label_set_uppercase_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Label *>(ptr)->set_uppercase(arg1_in);
}

MonoBoolean godot_icall_Label_is_uppercase_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Label *>(ptr)->is_uppercase();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_Label_get_line_height_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Label *>(ptr)->get_line_height();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_Label_get_line_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Label *>(ptr)->get_line_count();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_Label_get_visible_line_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Label *>(ptr)->get_visible_line_count();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_Label_get_total_character_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Label *>(ptr)->get_total_character_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_Label_set_visible_characters_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Label *>(ptr)->set_visible_characters(arg1_in);
}

int32_t godot_icall_Label_get_visible_characters_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Label *>(ptr)->get_visible_characters();
    return static_cast<int32_t>(ret);
}

void godot_icall_Label_set_percent_visible_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Label *>(ptr)->set_percent_visible(arg1_in);
}

void godot_icall_Label_get_percent_visible_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Label *>(ptr)->get_percent_visible();
    *arg_ret = (float)ret;
}

void godot_icall_Label_set_lines_skipped_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Label *>(ptr)->set_lines_skipped(arg1_in);
}

int32_t godot_icall_Label_get_lines_skipped_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Label *>(ptr)->get_lines_skipped();
    return static_cast<int32_t>(ret);
}

void godot_icall_Label_set_max_lines_visible_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Label *>(ptr)->set_max_lines_visible(arg1_in);
}

int32_t godot_icall_Label_get_max_lines_visible_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Label *>(ptr)->get_max_lines_visible();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_Label_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Label")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_LargeTexture_add_piece_60684100(Object * ptr, GDMonoMarshal::M_Vector2* arg1, Object * arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<LargeTexture *>(ptr)->add_piece(arg1_in, AutoRef(arg2));
    return static_cast<int32_t>(ret);
}

void godot_icall_LargeTexture_set_piece_offset_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<LargeTexture *>(ptr)->set_piece_offset(arg1_in, arg2_in);
}

void godot_icall_LargeTexture_set_piece_texture_f20a84e(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<LargeTexture *>(ptr)->set_piece_texture(arg1_in, AutoRef(arg2));
}

void godot_icall_LargeTexture_set_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<LargeTexture *>(ptr)->set_size(arg1_in);
}

void godot_icall_LargeTexture_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<LargeTexture *>(ptr)->clear();
}

int32_t godot_icall_LargeTexture_get_piece_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<LargeTexture *>(ptr)->get_piece_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_LargeTexture_get_piece_offset_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<LargeTexture *>(ptr)->get_piece_offset(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoObject* godot_icall_LargeTexture_get_piece_texture_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<LargeTexture *>(ptr)->get_piece_texture(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_LargeTexture__set_data_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<LargeTexture *>(ptr)->_set_data(*arg1);
}

Array* godot_icall_LargeTexture__get_data_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<LargeTexture *>(ptr)->_get_data();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_LargeTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "LargeTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Light_set_editor_only_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Light *>(ptr)->set_editor_only(arg1_in);
}

MonoBoolean godot_icall_Light_is_editor_only_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Light *>(ptr)->is_editor_only();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Light_set_param_f9d26d1(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Light *>(ptr)->set_param((Light::Param)arg1_in, arg2_in);
}

void godot_icall_Light_get_param_178e6d10(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Light *>(ptr)->get_param((Light::Param)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Light_set_shadow_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Light *>(ptr)->set_shadow(arg1_in);
}

MonoBoolean godot_icall_Light_has_shadow_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Light *>(ptr)->has_shadow();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Light_set_negative_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Light *>(ptr)->set_negative(arg1_in);
}

MonoBoolean godot_icall_Light_is_negative_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Light *>(ptr)->is_negative();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Light_set_cull_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<Light *>(ptr)->set_cull_mask(arg1_in);
}

uint32_t godot_icall_Light_get_cull_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<Light *>(ptr)->get_cull_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_Light_set_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<Light *>(ptr)->set_color(arg1_in);
}

void godot_icall_Light_get_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Light *>(ptr)->get_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Light_set_shadow_reverse_cull_face_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Light *>(ptr)->set_shadow_reverse_cull_face(arg1_in);
}

MonoBoolean godot_icall_Light_get_shadow_reverse_cull_face_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Light *>(ptr)->get_shadow_reverse_cull_face();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Light_set_shadow_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<Light *>(ptr)->set_shadow_color(arg1_in);
}

void godot_icall_Light_get_shadow_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Light *>(ptr)->get_shadow_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Light_set_bake_mode_492dba53(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Light *>(ptr)->set_bake_mode((Light::BakeMode)arg1_in);
}

int32_t godot_icall_Light_get_bake_mode_78058511(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Light *>(ptr)->get_bake_mode();
    return (int32_t)ret;
}

void godot_icall_Light2D_set_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Light2D *>(ptr)->set_enabled(arg1_in);
}

MonoBoolean godot_icall_Light2D_is_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Light2D *>(ptr)->is_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Light2D_set_editor_only_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Light2D *>(ptr)->set_editor_only(arg1_in);
}

MonoBoolean godot_icall_Light2D_is_editor_only_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Light2D *>(ptr)->is_editor_only();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Light2D_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Light2D *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_Light2D_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Light2D *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Light2D_set_texture_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Light2D *>(ptr)->set_texture_offset(arg1_in);
}

void godot_icall_Light2D_get_texture_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Light2D *>(ptr)->get_texture_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Light2D_set_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<Light2D *>(ptr)->set_color(arg1_in);
}

void godot_icall_Light2D_get_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Light2D *>(ptr)->get_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Light2D_set_height_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Light2D *>(ptr)->set_height(arg1_in);
}

void godot_icall_Light2D_get_height_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Light2D *>(ptr)->get_height();
    *arg_ret = (float)ret;
}

void godot_icall_Light2D_set_energy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Light2D *>(ptr)->set_energy(arg1_in);
}

void godot_icall_Light2D_get_energy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Light2D *>(ptr)->get_energy();
    *arg_ret = (float)ret;
}

void godot_icall_Light2D_set_texture_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Light2D *>(ptr)->set_texture_scale(arg1_in);
}

void godot_icall_Light2D_get_texture_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Light2D *>(ptr)->get_texture_scale();
    *arg_ret = (float)ret;
}

void godot_icall_Light2D_set_z_range_min_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Light2D *>(ptr)->set_z_range_min(arg1_in);
}

int32_t godot_icall_Light2D_get_z_range_min_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Light2D *>(ptr)->get_z_range_min();
    return static_cast<int32_t>(ret);
}

void godot_icall_Light2D_set_z_range_max_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Light2D *>(ptr)->set_z_range_max(arg1_in);
}

int32_t godot_icall_Light2D_get_z_range_max_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Light2D *>(ptr)->get_z_range_max();
    return static_cast<int32_t>(ret);
}

void godot_icall_Light2D_set_layer_range_min_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Light2D *>(ptr)->set_layer_range_min(arg1_in);
}

int32_t godot_icall_Light2D_get_layer_range_min_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Light2D *>(ptr)->get_layer_range_min();
    return static_cast<int32_t>(ret);
}

void godot_icall_Light2D_set_layer_range_max_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Light2D *>(ptr)->set_layer_range_max(arg1_in);
}

int32_t godot_icall_Light2D_get_layer_range_max_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Light2D *>(ptr)->get_layer_range_max();
    return static_cast<int32_t>(ret);
}

void godot_icall_Light2D_set_item_cull_mask_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Light2D *>(ptr)->set_item_cull_mask(arg1_in);
}

int32_t godot_icall_Light2D_get_item_cull_mask_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Light2D *>(ptr)->get_item_cull_mask();
    return static_cast<int32_t>(ret);
}

void godot_icall_Light2D_set_item_shadow_cull_mask_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Light2D *>(ptr)->set_item_shadow_cull_mask(arg1_in);
}

int32_t godot_icall_Light2D_get_item_shadow_cull_mask_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Light2D *>(ptr)->get_item_shadow_cull_mask();
    return static_cast<int32_t>(ret);
}

void godot_icall_Light2D_set_mode_c991bc70(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Light2D *>(ptr)->set_mode((Light2D::Mode)arg1_in);
}

int32_t godot_icall_Light2D_get_mode_cac44bc3(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Light2D *>(ptr)->get_mode();
    return (int32_t)ret;
}

void godot_icall_Light2D_set_shadow_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Light2D *>(ptr)->set_shadow_enabled(arg1_in);
}

MonoBoolean godot_icall_Light2D_is_shadow_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Light2D *>(ptr)->is_shadow_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Light2D_set_shadow_buffer_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Light2D *>(ptr)->set_shadow_buffer_size(arg1_in);
}

int32_t godot_icall_Light2D_get_shadow_buffer_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Light2D *>(ptr)->get_shadow_buffer_size();
    return static_cast<int32_t>(ret);
}

void godot_icall_Light2D_set_shadow_smooth_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Light2D *>(ptr)->set_shadow_smooth(arg1_in);
}

void godot_icall_Light2D_get_shadow_smooth_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Light2D *>(ptr)->get_shadow_smooth();
    *arg_ret = (float)ret;
}

void godot_icall_Light2D_set_shadow_gradient_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Light2D *>(ptr)->set_shadow_gradient_length(arg1_in);
}

void godot_icall_Light2D_get_shadow_gradient_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Light2D *>(ptr)->get_shadow_gradient_length();
    *arg_ret = (float)ret;
}

void godot_icall_Light2D_set_shadow_filter_9906f0d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Light2D *>(ptr)->set_shadow_filter((Light2D::ShadowFilter)arg1_in);
}

int32_t godot_icall_Light2D_get_shadow_filter_8fd689b8(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Light2D *>(ptr)->get_shadow_filter();
    return (int32_t)ret;
}

void godot_icall_Light2D_set_shadow_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<Light2D *>(ptr)->set_shadow_color(arg1_in);
}

void godot_icall_Light2D_get_shadow_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Light2D *>(ptr)->get_shadow_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

Object* godot_icall_Light2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Light2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_LightOccluder2D_set_occluder_polygon_bbfd2230(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<LightOccluder2D *>(ptr)->set_occluder_polygon(AutoRef(arg1));
}

MonoObject* godot_icall_LightOccluder2D_get_occluder_polygon_6954fd34(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<LightOccluder2D *>(ptr)->get_occluder_polygon();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_LightOccluder2D_set_occluder_light_mask_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<LightOccluder2D *>(ptr)->set_occluder_light_mask(arg1_in);
}

int32_t godot_icall_LightOccluder2D_get_occluder_light_mask_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<LightOccluder2D *>(ptr)->get_occluder_light_mask();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_LightOccluder2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "LightOccluder2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Line2D_set_points_3a3116bd(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolVector2Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg1);
    static_cast<Line2D *>(ptr)->set_points(arg1_in);
}

MonoArray* godot_icall_Line2D_get_points_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Line2D *>(ptr)->get_points();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_Line2D_set_point_position_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<Line2D *>(ptr)->set_point_position(arg1_in, arg2_in);
}

void godot_icall_Line2D_get_point_position_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Line2D *>(ptr)->get_point_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

int32_t godot_icall_Line2D_get_point_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Line2D *>(ptr)->get_point_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_Line2D_add_point_3af8c6ae(Object * ptr, GDMonoMarshal::M_Vector2* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Line2D *>(ptr)->add_point(arg1_in, arg2_in);
}

void godot_icall_Line2D_remove_point_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Line2D *>(ptr)->remove_point(arg1_in);
}

void godot_icall_Line2D_clear_points_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Line2D *>(ptr)->clear_points();
}

void godot_icall_Line2D_set_width_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Line2D *>(ptr)->set_width(arg1_in);
}

void godot_icall_Line2D_get_width_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Line2D *>(ptr)->get_width();
    *arg_ret = (float)ret;
}

void godot_icall_Line2D_set_curve_dbaac24a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Line2D *>(ptr)->set_curve(AutoRef(arg1));
}

MonoObject* godot_icall_Line2D_get_curve_98c1d1a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Line2D *>(ptr)->get_curve();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Line2D_set_default_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<Line2D *>(ptr)->set_default_color(arg1_in);
}

void godot_icall_Line2D_get_default_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Line2D *>(ptr)->get_default_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Line2D_set_gradient_487c5873(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Line2D *>(ptr)->set_gradient(AutoRef(arg1));
}

MonoObject* godot_icall_Line2D_get_gradient_76d5a6f1(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Line2D *>(ptr)->get_gradient();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Line2D_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Line2D *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_Line2D_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Line2D *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Line2D_set_texture_mode_eb9ffbe7(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Line2D *>(ptr)->set_texture_mode((Line2D::LineTextureMode)arg1_in);
}

int32_t godot_icall_Line2D_get_texture_mode_19b74685(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Line2D *>(ptr)->get_texture_mode();
    return (int32_t)ret;
}

void godot_icall_Line2D_set_joint_mode_101ab874(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Line2D *>(ptr)->set_joint_mode((Line2D::LineJointMode)arg1_in);
}

int32_t godot_icall_Line2D_get_joint_mode_cf3c86f8(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Line2D *>(ptr)->get_joint_mode();
    return (int32_t)ret;
}

void godot_icall_Line2D_set_begin_cap_mode_bcfd99d0(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Line2D *>(ptr)->set_begin_cap_mode((Line2D::LineCapMode)arg1_in);
}

int32_t godot_icall_Line2D_get_begin_cap_mode_6a556894(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Line2D *>(ptr)->get_begin_cap_mode();
    return (int32_t)ret;
}

void godot_icall_Line2D_set_end_cap_mode_bcfd99d0(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Line2D *>(ptr)->set_end_cap_mode((Line2D::LineCapMode)arg1_in);
}

int32_t godot_icall_Line2D_get_end_cap_mode_6a556894(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Line2D *>(ptr)->get_end_cap_mode();
    return (int32_t)ret;
}

void godot_icall_Line2D_set_sharp_limit_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Line2D *>(ptr)->set_sharp_limit(arg1_in);
}

void godot_icall_Line2D_get_sharp_limit_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Line2D *>(ptr)->get_sharp_limit();
    *arg_ret = (float)ret;
}

void godot_icall_Line2D_set_round_precision_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Line2D *>(ptr)->set_round_precision(arg1_in);
}

int32_t godot_icall_Line2D_get_round_precision_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Line2D *>(ptr)->get_round_precision();
    return static_cast<int32_t>(ret);
}

void godot_icall_Line2D_set_antialiased_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Line2D *>(ptr)->set_antialiased(arg1_in);
}

MonoBoolean godot_icall_Line2D_get_antialiased_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Line2D *>(ptr)->get_antialiased();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_Line2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Line2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_LineEdit_set_align_e83a8d0a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<LineEdit *>(ptr)->set_align((LineEdit::Align)arg1_in);
}

int32_t godot_icall_LineEdit_get_align_3e41aa45(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<LineEdit *>(ptr)->get_align();
    return (int32_t)ret;
}

void godot_icall_LineEdit_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<LineEdit *>(ptr)->clear();
}

void godot_icall_LineEdit_select_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<LineEdit *>(ptr)->select(arg1_in, arg2_in);
}

void godot_icall_LineEdit_select_all_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<LineEdit *>(ptr)->select_all();
}

void godot_icall_LineEdit_deselect_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<LineEdit *>(ptr)->deselect();
}

void godot_icall_LineEdit_set_text_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<LineEdit *>(ptr)->set_text(arg1_in);
}

MonoString* godot_icall_LineEdit_get_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<LineEdit *>(ptr)->get_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_LineEdit_set_placeholder_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<LineEdit *>(ptr)->set_placeholder(arg1_in);
}

MonoString* godot_icall_LineEdit_get_placeholder_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<LineEdit *>(ptr)->get_placeholder();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_LineEdit_set_placeholder_alpha_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<LineEdit *>(ptr)->set_placeholder_alpha(arg1_in);
}

void godot_icall_LineEdit_get_placeholder_alpha_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<LineEdit *>(ptr)->get_placeholder_alpha();
    *arg_ret = (float)ret;
}

void godot_icall_LineEdit_set_cursor_position_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<LineEdit *>(ptr)->set_cursor_position(arg1_in);
}

int32_t godot_icall_LineEdit_get_cursor_position_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<LineEdit *>(ptr)->get_cursor_position();
    return static_cast<int32_t>(ret);
}

void godot_icall_LineEdit_set_expand_to_text_length_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<LineEdit *>(ptr)->set_expand_to_text_length(arg1_in);
}

MonoBoolean godot_icall_LineEdit_get_expand_to_text_length_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<LineEdit *>(ptr)->get_expand_to_text_length();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_LineEdit_cursor_set_blink_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<LineEdit *>(ptr)->cursor_set_blink_enabled(arg1_in);
}

MonoBoolean godot_icall_LineEdit_cursor_get_blink_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<LineEdit *>(ptr)->cursor_get_blink_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_LineEdit_cursor_set_blink_speed_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<LineEdit *>(ptr)->cursor_set_blink_speed(arg1_in);
}

void godot_icall_LineEdit_cursor_get_blink_speed_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<LineEdit *>(ptr)->cursor_get_blink_speed();
    *arg_ret = (float)ret;
}

void godot_icall_LineEdit_set_max_length_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<LineEdit *>(ptr)->set_max_length(arg1_in);
}

int32_t godot_icall_LineEdit_get_max_length_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<LineEdit *>(ptr)->get_max_length();
    return static_cast<int32_t>(ret);
}

void godot_icall_LineEdit_append_at_cursor_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<LineEdit *>(ptr)->append_at_cursor(arg1_in);
}

void godot_icall_LineEdit_set_editable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<LineEdit *>(ptr)->set_editable(arg1_in);
}

MonoBoolean godot_icall_LineEdit_is_editable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<LineEdit *>(ptr)->is_editable();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_LineEdit_set_secret_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<LineEdit *>(ptr)->set_secret(arg1_in);
}

MonoBoolean godot_icall_LineEdit_is_secret_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<LineEdit *>(ptr)->is_secret();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_LineEdit_set_secret_character_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<LineEdit *>(ptr)->set_secret_character(arg1_in);
}

MonoString* godot_icall_LineEdit_get_secret_character_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<LineEdit *>(ptr)->get_secret_character();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_LineEdit_menu_option_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<LineEdit *>(ptr)->menu_option(arg1_in);
}

MonoObject* godot_icall_LineEdit_get_menu_d0a780e0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<LineEdit *>(ptr)->get_menu();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_LineEdit_set_context_menu_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<LineEdit *>(ptr)->set_context_menu_enabled(arg1_in);
}

MonoBoolean godot_icall_LineEdit_is_context_menu_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<LineEdit *>(ptr)->is_context_menu_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_LineEdit_set_clear_button_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<LineEdit *>(ptr)->set_clear_button_enabled(arg1_in);
}

MonoBoolean godot_icall_LineEdit_is_clear_button_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<LineEdit *>(ptr)->is_clear_button_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_LineEdit_set_shortcut_keys_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<LineEdit *>(ptr)->set_shortcut_keys_enabled(arg1_in);
}

MonoBoolean godot_icall_LineEdit_is_shortcut_keys_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<LineEdit *>(ptr)->is_shortcut_keys_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_LineEdit_set_selecting_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<LineEdit *>(ptr)->set_selecting_enabled(arg1_in);
}

MonoBoolean godot_icall_LineEdit_is_selecting_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<LineEdit *>(ptr)->is_selecting_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_LineEdit_set_right_icon_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<LineEdit *>(ptr)->set_right_icon(AutoRef(arg1));
}

MonoObject* godot_icall_LineEdit_get_right_icon_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<LineEdit *>(ptr)->get_right_icon();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_LineEdit_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "LineEdit")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_LineShape2D_set_normal_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<LineShape2D *>(ptr)->set_normal(arg1_in);
}

void godot_icall_LineShape2D_get_normal_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<LineShape2D *>(ptr)->get_normal();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_LineShape2D_set_d_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<LineShape2D *>(ptr)->set_d(arg1_in);
}

void godot_icall_LineShape2D_get_d_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<LineShape2D *>(ptr)->get_d();
    *arg_ret = (float)ret;
}

Object* godot_icall_LineShape2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "LineShape2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_LinkButton_set_text_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<LinkButton *>(ptr)->set_text(arg1_in);
}

MonoString* godot_icall_LinkButton_get_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<LinkButton *>(ptr)->get_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_LinkButton_set_underline_mode_2dc424aa(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<LinkButton *>(ptr)->set_underline_mode((LinkButton::UnderlineMode)arg1_in);
}

int32_t godot_icall_LinkButton_get_underline_mode_db5e03ba(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<LinkButton *>(ptr)->get_underline_mode();
    return (int32_t)ret;
}

Object* godot_icall_LinkButton_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "LinkButton")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Listener_make_current_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Listener *>(ptr)->make_current();
}

void godot_icall_Listener_clear_current_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Listener *>(ptr)->clear_current();
}

MonoBoolean godot_icall_Listener_is_current_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Listener *>(ptr)->is_current();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Listener_get_listener_transform_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Listener *>(ptr)->get_listener_transform();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

Object* godot_icall_Listener_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Listener")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_MainLoop_input_event_7ac4986f(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MainLoop *>(ptr)->input_event(AutoRef(arg1));
}

void godot_icall_MainLoop_input_text_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<MainLoop *>(ptr)->input_text(arg1_in);
}

void godot_icall_MainLoop_init_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<MainLoop *>(ptr)->init();
}

MonoBoolean godot_icall_MainLoop_iteration_2e15e021(Object * ptr, float* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    float arg1_in = static_cast<float>(*arg1);
    auto ret = static_cast<MainLoop *>(ptr)->iteration(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_MainLoop_idle_2e15e021(Object * ptr, float* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    float arg1_in = static_cast<float>(*arg1);
    auto ret = static_cast<MainLoop *>(ptr)->idle(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_MainLoop_finish_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<MainLoop *>(ptr)->finish();
}

Object* godot_icall_MainLoop_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "MainLoop")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_MarginContainer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "MarginContainer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Material_set_next_pass_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Material *>(ptr)->set_next_pass(AutoRef(arg1));
}

MonoObject* godot_icall_Material_get_next_pass_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Material *>(ptr)->get_next_pass();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Material_set_render_priority_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Material *>(ptr)->set_render_priority(arg1_in);
}

int32_t godot_icall_Material_get_render_priority_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Material *>(ptr)->get_render_priority();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_MenuButton_get_popup_d0a780e0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MenuButton *>(ptr)->get_popup();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_MenuButton__set_items_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MenuButton *>(ptr)->_set_items(*arg1);
}

Array* godot_icall_MenuButton__get_items_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MenuButton *>(ptr)->_get_items();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_MenuButton_set_switch_on_hover_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<MenuButton *>(ptr)->set_switch_on_hover(arg1_in);
}

MonoBoolean godot_icall_MenuButton_is_switch_on_hover_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<MenuButton *>(ptr)->is_switch_on_hover();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_MenuButton_set_disable_shortcuts_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<MenuButton *>(ptr)->set_disable_shortcuts(arg1_in);
}

Object* godot_icall_MenuButton_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "MenuButton")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Mesh_set_lightmap_size_hint_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Mesh *>(ptr)->set_lightmap_size_hint(arg1_in);
}

void godot_icall_Mesh_get_lightmap_size_hint_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Mesh *>(ptr)->get_lightmap_size_hint();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Mesh_get_aabb_2dbf935b(Object * ptr, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Mesh *>(ptr)->get_aabb();
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

int32_t godot_icall_Mesh_get_surface_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Mesh *>(ptr)->get_surface_count();
    return static_cast<int32_t>(ret);
}

Array* godot_icall_Mesh_surface_get_arrays_2ca2fcca(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Mesh *>(ptr)->surface_get_arrays(arg1_in);
    return memnew(Array(ret));
}

Array* godot_icall_Mesh_surface_get_blend_shape_arrays_2ca2fcca(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Mesh *>(ptr)->_surface_get_blend_shape_arrays(arg1_in);
    return memnew(Array(ret));
}

void godot_icall_Mesh_surface_set_material_4ee274f6(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Mesh *>(ptr)->surface_set_material(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_Mesh_surface_get_material_77335ef3(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Mesh *>(ptr)->surface_get_material(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_Mesh_create_trimesh_shape_34362f58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Mesh *>(ptr)->create_trimesh_shape();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_Mesh_create_convex_shape_34362f58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Mesh *>(ptr)->create_convex_shape();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_Mesh_create_outline_ddd437dd(Object * ptr, float* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    float arg1_in = static_cast<float>(*arg1);
    auto ret = static_cast<Mesh *>(ptr)->create_outline(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoArray* godot_icall_Mesh_get_faces_36607e58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Mesh *>(ptr)->get_faces();
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

MonoObject* godot_icall_Mesh_generate_triangle_mesh_c1c0bb02(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Mesh *>(ptr)->generate_triangle_mesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_MeshDataTool_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshDataTool *>(ptr)->clear();
}

int32_t godot_icall_MeshDataTool_create_from_surface_ca706a5e(Object * ptr, Object * arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<MeshDataTool *>(ptr)->create_from_surface(AutoRef(arg1), arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall_MeshDataTool_commit_to_surface_531b94c4(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MeshDataTool *>(ptr)->commit_to_surface(AutoRef(arg1));
    return (int32_t)ret;
}

int32_t godot_icall_MeshDataTool_get_format_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MeshDataTool *>(ptr)->get_format();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_MeshDataTool_get_vertex_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MeshDataTool *>(ptr)->get_vertex_count();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_MeshDataTool_get_edge_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MeshDataTool *>(ptr)->get_edge_count();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_MeshDataTool_get_face_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MeshDataTool *>(ptr)->get_face_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_MeshDataTool_set_vertex_3c383c4b(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<MeshDataTool *>(ptr)->set_vertex(arg1_in, arg2_in);
}

void godot_icall_MeshDataTool_get_vertex_237286f3(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_vertex(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_MeshDataTool_set_vertex_normal_3c383c4b(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<MeshDataTool *>(ptr)->set_vertex_normal(arg1_in, arg2_in);
}

void godot_icall_MeshDataTool_get_vertex_normal_237286f3(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_vertex_normal(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_MeshDataTool_set_vertex_tangent_28e48c99(Object * ptr, int32_t arg1, GDMonoMarshal::M_Plane* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Plane arg2_in = MARSHALLED_IN(Plane, arg2);
    static_cast<MeshDataTool *>(ptr)->set_vertex_tangent(arg1_in, arg2_in);
}

void godot_icall_MeshDataTool_get_vertex_tangent_2706dd75(Object * ptr, int32_t arg1, GDMonoMarshal::M_Plane* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Plane(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_vertex_tangent(arg1_in);
    *arg_ret = MARSHALLED_OUT(Plane, ret);
}

void godot_icall_MeshDataTool_set_vertex_uv_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<MeshDataTool *>(ptr)->set_vertex_uv(arg1_in, arg2_in);
}

void godot_icall_MeshDataTool_get_vertex_uv_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_vertex_uv(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_MeshDataTool_set_vertex_uv2_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<MeshDataTool *>(ptr)->set_vertex_uv2(arg1_in, arg2_in);
}

void godot_icall_MeshDataTool_get_vertex_uv2_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_vertex_uv2(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_MeshDataTool_set_vertex_color_932531de(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<MeshDataTool *>(ptr)->set_vertex_color(arg1_in, arg2_in);
}

void godot_icall_MeshDataTool_get_vertex_color_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_vertex_color(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_MeshDataTool_set_vertex_bones_3da8dbe8(Object * ptr, int32_t arg1, MonoArray* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecInt(arg2);
    static_cast<MeshDataTool *>(ptr)->set_vertex_bones(arg1_in, eastl::move(arg2_in));
}

MonoArray* godot_icall_MeshDataTool_get_vertex_bones_67f65c91(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_vertex_bones(arg1_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

void godot_icall_MeshDataTool_set_vertex_weights_aadf79b1(Object * ptr, int32_t arg1, MonoArray* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecFloat(arg2);
    static_cast<MeshDataTool *>(ptr)->set_vertex_weights(arg1_in, eastl::move(arg2_in));
}

MonoArray* godot_icall_MeshDataTool_get_vertex_weights_8a6351b5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_vertex_weights(arg1_in);
    return GDMonoMarshal::PoolRealArray_to_mono_array(ret);
}

void godot_icall_MeshDataTool_set_vertex_meta_37bef04(Object * ptr, int32_t arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<MeshDataTool *>(ptr)->set_vertex_meta(arg1_in, arg2_in);
}

MonoObject* godot_icall_MeshDataTool_get_vertex_meta_a9b2673d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_vertex_meta(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoArray* godot_icall_MeshDataTool_get_vertex_edges_67f65c91(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_vertex_edges(arg1_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

MonoArray* godot_icall_MeshDataTool_get_vertex_faces_67f65c91(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_vertex_faces(arg1_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

int32_t godot_icall_MeshDataTool_get_edge_vertex_4170d7f7(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_edge_vertex(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

MonoArray* godot_icall_MeshDataTool_get_edge_faces_67f65c91(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_edge_faces(arg1_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

void godot_icall_MeshDataTool_set_edge_meta_37bef04(Object * ptr, int32_t arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<MeshDataTool *>(ptr)->set_edge_meta(arg1_in, arg2_in);
}

MonoObject* godot_icall_MeshDataTool_get_edge_meta_a9b2673d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_edge_meta(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

int32_t godot_icall_MeshDataTool_get_face_vertex_4170d7f7(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_face_vertex(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_MeshDataTool_get_face_edge_4170d7f7(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_face_edge(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_MeshDataTool_set_face_meta_37bef04(Object * ptr, int32_t arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<MeshDataTool *>(ptr)->set_face_meta(arg1_in, arg2_in);
}

MonoObject* godot_icall_MeshDataTool_get_face_meta_a9b2673d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_face_meta(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_MeshDataTool_get_face_normal_237286f3(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_face_normal(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_MeshDataTool_set_material_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshDataTool *>(ptr)->set_material(AutoRef(arg1));
}

MonoObject* godot_icall_MeshDataTool_get_material_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MeshDataTool *>(ptr)->get_material();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_MeshDataTool_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "MeshDataTool")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_MeshInstance_set_mesh_d5d30806(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshInstance *>(ptr)->set_mesh(AutoRef(arg1));
}

MonoObject* godot_icall_MeshInstance_get_mesh_1372d766(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MeshInstance *>(ptr)->get_mesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_MeshInstance_set_skeleton_path_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshInstance *>(ptr)->set_skeleton_path(*arg1);
}

NodePath* godot_icall_MeshInstance_get_skeleton_path_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MeshInstance *>(ptr)->get_skeleton_path();
    return memnew(NodePath(ret));
}

void godot_icall_MeshInstance_set_skin_55b47932(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshInstance *>(ptr)->set_skin(AutoRef(arg1));
}

MonoObject* godot_icall_MeshInstance_get_skin_938dc832(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MeshInstance *>(ptr)->get_skin();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_MeshInstance_get_surface_material_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MeshInstance *>(ptr)->get_surface_material_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_MeshInstance_set_surface_material_4ee274f6(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<MeshInstance *>(ptr)->set_surface_material(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_MeshInstance_get_surface_material_77335ef3(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshInstance *>(ptr)->get_surface_material(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_MeshInstance_create_trimesh_collision_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshInstance *>(ptr)->create_trimesh_collision();
}

void godot_icall_MeshInstance_create_convex_collision_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshInstance *>(ptr)->create_convex_collision();
}

void godot_icall_MeshInstance_create_debug_tangents_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshInstance *>(ptr)->create_debug_tangents();
}

Object* godot_icall_MeshInstance_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "MeshInstance")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_MeshInstance2D_set_mesh_d5d30806(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshInstance2D *>(ptr)->set_mesh(AutoRef(arg1));
}

MonoObject* godot_icall_MeshInstance2D_get_mesh_1372d766(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MeshInstance2D *>(ptr)->get_mesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_MeshInstance2D_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshInstance2D *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_MeshInstance2D_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MeshInstance2D *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_MeshInstance2D_set_normal_map_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshInstance2D *>(ptr)->set_normal_map(AutoRef(arg1));
}

MonoObject* godot_icall_MeshInstance2D_get_normal_map_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MeshInstance2D *>(ptr)->get_normal_map();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_MeshInstance2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "MeshInstance2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_MeshLibrary_create_item_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<MeshLibrary *>(ptr)->create_item(arg1_in);
}

void godot_icall_MeshLibrary_set_item_name_cd663605(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<MeshLibrary *>(ptr)->set_item_name(arg1_in, arg2_in);
}

void godot_icall_MeshLibrary_set_item_mesh_b41476b2(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<MeshLibrary *>(ptr)->set_item_mesh(arg1_in, AutoRef(arg2));
}

void godot_icall_MeshLibrary_set_item_navmesh_af6e76cc(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<MeshLibrary *>(ptr)->set_item_navmesh(arg1_in, AutoRef(arg2));
}

void godot_icall_MeshLibrary_set_item_navmesh_transform_7ede1ff(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<MeshLibrary *>(ptr)->set_item_navmesh_transform(arg1_in, arg2_in);
}

void godot_icall_MeshLibrary_set_item_shapes_fbe503c0(Object * ptr, int32_t arg1, Array* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<MeshLibrary *>(ptr)->_set_item_shapes(arg1_in, *arg2);
}

void godot_icall_MeshLibrary_set_item_preview_f20a84e(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<MeshLibrary *>(ptr)->set_item_preview(arg1_in, AutoRef(arg2));
}

MonoString* godot_icall_MeshLibrary_get_item_name_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshLibrary *>(ptr)->get_item_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoObject* godot_icall_MeshLibrary_get_item_mesh_8c20a0a4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshLibrary *>(ptr)->get_item_mesh(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_MeshLibrary_get_item_navmesh_d36cc793(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshLibrary *>(ptr)->get_item_navmesh(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_MeshLibrary_get_item_navmesh_transform_466c8cd4(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshLibrary *>(ptr)->get_item_navmesh_transform(arg1_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

Array* godot_icall_MeshLibrary_get_item_shapes_2ca2fcca(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshLibrary *>(ptr)->_get_item_shapes(arg1_in);
    return memnew(Array(ret));
}

MonoObject* godot_icall_MeshLibrary_get_item_preview_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MeshLibrary *>(ptr)->get_item_preview(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_MeshLibrary_remove_item_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<MeshLibrary *>(ptr)->remove_item(arg1_in);
}

int32_t godot_icall_MeshLibrary_find_item_by_name_6d3db7c6(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<MeshLibrary *>(ptr)->find_item_by_name(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_MeshLibrary_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshLibrary *>(ptr)->clear();
}

MonoArray* godot_icall_MeshLibrary_get_item_list_2a166acd(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MeshLibrary *>(ptr)->get_item_list();
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

int32_t godot_icall_MeshLibrary_get_last_unused_item_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MeshLibrary *>(ptr)->get_last_unused_item_id();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_MeshLibrary_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "MeshLibrary")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_MeshTexture_set_mesh_d5d30806(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshTexture *>(ptr)->set_mesh(AutoRef(arg1));
}

MonoObject* godot_icall_MeshTexture_get_mesh_1372d766(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MeshTexture *>(ptr)->get_mesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_MeshTexture_set_image_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<MeshTexture *>(ptr)->set_image_size(arg1_in);
}

void godot_icall_MeshTexture_get_image_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<MeshTexture *>(ptr)->get_image_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_MeshTexture_set_base_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MeshTexture *>(ptr)->set_base_texture(AutoRef(arg1));
}

MonoObject* godot_icall_MeshTexture_get_base_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MeshTexture *>(ptr)->get_base_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_MeshTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "MeshTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_MultiMesh_set_mesh_d5d30806(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MultiMesh *>(ptr)->set_mesh(AutoRef(arg1));
}

MonoObject* godot_icall_MultiMesh_get_mesh_1372d766(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MultiMesh *>(ptr)->get_mesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_MultiMesh_set_color_format_a5711d97(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<MultiMesh *>(ptr)->set_color_format((MultiMesh::ColorFormat)arg1_in);
}

int32_t godot_icall_MultiMesh_get_color_format_9cc1c4b2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MultiMesh *>(ptr)->get_color_format();
    return (int32_t)ret;
}

void godot_icall_MultiMesh_set_custom_data_format_c99560c9(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<MultiMesh *>(ptr)->set_custom_data_format((MultiMesh::CustomDataFormat)arg1_in);
}

int32_t godot_icall_MultiMesh_get_custom_data_format_7c79cc24(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MultiMesh *>(ptr)->get_custom_data_format();
    return (int32_t)ret;
}

void godot_icall_MultiMesh_set_transform_format_2b7d36f4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<MultiMesh *>(ptr)->set_transform_format((MultiMesh::TransformFormat)arg1_in);
}

int32_t godot_icall_MultiMesh_get_transform_format_869d2427(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MultiMesh *>(ptr)->get_transform_format();
    return (int32_t)ret;
}

void godot_icall_MultiMesh_set_instance_count_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<MultiMesh *>(ptr)->set_instance_count(arg1_in);
}

int32_t godot_icall_MultiMesh_get_instance_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MultiMesh *>(ptr)->get_instance_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_MultiMesh_set_visible_instance_count_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<MultiMesh *>(ptr)->set_visible_instance_count(arg1_in);
}

int32_t godot_icall_MultiMesh_get_visible_instance_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MultiMesh *>(ptr)->get_visible_instance_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_MultiMesh_set_instance_transform_7ede1ff(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<MultiMesh *>(ptr)->set_instance_transform(arg1_in, arg2_in);
}

void godot_icall_MultiMesh_set_instance_transform_2d_ae22ee09(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform2D* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Transform2D arg2_in = MARSHALLED_IN(Transform2D, arg2);
    static_cast<MultiMesh *>(ptr)->set_instance_transform_2d(arg1_in, arg2_in);
}

void godot_icall_MultiMesh_get_instance_transform_466c8cd4(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MultiMesh *>(ptr)->get_instance_transform(arg1_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_MultiMesh_get_instance_transform_2d_1f6977a1(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MultiMesh *>(ptr)->get_instance_transform_2d(arg1_in);
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_MultiMesh_set_instance_color_932531de(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<MultiMesh *>(ptr)->set_instance_color(arg1_in, arg2_in);
}

void godot_icall_MultiMesh_get_instance_color_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MultiMesh *>(ptr)->get_instance_color(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_MultiMesh_set_instance_custom_data_932531de(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<MultiMesh *>(ptr)->set_instance_custom_data(arg1_in, arg2_in);
}

void godot_icall_MultiMesh_get_instance_custom_data_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<MultiMesh *>(ptr)->get_instance_custom_data(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_MultiMesh_set_as_bulk_array_b2a2204a(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolRealArray arg1_in = GDMonoMarshal::mono_array_to_PoolRealArray(arg1);
    static_cast<MultiMesh *>(ptr)->set_as_bulk_array(arg1_in);
}

void godot_icall_MultiMesh_get_aabb_2dbf935b(Object * ptr, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<MultiMesh *>(ptr)->get_aabb();
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

void godot_icall_MultiMesh__set_transform_array_88c6a314(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolVector3Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector3Array(arg1);
    static_cast<MultiMesh *>(ptr)->_set_transform_array(arg1_in);
}

MonoArray* godot_icall_MultiMesh__get_transform_array_36607e58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MultiMesh *>(ptr)->_get_transform_array();
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

void godot_icall_MultiMesh__set_transform_2d_array_3a3116bd(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolVector2Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg1);
    static_cast<MultiMesh *>(ptr)->_set_transform_2d_array(arg1_in);
}

MonoArray* godot_icall_MultiMesh__get_transform_2d_array_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MultiMesh *>(ptr)->_get_transform_2d_array();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_MultiMesh__set_color_array_22e90985(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolColorArray arg1_in = GDMonoMarshal::mono_array_to_PoolColorArray(arg1);
    static_cast<MultiMesh *>(ptr)->_set_color_array(arg1_in);
}

MonoArray* godot_icall_MultiMesh__get_color_array_e048d8e7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MultiMesh *>(ptr)->_get_color_array();
    return GDMonoMarshal::PoolColorArray_to_mono_array(ret);
}

void godot_icall_MultiMesh__set_custom_data_array_22e90985(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolColorArray arg1_in = GDMonoMarshal::mono_array_to_PoolColorArray(arg1);
    static_cast<MultiMesh *>(ptr)->_set_custom_data_array(arg1_in);
}

MonoArray* godot_icall_MultiMesh__get_custom_data_array_e048d8e7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MultiMesh *>(ptr)->_get_custom_data_array();
    return GDMonoMarshal::PoolColorArray_to_mono_array(ret);
}

Object* godot_icall_MultiMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "MultiMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_MultiMeshInstance_set_multimesh_872cf6cd(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MultiMeshInstance *>(ptr)->set_multimesh(AutoRef(arg1));
}

MonoObject* godot_icall_MultiMeshInstance_get_multimesh_4606519f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MultiMeshInstance *>(ptr)->get_multimesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_MultiMeshInstance_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "MultiMeshInstance")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_MultiMeshInstance2D_set_multimesh_872cf6cd(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MultiMeshInstance2D *>(ptr)->set_multimesh(AutoRef(arg1));
}

MonoObject* godot_icall_MultiMeshInstance2D_get_multimesh_4606519f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MultiMeshInstance2D *>(ptr)->get_multimesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_MultiMeshInstance2D_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MultiMeshInstance2D *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_MultiMeshInstance2D_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MultiMeshInstance2D *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_MultiMeshInstance2D_set_normal_map_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MultiMeshInstance2D *>(ptr)->set_normal_map(AutoRef(arg1));
}

MonoObject* godot_icall_MultiMeshInstance2D_get_normal_map_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MultiMeshInstance2D *>(ptr)->get_normal_map();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_MultiMeshInstance2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "MultiMeshInstance2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_MultiplayerAPI_set_root_node_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MultiplayerAPI *>(ptr)->set_root_node((Node*)arg1);
}

int32_t godot_icall_MultiplayerAPI_send_bytes_26cb9d38(Object * ptr, MonoArray* arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    PoolByteArray arg1_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int64_t arg3_in = (int64_t)arg3;
    auto ret = static_cast<MultiplayerAPI *>(ptr)->send_bytes(arg1_in, arg2_in, (NetworkedMultiplayerPeer::TransferMode)arg3_in);
    return (int32_t)ret;
}

MonoBoolean godot_icall_MultiplayerAPI_has_network_peer_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<MultiplayerAPI *>(ptr)->has_network_peer();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_MultiplayerAPI_get_network_peer_9929695a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MultiplayerAPI *>(ptr)->get_network_peer();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_MultiplayerAPI_get_network_unique_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MultiplayerAPI *>(ptr)->get_network_unique_id();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_MultiplayerAPI_is_network_server_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<MultiplayerAPI *>(ptr)->is_network_server();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_MultiplayerAPI_get_rpc_sender_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<MultiplayerAPI *>(ptr)->get_rpc_sender_id();
    return static_cast<int32_t>(ret);
}

void godot_icall_MultiplayerAPI_set_network_peer_6a099e0a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<MultiplayerAPI *>(ptr)->set_network_peer(AutoRef(arg1));
}

void godot_icall_MultiplayerAPI_poll_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<MultiplayerAPI *>(ptr)->poll();
}

void godot_icall_MultiplayerAPI_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<MultiplayerAPI *>(ptr)->clear();
}

MonoArray* godot_icall_MultiplayerAPI_get_network_connected_peers_2a166acd(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<MultiplayerAPI *>(ptr)->get_network_connected_peers();
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

void godot_icall_MultiplayerAPI_set_refuse_new_network_connections_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<MultiplayerAPI *>(ptr)->set_refuse_new_network_connections(arg1_in);
}

MonoBoolean godot_icall_MultiplayerAPI_is_refusing_new_network_connections_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<MultiplayerAPI *>(ptr)->is_refusing_new_network_connections();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_MultiplayerAPI_set_allow_object_decoding_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<MultiplayerAPI *>(ptr)->set_allow_object_decoding(arg1_in);
}

MonoBoolean godot_icall_MultiplayerAPI_is_object_decoding_allowed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<MultiplayerAPI *>(ptr)->is_object_decoding_allowed();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_MultiplayerAPI_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "MultiplayerAPI")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

RID* godot_icall_Navigation_get_rid_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Navigation *>(ptr)->get_rid();
    return memnew(RID(ret));
}

MonoArray* godot_icall_Navigation_get_simple_path_b6e4683e(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    bool arg3_in = static_cast<bool>(arg3);
    auto ret = static_cast<Navigation *>(ptr)->get_simple_path(arg1_in, arg2_in, arg3_in);
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

void godot_icall_Navigation_set_up_vector_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Navigation *>(ptr)->set_up_vector(arg1_in);
}

void godot_icall_Navigation_get_up_vector_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Navigation *>(ptr)->get_up_vector();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Navigation_set_cell_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Navigation *>(ptr)->set_cell_size(arg1_in);
}

void godot_icall_Navigation_get_cell_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Navigation *>(ptr)->get_cell_size();
    *arg_ret = (float)ret;
}

void godot_icall_Navigation_set_edge_connection_margin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Navigation *>(ptr)->set_edge_connection_margin(arg1_in);
}

void godot_icall_Navigation_get_edge_connection_margin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Navigation *>(ptr)->get_edge_connection_margin();
    *arg_ret = (float)ret;
}

Object* godot_icall_Navigation_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Navigation")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

RID* godot_icall_Navigation2D_get_rid_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Navigation2D *>(ptr)->get_rid();
    return memnew(RID(ret));
}

MonoArray* godot_icall_Navigation2D_get_simple_path_9ddca2d(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    bool arg3_in = static_cast<bool>(arg3);
    auto ret = static_cast<Navigation2D *>(ptr)->get_simple_path(arg1_in, arg2_in, arg3_in);
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_Navigation2D_set_cell_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Navigation2D *>(ptr)->set_cell_size(arg1_in);
}

void godot_icall_Navigation2D_get_cell_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Navigation2D *>(ptr)->get_cell_size();
    *arg_ret = (float)ret;
}

void godot_icall_Navigation2D_set_edge_connection_margin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Navigation2D *>(ptr)->set_edge_connection_margin(arg1_in);
}

void godot_icall_Navigation2D_get_edge_connection_margin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Navigation2D *>(ptr)->get_edge_connection_margin();
    *arg_ret = (float)ret;
}

Object* godot_icall_Navigation2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Navigation2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_NavigationAgent_set_target_desired_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent *>(ptr)->set_target_desired_distance(arg1_in);
}

void godot_icall_NavigationAgent_get_target_desired_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent *>(ptr)->get_target_desired_distance();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent_set_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent *>(ptr)->set_radius(arg1_in);
}

void godot_icall_NavigationAgent_get_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent *>(ptr)->get_radius();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent_set_agent_height_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent *>(ptr)->set_agent_height_offset(arg1_in);
}

void godot_icall_NavigationAgent_get_agent_height_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent *>(ptr)->get_agent_height_offset();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent_set_ignore_y_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<NavigationAgent *>(ptr)->set_ignore_y(arg1_in);
}

MonoBoolean godot_icall_NavigationAgent_get_ignore_y_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NavigationAgent *>(ptr)->get_ignore_y();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NavigationAgent_set_navigation_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationAgent *>(ptr)->set_navigation((Navigation*)arg1);
}

MonoObject* godot_icall_NavigationAgent_get_navigation_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationAgent *>(ptr)->get_navigation();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_NavigationAgent_set_neighbor_dist_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent *>(ptr)->set_neighbor_dist(arg1_in);
}

void godot_icall_NavigationAgent_get_neighbor_dist_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent *>(ptr)->get_neighbor_dist();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent_set_max_neighbors_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<NavigationAgent *>(ptr)->set_max_neighbors(arg1_in);
}

int32_t godot_icall_NavigationAgent_get_max_neighbors_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NavigationAgent *>(ptr)->get_max_neighbors();
    return static_cast<int32_t>(ret);
}

void godot_icall_NavigationAgent_set_time_horizon_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent *>(ptr)->set_time_horizon(arg1_in);
}

void godot_icall_NavigationAgent_get_time_horizon_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent *>(ptr)->get_time_horizon();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent_set_max_speed_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent *>(ptr)->set_max_speed(arg1_in);
}

void godot_icall_NavigationAgent_get_max_speed_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent *>(ptr)->get_max_speed();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent_set_path_max_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent *>(ptr)->set_path_max_distance(arg1_in);
}

void godot_icall_NavigationAgent_get_path_max_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent *>(ptr)->get_path_max_distance();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent_set_target_location_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<NavigationAgent *>(ptr)->set_target_location(arg1_in);
}

void godot_icall_NavigationAgent_get_target_location_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent *>(ptr)->get_target_location();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_NavigationAgent_get_next_location_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent *>(ptr)->get_next_location();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_NavigationAgent_distance_to_target_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent *>(ptr)->distance_to_target();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent_set_velocity_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<NavigationAgent *>(ptr)->set_velocity(arg1_in);
}

MonoArray* godot_icall_NavigationAgent_get_nav_path_36607e58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationAgent *>(ptr)->get_nav_path();
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

int32_t godot_icall_NavigationAgent_get_nav_path_index_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NavigationAgent *>(ptr)->get_nav_path_index();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_NavigationAgent_is_target_reached_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NavigationAgent *>(ptr)->is_target_reached();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_NavigationAgent_is_target_reachable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NavigationAgent *>(ptr)->is_target_reachable();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_NavigationAgent_is_navigation_finished_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NavigationAgent *>(ptr)->is_navigation_finished();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NavigationAgent_get_final_location_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent *>(ptr)->get_final_location();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

Object* godot_icall_NavigationAgent_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "NavigationAgent")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_NavigationAgent2D_set_target_desired_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent2D *>(ptr)->set_target_desired_distance(arg1_in);
}

void godot_icall_NavigationAgent2D_get_target_desired_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_target_desired_distance();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent2D_set_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent2D *>(ptr)->set_radius(arg1_in);
}

void godot_icall_NavigationAgent2D_get_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_radius();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent2D_set_navigation_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationAgent2D *>(ptr)->set_navigation((Navigation2D*)arg1);
}

MonoObject* godot_icall_NavigationAgent2D_get_navigation_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_navigation();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_NavigationAgent2D_set_neighbor_dist_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent2D *>(ptr)->set_neighbor_dist(arg1_in);
}

void godot_icall_NavigationAgent2D_get_neighbor_dist_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_neighbor_dist();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent2D_set_max_neighbors_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<NavigationAgent2D *>(ptr)->set_max_neighbors(arg1_in);
}

int32_t godot_icall_NavigationAgent2D_get_max_neighbors_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_max_neighbors();
    return static_cast<int32_t>(ret);
}

void godot_icall_NavigationAgent2D_set_time_horizon_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent2D *>(ptr)->set_time_horizon(arg1_in);
}

void godot_icall_NavigationAgent2D_get_time_horizon_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_time_horizon();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent2D_set_max_speed_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent2D *>(ptr)->set_max_speed(arg1_in);
}

void godot_icall_NavigationAgent2D_get_max_speed_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_max_speed();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent2D_set_path_max_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationAgent2D *>(ptr)->set_path_max_distance(arg1_in);
}

void godot_icall_NavigationAgent2D_get_path_max_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_path_max_distance();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent2D_set_target_location_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<NavigationAgent2D *>(ptr)->set_target_location(arg1_in);
}

void godot_icall_NavigationAgent2D_get_target_location_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_target_location();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_NavigationAgent2D_get_next_location_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_next_location();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_NavigationAgent2D_distance_to_target_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent2D *>(ptr)->distance_to_target();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationAgent2D_set_velocity_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<NavigationAgent2D *>(ptr)->set_velocity(arg1_in);
}

MonoArray* godot_icall_NavigationAgent2D_get_nav_path_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_nav_path();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

int32_t godot_icall_NavigationAgent2D_get_nav_path_index_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_nav_path_index();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_NavigationAgent2D_is_target_reached_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NavigationAgent2D *>(ptr)->is_target_reached();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_NavigationAgent2D_is_target_reachable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NavigationAgent2D *>(ptr)->is_target_reachable();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_NavigationAgent2D_is_navigation_finished_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NavigationAgent2D *>(ptr)->is_navigation_finished();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NavigationAgent2D_get_final_location_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationAgent2D *>(ptr)->get_final_location();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

Object* godot_icall_NavigationAgent2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "NavigationAgent2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_NavigationMesh_set_sample_partition_type_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<NavigationMesh *>(ptr)->set_sample_partition_type(arg1_in);
}

int32_t godot_icall_NavigationMesh_get_sample_partition_type_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NavigationMesh *>(ptr)->get_sample_partition_type();
    return static_cast<int32_t>(ret);
}

void godot_icall_NavigationMesh_set_parsed_geometry_type_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<NavigationMesh *>(ptr)->set_parsed_geometry_type(arg1_in);
}

int32_t godot_icall_NavigationMesh_get_parsed_geometry_type_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NavigationMesh *>(ptr)->get_parsed_geometry_type();
    return static_cast<int32_t>(ret);
}

void godot_icall_NavigationMesh_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<NavigationMesh *>(ptr)->set_collision_mask(arg1_in);
}

uint32_t godot_icall_NavigationMesh_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<NavigationMesh *>(ptr)->get_collision_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_NavigationMesh_set_collision_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<NavigationMesh *>(ptr)->set_collision_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_NavigationMesh_get_collision_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<NavigationMesh *>(ptr)->get_collision_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NavigationMesh_set_source_geometry_mode_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<NavigationMesh *>(ptr)->set_source_geometry_mode(arg1_in);
}

int32_t godot_icall_NavigationMesh_get_source_geometry_mode_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NavigationMesh *>(ptr)->get_source_geometry_mode();
    return static_cast<int32_t>(ret);
}

void godot_icall_NavigationMesh_set_source_group_name_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<NavigationMesh *>(ptr)->set_source_group_name(arg1_in);
}

MonoString* godot_icall_NavigationMesh_get_source_group_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationMesh *>(ptr)->get_source_group_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_NavigationMesh_set_cell_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_cell_size(arg1_in);
}

void godot_icall_NavigationMesh_get_cell_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_cell_size();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_cell_height_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_cell_height(arg1_in);
}

void godot_icall_NavigationMesh_get_cell_height_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_cell_height();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_agent_height_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_agent_height(arg1_in);
}

void godot_icall_NavigationMesh_get_agent_height_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_agent_height();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_agent_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_agent_radius(arg1_in);
}

void godot_icall_NavigationMesh_get_agent_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_agent_radius();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_agent_max_climb_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_agent_max_climb(arg1_in);
}

void godot_icall_NavigationMesh_get_agent_max_climb_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_agent_max_climb();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_agent_max_slope_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_agent_max_slope(arg1_in);
}

void godot_icall_NavigationMesh_get_agent_max_slope_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_agent_max_slope();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_region_min_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_region_min_size(arg1_in);
}

void godot_icall_NavigationMesh_get_region_min_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_region_min_size();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_region_merge_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_region_merge_size(arg1_in);
}

void godot_icall_NavigationMesh_get_region_merge_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_region_merge_size();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_edge_max_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_edge_max_length(arg1_in);
}

void godot_icall_NavigationMesh_get_edge_max_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_edge_max_length();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_edge_max_error_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_edge_max_error(arg1_in);
}

void godot_icall_NavigationMesh_get_edge_max_error_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_edge_max_error();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_verts_per_poly_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_verts_per_poly(arg1_in);
}

void godot_icall_NavigationMesh_get_verts_per_poly_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_verts_per_poly();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_detail_sample_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_detail_sample_distance(arg1_in);
}

void godot_icall_NavigationMesh_get_detail_sample_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_detail_sample_distance();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_detail_sample_max_error_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NavigationMesh *>(ptr)->set_detail_sample_max_error(arg1_in);
}

void godot_icall_NavigationMesh_get_detail_sample_max_error_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NavigationMesh *>(ptr)->get_detail_sample_max_error();
    *arg_ret = (float)ret;
}

void godot_icall_NavigationMesh_set_filter_low_hanging_obstacles_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<NavigationMesh *>(ptr)->set_filter_low_hanging_obstacles(arg1_in);
}

MonoBoolean godot_icall_NavigationMesh_get_filter_low_hanging_obstacles_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NavigationMesh *>(ptr)->get_filter_low_hanging_obstacles();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NavigationMesh_set_filter_ledge_spans_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<NavigationMesh *>(ptr)->set_filter_ledge_spans(arg1_in);
}

MonoBoolean godot_icall_NavigationMesh_get_filter_ledge_spans_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NavigationMesh *>(ptr)->get_filter_ledge_spans();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NavigationMesh_set_filter_walkable_low_height_spans_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<NavigationMesh *>(ptr)->set_filter_walkable_low_height_spans(arg1_in);
}

MonoBoolean godot_icall_NavigationMesh_get_filter_walkable_low_height_spans_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NavigationMesh *>(ptr)->get_filter_walkable_low_height_spans();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NavigationMesh_set_vertices_b8a866b9(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector3(arg1);
    static_cast<NavigationMesh *>(ptr)->set_vertices(eastl::move(arg1_in));
}

MonoArray* godot_icall_NavigationMesh_get_vertices_36607e58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationMesh *>(ptr)->get_vertices();
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

void godot_icall_NavigationMesh_add_polygon_6b64efb8(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecInt(arg1);
    static_cast<NavigationMesh *>(ptr)->add_polygon(eastl::move(arg1_in));
}

int32_t godot_icall_NavigationMesh_get_polygon_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NavigationMesh *>(ptr)->get_polygon_count();
    return static_cast<int32_t>(ret);
}

MonoArray* godot_icall_NavigationMesh_get_polygon_67f65c91(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<NavigationMesh *>(ptr)->get_polygon(arg1_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

void godot_icall_NavigationMesh_clear_polygons_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationMesh *>(ptr)->clear_polygons();
}

void godot_icall_NavigationMesh_create_from_mesh_d5d30806(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationMesh *>(ptr)->create_from_mesh(AutoRef(arg1));
}

void godot_icall_NavigationMesh__set_polygons_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationMesh *>(ptr)->_set_polygons(*arg1);
}

Array* godot_icall_NavigationMesh__get_polygons_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationMesh *>(ptr)->_get_polygons();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_NavigationMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "NavigationMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_NavigationMeshGenerator_bake_cd00ac03(Object * ptr, Object * arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationMeshGenerator *>(ptr)->bake(AutoRef(arg1), (Node*)arg2);
}

void godot_icall_NavigationMeshGenerator_clear_ded908a4(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationMeshGenerator *>(ptr)->clear(AutoRef(arg1));
}

Object* godot_icall_NavigationMeshGenerator_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("NavigationMeshGenerator");
}

void godot_icall_NavigationMeshInstance_set_navigation_mesh_ded908a4(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationMeshInstance *>(ptr)->set_navigation_mesh(AutoRef(arg1));
}

MonoObject* godot_icall_NavigationMeshInstance_get_navigation_mesh_c78d7c8(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationMeshInstance *>(ptr)->get_navigation_mesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_NavigationMeshInstance_set_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<NavigationMeshInstance *>(ptr)->set_enabled(arg1_in);
}

MonoBoolean godot_icall_NavigationMeshInstance_is_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NavigationMeshInstance *>(ptr)->is_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NavigationMeshInstance_bake_navigation_mesh_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationMeshInstance *>(ptr)->bake_navigation_mesh();
}
Object* godot_icall_NavigationMeshInstance_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "NavigationMeshInstance")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_NavigationObstacle_set_navigation_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationObstacle *>(ptr)->set_navigation((Navigation *)arg1);
}

MonoObject* godot_icall_NavigationObstacle_get_navigation_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationObstacle *>(ptr)->get_navigation();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Object* godot_icall_NavigationObstacle_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "NavigationObstacle")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_NavigationObstacle2D_set_navigation_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationObstacle2D *>(ptr)->set_navigation((Navigation2D*)arg1);
}

MonoObject* godot_icall_NavigationObstacle2D_get_navigation_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationObstacle2D *>(ptr)->get_navigation();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Object* godot_icall_NavigationObstacle2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "NavigationObstacle2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_NavigationPolygon_set_vertices_b8a866ba(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    static_cast<NavigationPolygon *>(ptr)->set_vertices(eastl::move(arg1_in));
}

MonoArray* godot_icall_NavigationPolygon_get_vertices_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationPolygon *>(ptr)->get_vertices();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_NavigationPolygon_add_polygon_6b64efb8(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecInt(arg1);
    static_cast<NavigationPolygon *>(ptr)->add_polygon(eastl::move(arg1_in));
}

int32_t godot_icall_NavigationPolygon_get_polygon_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NavigationPolygon *>(ptr)->get_polygon_count();
    return static_cast<int32_t>(ret);
}

MonoArray* godot_icall_NavigationPolygon_get_polygon_67f65c91(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<NavigationPolygon *>(ptr)->get_polygon(arg1_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

void godot_icall_NavigationPolygon_clear_polygons_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationPolygon *>(ptr)->clear_polygons();
}

void godot_icall_NavigationPolygon_add_outline_3a3116bd(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolVector2Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg1);
    static_cast<NavigationPolygon *>(ptr)->add_outline(arg1_in);
}

void godot_icall_NavigationPolygon_add_outline_at_index_62a0cbe5(Object * ptr, MonoArray* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    PoolVector2Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<NavigationPolygon *>(ptr)->add_outline_at_index(arg1_in, arg2_in);
}

int32_t godot_icall_NavigationPolygon_get_outline_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NavigationPolygon *>(ptr)->get_outline_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_NavigationPolygon_set_outline_caf66ceb(Object * ptr, int32_t arg1, MonoArray* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    PoolVector2Array arg2_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg2);
    static_cast<NavigationPolygon *>(ptr)->set_outline(arg1_in, arg2_in);
}

MonoArray* godot_icall_NavigationPolygon_get_outline_d550613b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<NavigationPolygon *>(ptr)->get_outline(arg1_in);
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_NavigationPolygon_remove_outline_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<NavigationPolygon *>(ptr)->remove_outline(arg1_in);
}

void godot_icall_NavigationPolygon_clear_outlines_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationPolygon *>(ptr)->clear_outlines();
}

void godot_icall_NavigationPolygon_make_polygons_from_outlines_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationPolygon *>(ptr)->make_polygons_from_outlines();
}

void godot_icall_NavigationPolygon__set_polygons_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationPolygon *>(ptr)->_set_polygons(*arg1);
}

Array* godot_icall_NavigationPolygon__get_polygons_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationPolygon *>(ptr)->_get_polygons();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_NavigationPolygon__set_outlines_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationPolygon *>(ptr)->_set_outlines(*arg1);
}

Array* godot_icall_NavigationPolygon__get_outlines_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationPolygon *>(ptr)->_get_outlines();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_NavigationPolygon_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "NavigationPolygon")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_NavigationPolygonInstance_set_navigation_polygon_e7711b85(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NavigationPolygonInstance *>(ptr)->set_navigation_polygon(AutoRef(arg1));
}

MonoObject* godot_icall_NavigationPolygonInstance_get_navigation_polygon_25d0e6e7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NavigationPolygonInstance *>(ptr)->get_navigation_polygon();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_NavigationPolygonInstance_set_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<NavigationPolygonInstance *>(ptr)->set_enabled(arg1_in);
}

MonoBoolean godot_icall_NavigationPolygonInstance_is_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NavigationPolygonInstance *>(ptr)->is_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_NavigationPolygonInstance_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "NavigationPolygonInstance")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_NetworkedMultiplayerENet_create_server_88365f0(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    auto ret = static_cast<NetworkedMultiplayerENet *>(ptr)->create_server(arg1_in, arg2_in, arg3_in, arg4_in);
    return (int32_t)ret;
}

int32_t godot_icall_NetworkedMultiplayerENet_create_client_d5ecd879(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    auto ret = static_cast<NetworkedMultiplayerENet *>(ptr)->create_client(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
    return (int32_t)ret;
}

void godot_icall_NetworkedMultiplayerENet_close_connection_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<NetworkedMultiplayerENet *>(ptr)->close_connection(arg1_in);
}

void godot_icall_NetworkedMultiplayerENet_disconnect_peer_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<NetworkedMultiplayerENet *>(ptr)->disconnect_peer(arg1_in, arg2_in);
}

void godot_icall_NetworkedMultiplayerENet_set_compression_mode_2f36d35b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<NetworkedMultiplayerENet *>(ptr)->set_compression_mode((NetworkedMultiplayerENet::CompressionMode)arg1_in);
}

int32_t godot_icall_NetworkedMultiplayerENet_get_compression_mode_33954c16(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NetworkedMultiplayerENet *>(ptr)->get_compression_mode();
    return (int32_t)ret;
}

void godot_icall_NetworkedMultiplayerENet_set_bind_ip_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<NetworkedMultiplayerENet *>(ptr)->set_bind_ip(IP_Address(arg1_in));
}

MonoString* godot_icall_NetworkedMultiplayerENet_get_peer_address_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<NetworkedMultiplayerENet *>(ptr)->get_peer_address(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(String(ret));
}

int32_t godot_icall_NetworkedMultiplayerENet_get_peer_port_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<NetworkedMultiplayerENet *>(ptr)->get_peer_port(arg1_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_NetworkedMultiplayerENet_get_packet_channel_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NetworkedMultiplayerENet *>(ptr)->get_packet_channel();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_NetworkedMultiplayerENet_get_last_packet_channel_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NetworkedMultiplayerENet *>(ptr)->get_last_packet_channel();
    return static_cast<int32_t>(ret);
}

void godot_icall_NetworkedMultiplayerENet_set_transfer_channel_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<NetworkedMultiplayerENet *>(ptr)->set_transfer_channel(arg1_in);
}

int32_t godot_icall_NetworkedMultiplayerENet_get_transfer_channel_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NetworkedMultiplayerENet *>(ptr)->get_transfer_channel();
    return static_cast<int32_t>(ret);
}

void godot_icall_NetworkedMultiplayerENet_set_channel_count_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<NetworkedMultiplayerENet *>(ptr)->set_channel_count(arg1_in);
}

int32_t godot_icall_NetworkedMultiplayerENet_get_channel_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NetworkedMultiplayerENet *>(ptr)->get_channel_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_NetworkedMultiplayerENet_set_always_ordered_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<NetworkedMultiplayerENet *>(ptr)->set_always_ordered(arg1_in);
}

MonoBoolean godot_icall_NetworkedMultiplayerENet_is_always_ordered_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NetworkedMultiplayerENet *>(ptr)->is_always_ordered();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NetworkedMultiplayerENet_set_server_relay_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<NetworkedMultiplayerENet *>(ptr)->set_server_relay_enabled(arg1_in);
}

MonoBoolean godot_icall_NetworkedMultiplayerENet_is_server_relay_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NetworkedMultiplayerENet *>(ptr)->is_server_relay_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_NetworkedMultiplayerENet_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "NetworkedMultiplayerENet")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_NetworkedMultiplayerPeer_set_transfer_mode_3e225ea0(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<NetworkedMultiplayerPeer *>(ptr)->set_transfer_mode((NetworkedMultiplayerPeer::TransferMode)arg1_in);
}

int32_t godot_icall_NetworkedMultiplayerPeer_get_transfer_mode_b4b121f3(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NetworkedMultiplayerPeer *>(ptr)->get_transfer_mode();
    return (int32_t)ret;
}

void godot_icall_NetworkedMultiplayerPeer_set_target_peer_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<NetworkedMultiplayerPeer *>(ptr)->set_target_peer(arg1_in);
}

int32_t godot_icall_NetworkedMultiplayerPeer_get_packet_peer_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NetworkedMultiplayerPeer *>(ptr)->get_packet_peer();
    return static_cast<int32_t>(ret);
}

void godot_icall_NetworkedMultiplayerPeer_poll_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<NetworkedMultiplayerPeer *>(ptr)->poll();
}

int32_t godot_icall_NetworkedMultiplayerPeer_get_connection_status_b217d53e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NetworkedMultiplayerPeer *>(ptr)->get_connection_status();
    return (int32_t)ret;
}

int32_t godot_icall_NetworkedMultiplayerPeer_get_unique_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NetworkedMultiplayerPeer *>(ptr)->get_unique_id();
    return static_cast<int32_t>(ret);
}

void godot_icall_NetworkedMultiplayerPeer_set_refuse_new_connections_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<NetworkedMultiplayerPeer *>(ptr)->set_refuse_new_connections(arg1_in);
}

MonoBoolean godot_icall_NetworkedMultiplayerPeer_is_refusing_new_connections_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NetworkedMultiplayerPeer *>(ptr)->is_refusing_new_connections();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NinePatchRect_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NinePatchRect *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_NinePatchRect_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NinePatchRect *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_NinePatchRect_set_patch_margin_d167c784(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<NinePatchRect *>(ptr)->set_patch_margin((Margin)arg1_in, arg2_in);
}

int32_t godot_icall_NinePatchRect_get_patch_margin_bbd2c228(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<NinePatchRect *>(ptr)->get_patch_margin((Margin)arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_NinePatchRect_set_region_rect_a5ed61f1(Object * ptr, GDMonoMarshal::M_Rect2* arg1) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    static_cast<NinePatchRect *>(ptr)->set_region_rect(arg1_in);
}

void godot_icall_NinePatchRect_get_region_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NinePatchRect *>(ptr)->get_region_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_NinePatchRect_set_draw_center_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<NinePatchRect *>(ptr)->set_draw_center(arg1_in);
}

MonoBoolean godot_icall_NinePatchRect_is_draw_center_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NinePatchRect *>(ptr)->is_draw_center_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NinePatchRect_set_h_axis_stretch_mode_8bcc0b0e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<NinePatchRect *>(ptr)->set_h_axis_stretch_mode((NinePatchRect::AxisStretchMode)arg1_in);
}

int32_t godot_icall_NinePatchRect_get_h_axis_stretch_mode_3965d65e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NinePatchRect *>(ptr)->get_h_axis_stretch_mode();
    return (int32_t)ret;
}

void godot_icall_NinePatchRect_set_v_axis_stretch_mode_8bcc0b0e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<NinePatchRect *>(ptr)->set_v_axis_stretch_mode((NinePatchRect::AxisStretchMode)arg1_in);
}

int32_t godot_icall_NinePatchRect_get_v_axis_stretch_mode_3965d65e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<NinePatchRect *>(ptr)->get_v_axis_stretch_mode();
    return (int32_t)ret;
}

Object* godot_icall_NinePatchRect_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "NinePatchRect")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Node_add_child_below_node_ea228bc2(Object * ptr, Object * arg1, Object * arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<Node *>(ptr)->add_child_below_node((Node*)arg1, (Node*)arg2, arg3_in);
}

void godot_icall_Node_set_name_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Node *>(ptr)->set_name(arg1_in);
}

MonoString* godot_icall_Node_get_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Node_add_child_26387a5c(Object * ptr, Object * arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Node *>(ptr)->add_child((Node*)arg1, arg2_in);
}

void godot_icall_Node_remove_child_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Node *>(ptr)->remove_child((Node*)arg1);
}

int32_t godot_icall_Node_get_child_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Node *>(ptr)->get_child_count();
    return static_cast<int32_t>(ret);
}

Array* godot_icall_Node_get_children_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->_get_children();
    return memnew(Array(Variant::from(ret)));
}

MonoObject* godot_icall_Node_get_child_4db3f65f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Node *>(ptr)->get_child(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoBoolean godot_icall_Node_has_node_dfaf606e(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->has_node(*arg1);
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Node_get_node_ee7d8d97(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_node(*arg1);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_Node_get_node_or_null_ee7d8d97(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_node_or_null(*arg1);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_Node_get_parent_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_parent();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_Node_find_node_e2275056(Object * ptr, MonoString* arg1, MonoBoolean arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    auto ret = static_cast<Node *>(ptr)->find_node(arg1_in, arg2_in, arg3_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_Node_find_parent_12bbcd3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Node *>(ptr)->find_parent(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoBoolean godot_icall_Node_has_node_and_resource_dfaf606e(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->has_node_and_resource(*arg1);
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall_Node_get_node_and_resource_4c58e402(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->_get_node_and_resource(*arg1);
    return memnew(Array(Variant::from(ret)));
}

MonoBoolean godot_icall_Node_is_inside_tree_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->is_inside_tree();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Node_is_a_parent_of_1746f8cd(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->is_a_parent_of((Node*)arg1);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Node_is_greater_than_1746f8cd(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->is_greater_than((Node*)arg1);
    return static_cast<MonoBoolean>(ret);
}

NodePath* godot_icall_Node_get_path_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_path();
    return memnew(NodePath(ret));
}

NodePath* godot_icall_Node_get_path_to_9905fe30(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_path_to((Node*)arg1);
    return memnew(NodePath(ret));
}

void godot_icall_Node_add_to_group_f253b141(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Node *>(ptr)->add_to_group(arg1_in, arg2_in);
}

void godot_icall_Node_remove_from_group_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Node *>(ptr)->remove_from_group(arg1_in);
}

MonoBoolean godot_icall_Node_is_in_group_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Node *>(ptr)->is_in_group(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Node_move_child_6fb24af5(Object * ptr, Object * arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Node *>(ptr)->move_child((Node*)arg1, arg2_in);
}

Array* godot_icall_Node_get_groups_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->_get_groups();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_Node_raise_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Node *>(ptr)->raise();
}

void godot_icall_Node_set_owner_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Node *>(ptr)->set_owner((Node*)arg1);
}

MonoObject* godot_icall_Node_get_owner_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_owner();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_Node_remove_and_skip_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Node *>(ptr)->remove_and_skip();
}

int32_t godot_icall_Node_get_index_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Node *>(ptr)->get_index();
    return static_cast<int32_t>(ret);
}

void godot_icall_Node_print_tree_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Node *>(ptr)->print_tree();
}

void godot_icall_Node_set_filename_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Node *>(ptr)->set_filename(arg1_in);
}

MonoString* godot_icall_Node_get_filename_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_filename();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Node_propagate_notification_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Node *>(ptr)->propagate_notification(arg1_in);
}

void godot_icall_Node_propagate_call_96e6240e(Object * ptr, MonoString* arg1, Array* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<Node *>(ptr)->propagate_call(arg1_in, *arg2, arg3_in);
}

void godot_icall_Node_set_physics_process_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Node *>(ptr)->set_physics_process(arg1_in);
}

void godot_icall_Node_get_physics_process_delta_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Node *>(ptr)->get_physics_process_delta_time();
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_Node_is_physics_processing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->is_physics_processing();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Node_get_process_delta_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Node *>(ptr)->get_process_delta_time();
    *arg_ret = (float)ret;
}

void godot_icall_Node_set_process_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Node *>(ptr)->set_process(arg1_in);
}

void godot_icall_Node_set_process_priority_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Node *>(ptr)->set_process_priority(arg1_in);
}

int32_t godot_icall_Node_get_process_priority_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Node *>(ptr)->get_process_priority();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_Node_is_processing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->is_processing();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Node_set_process_input_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Node *>(ptr)->set_process_input(arg1_in);
}

MonoBoolean godot_icall_Node_is_processing_input_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->is_processing_input();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Node_set_process_unhandled_input_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Node *>(ptr)->set_process_unhandled_input(arg1_in);
}

MonoBoolean godot_icall_Node_is_processing_unhandled_input_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->is_processing_unhandled_input();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Node_set_process_unhandled_key_input_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Node *>(ptr)->set_process_unhandled_key_input(arg1_in);
}

MonoBoolean godot_icall_Node_is_processing_unhandled_key_input_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->is_processing_unhandled_key_input();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Node_set_pause_mode_944c6d48(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Node *>(ptr)->set_pause_mode((Node::PauseMode)arg1_in);
}

int32_t godot_icall_Node_get_pause_mode_245c402b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Node *>(ptr)->get_pause_mode();
    return (int32_t)ret;
}

MonoBoolean godot_icall_Node_can_process_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->can_process();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Node_print_stray_nodes_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Node *>(ptr)->print_stray_nodes();
}

int32_t godot_icall_Node_get_position_in_parent_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Node *>(ptr)->get_position_in_parent();
    return static_cast<int32_t>(ret);
}

void godot_icall_Node_set_display_folded_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Node *>(ptr)->set_display_folded(arg1_in);
}

MonoBoolean godot_icall_Node_is_displayed_folded_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->is_displayed_folded();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Node_set_process_internal_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Node *>(ptr)->set_process_internal(arg1_in);
}

MonoBoolean godot_icall_Node_is_processing_internal_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->is_processing_internal();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Node_set_physics_process_internal_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Node *>(ptr)->set_physics_process_internal(arg1_in);
}

MonoBoolean godot_icall_Node_is_physics_processing_internal_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->is_physics_processing_internal();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Node_get_tree_289c6b9f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_tree();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_Node_duplicate_4db3f65f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Node *>(ptr)->duplicate(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_Node_replace_by_26387a5c(Object * ptr, Object * arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Node *>(ptr)->replace_by((Node*)arg1, arg2_in);
}

void godot_icall_Node_set_scene_instance_load_placeholder_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Node *>(ptr)->set_scene_instance_load_placeholder(arg1_in);
}

MonoBoolean godot_icall_Node_get_scene_instance_load_placeholder_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->get_scene_instance_load_placeholder();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Node_get_viewport_16d0f927(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_viewport();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_Node_queue_free_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Node *>(ptr)->queue_delete();
}

void godot_icall_Node_request_ready_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Node *>(ptr)->request_ready();
}

void godot_icall_Node_set_network_master_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Node *>(ptr)->set_network_master(arg1_in, arg2_in);
}

int32_t godot_icall_Node_get_network_master_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Node *>(ptr)->get_network_master();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_Node_is_network_master_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node *>(ptr)->is_network_master();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Node_get_multiplayer_f8da1ad5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_multiplayer();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_Node_get_custom_multiplayer_f8da1ad5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_custom_multiplayer();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Node_set_custom_multiplayer_ca78cf97(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Node *>(ptr)->set_custom_multiplayer(AutoRef(arg1));
}

void godot_icall_Node_rpc_config_5de5b82a(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Node *>(ptr)->rpc_config(arg1_in, (MultiplayerAPI_RPCMode)arg2_in);
}

void godot_icall_Node_rset_config_5de5b82a(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Node *>(ptr)->rset_config(arg1_in, (MultiplayerAPI_RPCMode)arg2_in);
}

void godot_icall_Node__set_import_path_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Node *>(ptr)->set_import_path(*arg1);
}

NodePath* godot_icall_Node_get_import_path_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Node *>(ptr)->get_import_path();
    return memnew(NodePath(ret));
}

MonoObject* godot_icall_Node_rpc_a1852e0c(Object * ptr, MonoString* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int vararg_length = mono_array_length(arg2);
    int total_length = 1 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    Variant arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    call_args[0] =&arg1_in;
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg2, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[1 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    auto ret = static_cast<Node *>(ptr)->_rpc_bind(call_args.data(), total_length, vcall_error);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoObject* godot_icall_Node_rpc_unreliable_a1852e0c(Object * ptr, MonoString* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int vararg_length = mono_array_length(arg2);
    int total_length = 1 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    Variant arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    call_args[0] =&arg1_in;
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg2, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[1 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    auto ret = static_cast<Node *>(ptr)->_rpc_unreliable_bind(call_args.data(), total_length, vcall_error);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoObject* godot_icall_Node_rpc_id_3cfddb0(Object * ptr, int32_t arg1, MonoString* arg2, MonoArray* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int vararg_length = mono_array_length(arg3);
    int total_length = 2 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    Variant arg1_in = static_cast<Variant>(arg1);
    call_args[0] =&arg1_in;
    Variant arg2_in = GDMonoMarshal::mono_string_to_godot(arg2);
    call_args[1] =&arg2_in;
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg3, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[2 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    auto ret = static_cast<Node *>(ptr)->_rpc_id_bind(call_args.data(), total_length, vcall_error);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoObject* godot_icall_Node_rpc_unreliable_id_3cfddb0(Object * ptr, int32_t arg1, MonoString* arg2, MonoArray* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int vararg_length = mono_array_length(arg3);
    int total_length = 2 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    Variant arg1_in = static_cast<Variant>(arg1);
    call_args[0] =&arg1_in;
    Variant arg2_in = GDMonoMarshal::mono_string_to_godot(arg2);
    call_args[1] =&arg2_in;
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg3, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[2 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    auto ret = static_cast<Node *>(ptr)->_rpc_unreliable_id_bind(call_args.data(), total_length, vcall_error);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_Node_rset_3a208116(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<Node *>(ptr)->rset(arg1_in, arg2_in);
}

void godot_icall_Node_rset_id_2ec56513(Object * ptr, int32_t arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<Node *>(ptr)->rset_id(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Node_rset_unreliable_3a208116(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<Node *>(ptr)->rset_unreliable(arg1_in, arg2_in);
}

void godot_icall_Node_rset_unreliable_id_2ec56513(Object * ptr, int32_t arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<Node *>(ptr)->rset_unreliable_id(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Node_update_configuration_warning_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Node *>(ptr)->update_configuration_warning();
}

Object* godot_icall_Node_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Node")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Node2D_set_position_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Node2D *>(ptr)->set_position(arg1_in);
}

void godot_icall_Node2D_set_rotation_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Node2D *>(ptr)->set_rotation(arg1_in);
}

void godot_icall_Node2D_set_rotation_degrees_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Node2D *>(ptr)->set_rotation_degrees(arg1_in);
}

void godot_icall_Node2D_set_scale_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Node2D *>(ptr)->set_scale(arg1_in);
}

void godot_icall_Node2D_get_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Node2D *>(ptr)->get_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Node2D_get_rotation_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Node2D *>(ptr)->get_rotation();
    *arg_ret = (float)ret;
}

void godot_icall_Node2D_get_rotation_degrees_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Node2D *>(ptr)->get_rotation_degrees();
    *arg_ret = (float)ret;
}

void godot_icall_Node2D_get_scale_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Node2D *>(ptr)->get_scale();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Node2D_rotate_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Node2D *>(ptr)->rotate(arg1_in);
}

void godot_icall_Node2D_move_local_x_accc42bb(Object * ptr, float* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Node2D *>(ptr)->move_x(arg1_in, arg2_in);
}

void godot_icall_Node2D_move_local_y_accc42bb(Object * ptr, float* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Node2D *>(ptr)->move_y(arg1_in, arg2_in);
}

void godot_icall_Node2D_translate_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Node2D *>(ptr)->translate(arg1_in);
}

void godot_icall_Node2D_global_translate_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Node2D *>(ptr)->global_translate(arg1_in);
}

void godot_icall_Node2D_apply_scale_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Node2D *>(ptr)->apply_scale(arg1_in);
}

void godot_icall_Node2D_set_global_position_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Node2D *>(ptr)->set_global_position(arg1_in);
}

void godot_icall_Node2D_get_global_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Node2D *>(ptr)->get_global_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Node2D_set_global_rotation_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Node2D *>(ptr)->set_global_rotation(arg1_in);
}

void godot_icall_Node2D_get_global_rotation_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Node2D *>(ptr)->get_global_rotation();
    *arg_ret = (float)ret;
}

void godot_icall_Node2D_set_global_rotation_degrees_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Node2D *>(ptr)->set_global_rotation_degrees(arg1_in);
}

void godot_icall_Node2D_get_global_rotation_degrees_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Node2D *>(ptr)->get_global_rotation_degrees();
    *arg_ret = (float)ret;
}

void godot_icall_Node2D_set_global_scale_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Node2D *>(ptr)->set_global_scale(arg1_in);
}

void godot_icall_Node2D_get_global_scale_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Node2D *>(ptr)->get_global_scale();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Node2D_set_transform_dfe2915f(Object * ptr, GDMonoMarshal::M_Transform2D* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    static_cast<Node2D *>(ptr)->set_transform(arg1_in);
}

void godot_icall_Node2D_set_global_transform_dfe2915f(Object * ptr, GDMonoMarshal::M_Transform2D* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    static_cast<Node2D *>(ptr)->set_global_transform(arg1_in);
}

void godot_icall_Node2D_look_at_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Node2D *>(ptr)->look_at(arg1_in);
}

void godot_icall_Node2D_get_angle_to_4aafeb98(Object * ptr, GDMonoMarshal::M_Vector2* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Node2D *>(ptr)->get_angle_to(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_Node2D_to_local_af4cfa54(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Node2D *>(ptr)->to_local(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Node2D_to_global_af4cfa54(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Node2D *>(ptr)->to_global(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Node2D_set_z_index_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Node2D *>(ptr)->set_z_index(arg1_in);
}

int32_t godot_icall_Node2D_get_z_index_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Node2D *>(ptr)->get_z_index();
    return static_cast<int32_t>(ret);
}

void godot_icall_Node2D_set_z_as_relative_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Node2D *>(ptr)->set_z_as_relative(arg1_in);
}

MonoBoolean godot_icall_Node2D_is_z_relative_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Node2D *>(ptr)->is_z_relative();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Node2D_get_relative_transform_to_parent_770a28cc(Object * ptr, Object * arg1, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Node2D *>(ptr)->get_relative_transform_to_parent((Node*)arg1);
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

Object* godot_icall_Node2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Node2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_NoiseTexture_set_width_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<NoiseTexture *>(ptr)->set_width(arg1_in);
}

void godot_icall_NoiseTexture_set_height_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<NoiseTexture *>(ptr)->set_height(arg1_in);
}

void godot_icall_NoiseTexture_set_noise_f47ff6f(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<NoiseTexture *>(ptr)->set_noise(AutoRef(arg1));
}

MonoObject* godot_icall_NoiseTexture_get_noise_bddf49fd(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<NoiseTexture *>(ptr)->get_noise();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_NoiseTexture_set_seamless_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<NoiseTexture *>(ptr)->set_seamless(arg1_in);
}

MonoBoolean godot_icall_NoiseTexture_get_seamless_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NoiseTexture *>(ptr)->get_seamless();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NoiseTexture_set_as_normalmap_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<NoiseTexture *>(ptr)->set_as_normalmap(arg1_in);
}

MonoBoolean godot_icall_NoiseTexture_is_normalmap_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<NoiseTexture *>(ptr)->is_normalmap();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_NoiseTexture_set_bump_strength_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<NoiseTexture *>(ptr)->set_bump_strength(arg1_in);
}

void godot_icall_NoiseTexture_get_bump_strength_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<NoiseTexture *>(ptr)->get_bump_strength();
    *arg_ret = (float)ret;
}

Object* godot_icall_NoiseTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "NoiseTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Object_free_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    Variant::CallError err;

    static_cast<Object *>(ptr)->call("free",nullptr,0,err);
}

MonoString* godot_icall_Object_get_class_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Object *>(ptr)->get_class();
    return GDMonoMarshal::mono_string_from_godot(StringView(ret));
}

MonoBoolean godot_icall_Object_is_class_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Object *>(ptr)->is_class(arg1_in.c_str());
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Object_set_3a208116(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<Object *>(ptr)->set(arg1_in, arg2_in);
}

MonoObject* godot_icall_Object_get_6732bfd8(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Object *>(ptr)->get(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_Object_set_indexed_b6bf83ce(Object * ptr, NodePath* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<Object *>(ptr)->_set_indexed_bind(*arg1, arg2_in);
}

MonoObject* godot_icall_Object_get_indexed_8759ff5(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Object *>(ptr)->_get_indexed_bind(*arg1);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

Array* godot_icall_Object_get_property_list_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Object *>(ptr)->_get_property_list_bind();
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_Object_get_method_list_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Object *>(ptr)->_get_method_list_bind();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_Object_notification_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Object *>(ptr)->notification(arg1_in, arg2_in);
}

void godot_icall_Object_get_instance_id_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Object *>(ptr)->get_instance_id();
    *arg_ret = (uint64_t)ret;
}

void godot_icall_Object_set_script_b878983a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Object *>(ptr)->set_script(Ref<Script>(AutoRef(arg1)).get_ref_ptr());
}

MonoObject* godot_icall_Object_get_script_66da672a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Object *>(ptr)->get_script();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get_data());
}

void godot_icall_Object_set_meta_4a9ec68e(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<Object *>(ptr)->set_meta(arg1_in, arg2_in);
}

void godot_icall_Object_remove_meta_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Object *>(ptr)->remove_meta(arg1_in);
}

MonoObject* godot_icall_Object_get_meta_74ba5e9e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Object *>(ptr)->get_meta(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoBoolean godot_icall_Object_has_meta_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Object *>(ptr)->has_meta(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoArray* godot_icall_Object_get_meta_list_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Object *>(ptr)->_get_meta_list_bind();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall_Object_add_user_signal_635694ca(Object * ptr, MonoString* arg1, Array* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Object *>(ptr)->_add_user_signal(arg1_in, *arg2);
}

MonoBoolean godot_icall_Object_has_user_signal_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Object *>(ptr)->_has_user_signal(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Object_emit_signal_450df26(Object * ptr, MonoString* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL(ptr);
    int vararg_length = mono_array_length(arg2);
    int total_length = 1 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    Variant arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    call_args[0] =&arg1_in;
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg2, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[1 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    static_cast<Object *>(ptr)->_emit_signal(call_args.data(), total_length, vcall_error);
}

MonoObject* godot_icall_Object_call_a1852e0c(Object * ptr, MonoString* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int vararg_length = mono_array_length(arg2);
    int total_length = 1 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    Variant arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    call_args[0] =&arg1_in;
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg2, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[1 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    auto ret = static_cast<Object *>(ptr)->_call_bind(call_args.data(), total_length, vcall_error);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_Object_call_deferred_450df26(Object * ptr, MonoString* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL(ptr);
    int vararg_length = mono_array_length(arg2);
    int total_length = 1 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    Variant arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    call_args[0] =&arg1_in;
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg2, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[1 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    static_cast<Object *>(ptr)->_call_deferred_bind(call_args.data(), total_length, vcall_error);
}

void godot_icall_Object_set_deferred_3a208116(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<Object *>(ptr)->set_deferred(arg1_in, arg2_in);
}

MonoObject* godot_icall_Object_callv_3b851d5b(Object * ptr, MonoString* arg1, Array* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Object *>(ptr)->callv(arg1_in, *arg2);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoBoolean godot_icall_Object_has_method_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Object *>(ptr)->has_method(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall_Object_get_signal_list_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Object *>(ptr)->_get_signal_list();
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_Object_get_signal_connection_list_6b21c46d(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Object *>(ptr)->_get_signal_connection_list(arg1_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_Object_get_incoming_connections_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Object *>(ptr)->_get_incoming_connections();
    return memnew(Array(Variant::from(ret)));
}

int32_t godot_icall_Object_connect_c78b711c(Object * ptr, MonoString* arg1, Object * arg2, MonoString* arg3, Array* arg4, uint32_t arg5) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    uint32_t arg5_in = static_cast<uint32_t>(arg5);
    auto ret = static_cast<Object *>(ptr)->connect(arg1_in, (Object*)arg2, arg3_in, Variant(*arg4).as<Vector<Variant>>(), arg5_in);
    return (int32_t)ret;
}

void godot_icall_Object_disconnect_6432d80c(Object * ptr, MonoString* arg1, Object * arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    static_cast<Object *>(ptr)->disconnect(arg1_in, (Object*)arg2, arg3_in);
}

MonoBoolean godot_icall_Object_is_connected_5f0047e5(Object * ptr, MonoString* arg1, Object * arg2, MonoString* arg3) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    auto ret = static_cast<Object *>(ptr)->is_connected(arg1_in, (Object*)arg2, arg3_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Object_set_block_signals_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Object *>(ptr)->set_block_signals(arg1_in);
}

MonoBoolean godot_icall_Object_is_blocking_signals_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Object *>(ptr)->is_blocking_signals();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Object_property_list_changed_notify_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Object *>(ptr)->property_list_changed_notify();
}

void godot_icall_Object_set_message_translation_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Object *>(ptr)->set_message_translation(arg1_in);
}

MonoBoolean godot_icall_Object_can_translate_messages_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Object *>(ptr)->can_translate_messages();
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_Object_tr_67c8521(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Object *>(ptr)->tr(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_Object_is_queued_for_deletion_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Object *>(ptr)->is_queued_for_deletion();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_OccluderPolygon2D_set_closed_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<OccluderPolygon2D *>(ptr)->set_closed(arg1_in);
}

MonoBoolean godot_icall_OccluderPolygon2D_is_closed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<OccluderPolygon2D *>(ptr)->is_closed();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_OccluderPolygon2D_set_cull_mode_95336d85(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<OccluderPolygon2D *>(ptr)->set_cull_mode((OccluderPolygon2D::CullMode)arg1_in);
}

int32_t godot_icall_OccluderPolygon2D_get_cull_mode_220ca440(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<OccluderPolygon2D *>(ptr)->get_cull_mode();
    return (int32_t)ret;
}

void godot_icall_OccluderPolygon2D_set_polygon_b8a866ba(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    static_cast<OccluderPolygon2D *>(ptr)->set_polygon(arg1_in);
}

MonoArray* godot_icall_OccluderPolygon2D_get_polygon_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<OccluderPolygon2D *>(ptr)->get_polygon();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

Object* godot_icall_OccluderPolygon2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "OccluderPolygon2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_OmniLight_set_shadow_mode_95b9edab(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<OmniLight *>(ptr)->set_shadow_mode((OmniLight::ShadowMode)arg1_in);
}

int32_t godot_icall_OmniLight_get_shadow_mode_53993cb9(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<OmniLight *>(ptr)->get_shadow_mode();
    return (int32_t)ret;
}

void godot_icall_OmniLight_set_shadow_detail_6d75c611(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<OmniLight *>(ptr)->set_shadow_detail((OmniLight::ShadowDetail)arg1_in);
}

int32_t godot_icall_OmniLight_get_shadow_detail_9bcd2153(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<OmniLight *>(ptr)->get_shadow_detail();
    return (int32_t)ret;
}

Object* godot_icall_OmniLight_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "OmniLight")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_OpenSimplexNoise_get_seed_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_seed();
    return static_cast<int32_t>(ret);
}

void godot_icall_OpenSimplexNoise_set_seed_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<OpenSimplexNoise *>(ptr)->set_seed(arg1_in);
}

void godot_icall_OpenSimplexNoise_set_octaves_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<OpenSimplexNoise *>(ptr)->set_octaves(arg1_in);
}

int32_t godot_icall_OpenSimplexNoise_get_octaves_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_octaves();
    return static_cast<int32_t>(ret);
}

void godot_icall_OpenSimplexNoise_set_period_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<OpenSimplexNoise *>(ptr)->set_period(arg1_in);
}

void godot_icall_OpenSimplexNoise_get_period_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_period();
    *arg_ret = (float)ret;
}

void godot_icall_OpenSimplexNoise_set_persistence_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<OpenSimplexNoise *>(ptr)->set_persistence(arg1_in);
}

void godot_icall_OpenSimplexNoise_get_persistence_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_persistence();
    *arg_ret = (float)ret;
}

void godot_icall_OpenSimplexNoise_set_lacunarity_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<OpenSimplexNoise *>(ptr)->set_lacunarity(arg1_in);
}

void godot_icall_OpenSimplexNoise_get_lacunarity_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_lacunarity();
    *arg_ret = (float)ret;
}

MonoObject* godot_icall_OpenSimplexNoise_get_image_759d9655(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_image(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_OpenSimplexNoise_get_seamless_image_d2d368f0(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_seamless_image(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_OpenSimplexNoise_get_noise_1d_f6dda625(Object * ptr, float* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_noise_1d(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_OpenSimplexNoise_get_noise_2d_14e8e20e(Object * ptr, float* arg1, float* arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_noise_2d(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

void godot_icall_OpenSimplexNoise_get_noise_3d_386fef6b(Object * ptr, float* arg1, float* arg2, float* arg3, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_noise_3d(arg1_in, arg2_in, arg3_in);
    *arg_ret = (float)ret;
}

void godot_icall_OpenSimplexNoise_get_noise_4d_2f43c897(Object * ptr, float* arg1, float* arg2, float* arg3, float* arg4, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_noise_4d(arg1_in, arg2_in, arg3_in, arg4_in);
    *arg_ret = (float)ret;
}

void godot_icall_OpenSimplexNoise_get_noise_2dv_4aafeb98(Object * ptr, GDMonoMarshal::M_Vector2* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_noise_2dv(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_OpenSimplexNoise_get_noise_3dv_4aafeb9b(Object * ptr, GDMonoMarshal::M_Vector3* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    auto ret = static_cast<OpenSimplexNoise *>(ptr)->get_noise_3dv(arg1_in);
    *arg_ret = (float)ret;
}

Object* godot_icall_OpenSimplexNoise_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "OpenSimplexNoise")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_OptionButton_add_item_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<OptionButton *>(ptr)->add_item(arg1_in, arg2_in);
}

void godot_icall_OptionButton_add_icon_item_168aa36d(Object * ptr, Object * arg1, MonoString* arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<OptionButton *>(ptr)->add_icon_item(AutoRef(arg1), arg2_in, arg3_in);
}

void godot_icall_OptionButton_set_item_text_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<OptionButton *>(ptr)->set_item_text(arg1_in, arg2_in);
}

void godot_icall_OptionButton_set_item_icon_f20a84e(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<OptionButton *>(ptr)->set_item_icon(arg1_in, AutoRef(arg2));
}

void godot_icall_OptionButton_set_item_disabled_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<OptionButton *>(ptr)->set_item_disabled(arg1_in, arg2_in);
}

void godot_icall_OptionButton_set_item_id_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<OptionButton *>(ptr)->set_item_id(arg1_in, arg2_in);
}

void godot_icall_OptionButton_set_item_metadata_37bef04(Object * ptr, int32_t arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<OptionButton *>(ptr)->set_item_metadata(arg1_in, arg2_in);
}

MonoString* godot_icall_OptionButton_get_item_text_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<OptionButton *>(ptr)->get_item_text(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoObject* godot_icall_OptionButton_get_item_icon_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<OptionButton *>(ptr)->get_item_icon(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_OptionButton_get_item_id_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<OptionButton *>(ptr)->get_item_id(arg1_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_OptionButton_get_item_index_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<OptionButton *>(ptr)->get_item_index(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_OptionButton_get_item_metadata_a9b2673d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<OptionButton *>(ptr)->get_item_metadata(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoBoolean godot_icall_OptionButton_is_item_disabled_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<OptionButton *>(ptr)->is_item_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_OptionButton_get_item_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<OptionButton *>(ptr)->get_item_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_OptionButton_add_separator_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<OptionButton *>(ptr)->add_separator();
}

void godot_icall_OptionButton_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<OptionButton *>(ptr)->clear();
}

void godot_icall_OptionButton_select_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<OptionButton *>(ptr)->select(arg1_in);
}

int32_t godot_icall_OptionButton_get_selected_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<OptionButton *>(ptr)->get_selected();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_OptionButton_get_selected_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<OptionButton *>(ptr)->get_selected_id();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_OptionButton_get_selected_metadata_a08d6f10(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<OptionButton *>(ptr)->get_selected_metadata();
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_OptionButton_remove_item_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<OptionButton *>(ptr)->remove_item(arg1_in);
}

void godot_icall_OptionButton__select_int_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<OptionButton *>(ptr)->_select_int(arg1_in);
}

MonoObject* godot_icall_OptionButton_get_popup_d0a780e0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<OptionButton *>(ptr)->get_popup();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_OptionButton__set_items_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<OptionButton *>(ptr)->_set_items(*arg1);
}

Array* godot_icall_OptionButton__get_items_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<OptionButton *>(ptr)->_get_items();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_OptionButton_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "OptionButton")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_PCKPacker_pck_start_79efd067(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<PCKPacker *>(ptr)->pck_start(arg1_in, arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall_PCKPacker_add_file_ce7ee84(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<PCKPacker *>(ptr)->add_file(arg1_in, arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall_PCKPacker_flush_a4e6027a(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<PCKPacker *>(ptr)->flush(arg1_in);
    return (int32_t)ret;
}

Object* godot_icall_PCKPacker_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PCKPacker")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_PHashTranslation_generate_96eab132(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PHashTranslation *>(ptr)->generate(AutoRef(arg1));
}

Object* godot_icall_PHashTranslation_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PHashTranslation")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_PackedDataContainer__set_data_da545cc0(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolByteArray arg1_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg1);
    static_cast<PackedDataContainer *>(ptr)->_set_data(arg1_in);
}

MonoArray* godot_icall_PackedDataContainer__get_data_8edaba4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PackedDataContainer *>(ptr)->_get_data();
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

int32_t godot_icall_PackedDataContainer_pack_7c77f2b3(Object * ptr, MonoObject* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    auto ret = static_cast<PackedDataContainer *>(ptr)->pack(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_PackedDataContainer_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PackedDataContainer *>(ptr)->size();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_PackedDataContainer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PackedDataContainer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_PackedDataContainerRef_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PackedDataContainerRef *>(ptr)->size();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_PackedScene_pack_830ba20e(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PackedScene *>(ptr)->pack((Node*)arg1);
    return (int32_t)ret;
}

MonoObject* godot_icall_PackedScene_instance_353368b5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<PackedScene *>(ptr)->instance((PackedGenEditState)arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoBoolean godot_icall_PackedScene_can_instance_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PackedScene *>(ptr)->can_instance();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PackedScene__set_bundled_scene_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PackedScene *>(ptr)->_set_bundled_scene(*arg1);
}

Dictionary* godot_icall_PackedScene__get_bundled_scene_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PackedScene *>(ptr)->_get_bundled_scene();
    return memnew(Dictionary(ret));
}

MonoObject* godot_icall_PackedScene_get_state_d2eec9ca(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PackedScene *>(ptr)->get_state();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_PackedScene_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PackedScene")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoObject* godot_icall_PacketPeer_get_var_f23997c6(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<PacketPeer *>(ptr)->_bnd_get_var(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

int32_t godot_icall_PacketPeer_put_var_382770cd(Object * ptr, MonoObject* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<PacketPeer *>(ptr)->put_var(arg1_in, arg2_in);
    return (int32_t)ret;
}

MonoArray* godot_icall_PacketPeer_get_packet_8edaba4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PacketPeer *>(ptr)->_get_packet();
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

int32_t godot_icall_PacketPeer_put_packet_4d7ce2f(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    PoolByteArray arg1_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg1);
    auto ret = static_cast<PacketPeer *>(ptr)->_put_packet(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_PacketPeer_get_packet_error_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PacketPeer *>(ptr)->_get_packet_error();
    return (int32_t)ret;
}

int32_t godot_icall_PacketPeer_get_available_packet_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PacketPeer *>(ptr)->get_available_packet_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_PacketPeer_set_allow_object_decoding_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PacketPeer *>(ptr)->set_allow_object_decoding(arg1_in);
}

MonoBoolean godot_icall_PacketPeer_is_object_decoding_allowed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PacketPeer *>(ptr)->is_object_decoding_allowed();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_PacketPeer_get_encode_buffer_max_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PacketPeer *>(ptr)->get_encode_buffer_max_size();
    return static_cast<int32_t>(ret);
}

void godot_icall_PacketPeer_set_encode_buffer_max_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PacketPeer *>(ptr)->set_encode_buffer_max_size(arg1_in);
}

void godot_icall_PacketPeerStream_set_stream_peer_85f8707(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PacketPeerStream *>(ptr)->set_stream_peer(AutoRef(arg1));
}

MonoObject* godot_icall_PacketPeerStream_get_stream_peer_b6f76265(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PacketPeerStream *>(ptr)->get_stream_peer();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_PacketPeerStream_set_input_buffer_max_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PacketPeerStream *>(ptr)->set_input_buffer_max_size(arg1_in);
}

void godot_icall_PacketPeerStream_set_output_buffer_max_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PacketPeerStream *>(ptr)->set_output_buffer_max_size(arg1_in);
}

int32_t godot_icall_PacketPeerStream_get_input_buffer_max_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PacketPeerStream *>(ptr)->get_input_buffer_max_size();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_PacketPeerStream_get_output_buffer_max_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PacketPeerStream *>(ptr)->get_output_buffer_max_size();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_PacketPeerStream_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PacketPeerStream")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_PacketPeerUDP_listen_b062261f(Object * ptr, int32_t arg1, MonoString* arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    String arg2_in = GDMonoMarshal::mono_string_to_godot(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<PacketPeerUDP *>(ptr)->listen(arg1_in, IP_Address(arg2_in), arg3_in);
    return (int32_t)ret;
}

void godot_icall_PacketPeerUDP_close_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<PacketPeerUDP *>(ptr)->close();
}

int32_t godot_icall_PacketPeerUDP_wait_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PacketPeerUDP *>(ptr)->wait();
    return (int32_t)ret;
}

MonoBoolean godot_icall_PacketPeerUDP_is_listening_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PacketPeerUDP *>(ptr)->is_listening();
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_PacketPeerUDP_get_packet_ip_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PacketPeerUDP *>(ptr)->_get_packet_ip();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_PacketPeerUDP_get_packet_port_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PacketPeerUDP *>(ptr)->get_packet_port();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_PacketPeerUDP_set_dest_address_d732f59c(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<PacketPeerUDP *>(ptr)->_set_dest_address(IP_Address(arg1_in), arg2_in);
    return (int32_t)ret;
}

void godot_icall_PacketPeerUDP_set_broadcast_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PacketPeerUDP *>(ptr)->set_broadcast_enabled(arg1_in);
}

int32_t godot_icall_PacketPeerUDP_join_multicast_group_1c2b2cff(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<PacketPeerUDP *>(ptr)->join_multicast_group(IP_Address(arg1_in), arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall_PacketPeerUDP_leave_multicast_group_1c2b2cff(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<PacketPeerUDP *>(ptr)->leave_multicast_group(IP_Address(arg1_in), arg2_in);
    return (int32_t)ret;
}

Object* godot_icall_PacketPeerUDP_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PacketPeerUDP")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_Panel_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Panel")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_PanelContainer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PanelContainer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_PanoramaSky_set_panorama_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PanoramaSky *>(ptr)->set_panorama(AutoRef(arg1));
}

MonoObject* godot_icall_PanoramaSky_get_panorama_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PanoramaSky *>(ptr)->get_panorama();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_PanoramaSky_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PanoramaSky")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ParallaxBackground_set_scroll_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<ParallaxBackground *>(ptr)->set_scroll_offset(arg1_in);
}

void godot_icall_ParallaxBackground_get_scroll_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParallaxBackground *>(ptr)->get_scroll_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_ParallaxBackground_set_scroll_base_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<ParallaxBackground *>(ptr)->set_scroll_base_offset(arg1_in);
}

void godot_icall_ParallaxBackground_get_scroll_base_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParallaxBackground *>(ptr)->get_scroll_base_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_ParallaxBackground_set_scroll_base_scale_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<ParallaxBackground *>(ptr)->set_scroll_base_scale(arg1_in);
}

void godot_icall_ParallaxBackground_get_scroll_base_scale_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParallaxBackground *>(ptr)->get_scroll_base_scale();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_ParallaxBackground_set_limit_begin_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<ParallaxBackground *>(ptr)->set_limit_begin(arg1_in);
}

void godot_icall_ParallaxBackground_get_limit_begin_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParallaxBackground *>(ptr)->get_limit_begin();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_ParallaxBackground_set_limit_end_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<ParallaxBackground *>(ptr)->set_limit_end(arg1_in);
}

void godot_icall_ParallaxBackground_get_limit_end_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParallaxBackground *>(ptr)->get_limit_end();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_ParallaxBackground_set_ignore_camera_zoom_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ParallaxBackground *>(ptr)->set_ignore_camera_zoom(arg1_in);
}

MonoBoolean godot_icall_ParallaxBackground_is_ignore_camera_zoom_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ParallaxBackground *>(ptr)->is_ignore_camera_zoom();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_ParallaxBackground_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ParallaxBackground")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ParallaxLayer_set_motion_scale_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<ParallaxLayer *>(ptr)->set_motion_scale(arg1_in);
}

void godot_icall_ParallaxLayer_get_motion_scale_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParallaxLayer *>(ptr)->get_motion_scale();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_ParallaxLayer_set_motion_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<ParallaxLayer *>(ptr)->set_motion_offset(arg1_in);
}

void godot_icall_ParallaxLayer_get_motion_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParallaxLayer *>(ptr)->get_motion_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_ParallaxLayer_set_mirroring_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<ParallaxLayer *>(ptr)->set_mirroring(arg1_in);
}

void godot_icall_ParallaxLayer_get_mirroring_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParallaxLayer *>(ptr)->get_mirroring();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

Object* godot_icall_ParallaxLayer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ParallaxLayer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Particles_set_emitting_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Particles *>(ptr)->set_emitting(arg1_in);
}

void godot_icall_Particles_set_amount_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Particles *>(ptr)->set_amount(arg1_in);
}

void godot_icall_Particles_set_lifetime_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Particles *>(ptr)->set_lifetime(arg1_in);
}

void godot_icall_Particles_set_one_shot_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Particles *>(ptr)->set_one_shot(arg1_in);
}

void godot_icall_Particles_set_pre_process_time_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Particles *>(ptr)->set_pre_process_time(arg1_in);
}

void godot_icall_Particles_set_explosiveness_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Particles *>(ptr)->set_explosiveness_ratio(arg1_in);
}

void godot_icall_Particles_set_randomness_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Particles *>(ptr)->set_randomness_ratio(arg1_in);
}

void godot_icall_Particles_set_visibility_aabb_ff67b409(Object * ptr, GDMonoMarshal::M_AABB* arg1) {
    ERR_FAIL_NULL(ptr);
    AABB arg1_in = MARSHALLED_IN(AABB, arg1);
    static_cast<Particles *>(ptr)->set_visibility_aabb(arg1_in);
}

void godot_icall_Particles_set_use_local_coordinates_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Particles *>(ptr)->set_use_local_coordinates(arg1_in);
}

void godot_icall_Particles_set_fixed_fps_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Particles *>(ptr)->set_fixed_fps(arg1_in);
}

void godot_icall_Particles_set_fractional_delta_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Particles *>(ptr)->set_fractional_delta(arg1_in);
}

void godot_icall_Particles_set_process_material_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Particles *>(ptr)->set_process_material(AutoRef(arg1));
}

void godot_icall_Particles_set_speed_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Particles *>(ptr)->set_speed_scale(arg1_in);
}

MonoBoolean godot_icall_Particles_is_emitting_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Particles *>(ptr)->is_emitting();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_Particles_get_amount_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Particles *>(ptr)->get_amount();
    return static_cast<int32_t>(ret);
}

void godot_icall_Particles_get_lifetime_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles *>(ptr)->get_lifetime();
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_Particles_get_one_shot_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Particles *>(ptr)->get_one_shot();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Particles_get_pre_process_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles *>(ptr)->get_pre_process_time();
    *arg_ret = (float)ret;
}

void godot_icall_Particles_get_explosiveness_ratio_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles *>(ptr)->get_explosiveness_ratio();
    *arg_ret = (float)ret;
}

void godot_icall_Particles_get_randomness_ratio_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles *>(ptr)->get_randomness_ratio();
    *arg_ret = (float)ret;
}

void godot_icall_Particles_get_visibility_aabb_2dbf935b(Object * ptr, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles *>(ptr)->get_visibility_aabb();
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

MonoBoolean godot_icall_Particles_get_use_local_coordinates_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Particles *>(ptr)->get_use_local_coordinates();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_Particles_get_fixed_fps_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Particles *>(ptr)->get_fixed_fps();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_Particles_get_fractional_delta_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Particles *>(ptr)->get_fractional_delta();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Particles_get_process_material_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Particles *>(ptr)->get_process_material();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Particles_get_speed_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles *>(ptr)->get_speed_scale();
    *arg_ret = (float)ret;
}

void godot_icall_Particles_set_draw_order_aaa89856(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Particles *>(ptr)->set_draw_order((Particles::DrawOrder)arg1_in);
}

int32_t godot_icall_Particles_get_draw_order_73e44381(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Particles *>(ptr)->get_draw_order();
    return (int32_t)ret;
}

void godot_icall_Particles_set_draw_passes_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Particles *>(ptr)->set_draw_passes(arg1_in);
}

void godot_icall_Particles_set_draw_pass_mesh_b41476b2(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Particles *>(ptr)->set_draw_pass_mesh(arg1_in, AutoRef(arg2));
}

int32_t godot_icall_Particles_get_draw_passes_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Particles *>(ptr)->get_draw_passes();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_Particles_get_draw_pass_mesh_8c20a0a4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Particles *>(ptr)->get_draw_pass_mesh(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Particles_restart_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Particles *>(ptr)->restart();
}

void godot_icall_Particles_capture_aabb_2dbf935b(Object * ptr, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles *>(ptr)->capture_aabb();
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

Object* godot_icall_Particles_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Particles")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Particles2D_set_emitting_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Particles2D *>(ptr)->set_emitting(arg1_in);
}

void godot_icall_Particles2D_set_amount_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Particles2D *>(ptr)->set_amount(arg1_in);
}

void godot_icall_Particles2D_set_lifetime_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Particles2D *>(ptr)->set_lifetime(arg1_in);
}

void godot_icall_Particles2D_set_one_shot_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Particles2D *>(ptr)->set_one_shot(arg1_in);
}

void godot_icall_Particles2D_set_pre_process_time_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Particles2D *>(ptr)->set_pre_process_time(arg1_in);
}

void godot_icall_Particles2D_set_explosiveness_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Particles2D *>(ptr)->set_explosiveness_ratio(arg1_in);
}

void godot_icall_Particles2D_set_randomness_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Particles2D *>(ptr)->set_randomness_ratio(arg1_in);
}

void godot_icall_Particles2D_set_visibility_rect_a5ed61f1(Object * ptr, GDMonoMarshal::M_Rect2* arg1) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    static_cast<Particles2D *>(ptr)->set_visibility_rect(arg1_in);
}

void godot_icall_Particles2D_set_use_local_coordinates_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Particles2D *>(ptr)->set_use_local_coordinates(arg1_in);
}

void godot_icall_Particles2D_set_fixed_fps_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Particles2D *>(ptr)->set_fixed_fps(arg1_in);
}

void godot_icall_Particles2D_set_fractional_delta_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Particles2D *>(ptr)->set_fractional_delta(arg1_in);
}

void godot_icall_Particles2D_set_process_material_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Particles2D *>(ptr)->set_process_material(AutoRef(arg1));
}

void godot_icall_Particles2D_set_speed_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Particles2D *>(ptr)->set_speed_scale(arg1_in);
}

MonoBoolean godot_icall_Particles2D_is_emitting_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Particles2D *>(ptr)->is_emitting();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_Particles2D_get_amount_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Particles2D *>(ptr)->get_amount();
    return static_cast<int32_t>(ret);
}

void godot_icall_Particles2D_get_lifetime_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles2D *>(ptr)->get_lifetime();
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_Particles2D_get_one_shot_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Particles2D *>(ptr)->get_one_shot();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Particles2D_get_pre_process_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles2D *>(ptr)->get_pre_process_time();
    *arg_ret = (float)ret;
}

void godot_icall_Particles2D_get_explosiveness_ratio_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles2D *>(ptr)->get_explosiveness_ratio();
    *arg_ret = (float)ret;
}

void godot_icall_Particles2D_get_randomness_ratio_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles2D *>(ptr)->get_randomness_ratio();
    *arg_ret = (float)ret;
}

void godot_icall_Particles2D_get_visibility_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles2D *>(ptr)->get_visibility_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

MonoBoolean godot_icall_Particles2D_get_use_local_coordinates_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Particles2D *>(ptr)->get_use_local_coordinates();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_Particles2D_get_fixed_fps_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Particles2D *>(ptr)->get_fixed_fps();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_Particles2D_get_fractional_delta_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Particles2D *>(ptr)->get_fractional_delta();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Particles2D_get_process_material_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Particles2D *>(ptr)->get_process_material();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Particles2D_get_speed_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles2D *>(ptr)->get_speed_scale();
    *arg_ret = (float)ret;
}

void godot_icall_Particles2D_set_draw_order_cb74df8(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Particles2D *>(ptr)->set_draw_order((Particles2D::DrawOrder)arg1_in);
}

int32_t godot_icall_Particles2D_get_draw_order_4249d31b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Particles2D *>(ptr)->get_draw_order();
    return (int32_t)ret;
}

void godot_icall_Particles2D_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Particles2D *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_Particles2D_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Particles2D *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Particles2D_set_normal_map_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Particles2D *>(ptr)->set_normal_map(AutoRef(arg1));
}

MonoObject* godot_icall_Particles2D_get_normal_map_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Particles2D *>(ptr)->get_normal_map();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Particles2D_capture_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Particles2D *>(ptr)->capture_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_Particles2D_restart_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Particles2D *>(ptr)->restart();
}

Object* godot_icall_Particles2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Particles2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ParticlesMaterial_set_direction_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<ParticlesMaterial *>(ptr)->set_direction(arg1_in);
}

void godot_icall_ParticlesMaterial_get_direction_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_direction();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_ParticlesMaterial_set_spread_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ParticlesMaterial *>(ptr)->set_spread(arg1_in);
}

void godot_icall_ParticlesMaterial_get_spread_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_spread();
    *arg_ret = (float)ret;
}

void godot_icall_ParticlesMaterial_set_flatness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ParticlesMaterial *>(ptr)->set_flatness(arg1_in);
}

void godot_icall_ParticlesMaterial_get_flatness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_flatness();
    *arg_ret = (float)ret;
}

void godot_icall_ParticlesMaterial_set_param_89e708ca(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<ParticlesMaterial *>(ptr)->set_param((ParticlesMaterial::Parameter)arg1_in, arg2_in);
}

void godot_icall_ParticlesMaterial_get_param_2162baa4(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_param((ParticlesMaterial::Parameter)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_ParticlesMaterial_set_param_randomness_89e708ca(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<ParticlesMaterial *>(ptr)->set_param_randomness((ParticlesMaterial::Parameter)arg1_in, arg2_in);
}

void godot_icall_ParticlesMaterial_get_param_randomness_2162baa4(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_param_randomness((ParticlesMaterial::Parameter)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_ParticlesMaterial_set_param_texture_7670a7ab(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<ParticlesMaterial *>(ptr)->set_param_texture((ParticlesMaterial::Parameter)arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_ParticlesMaterial_get_param_texture_4d2844bf(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_param_texture((ParticlesMaterial::Parameter)arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_ParticlesMaterial_set_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ParticlesMaterial *>(ptr)->set_color(arg1_in);
}

void godot_icall_ParticlesMaterial_get_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_ParticlesMaterial_set_color_ramp_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ParticlesMaterial *>(ptr)->set_color_ramp(AutoRef(arg1));
}

MonoObject* godot_icall_ParticlesMaterial_get_color_ramp_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_color_ramp();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_ParticlesMaterial_set_flag_34bb14a4(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<ParticlesMaterial *>(ptr)->set_flag((ParticlesMaterial::Flags)arg1_in, arg2_in);
}

MonoBoolean godot_icall_ParticlesMaterial_get_flag_c21e7af8(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_flag((ParticlesMaterial::Flags)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ParticlesMaterial_set_emission_shape_52428255(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<ParticlesMaterial *>(ptr)->set_emission_shape((ParticlesMaterial::EmissionShape)arg1_in);
}

int32_t godot_icall_ParticlesMaterial_get_emission_shape_2a061450(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_emission_shape();
    return (int32_t)ret;
}

void godot_icall_ParticlesMaterial_set_emission_sphere_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ParticlesMaterial *>(ptr)->set_emission_sphere_radius(arg1_in);
}

void godot_icall_ParticlesMaterial_get_emission_sphere_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_emission_sphere_radius();
    *arg_ret = (float)ret;
}

void godot_icall_ParticlesMaterial_set_emission_box_extents_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<ParticlesMaterial *>(ptr)->set_emission_box_extents(arg1_in);
}

void godot_icall_ParticlesMaterial_get_emission_box_extents_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_emission_box_extents();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_ParticlesMaterial_set_emission_point_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ParticlesMaterial *>(ptr)->set_emission_point_texture(AutoRef(arg1));
}

MonoObject* godot_icall_ParticlesMaterial_get_emission_point_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_emission_point_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_ParticlesMaterial_set_emission_normal_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ParticlesMaterial *>(ptr)->set_emission_normal_texture(AutoRef(arg1));
}

MonoObject* godot_icall_ParticlesMaterial_get_emission_normal_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_emission_normal_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_ParticlesMaterial_set_emission_color_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ParticlesMaterial *>(ptr)->set_emission_color_texture(AutoRef(arg1));
}

MonoObject* godot_icall_ParticlesMaterial_get_emission_color_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_emission_color_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_ParticlesMaterial_set_emission_point_count_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ParticlesMaterial *>(ptr)->set_emission_point_count(arg1_in);
}

int32_t godot_icall_ParticlesMaterial_get_emission_point_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_emission_point_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_ParticlesMaterial_set_trail_divisor_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ParticlesMaterial *>(ptr)->set_trail_divisor(arg1_in);
}

int32_t godot_icall_ParticlesMaterial_get_trail_divisor_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_trail_divisor();
    return static_cast<int32_t>(ret);
}

void godot_icall_ParticlesMaterial_set_trail_size_modifier_7bbe5a99(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ParticlesMaterial *>(ptr)->set_trail_size_modifier(AutoRef(arg1));
}

MonoObject* godot_icall_ParticlesMaterial_get_trail_size_modifier_a997a5cb(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_trail_size_modifier();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_ParticlesMaterial_set_trail_color_modifier_c8030426(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ParticlesMaterial *>(ptr)->set_trail_color_modifier(AutoRef(arg1));
}

MonoObject* godot_icall_ParticlesMaterial_get_trail_color_modifier_f722e346(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_trail_color_modifier();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_ParticlesMaterial_get_gravity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_gravity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_ParticlesMaterial_set_gravity_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<ParticlesMaterial *>(ptr)->set_gravity(arg1_in);
}

void godot_icall_ParticlesMaterial_set_lifetime_randomness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ParticlesMaterial *>(ptr)->set_lifetime_randomness(arg1_in);
}

void godot_icall_ParticlesMaterial_get_lifetime_randomness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ParticlesMaterial *>(ptr)->get_lifetime_randomness();
    *arg_ret = (float)ret;
}

Object* godot_icall_ParticlesMaterial_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ParticlesMaterial")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Path_set_curve_77a8e9c1(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Path *>(ptr)->set_curve(AutoRef(arg1));
}

MonoObject* godot_icall_Path_get_curve_b58a38a3(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Path *>(ptr)->get_curve();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_Path_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Path")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Path2D_set_curve_76a8e85c(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Path2D *>(ptr)->set_curve(AutoRef(arg1));
}

MonoObject* godot_icall_Path2D_get_curve_b48a3710(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Path2D *>(ptr)->get_curve();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_Path2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Path2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_PathFollow_set_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PathFollow *>(ptr)->set_offset(arg1_in);
}

void godot_icall_PathFollow_get_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PathFollow *>(ptr)->get_offset();
    *arg_ret = (float)ret;
}

void godot_icall_PathFollow_set_h_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PathFollow *>(ptr)->set_h_offset(arg1_in);
}

void godot_icall_PathFollow_get_h_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PathFollow *>(ptr)->get_h_offset();
    *arg_ret = (float)ret;
}

void godot_icall_PathFollow_set_v_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PathFollow *>(ptr)->set_v_offset(arg1_in);
}

void godot_icall_PathFollow_get_v_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PathFollow *>(ptr)->get_v_offset();
    *arg_ret = (float)ret;
}

void godot_icall_PathFollow_set_unit_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PathFollow *>(ptr)->set_unit_offset(arg1_in);
}

void godot_icall_PathFollow_get_unit_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PathFollow *>(ptr)->get_unit_offset();
    *arg_ret = (float)ret;
}

void godot_icall_PathFollow_set_rotation_mode_5bf2100(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<PathFollow *>(ptr)->set_rotation_mode((PathFollow::RotationMode)arg1_in);
}

int32_t godot_icall_PathFollow_get_rotation_mode_e8cd06d3(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PathFollow *>(ptr)->get_rotation_mode();
    return (int32_t)ret;
}

void godot_icall_PathFollow_set_cubic_interpolation_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PathFollow *>(ptr)->set_cubic_interpolation(arg1_in);
}

MonoBoolean godot_icall_PathFollow_get_cubic_interpolation_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PathFollow *>(ptr)->get_cubic_interpolation();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PathFollow_set_loop_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PathFollow *>(ptr)->set_loop(arg1_in);
}

MonoBoolean godot_icall_PathFollow_has_loop_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PathFollow *>(ptr)->has_loop();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_PathFollow_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PathFollow")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_PathFollow2D_set_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PathFollow2D *>(ptr)->set_offset(arg1_in);
}

void godot_icall_PathFollow2D_get_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PathFollow2D *>(ptr)->get_offset();
    *arg_ret = (float)ret;
}

void godot_icall_PathFollow2D_set_h_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PathFollow2D *>(ptr)->set_h_offset(arg1_in);
}

void godot_icall_PathFollow2D_get_h_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PathFollow2D *>(ptr)->get_h_offset();
    *arg_ret = (float)ret;
}

void godot_icall_PathFollow2D_set_v_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PathFollow2D *>(ptr)->set_v_offset(arg1_in);
}

void godot_icall_PathFollow2D_get_v_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PathFollow2D *>(ptr)->get_v_offset();
    *arg_ret = (float)ret;
}

void godot_icall_PathFollow2D_set_unit_offset_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PathFollow2D *>(ptr)->set_unit_offset(arg1_in);
}

void godot_icall_PathFollow2D_get_unit_offset_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PathFollow2D *>(ptr)->get_unit_offset();
    *arg_ret = (float)ret;
}

void godot_icall_PathFollow2D_set_rotate_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PathFollow2D *>(ptr)->set_rotate(arg1_in);
}

MonoBoolean godot_icall_PathFollow2D_is_rotating_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PathFollow2D *>(ptr)->is_rotating();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PathFollow2D_set_cubic_interpolation_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PathFollow2D *>(ptr)->set_cubic_interpolation(arg1_in);
}

MonoBoolean godot_icall_PathFollow2D_get_cubic_interpolation_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PathFollow2D *>(ptr)->get_cubic_interpolation();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PathFollow2D_set_loop_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PathFollow2D *>(ptr)->set_loop(arg1_in);
}

MonoBoolean godot_icall_PathFollow2D_has_loop_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PathFollow2D *>(ptr)->has_loop();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PathFollow2D_set_lookahead_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PathFollow2D *>(ptr)->set_lookahead(arg1_in);
}

void godot_icall_PathFollow2D_get_lookahead_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PathFollow2D *>(ptr)->get_lookahead();
    *arg_ret = (float)ret;
}

Object* godot_icall_PathFollow2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PathFollow2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Performance_get_monitor_7b112f19(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Performance *>(ptr)->get_monitor((Performance::Monitor)arg1_in);
    *arg_ret = (float)ret;
}

Object* godot_icall_Performance_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("Performance");
}

void godot_icall_PhysicalBone_apply_central_impulse_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<PhysicalBone *>(ptr)->apply_central_impulse(arg1_in);
}

void godot_icall_PhysicalBone_apply_impulse_bf22f212(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<PhysicalBone *>(ptr)->apply_impulse(arg1_in, arg2_in);
}

void godot_icall_PhysicalBone_set_joint_type_f16bb46(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<PhysicalBone *>(ptr)->set_joint_type((PhysicalBone::JointType)arg1_in);
}

int32_t godot_icall_PhysicalBone_get_joint_type_98f70731(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicalBone *>(ptr)->get_joint_type();
    return (int32_t)ret;
}

void godot_icall_PhysicalBone_set_joint_offset_655b85c9(Object * ptr, GDMonoMarshal::M_Transform* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform arg1_in = MARSHALLED_IN(Transform, arg1);
    static_cast<PhysicalBone *>(ptr)->set_joint_offset(arg1_in);
}

void godot_icall_PhysicalBone_get_joint_offset_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicalBone *>(ptr)->get_joint_offset();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_PhysicalBone_set_body_offset_655b85c9(Object * ptr, GDMonoMarshal::M_Transform* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform arg1_in = MARSHALLED_IN(Transform, arg1);
    static_cast<PhysicalBone *>(ptr)->set_body_offset(arg1_in);
}

void godot_icall_PhysicalBone_get_body_offset_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicalBone *>(ptr)->get_body_offset();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

MonoBoolean godot_icall_PhysicalBone_is_static_body_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicalBone *>(ptr)->is_static_body();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_PhysicalBone_get_simulate_physics_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicalBone *>(ptr)->get_simulate_physics();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_PhysicalBone_is_simulating_physics_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicalBone *>(ptr)->is_simulating_physics();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_PhysicalBone_get_bone_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicalBone *>(ptr)->get_bone_id();
    return static_cast<int32_t>(ret);
}

void godot_icall_PhysicalBone_set_mass_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PhysicalBone *>(ptr)->set_mass(arg1_in);
}

void godot_icall_PhysicalBone_get_mass_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicalBone *>(ptr)->get_mass();
    *arg_ret = (float)ret;
}

void godot_icall_PhysicalBone_set_weight_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PhysicalBone *>(ptr)->set_weight(arg1_in);
}

void godot_icall_PhysicalBone_get_weight_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicalBone *>(ptr)->get_weight();
    *arg_ret = (float)ret;
}

void godot_icall_PhysicalBone_set_friction_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PhysicalBone *>(ptr)->set_friction(arg1_in);
}

void godot_icall_PhysicalBone_get_friction_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicalBone *>(ptr)->get_friction();
    *arg_ret = (float)ret;
}

void godot_icall_PhysicalBone_set_bounce_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PhysicalBone *>(ptr)->set_bounce(arg1_in);
}

void godot_icall_PhysicalBone_get_bounce_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicalBone *>(ptr)->get_bounce();
    *arg_ret = (float)ret;
}

void godot_icall_PhysicalBone_set_gravity_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PhysicalBone *>(ptr)->set_gravity_scale(arg1_in);
}

void godot_icall_PhysicalBone_get_gravity_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicalBone *>(ptr)->get_gravity_scale();
    *arg_ret = (float)ret;
}

Object* godot_icall_PhysicalBone_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PhysicalBone")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Physics2DDirectBodyState_get_total_gravity_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_total_gravity();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Physics2DDirectBodyState_get_total_linear_damp_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_total_linear_damp();
    *arg_ret = (float)ret;
}

void godot_icall_Physics2DDirectBodyState_get_total_angular_damp_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_total_angular_damp();
    *arg_ret = (float)ret;
}

void godot_icall_Physics2DDirectBodyState_get_inverse_mass_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_inverse_mass();
    *arg_ret = (float)ret;
}

void godot_icall_Physics2DDirectBodyState_get_inverse_inertia_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_inverse_inertia();
    *arg_ret = (float)ret;
}

void godot_icall_Physics2DDirectBodyState_set_linear_velocity_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Physics2DDirectBodyState *>(ptr)->set_linear_velocity(arg1_in);
}

void godot_icall_Physics2DDirectBodyState_get_linear_velocity_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_linear_velocity();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Physics2DDirectBodyState_set_angular_velocity_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Physics2DDirectBodyState *>(ptr)->set_angular_velocity(arg1_in);
}

void godot_icall_Physics2DDirectBodyState_get_angular_velocity_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_angular_velocity();
    *arg_ret = (float)ret;
}

void godot_icall_Physics2DDirectBodyState_set_transform_dfe2915f(Object * ptr, GDMonoMarshal::M_Transform2D* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    static_cast<Physics2DDirectBodyState *>(ptr)->set_transform(arg1_in);
}

void godot_icall_Physics2DDirectBodyState_get_transform_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_transform();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_Physics2DDirectBodyState_add_central_force_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Physics2DDirectBodyState *>(ptr)->add_central_force(arg1_in);
}

void godot_icall_Physics2DDirectBodyState_add_force_bf22f250(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<Physics2DDirectBodyState *>(ptr)->add_force(arg1_in, arg2_in);
}

void godot_icall_Physics2DDirectBodyState_add_torque_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Physics2DDirectBodyState *>(ptr)->add_torque(arg1_in);
}

void godot_icall_Physics2DDirectBodyState_apply_central_impulse_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Physics2DDirectBodyState *>(ptr)->apply_central_impulse(arg1_in);
}

void godot_icall_Physics2DDirectBodyState_apply_torque_impulse_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Physics2DDirectBodyState *>(ptr)->apply_torque_impulse(arg1_in);
}

void godot_icall_Physics2DDirectBodyState_apply_impulse_bf22f250(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<Physics2DDirectBodyState *>(ptr)->apply_impulse(arg1_in, arg2_in);
}

void godot_icall_Physics2DDirectBodyState_set_sleep_state_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Physics2DDirectBodyState *>(ptr)->set_sleep_state(arg1_in);
}

MonoBoolean godot_icall_Physics2DDirectBodyState_is_sleeping_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->is_sleeping();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_Physics2DDirectBodyState_get_contact_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_contact_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_Physics2DDirectBodyState_get_contact_local_position_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_contact_local_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Physics2DDirectBodyState_get_contact_local_normal_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_contact_local_normal(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

int32_t godot_icall_Physics2DDirectBodyState_get_contact_local_shape_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_contact_local_shape(arg1_in);
    return static_cast<int32_t>(ret);
}

RID* godot_icall_Physics2DDirectBodyState_get_contact_collider_6012f6e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_contact_collider(arg1_in);
    return memnew(RID(ret));
}

void godot_icall_Physics2DDirectBodyState_get_contact_collider_position_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_contact_collider_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Physics2DDirectBodyState_get_contact_collider_id_f5296873(Object * ptr, int32_t arg1, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_contact_collider_id(arg1_in);
    *arg_ret = (uint64_t)ret;
}

MonoObject* godot_icall_Physics2DDirectBodyState_get_contact_collider_object_90d51b7a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_contact_collider_object(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_Physics2DDirectBodyState_get_contact_collider_shape_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_contact_collider_shape(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_Physics2DDirectBodyState_get_contact_collider_shape_metadata_a9b2673d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_contact_collider_shape_metadata(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_Physics2DDirectBodyState_get_contact_collider_velocity_at_position_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_contact_collider_velocity_at_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Physics2DDirectBodyState_get_step_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_step();
    *arg_ret = (float)ret;
}

void godot_icall_Physics2DDirectBodyState_integrate_forces_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Physics2DDirectBodyState *>(ptr)->integrate_forces();
}

MonoObject* godot_icall_Physics2DDirectBodyState_get_space_state_f8934848(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DDirectBodyState *>(ptr)->get_space_state();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Array* godot_icall_Physics2DDirectSpaceState_intersect_point_10cea668(Object * ptr, GDMonoMarshal::M_Vector2* arg1, int32_t arg2, Array* arg3, uint32_t arg4, MonoBoolean arg5, MonoBoolean arg6) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    uint32_t arg4_in = static_cast<uint32_t>(arg4);
    bool arg5_in = static_cast<bool>(arg5);
    bool arg6_in = static_cast<bool>(arg6);
    auto ret = static_cast<Physics2DDirectSpaceState *>(ptr)->_intersect_point(arg1_in, arg2_in, Variant(*arg3).as<Vector<RID>>(), arg4_in, arg5_in, arg6_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_Physics2DDirectSpaceState_intersect_point_on_canvas_b12900da(Object * ptr, GDMonoMarshal::M_Vector2* arg1, uint64_t* arg2, int32_t arg3, Array* arg4, uint32_t arg5, MonoBoolean arg6, MonoBoolean arg7) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    int64_t arg2_in = static_cast<int64_t>(*arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    uint32_t arg5_in = static_cast<uint32_t>(arg5);
    bool arg6_in = static_cast<bool>(arg6);
    bool arg7_in = static_cast<bool>(arg7);
    auto ret = static_cast<Physics2DDirectSpaceState *>(ptr)->_intersect_point_on_canvas(arg1_in, arg2_in, arg3_in, Variant(*arg4).as<Vector<RID>>(), arg5_in, arg6_in, arg7_in);
    return memnew(Array(Variant::from(ret)));
}

Dictionary* godot_icall_Physics2DDirectSpaceState_intersect_ray_8a1a055(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, Array* arg3, uint32_t arg4, MonoBoolean arg5, MonoBoolean arg6) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    uint32_t arg4_in = static_cast<uint32_t>(arg4);
    bool arg5_in = static_cast<bool>(arg5);
    bool arg6_in = static_cast<bool>(arg6);
    auto ret = static_cast<Physics2DDirectSpaceState *>(ptr)->_intersect_ray(arg1_in, arg2_in, asVec<RID>(*arg3), arg4_in, arg5_in, arg6_in);
    return memnew(Dictionary(ret));
}

Array* godot_icall_Physics2DDirectSpaceState_intersect_shape_7fff5f49(Object * ptr, Object * arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Physics2DDirectSpaceState *>(ptr)->_intersect_shape(AutoRef(arg1), arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_Physics2DDirectSpaceState_cast_motion_4d8563ed(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DDirectSpaceState *>(ptr)->_cast_motion(AutoRef(arg1));
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_Physics2DDirectSpaceState_collide_shape_7fff5f49(Object * ptr, Object * arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Physics2DDirectSpaceState *>(ptr)->_collide_shape(AutoRef(arg1), arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Dictionary* godot_icall_Physics2DDirectSpaceState_get_rest_info_3eaded76(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DDirectSpaceState *>(ptr)->_get_rest_info(AutoRef(arg1));
    return memnew(Dictionary(ret));
}

RID* godot_icall_Physics2DServer_line_shape_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->line_shape_create();
    return memnew(RID(ret));
}

RID* godot_icall_Physics2DServer_ray_shape_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->ray_shape_create();
    return memnew(RID(ret));
}

RID* godot_icall_Physics2DServer_segment_shape_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->segment_shape_create();
    return memnew(RID(ret));
}

RID* godot_icall_Physics2DServer_circle_shape_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->circle_shape_create();
    return memnew(RID(ret));
}

RID* godot_icall_Physics2DServer_rectangle_shape_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->rectangle_shape_create();
    return memnew(RID(ret));
}

RID* godot_icall_Physics2DServer_capsule_shape_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->capsule_shape_create();
    return memnew(RID(ret));
}

RID* godot_icall_Physics2DServer_convex_polygon_shape_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->convex_polygon_shape_create();
    return memnew(RID(ret));
}

RID* godot_icall_Physics2DServer_concave_polygon_shape_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->concave_polygon_shape_create();
    return memnew(RID(ret));
}

void godot_icall_Physics2DServer_shape_set_data_8e6f3852(Object * ptr, RID* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<Physics2DServer *>(ptr)->shape_set_data(*arg1, arg2_in);
}

int32_t godot_icall_Physics2DServer_shape_get_type_2cdb95a8(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Physics2DServer *>(ptr)->shape_get_type(*arg1);
    return (int32_t)ret;
}

MonoObject* godot_icall_Physics2DServer_shape_get_data_ef54908b(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->shape_get_data(*arg1);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

RID* godot_icall_Physics2DServer_space_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->space_create();
    return memnew(RID(ret));
}

void godot_icall_Physics2DServer_space_set_active_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Physics2DServer *>(ptr)->space_set_active(*arg1, arg2_in);
}

MonoBoolean godot_icall_Physics2DServer_space_is_active_36cc12b4(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Physics2DServer *>(ptr)->space_is_active(*arg1);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Physics2DServer_space_set_param_da2b809b(Object * ptr, RID* arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    float arg3_in = static_cast<float>(*arg3);
    static_cast<Physics2DServer *>(ptr)->space_set_param(*arg1, (Physics2DServer::SpaceParameter)arg2_in, arg3_in);
}

void godot_icall_Physics2DServer_space_get_param_96fd47bf(Object * ptr, RID* arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<Physics2DServer *>(ptr)->space_get_param(*arg1, (Physics2DServer::SpaceParameter)arg2_in);
    *arg_ret = (float)ret;
}

MonoObject* godot_icall_Physics2DServer_space_get_direct_state_9fc28ba1(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->space_get_direct_state(*arg1);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

RID* godot_icall_Physics2DServer_area_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->area_create();
    return memnew(RID(ret));
}

void godot_icall_Physics2DServer_area_set_space_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<Physics2DServer *>(ptr)->area_set_space(*arg1, *arg2);
}

RID* godot_icall_Physics2DServer_area_get_space_c09e26c0(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->area_get_space(*arg1);
    return memnew(RID(ret));
}

void godot_icall_Physics2DServer_area_set_space_override_mode_8af87055(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<Physics2DServer *>(ptr)->area_set_space_override_mode(*arg1, (Physics2DServer::AreaSpaceOverrideMode)arg2_in);
}

int32_t godot_icall_Physics2DServer_area_get_space_override_mode_d1d36655(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Physics2DServer *>(ptr)->area_get_space_override_mode(*arg1);
    return (int32_t)ret;
}

void godot_icall_Physics2DServer_area_add_shape_41b85a0b(Object * ptr, RID* arg1, RID* arg2, GDMonoMarshal::M_Transform2D* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg3_in = MARSHALLED_IN(Transform2D, arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<Physics2DServer *>(ptr)->area_add_shape(*arg1, *arg2, arg3_in, arg4_in);
}

void godot_icall_Physics2DServer_area_set_shape_ee265321(Object * ptr, RID* arg1, int32_t arg2, RID* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Physics2DServer *>(ptr)->area_set_shape(*arg1, arg2_in, *arg3);
}

void godot_icall_Physics2DServer_area_set_shape_transform_87074d30(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform2D* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Transform2D arg3_in = MARSHALLED_IN(Transform2D, arg3);
    static_cast<Physics2DServer *>(ptr)->area_set_shape_transform(*arg1, arg2_in, arg3_in);
}

void godot_icall_Physics2DServer_area_set_shape_disabled_eb795dfc(Object * ptr, RID* arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<Physics2DServer *>(ptr)->area_set_shape_disabled(*arg1, arg2_in, arg3_in);
}

int32_t godot_icall_Physics2DServer_area_get_shape_count_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Physics2DServer *>(ptr)->area_get_shape_count(*arg1);
    return static_cast<int32_t>(ret);
}

RID* godot_icall_Physics2DServer_area_get_shape_d5ef04d9(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Physics2DServer *>(ptr)->area_get_shape(*arg1, arg2_in);
    return memnew(RID(ret));
}

void godot_icall_Physics2DServer_area_get_shape_transform_61871ef9(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Physics2DServer *>(ptr)->area_get_shape_transform(*arg1, arg2_in);
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_Physics2DServer_area_remove_shape_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Physics2DServer *>(ptr)->area_remove_shape(*arg1, arg2_in);
}

void godot_icall_Physics2DServer_area_clear_shapes_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Physics2DServer *>(ptr)->area_clear_shapes(*arg1);
}

void godot_icall_Physics2DServer_area_set_collision_layer_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<Physics2DServer *>(ptr)->area_set_collision_layer(*arg1, arg2_in);
}

void godot_icall_Physics2DServer_area_set_collision_mask_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<Physics2DServer *>(ptr)->area_set_collision_mask(*arg1, arg2_in);
}

void godot_icall_Physics2DServer_area_set_param_fee54053(Object * ptr, RID* arg1, int32_t arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<Physics2DServer *>(ptr)->area_set_param(*arg1, (Physics2DServer::AreaParameter)arg2_in, arg3_in);
}

void godot_icall_Physics2DServer_area_set_transform_31203f57(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform2D* arg2) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg2_in = MARSHALLED_IN(Transform2D, arg2);
    static_cast<Physics2DServer *>(ptr)->area_set_transform(*arg1, arg2_in);
}

MonoObject* godot_icall_Physics2DServer_area_get_param_155f591b(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<Physics2DServer *>(ptr)->area_get_param(*arg1, (Physics2DServer::AreaParameter)arg2_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_Physics2DServer_area_get_transform_55838f17(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DServer *>(ptr)->area_get_transform(*arg1);
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_Physics2DServer_area_attach_object_instance_id_73956c1a(Object * ptr, RID* arg1, uint64_t* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = static_cast<int64_t>(*arg2);
    static_cast<Physics2DServer *>(ptr)->area_attach_object_instance_id(*arg1, arg2_in);
}

void godot_icall_Physics2DServer_area_get_object_instance_id_4e8e61e1(Object * ptr, RID* arg1, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DServer *>(ptr)->area_get_object_instance_id(*arg1);
    *arg_ret = (uint64_t)ret;
}

void godot_icall_Physics2DServer_area_attach_canvas_instance_id_73956c1a(Object * ptr, RID* arg1, uint64_t* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = static_cast<int64_t>(*arg2);
    static_cast<Physics2DServer *>(ptr)->area_attach_canvas_instance_id(*arg1, arg2_in);
}

void godot_icall_Physics2DServer_area_get_canvas_instance_id_4e8e61e1(Object * ptr, RID* arg1, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DServer *>(ptr)->area_get_canvas_instance_id(*arg1);
    *arg_ret = (uint64_t)ret;
}

void godot_icall_Physics2DServer_area_set_monitor_callback_384e4531(Object * ptr, RID* arg1, Object * arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    static_cast<Physics2DServer *>(ptr)->area_set_monitor_callback(*arg1, (Object*)arg2, arg3_in);
}

void godot_icall_Physics2DServer_area_set_area_monitor_callback_384e4531(Object * ptr, RID* arg1, Object * arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    static_cast<Physics2DServer *>(ptr)->area_set_area_monitor_callback(*arg1, (Object*)arg2, arg3_in);
}

void godot_icall_Physics2DServer_area_set_monitorable_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Physics2DServer *>(ptr)->area_set_monitorable(*arg1, arg2_in);
}

RID* godot_icall_Physics2DServer_body_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->body_create();
    return memnew(RID(ret));
}

void godot_icall_Physics2DServer_body_set_space_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<Physics2DServer *>(ptr)->body_set_space(*arg1, *arg2);
}

RID* godot_icall_Physics2DServer_body_get_space_c09e26c0(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_space(*arg1);
    return memnew(RID(ret));
}

void godot_icall_Physics2DServer_body_set_mode_158377b0(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<Physics2DServer *>(ptr)->body_set_mode(*arg1, (Physics2DServer::BodyMode)arg2_in);
}

int32_t godot_icall_Physics2DServer_body_get_mode_5e903261(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_mode(*arg1);
    return (int32_t)ret;
}

void godot_icall_Physics2DServer_body_add_shape_41b85a0b(Object * ptr, RID* arg1, RID* arg2, GDMonoMarshal::M_Transform2D* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg3_in = MARSHALLED_IN(Transform2D, arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<Physics2DServer *>(ptr)->body_add_shape(*arg1, *arg2, arg3_in, arg4_in);
}

void godot_icall_Physics2DServer_body_set_shape_ee265321(Object * ptr, RID* arg1, int32_t arg2, RID* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Physics2DServer *>(ptr)->body_set_shape(*arg1, arg2_in, *arg3);
}

void godot_icall_Physics2DServer_body_set_shape_transform_87074d30(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform2D* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Transform2D arg3_in = MARSHALLED_IN(Transform2D, arg3);
    static_cast<Physics2DServer *>(ptr)->body_set_shape_transform(*arg1, arg2_in, arg3_in);
}

void godot_icall_Physics2DServer_body_set_shape_metadata_14c84a37(Object * ptr, RID* arg1, int32_t arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<Physics2DServer *>(ptr)->body_set_shape_metadata(*arg1, arg2_in, arg3_in);
}

int32_t godot_icall_Physics2DServer_body_get_shape_count_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_shape_count(*arg1);
    return static_cast<int32_t>(ret);
}

RID* godot_icall_Physics2DServer_body_get_shape_d5ef04d9(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_shape(*arg1, arg2_in);
    return memnew(RID(ret));
}

void godot_icall_Physics2DServer_body_get_shape_transform_61871ef9(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_shape_transform(*arg1, arg2_in);
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

MonoObject* godot_icall_Physics2DServer_body_get_shape_metadata_21edbfc0(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_shape_metadata(*arg1, arg2_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_Physics2DServer_body_remove_shape_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Physics2DServer *>(ptr)->body_remove_shape(*arg1, arg2_in);
}

void godot_icall_Physics2DServer_body_clear_shapes_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Physics2DServer *>(ptr)->body_clear_shapes(*arg1);
}

void godot_icall_Physics2DServer_body_set_shape_disabled_eb795dfc(Object * ptr, RID* arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<Physics2DServer *>(ptr)->body_set_shape_disabled(*arg1, arg2_in, arg3_in);
}

void godot_icall_Physics2DServer_body_set_shape_as_one_way_collision_ed337a1d(Object * ptr, RID* arg1, int32_t arg2, MonoBoolean arg3, float* arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    float arg4_in = static_cast<float>(*arg4);
    static_cast<Physics2DServer *>(ptr)->body_set_shape_as_one_way_collision(*arg1, arg2_in, arg3_in, arg4_in);
}

void godot_icall_Physics2DServer_body_attach_object_instance_id_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<Physics2DServer *>(ptr)->body_attach_object_instance_id(*arg1, arg2_in);
}

uint32_t godot_icall_Physics2DServer_body_get_object_instance_id_1867c419(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_object_instance_id(*arg1);
    return static_cast<uint32_t>(ret);
}

void godot_icall_Physics2DServer_body_attach_canvas_instance_id_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<Physics2DServer *>(ptr)->body_attach_canvas_instance_id(*arg1, arg2_in);
}

uint32_t godot_icall_Physics2DServer_body_get_canvas_instance_id_1867c419(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_canvas_instance_id(*arg1);
    return static_cast<uint32_t>(ret);
}

void godot_icall_Physics2DServer_body_set_continuous_collision_detection_mode_8ae314d0(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<Physics2DServer *>(ptr)->body_set_continuous_collision_detection_mode(*arg1, (Physics2DServer::CCDMode)arg2_in);
}

int32_t godot_icall_Physics2DServer_body_get_continuous_collision_detection_mode_c8f340a9(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_continuous_collision_detection_mode(*arg1);
    return (int32_t)ret;
}

void godot_icall_Physics2DServer_body_set_collision_layer_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<Physics2DServer *>(ptr)->body_set_collision_layer(*arg1, arg2_in);
}

uint32_t godot_icall_Physics2DServer_body_get_collision_layer_1867c419(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_collision_layer(*arg1);
    return static_cast<uint32_t>(ret);
}

void godot_icall_Physics2DServer_body_set_collision_mask_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<Physics2DServer *>(ptr)->body_set_collision_mask(*arg1, arg2_in);
}

uint32_t godot_icall_Physics2DServer_body_get_collision_mask_1867c419(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_collision_mask(*arg1);
    return static_cast<uint32_t>(ret);
}

void godot_icall_Physics2DServer_body_set_param_9a4b042b(Object * ptr, RID* arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    float arg3_in = static_cast<float>(*arg3);
    static_cast<Physics2DServer *>(ptr)->body_set_param(*arg1, (Physics2DServer::BodyParameter)arg2_in, arg3_in);
}

void godot_icall_Physics2DServer_body_get_param_4b96687f(Object * ptr, RID* arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_param(*arg1, (Physics2DServer::BodyParameter)arg2_in);
    *arg_ret = (float)ret;
}

void godot_icall_Physics2DServer_body_set_state_942b2fee(Object * ptr, RID* arg1, int32_t arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<Physics2DServer *>(ptr)->body_set_state(*arg1, (Physics2DServer::BodyState)arg2_in, arg3_in);
}

MonoObject* godot_icall_Physics2DServer_body_get_state_2f9402d2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_state(*arg1, (Physics2DServer::BodyState)arg2_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_Physics2DServer_body_apply_central_impulse_832e4d14(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<Physics2DServer *>(ptr)->body_apply_central_impulse(*arg1, arg2_in);
}

void godot_icall_Physics2DServer_body_apply_torque_impulse_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Physics2DServer *>(ptr)->body_apply_torque_impulse(*arg1, arg2_in);
}

void godot_icall_Physics2DServer_body_apply_impulse_a6cab958(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<Physics2DServer *>(ptr)->body_apply_impulse(*arg1, arg2_in, arg3_in);
}

void godot_icall_Physics2DServer_body_add_central_force_832e4d14(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<Physics2DServer *>(ptr)->body_add_central_force(*arg1, arg2_in);
}

void godot_icall_Physics2DServer_body_add_force_a6cab958(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<Physics2DServer *>(ptr)->body_add_force(*arg1, arg2_in, arg3_in);
}

void godot_icall_Physics2DServer_body_add_torque_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Physics2DServer *>(ptr)->body_add_torque(*arg1, arg2_in);
}

void godot_icall_Physics2DServer_body_set_axis_velocity_832e4d14(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<Physics2DServer *>(ptr)->body_set_axis_velocity(*arg1, arg2_in);
}

void godot_icall_Physics2DServer_body_add_collision_exception_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<Physics2DServer *>(ptr)->body_add_collision_exception(*arg1, *arg2);
}

void godot_icall_Physics2DServer_body_remove_collision_exception_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<Physics2DServer *>(ptr)->body_remove_collision_exception(*arg1, *arg2);
}

void godot_icall_Physics2DServer_body_set_max_contacts_reported_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Physics2DServer *>(ptr)->body_set_max_contacts_reported(*arg1, arg2_in);
}

int32_t godot_icall_Physics2DServer_body_get_max_contacts_reported_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_max_contacts_reported(*arg1);
    return static_cast<int32_t>(ret);
}

void godot_icall_Physics2DServer_body_set_omit_force_integration_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Physics2DServer *>(ptr)->body_set_omit_force_integration(*arg1, arg2_in);
}

MonoBoolean godot_icall_Physics2DServer_body_is_omitting_force_integration_36cc12b4(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Physics2DServer *>(ptr)->body_is_omitting_force_integration(*arg1);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Physics2DServer_body_set_force_integration_callback_58278364(Object * ptr, RID* arg1, Object * arg2, MonoString* arg3, MonoObject* arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    Variant arg4_in = GDMonoMarshal::mono_object_to_variant(arg4);
    static_cast<Physics2DServer *>(ptr)->body_set_force_integration_callback(*arg1, (Object*)arg2, arg3_in, arg4_in);
}

MonoBoolean godot_icall_Physics2DServer_body_test_motion_f50d3407(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform2D* arg2, GDMonoMarshal::M_Vector2* arg3, MonoBoolean arg4, float* arg5, Object * arg6) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Transform2D arg2_in = MARSHALLED_IN(Transform2D, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    bool arg4_in = static_cast<bool>(arg4);
    float arg5_in = static_cast<float>(*arg5);
    auto ret = static_cast<Physics2DServer *>(ptr)->_body_test_motion(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, AutoRef(arg6));
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Physics2DServer_body_get_direct_state_2c2c152a(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DServer *>(ptr)->body_get_direct_state(*arg1);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_Physics2DServer_joint_set_param_b27d642a(Object * ptr, RID* arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    float arg3_in = static_cast<float>(*arg3);
    static_cast<Physics2DServer *>(ptr)->joint_set_param(*arg1, (Physics2DServer::JointParam)arg2_in, arg3_in);
}

void godot_icall_Physics2DServer_joint_get_param_916b9023(Object * ptr, RID* arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<Physics2DServer *>(ptr)->joint_get_param(*arg1, (Physics2DServer::JointParam)arg2_in);
    *arg_ret = (float)ret;
}

RID* godot_icall_Physics2DServer_pin_joint_create_f8506f72(Object * ptr, GDMonoMarshal::M_Vector2* arg1, RID* arg2, RID* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Physics2DServer *>(ptr)->pin_joint_create(arg1_in, *arg2, *arg3);
    return memnew(RID(ret));
}

RID* godot_icall_Physics2DServer_groove_joint_create_53e709b2(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3, RID* arg4, RID* arg5) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    auto ret = static_cast<Physics2DServer *>(ptr)->groove_joint_create(arg1_in, arg2_in, arg3_in, *arg4, *arg5);
    return memnew(RID(ret));
}

RID* godot_icall_Physics2DServer_damped_spring_joint_create_4d2d9f9a(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, RID* arg3, RID* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    auto ret = static_cast<Physics2DServer *>(ptr)->damped_spring_joint_create(arg1_in, arg2_in, *arg3, *arg4);
    return memnew(RID(ret));
}

void godot_icall_Physics2DServer_damped_string_joint_set_param_bed3514d(Object * ptr, RID* arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    float arg3_in = static_cast<float>(*arg3);
    static_cast<Physics2DServer *>(ptr)->damped_string_joint_set_param(*arg1, (Physics2DServer::DampedStringParam)arg2_in, arg3_in);
}

void godot_icall_Physics2DServer_damped_string_joint_get_param_b98e8957(Object * ptr, RID* arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<Physics2DServer *>(ptr)->damped_string_joint_get_param(*arg1, (Physics2DServer::DampedStringParam)arg2_in);
    *arg_ret = (float)ret;
}

int32_t godot_icall_Physics2DServer_joint_get_type_d1234bda(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Physics2DServer *>(ptr)->joint_get_type(*arg1);
    return (int32_t)ret;
}

void godot_icall_Physics2DServer_free_rid_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Physics2DServer *>(ptr)->free_rid(*arg1);
}

void godot_icall_Physics2DServer_set_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Physics2DServer *>(ptr)->set_active(arg1_in);
}

int32_t godot_icall_Physics2DServer_get_process_info_79431e17(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Physics2DServer *>(ptr)->get_process_info((Physics2DServer::ProcessInfo)arg1_in);
    return static_cast<int32_t>(ret);
}

Object* godot_icall_Physics2DServer_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("Physics2DServer");
}

void godot_icall_Physics2DShapeQueryParameters_set_shape_7ce53eb(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Physics2DShapeQueryParameters *>(ptr)->set_shape(AutoRef(arg1));
}

void godot_icall_Physics2DShapeQueryParameters_set_shape_rid_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Physics2DShapeQueryParameters *>(ptr)->set_shape_rid(*arg1);
}

RID* godot_icall_Physics2DShapeQueryParameters_get_shape_rid_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DShapeQueryParameters *>(ptr)->get_shape_rid();
    return memnew(RID(ret));
}

void godot_icall_Physics2DShapeQueryParameters_set_transform_dfe2915f(Object * ptr, GDMonoMarshal::M_Transform2D* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    static_cast<Physics2DShapeQueryParameters *>(ptr)->set_transform(arg1_in);
}

void godot_icall_Physics2DShapeQueryParameters_get_transform_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DShapeQueryParameters *>(ptr)->get_transform();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_Physics2DShapeQueryParameters_set_motion_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Physics2DShapeQueryParameters *>(ptr)->set_motion(arg1_in);
}

void godot_icall_Physics2DShapeQueryParameters_get_motion_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DShapeQueryParameters *>(ptr)->get_motion();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Physics2DShapeQueryParameters_set_margin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Physics2DShapeQueryParameters *>(ptr)->set_margin(arg1_in);
}

void godot_icall_Physics2DShapeQueryParameters_get_margin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DShapeQueryParameters *>(ptr)->get_margin();
    *arg_ret = (float)ret;
}

void godot_icall_Physics2DShapeQueryParameters_set_collision_mask_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Physics2DShapeQueryParameters *>(ptr)->set_collision_mask(arg1_in);
}

int32_t godot_icall_Physics2DShapeQueryParameters_get_collision_mask_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Physics2DShapeQueryParameters *>(ptr)->get_collision_mask();
    return static_cast<int32_t>(ret);
}

void godot_icall_Physics2DShapeQueryParameters_set_exclude_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Physics2DShapeQueryParameters *>(ptr)->set_exclude(asPool<RID>(*arg1));
}

Array* godot_icall_Physics2DShapeQueryParameters_get_exclude_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DShapeQueryParameters *>(ptr)->get_exclude();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_Physics2DShapeQueryParameters_set_collide_with_bodies_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Physics2DShapeQueryParameters *>(ptr)->set_collide_with_bodies(arg1_in);
}

MonoBoolean godot_icall_Physics2DShapeQueryParameters_is_collide_with_bodies_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Physics2DShapeQueryParameters *>(ptr)->is_collide_with_bodies_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Physics2DShapeQueryParameters_set_collide_with_areas_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Physics2DShapeQueryParameters *>(ptr)->set_collide_with_areas(arg1_in);
}

MonoBoolean godot_icall_Physics2DShapeQueryParameters_is_collide_with_areas_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Physics2DShapeQueryParameters *>(ptr)->is_collide_with_areas_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_Physics2DShapeQueryParameters_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Physics2DShapeQueryParameters")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_Physics2DShapeQueryResult_get_result_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Physics2DShapeQueryResult *>(ptr)->get_result_count();
    return static_cast<int32_t>(ret);
}

RID* godot_icall_Physics2DShapeQueryResult_get_result_rid_6012f6e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DShapeQueryResult *>(ptr)->get_result_rid(arg1_in);
    return memnew(RID(ret));
}

void godot_icall_Physics2DShapeQueryResult_get_result_object_id_f5296873(Object * ptr, int32_t arg1, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DShapeQueryResult *>(ptr)->get_result_object_id(arg1_in);
    *arg_ret = (uint64_t)ret;
}

MonoObject* godot_icall_Physics2DShapeQueryResult_get_result_object_90d51b7a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DShapeQueryResult *>(ptr)->get_result_object(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_Physics2DShapeQueryResult_get_result_object_shape_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Physics2DShapeQueryResult *>(ptr)->get_result_object_shape(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Physics2DTestMotionResult_get_motion_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DTestMotionResult *>(ptr)->get_motion();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Physics2DTestMotionResult_get_motion_remainder_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DTestMotionResult *>(ptr)->get_motion_remainder();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Physics2DTestMotionResult_get_collision_point_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DTestMotionResult *>(ptr)->get_collision_point();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Physics2DTestMotionResult_get_collision_normal_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DTestMotionResult *>(ptr)->get_collision_normal();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Physics2DTestMotionResult_get_collider_velocity_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DTestMotionResult *>(ptr)->get_collider_velocity();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Physics2DTestMotionResult_get_collider_id_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Physics2DTestMotionResult *>(ptr)->get_collider_id();
    *arg_ret = (uint64_t)ret;
}

RID* godot_icall_Physics2DTestMotionResult_get_collider_rid_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DTestMotionResult *>(ptr)->get_collider_rid();
    return memnew(RID(ret));
}

MonoObject* godot_icall_Physics2DTestMotionResult_get_collider_5bd95814(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Physics2DTestMotionResult *>(ptr)->get_collider();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_Physics2DTestMotionResult_get_collider_shape_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Physics2DTestMotionResult *>(ptr)->get_collider_shape();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_Physics2DTestMotionResult_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Physics2DTestMotionResult")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_PhysicsBody_set_collision_layer_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<PhysicsBody *>(ptr)->set_collision_layer(arg1_in);
}

uint32_t godot_icall_PhysicsBody_get_collision_layer_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<PhysicsBody *>(ptr)->get_collision_layer();
    return static_cast<uint32_t>(ret);
}

void godot_icall_PhysicsBody_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<PhysicsBody *>(ptr)->set_collision_mask(arg1_in);
}

uint32_t godot_icall_PhysicsBody_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<PhysicsBody *>(ptr)->get_collision_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_PhysicsBody_set_collision_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PhysicsBody *>(ptr)->set_collision_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_PhysicsBody_get_collision_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsBody *>(ptr)->get_collision_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PhysicsBody_set_collision_layer_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PhysicsBody *>(ptr)->set_collision_layer_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_PhysicsBody_get_collision_layer_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsBody *>(ptr)->get_collision_layer_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall_PhysicsBody_get_collision_exceptions_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsBody *>(ptr)->get_collision_exceptions();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_PhysicsBody_add_collision_exception_with_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsBody *>(ptr)->add_collision_exception_with((Node*)arg1);
}

void godot_icall_PhysicsBody_remove_collision_exception_with_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsBody *>(ptr)->remove_collision_exception_with((Node*)arg1);
}

void godot_icall_PhysicsBody2D_set_collision_layer_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<PhysicsBody2D *>(ptr)->set_collision_layer(arg1_in);
}

uint32_t godot_icall_PhysicsBody2D_get_collision_layer_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<PhysicsBody2D *>(ptr)->get_collision_layer();
    return static_cast<uint32_t>(ret);
}

void godot_icall_PhysicsBody2D_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<PhysicsBody2D *>(ptr)->set_collision_mask(arg1_in);
}

uint32_t godot_icall_PhysicsBody2D_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<PhysicsBody2D *>(ptr)->get_collision_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_PhysicsBody2D_set_collision_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PhysicsBody2D *>(ptr)->set_collision_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_PhysicsBody2D_get_collision_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsBody2D *>(ptr)->get_collision_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PhysicsBody2D_set_collision_layer_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PhysicsBody2D *>(ptr)->set_collision_layer_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_PhysicsBody2D_get_collision_layer_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsBody2D *>(ptr)->get_collision_layer_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PhysicsBody2D__set_layers_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<PhysicsBody2D *>(ptr)->_set_layers(arg1_in);
}

uint32_t godot_icall_PhysicsBody2D__get_layers_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<PhysicsBody2D *>(ptr)->_get_layers();
    return static_cast<uint32_t>(ret);
}

Array* godot_icall_PhysicsBody2D_get_collision_exceptions_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsBody2D *>(ptr)->get_collision_exceptions();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_PhysicsBody2D_add_collision_exception_with_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsBody2D *>(ptr)->add_collision_exception_with((Node*)arg1);
}

void godot_icall_PhysicsBody2D_remove_collision_exception_with_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsBody2D *>(ptr)->remove_collision_exception_with((Node*)arg1);
}

void godot_icall_PhysicsDirectBodyState_get_total_gravity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_total_gravity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_PhysicsDirectBodyState_get_total_linear_damp_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_total_linear_damp();
    *arg_ret = (float)ret;
}

void godot_icall_PhysicsDirectBodyState_get_total_angular_damp_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_total_angular_damp();
    *arg_ret = (float)ret;
}

void godot_icall_PhysicsDirectBodyState_get_center_of_mass_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_center_of_mass();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_PhysicsDirectBodyState_get_principal_inertia_axes_4746c0fd(Object * ptr, GDMonoMarshal::M_Basis* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Basis(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_principal_inertia_axes();
    *arg_ret = MARSHALLED_OUT(Basis, ret);
}

void godot_icall_PhysicsDirectBodyState_get_inverse_mass_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_inverse_mass();
    *arg_ret = (float)ret;
}

void godot_icall_PhysicsDirectBodyState_get_inverse_inertia_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_inverse_inertia();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_PhysicsDirectBodyState_set_linear_velocity_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<PhysicsDirectBodyState *>(ptr)->set_linear_velocity(arg1_in);
}

void godot_icall_PhysicsDirectBodyState_get_linear_velocity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_linear_velocity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_PhysicsDirectBodyState_set_angular_velocity_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<PhysicsDirectBodyState *>(ptr)->set_angular_velocity(arg1_in);
}

void godot_icall_PhysicsDirectBodyState_get_angular_velocity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_angular_velocity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_PhysicsDirectBodyState_set_transform_655b85c9(Object * ptr, GDMonoMarshal::M_Transform* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform arg1_in = MARSHALLED_IN(Transform, arg1);
    static_cast<PhysicsDirectBodyState *>(ptr)->set_transform(arg1_in);
}

void godot_icall_PhysicsDirectBodyState_get_transform_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_transform();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_PhysicsDirectBodyState_add_central_force_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<PhysicsDirectBodyState *>(ptr)->add_central_force(arg1_in);
}

void godot_icall_PhysicsDirectBodyState_add_force_bf22f212(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<PhysicsDirectBodyState *>(ptr)->add_force(arg1_in, arg2_in);
}

void godot_icall_PhysicsDirectBodyState_add_torque_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<PhysicsDirectBodyState *>(ptr)->add_torque(arg1_in);
}

void godot_icall_PhysicsDirectBodyState_apply_central_impulse_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<PhysicsDirectBodyState *>(ptr)->apply_central_impulse(arg1_in);
}

void godot_icall_PhysicsDirectBodyState_apply_impulse_bf22f212(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<PhysicsDirectBodyState *>(ptr)->apply_impulse(arg1_in, arg2_in);
}

void godot_icall_PhysicsDirectBodyState_apply_torque_impulse_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<PhysicsDirectBodyState *>(ptr)->apply_torque_impulse(arg1_in);
}

void godot_icall_PhysicsDirectBodyState_set_sleep_state_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PhysicsDirectBodyState *>(ptr)->set_sleep_state(arg1_in);
}

MonoBoolean godot_icall_PhysicsDirectBodyState_is_sleeping_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->is_sleeping();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_PhysicsDirectBodyState_get_contact_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_contact_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_PhysicsDirectBodyState_get_contact_local_position_237286f3(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_contact_local_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_PhysicsDirectBodyState_get_contact_local_normal_237286f3(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_contact_local_normal(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_PhysicsDirectBodyState_get_contact_impulse_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_contact_impulse(arg1_in);
    *arg_ret = (float)ret;
}

int32_t godot_icall_PhysicsDirectBodyState_get_contact_local_shape_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_contact_local_shape(arg1_in);
    return static_cast<int32_t>(ret);
}

RID* godot_icall_PhysicsDirectBodyState_get_contact_collider_6012f6e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_contact_collider(arg1_in);
    return memnew(RID(ret));
}

void godot_icall_PhysicsDirectBodyState_get_contact_collider_position_237286f3(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_contact_collider_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_PhysicsDirectBodyState_get_contact_collider_id_f5296873(Object * ptr, int32_t arg1, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_contact_collider_id(arg1_in);
    *arg_ret = (uint64_t)ret;
}

MonoObject* godot_icall_PhysicsDirectBodyState_get_contact_collider_object_90d51b7a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_contact_collider_object(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_PhysicsDirectBodyState_get_contact_collider_shape_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_contact_collider_shape(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_PhysicsDirectBodyState_get_contact_collider_velocity_at_position_237286f3(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_contact_collider_velocity_at_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_PhysicsDirectBodyState_get_step_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_step();
    *arg_ret = (float)ret;
}

void godot_icall_PhysicsDirectBodyState_integrate_forces_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsDirectBodyState *>(ptr)->integrate_forces();
}

MonoObject* godot_icall_PhysicsDirectBodyState_get_space_state_bfc60632(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsDirectBodyState *>(ptr)->get_space_state();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Dictionary* godot_icall_PhysicsDirectSpaceState_intersect_ray_4195d84b(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, Array* arg3, uint32_t arg4, MonoBoolean arg5, MonoBoolean arg6) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    uint32_t arg4_in = static_cast<uint32_t>(arg4);
    bool arg5_in = static_cast<bool>(arg5);
    bool arg6_in = static_cast<bool>(arg6);
    auto ret = static_cast<PhysicsDirectSpaceState *>(ptr)->_intersect_ray(arg1_in, arg2_in, asVec<RID>(*arg3), arg4_in, arg5_in, arg6_in);
    return memnew(Dictionary(ret));
}

Array* godot_icall_PhysicsDirectSpaceState_intersect_shape_6ae46979(Object * ptr, Object * arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<PhysicsDirectSpaceState *>(ptr)->_intersect_shape(AutoRef(arg1), arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_PhysicsDirectSpaceState_cast_motion_e6a21d1a(Object * ptr, Object * arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    auto ret = static_cast<PhysicsDirectSpaceState *>(ptr)->_cast_motion(AutoRef(arg1), arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_PhysicsDirectSpaceState_collide_shape_6ae46979(Object * ptr, Object * arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<PhysicsDirectSpaceState *>(ptr)->_collide_shape(AutoRef(arg1), arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Dictionary* godot_icall_PhysicsDirectSpaceState_get_rest_info_b0c480e8(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsDirectSpaceState *>(ptr)->_get_rest_info(AutoRef(arg1));
    return memnew(Dictionary(ret));
}

void godot_icall_PhysicsMaterial_set_friction_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PhysicsMaterial *>(ptr)->set_friction(arg1_in);
}

void godot_icall_PhysicsMaterial_get_friction_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsMaterial *>(ptr)->get_friction();
    *arg_ret = (float)ret;
}

void godot_icall_PhysicsMaterial_set_rough_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PhysicsMaterial *>(ptr)->set_rough(arg1_in);
}

MonoBoolean godot_icall_PhysicsMaterial_is_rough_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicsMaterial *>(ptr)->is_rough();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PhysicsMaterial_set_bounce_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PhysicsMaterial *>(ptr)->set_bounce(arg1_in);
}

void godot_icall_PhysicsMaterial_get_bounce_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsMaterial *>(ptr)->get_bounce();
    *arg_ret = (float)ret;
}

void godot_icall_PhysicsMaterial_set_absorbent_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PhysicsMaterial *>(ptr)->set_absorbent(arg1_in);
}

MonoBoolean godot_icall_PhysicsMaterial_is_absorbent_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicsMaterial *>(ptr)->is_absorbent();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_PhysicsMaterial_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PhysicsMaterial")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

RID* godot_icall_PhysicsServer_shape_create_982ca4d2(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<PhysicsServer *>(ptr)->shape_create((PhysicsServer::ShapeType)arg1_in);
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_shape_set_data_8e6f3852(Object * ptr, RID* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<PhysicsServer *>(ptr)->shape_set_data(*arg1, arg2_in);
}

int32_t godot_icall_PhysicsServer_shape_get_type_2c47b4d6(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicsServer *>(ptr)->shape_get_type(*arg1);
    return (int32_t)ret;
}

MonoObject* godot_icall_PhysicsServer_shape_get_data_ef54908b(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsServer *>(ptr)->shape_get_data(*arg1);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

RID* godot_icall_PhysicsServer_space_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsServer *>(ptr)->space_create();
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_space_set_active_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PhysicsServer *>(ptr)->space_set_active(*arg1, arg2_in);
}

MonoBoolean godot_icall_PhysicsServer_space_is_active_36cc12b4(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicsServer *>(ptr)->space_is_active(*arg1);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PhysicsServer_space_set_param_6e88a234(Object * ptr, RID* arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    float arg3_in = static_cast<float>(*arg3);
    static_cast<PhysicsServer *>(ptr)->space_set_param(*arg1, (PhysicsServer::SpaceParameter)arg2_in, arg3_in);
}

void godot_icall_PhysicsServer_space_get_param_29313795(Object * ptr, RID* arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<PhysicsServer *>(ptr)->space_get_param(*arg1, (PhysicsServer::SpaceParameter)arg2_in);
    *arg_ret = (float)ret;
}

MonoObject* godot_icall_PhysicsServer_space_get_direct_state_9a0bebd1(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsServer *>(ptr)->space_get_direct_state(*arg1);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

RID* godot_icall_PhysicsServer_area_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsServer *>(ptr)->area_create();
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_area_set_space_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsServer *>(ptr)->area_set_space(*arg1, *arg2);
}

RID* godot_icall_PhysicsServer_area_get_space_c09e26c0(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsServer *>(ptr)->area_get_space(*arg1);
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_area_set_space_override_mode_9aa4724b(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<PhysicsServer *>(ptr)->area_set_space_override_mode(*arg1, (PhysicsServer::AreaSpaceOverrideMode)arg2_in);
}

int32_t godot_icall_PhysicsServer_area_get_space_override_mode_d772ffac(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicsServer *>(ptr)->area_get_space_override_mode(*arg1);
    return (int32_t)ret;
}

void godot_icall_PhysicsServer_area_add_shape_36825fcd(Object * ptr, RID* arg1, RID* arg2, GDMonoMarshal::M_Transform* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    Transform arg3_in = MARSHALLED_IN(Transform, arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<PhysicsServer *>(ptr)->area_add_shape(*arg1, *arg2, arg3_in, arg4_in);
}

void godot_icall_PhysicsServer_area_set_shape_ee265321(Object * ptr, RID* arg1, int32_t arg2, RID* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<PhysicsServer *>(ptr)->area_set_shape(*arg1, arg2_in, *arg3);
}

void godot_icall_PhysicsServer_area_set_shape_transform_107e50a2(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Transform arg3_in = MARSHALLED_IN(Transform, arg3);
    static_cast<PhysicsServer *>(ptr)->area_set_shape_transform(*arg1, arg2_in, arg3_in);
}

void godot_icall_PhysicsServer_area_set_shape_disabled_eb795dfc(Object * ptr, RID* arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<PhysicsServer *>(ptr)->area_set_shape_disabled(*arg1, arg2_in, arg3_in);
}

int32_t godot_icall_PhysicsServer_area_get_shape_count_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicsServer *>(ptr)->area_get_shape_count(*arg1);
    return static_cast<int32_t>(ret);
}

RID* godot_icall_PhysicsServer_area_get_shape_d5ef04d9(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<PhysicsServer *>(ptr)->area_get_shape(*arg1, arg2_in);
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_area_get_shape_transform_5be89b94(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<PhysicsServer *>(ptr)->area_get_shape_transform(*arg1, arg2_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_PhysicsServer_area_remove_shape_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<PhysicsServer *>(ptr)->area_remove_shape(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_area_clear_shapes_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsServer *>(ptr)->area_clear_shapes(*arg1);
}

void godot_icall_PhysicsServer_area_set_collision_layer_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<PhysicsServer *>(ptr)->area_set_collision_layer(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_area_set_collision_mask_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<PhysicsServer *>(ptr)->area_set_collision_mask(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_area_set_param_3b3fccfc(Object * ptr, RID* arg1, int32_t arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<PhysicsServer *>(ptr)->area_set_param(*arg1, (PhysicsServer::AreaParameter)arg2_in, arg3_in);
}

void godot_icall_PhysicsServer_area_set_transform_8bd903e9(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<PhysicsServer *>(ptr)->area_set_transform(*arg1, arg2_in);
}

MonoObject* godot_icall_PhysicsServer_area_get_param_f2e7b7e5(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<PhysicsServer *>(ptr)->area_get_param(*arg1, (PhysicsServer::AreaParameter)arg2_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_PhysicsServer_area_get_transform_8fc9bb26(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsServer *>(ptr)->area_get_transform(*arg1);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_PhysicsServer_area_attach_object_instance_id_73956c1a(Object * ptr, RID* arg1, uint64_t* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = static_cast<int64_t>(*arg2);
    static_cast<PhysicsServer *>(ptr)->area_attach_object_instance_id(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_area_get_object_instance_id_4e8e61e1(Object * ptr, RID* arg1, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsServer *>(ptr)->area_get_object_instance_id(*arg1);
    *arg_ret = (uint64_t)ret;
}

void godot_icall_PhysicsServer_area_set_monitor_callback_384e4531(Object * ptr, RID* arg1, Object * arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    static_cast<PhysicsServer *>(ptr)->area_set_monitor_callback(*arg1, (Object*)arg2, arg3_in);
}

void godot_icall_PhysicsServer_area_set_area_monitor_callback_384e4531(Object * ptr, RID* arg1, Object * arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    static_cast<PhysicsServer *>(ptr)->area_set_area_monitor_callback(*arg1, (Object*)arg2, arg3_in);
}

void godot_icall_PhysicsServer_area_set_monitorable_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PhysicsServer *>(ptr)->area_set_monitorable(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_area_set_ray_pickable_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PhysicsServer *>(ptr)->area_set_ray_pickable(*arg1, arg2_in);
}

MonoBoolean godot_icall_PhysicsServer_area_is_ray_pickable_36cc12b4(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicsServer *>(ptr)->area_is_ray_pickable(*arg1);
    return static_cast<MonoBoolean>(ret);
}

RID* godot_icall_PhysicsServer_body_create_1e1b128(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<PhysicsServer *>(ptr)->body_create((PhysicsServer::BodyMode)arg1_in, arg2_in);
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_body_set_space_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsServer *>(ptr)->body_set_space(*arg1, *arg2);
}

RID* godot_icall_PhysicsServer_body_get_space_c09e26c0(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_space(*arg1);
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_body_set_mode_406db06(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<PhysicsServer *>(ptr)->body_set_mode(*arg1, (PhysicsServer::BodyMode)arg2_in);
}

int32_t godot_icall_PhysicsServer_body_get_mode_8e417dda(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_mode(*arg1);
    return (int32_t)ret;
}

void godot_icall_PhysicsServer_body_set_collision_layer_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<PhysicsServer *>(ptr)->body_set_collision_layer(*arg1, arg2_in);
}

uint32_t godot_icall_PhysicsServer_body_get_collision_layer_1867c419(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_collision_layer(*arg1);
    return static_cast<uint32_t>(ret);
}

void godot_icall_PhysicsServer_body_set_collision_mask_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<PhysicsServer *>(ptr)->body_set_collision_mask(*arg1, arg2_in);
}

uint32_t godot_icall_PhysicsServer_body_get_collision_mask_1867c419(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_collision_mask(*arg1);
    return static_cast<uint32_t>(ret);
}

void godot_icall_PhysicsServer_body_add_shape_36825fcd(Object * ptr, RID* arg1, RID* arg2, GDMonoMarshal::M_Transform* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    Transform arg3_in = MARSHALLED_IN(Transform, arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<PhysicsServer *>(ptr)->body_add_shape(*arg1, *arg2, arg3_in, arg4_in);
}

void godot_icall_PhysicsServer_body_set_shape_ee265321(Object * ptr, RID* arg1, int32_t arg2, RID* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<PhysicsServer *>(ptr)->body_set_shape(*arg1, arg2_in, *arg3);
}

void godot_icall_PhysicsServer_body_set_shape_transform_107e50a2(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Transform arg3_in = MARSHALLED_IN(Transform, arg3);
    static_cast<PhysicsServer *>(ptr)->body_set_shape_transform(*arg1, arg2_in, arg3_in);
}

void godot_icall_PhysicsServer_body_set_shape_disabled_eb795dfc(Object * ptr, RID* arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<PhysicsServer *>(ptr)->body_set_shape_disabled(*arg1, arg2_in, arg3_in);
}

int32_t godot_icall_PhysicsServer_body_get_shape_count_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_shape_count(*arg1);
    return static_cast<int32_t>(ret);
}

RID* godot_icall_PhysicsServer_body_get_shape_d5ef04d9(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_shape(*arg1, arg2_in);
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_body_get_shape_transform_5be89b94(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_shape_transform(*arg1, arg2_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_PhysicsServer_body_remove_shape_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<PhysicsServer *>(ptr)->body_remove_shape(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_body_clear_shapes_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsServer *>(ptr)->body_clear_shapes(*arg1);
}

void godot_icall_PhysicsServer_body_attach_object_instance_id_73956c1a(Object * ptr, RID* arg1, uint64_t* arg2) {
    ERR_FAIL_NULL(ptr);
	int64_t arg2_in = static_cast<int64_t>(*arg2);
    static_cast<PhysicsServer *>(ptr)->body_attach_object_instance_id(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_body_get_object_instance_id_4e8e61e1(Object * ptr, RID* arg1, uint64_t* arg_ret) {
	if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_object_instance_id(*arg1);
	*arg_ret = (uint64_t)ret;
}

void godot_icall_PhysicsServer_body_set_enable_continuous_collision_detection_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PhysicsServer *>(ptr)->body_set_enable_continuous_collision_detection(*arg1, arg2_in);
}

MonoBoolean godot_icall_PhysicsServer_body_is_continuous_collision_detection_enabled_36cc12b4(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicsServer *>(ptr)->body_is_continuous_collision_detection_enabled(*arg1);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PhysicsServer_body_set_param_4dfe98a5(Object * ptr, RID* arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    float arg3_in = static_cast<float>(*arg3);
    static_cast<PhysicsServer *>(ptr)->body_set_param(*arg1, (PhysicsServer::BodyParameter)arg2_in, arg3_in);
}

void godot_icall_PhysicsServer_body_get_param_b98c101(Object * ptr, RID* arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_param(*arg1, (PhysicsServer::BodyParameter)arg2_in);
    *arg_ret = (float)ret;
}

void godot_icall_PhysicsServer_body_set_kinematic_safe_margin_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<PhysicsServer *>(ptr)->body_set_kinematic_safe_margin(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_body_get_kinematic_safe_margin_8194d7a8(Object * ptr, RID* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_kinematic_safe_margin(*arg1);
    *arg_ret = (float)ret;
}

void godot_icall_PhysicsServer_body_set_state_25cf8d66(Object * ptr, RID* arg1, int32_t arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<PhysicsServer *>(ptr)->body_set_state(*arg1, (PhysicsServer::BodyState)arg2_in, arg3_in);
}

MonoObject* godot_icall_PhysicsServer_body_get_state_c29efb74(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_state(*arg1, (PhysicsServer::BodyState)arg2_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_PhysicsServer_body_add_central_force_832e4d15(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<PhysicsServer *>(ptr)->body_add_central_force(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_body_add_force_a6cab998(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2, GDMonoMarshal::M_Vector3* arg3) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    Vector3 arg3_in = MARSHALLED_IN(Vector3, arg3);
    static_cast<PhysicsServer *>(ptr)->body_add_force(*arg1, arg2_in, arg3_in);
}

void godot_icall_PhysicsServer_body_add_torque_832e4d15(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<PhysicsServer *>(ptr)->body_add_torque(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_body_apply_central_impulse_832e4d15(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<PhysicsServer *>(ptr)->body_apply_central_impulse(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_body_apply_impulse_a6cab998(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2, GDMonoMarshal::M_Vector3* arg3) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    Vector3 arg3_in = MARSHALLED_IN(Vector3, arg3);
    static_cast<PhysicsServer *>(ptr)->body_apply_impulse(*arg1, arg2_in, arg3_in);
}

void godot_icall_PhysicsServer_body_apply_torque_impulse_832e4d15(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<PhysicsServer *>(ptr)->body_apply_torque_impulse(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_body_set_axis_velocity_832e4d15(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<PhysicsServer *>(ptr)->body_set_axis_velocity(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_body_set_axis_lock_42525c46(Object * ptr, RID* arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<PhysicsServer *>(ptr)->body_set_axis_lock(*arg1, (PhysicsServer::BodyAxis)arg2_in, arg3_in);
}

MonoBoolean godot_icall_PhysicsServer_body_is_axis_locked_665a830c(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<PhysicsServer *>(ptr)->body_is_axis_locked(*arg1, (PhysicsServer::BodyAxis)arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PhysicsServer_body_add_collision_exception_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsServer *>(ptr)->body_add_collision_exception(*arg1, *arg2);
}

void godot_icall_PhysicsServer_body_remove_collision_exception_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsServer *>(ptr)->body_remove_collision_exception(*arg1, *arg2);
}

void godot_icall_PhysicsServer_body_set_max_contacts_reported_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<PhysicsServer *>(ptr)->body_set_max_contacts_reported(*arg1, arg2_in);
}

int32_t godot_icall_PhysicsServer_body_get_max_contacts_reported_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_max_contacts_reported(*arg1);
    return static_cast<int32_t>(ret);
}

void godot_icall_PhysicsServer_body_set_omit_force_integration_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PhysicsServer *>(ptr)->body_set_omit_force_integration(*arg1, arg2_in);
}

MonoBoolean godot_icall_PhysicsServer_body_is_omitting_force_integration_36cc12b4(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicsServer *>(ptr)->body_is_omitting_force_integration(*arg1);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PhysicsServer_body_set_force_integration_callback_58278364(Object * ptr, RID* arg1, Object * arg2, MonoString* arg3, MonoObject* arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    Variant arg4_in = GDMonoMarshal::mono_object_to_variant(arg4);
    static_cast<PhysicsServer *>(ptr)->body_set_force_integration_callback(*arg1, (Object*)arg2, arg3_in, arg4_in);
}

void godot_icall_PhysicsServer_body_set_ray_pickable_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PhysicsServer *>(ptr)->body_set_ray_pickable(*arg1, arg2_in);
}

MonoBoolean godot_icall_PhysicsServer_body_is_ray_pickable_36cc12b4(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicsServer *>(ptr)->body_is_ray_pickable(*arg1);
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_PhysicsServer_body_get_direct_state_b66b9175(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsServer *>(ptr)->body_get_direct_state(*arg1);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

RID* godot_icall_PhysicsServer_joint_create_pin_c3880076(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2, RID* arg3, GDMonoMarshal::M_Vector3* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    Vector3 arg4_in = MARSHALLED_IN(Vector3, arg4);
    auto ret = static_cast<PhysicsServer *>(ptr)->joint_create_pin(*arg1, arg2_in, *arg3, arg4_in);
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_pin_joint_set_param_ea08778c(Object * ptr, RID* arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    float arg3_in = static_cast<float>(*arg3);
    static_cast<PhysicsServer *>(ptr)->pin_joint_set_param(*arg1, (PhysicsServer::PinJointParam)arg2_in, arg3_in);
}

void godot_icall_PhysicsServer_pin_joint_get_param_500aa0a8(Object * ptr, RID* arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<PhysicsServer *>(ptr)->pin_joint_get_param(*arg1, (PhysicsServer::PinJointParam)arg2_in);
    *arg_ret = (float)ret;
}

void godot_icall_PhysicsServer_pin_joint_set_local_a_832e4d15(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<PhysicsServer *>(ptr)->pin_joint_set_local_a(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_pin_joint_get_local_a_6599be65(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsServer *>(ptr)->pin_joint_get_local_a(*arg1);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_PhysicsServer_pin_joint_set_local_b_832e4d15(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<PhysicsServer *>(ptr)->pin_joint_set_local_b(*arg1, arg2_in);
}

void godot_icall_PhysicsServer_pin_joint_get_local_b_6599be65(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsServer *>(ptr)->pin_joint_get_local_b(*arg1);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

RID* godot_icall_PhysicsServer_joint_create_hinge_773426ab(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg2, RID* arg3, GDMonoMarshal::M_Transform* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    Transform arg4_in = MARSHALLED_IN(Transform, arg4);
    auto ret = static_cast<PhysicsServer *>(ptr)->joint_create_hinge(*arg1, arg2_in, *arg3, arg4_in);
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_hinge_joint_set_param_f17fe01b(Object * ptr, RID* arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    float arg3_in = static_cast<float>(*arg3);
    static_cast<PhysicsServer *>(ptr)->hinge_joint_set_param(*arg1, (PhysicsServer::HingeJointParam)arg2_in, arg3_in);
}

void godot_icall_PhysicsServer_hinge_joint_get_param_f87700e4(Object * ptr, RID* arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<PhysicsServer *>(ptr)->hinge_joint_get_param(*arg1, (PhysicsServer::HingeJointParam)arg2_in);
    *arg_ret = (float)ret;
}

void godot_icall_PhysicsServer_hinge_joint_set_flag_59894709(Object * ptr, RID* arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<PhysicsServer *>(ptr)->hinge_joint_set_flag(*arg1, (PhysicsServer::HingeJointFlag)arg2_in, arg3_in);
}

MonoBoolean godot_icall_PhysicsServer_hinge_joint_get_flag_e45035e6(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<PhysicsServer *>(ptr)->hinge_joint_get_flag(*arg1, (PhysicsServer::HingeJointFlag)arg2_in);
    return static_cast<MonoBoolean>(ret);
}

RID* godot_icall_PhysicsServer_joint_create_slider_773426ab(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg2, RID* arg3, GDMonoMarshal::M_Transform* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    Transform arg4_in = MARSHALLED_IN(Transform, arg4);
    auto ret = static_cast<PhysicsServer *>(ptr)->joint_create_slider(*arg1, arg2_in, *arg3, arg4_in);
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_slider_joint_set_param_618f32be(Object * ptr, RID* arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    float arg3_in = static_cast<float>(*arg3);
    static_cast<PhysicsServer *>(ptr)->slider_joint_set_param(*arg1, (PhysicsServer::SliderJointParam)arg2_in, arg3_in);
}

void godot_icall_PhysicsServer_slider_joint_get_param_6c0c4d60(Object * ptr, RID* arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<PhysicsServer *>(ptr)->slider_joint_get_param(*arg1, (PhysicsServer::SliderJointParam)arg2_in);
    *arg_ret = (float)ret;
}

RID* godot_icall_PhysicsServer_joint_create_cone_twist_773426ab(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg2, RID* arg3, GDMonoMarshal::M_Transform* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    Transform arg4_in = MARSHALLED_IN(Transform, arg4);
    auto ret = static_cast<PhysicsServer *>(ptr)->joint_create_cone_twist(*arg1, arg2_in, *arg3, arg4_in);
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_cone_twist_joint_set_param_c16b23d5(Object * ptr, RID* arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    float arg3_in = static_cast<float>(*arg3);
    static_cast<PhysicsServer *>(ptr)->cone_twist_joint_set_param(*arg1, (PhysicsServer::ConeTwistJointParam)arg2_in, arg3_in);
}

void godot_icall_PhysicsServer_cone_twist_joint_get_param_a25c6dc1(Object * ptr, RID* arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<PhysicsServer *>(ptr)->cone_twist_joint_get_param(*arg1, (PhysicsServer::ConeTwistJointParam)arg2_in);
    *arg_ret = (float)ret;
}

int32_t godot_icall_PhysicsServer_joint_get_type_806c6db5(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicsServer *>(ptr)->joint_get_type(*arg1);
    return (int32_t)ret;
}

void godot_icall_PhysicsServer_joint_set_solver_priority_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<PhysicsServer *>(ptr)->joint_set_solver_priority(*arg1, arg2_in);
}

int32_t godot_icall_PhysicsServer_joint_get_solver_priority_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicsServer *>(ptr)->joint_get_solver_priority(*arg1);
    return static_cast<int32_t>(ret);
}

RID* godot_icall_PhysicsServer_joint_create_generic_6dof_773426ab(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg2, RID* arg3, GDMonoMarshal::M_Transform* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    Transform arg4_in = MARSHALLED_IN(Transform, arg4);
    auto ret = static_cast<PhysicsServer *>(ptr)->joint_create_generic_6dof(*arg1, arg2_in, *arg3, arg4_in);
    return memnew(RID(ret));
}

void godot_icall_PhysicsServer_generic_6dof_joint_set_param_b7e66223(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3, float* arg4) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    int64_t arg3_in = (int64_t)arg3;
    float arg4_in = static_cast<float>(*arg4);
    static_cast<PhysicsServer *>(ptr)->generic_6dof_joint_set_param(*arg1, (Vector3::Axis)arg2_in, (PhysicsServer::G6DOFJointAxisParam)arg3_in, arg4_in);
}

void godot_icall_PhysicsServer_generic_6dof_joint_get_param_59f8eddb(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg2_in = (int64_t)arg2;
    int64_t arg3_in = (int64_t)arg3;
    auto ret = static_cast<PhysicsServer *>(ptr)->generic_6dof_joint_get_param(*arg1, (Vector3::Axis)arg2_in, (PhysicsServer::G6DOFJointAxisParam)arg3_in);
    *arg_ret = (float)ret;
}

void godot_icall_PhysicsServer_generic_6dof_joint_set_flag_39470af5(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = (int64_t)arg2;
    int64_t arg3_in = (int64_t)arg3;
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<PhysicsServer *>(ptr)->generic_6dof_joint_set_flag(*arg1, (Vector3::Axis)arg2_in, (PhysicsServer::G6DOFJointAxisFlag)arg3_in, arg4_in);
}

MonoBoolean godot_icall_PhysicsServer_generic_6dof_joint_get_flag_7270b5fb(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg2_in = (int64_t)arg2;
    int64_t arg3_in = (int64_t)arg3;
    auto ret = static_cast<PhysicsServer *>(ptr)->generic_6dof_joint_get_flag(*arg1, (Vector3::Axis)arg2_in, (PhysicsServer::G6DOFJointAxisFlag)arg3_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PhysicsServer_free_rid_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsServer *>(ptr)->free_rid(*arg1);
}

void godot_icall_PhysicsServer_set_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PhysicsServer *>(ptr)->set_active(arg1_in);
}

int32_t godot_icall_PhysicsServer_get_process_info_d7865401(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<PhysicsServer *>(ptr)->get_process_info((PhysicsServer::ProcessInfo)arg1_in);
    return static_cast<int32_t>(ret);
}

Object* godot_icall_PhysicsServer_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("PhysicsServer");
}

void godot_icall_PhysicsShapeQueryParameters_set_shape_7ce53eb(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsShapeQueryParameters *>(ptr)->set_shape(AutoRef(arg1));
}

void godot_icall_PhysicsShapeQueryParameters_set_shape_rid_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsShapeQueryParameters *>(ptr)->set_shape_rid(*arg1);
}

RID* godot_icall_PhysicsShapeQueryParameters_get_shape_rid_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsShapeQueryParameters *>(ptr)->get_shape_rid();
    return memnew(RID(ret));
}

void godot_icall_PhysicsShapeQueryParameters_set_transform_655b85c9(Object * ptr, GDMonoMarshal::M_Transform* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform arg1_in = MARSHALLED_IN(Transform, arg1);
    static_cast<PhysicsShapeQueryParameters *>(ptr)->set_transform(arg1_in);
}

void godot_icall_PhysicsShapeQueryParameters_get_transform_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsShapeQueryParameters *>(ptr)->get_transform();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_PhysicsShapeQueryParameters_set_margin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PhysicsShapeQueryParameters *>(ptr)->set_margin(arg1_in);
}

void godot_icall_PhysicsShapeQueryParameters_get_margin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PhysicsShapeQueryParameters *>(ptr)->get_margin();
    *arg_ret = (float)ret;
}

void godot_icall_PhysicsShapeQueryParameters_set_collision_mask_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PhysicsShapeQueryParameters *>(ptr)->set_collision_mask(arg1_in);
}

int32_t godot_icall_PhysicsShapeQueryParameters_get_collision_mask_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicsShapeQueryParameters *>(ptr)->get_collision_mask();
    return static_cast<int32_t>(ret);
}

void godot_icall_PhysicsShapeQueryParameters_set_exclude_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PhysicsShapeQueryParameters *>(ptr)->set_exclude(asPool<RID>(*arg1));
}

Array* godot_icall_PhysicsShapeQueryParameters_get_exclude_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PhysicsShapeQueryParameters *>(ptr)->get_exclude();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_PhysicsShapeQueryParameters_set_collide_with_bodies_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PhysicsShapeQueryParameters *>(ptr)->set_collide_with_bodies(arg1_in);
}

MonoBoolean godot_icall_PhysicsShapeQueryParameters_is_collide_with_bodies_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicsShapeQueryParameters *>(ptr)->is_collide_with_bodies_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PhysicsShapeQueryParameters_set_collide_with_areas_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PhysicsShapeQueryParameters *>(ptr)->set_collide_with_areas(arg1_in);
}

MonoBoolean godot_icall_PhysicsShapeQueryParameters_is_collide_with_areas_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PhysicsShapeQueryParameters *>(ptr)->is_collide_with_areas_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_PhysicsShapeQueryParameters_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PhysicsShapeQueryParameters")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_PhysicsShapeQueryResult_get_result_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PhysicsShapeQueryResult *>(ptr)->get_result_count();
    return static_cast<int32_t>(ret);
}

RID* godot_icall_PhysicsShapeQueryResult_get_result_rid_6012f6e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsShapeQueryResult *>(ptr)->get_result_rid(arg1_in);
    return memnew(RID(ret));
}

void godot_icall_PhysicsShapeQueryResult_get_result_object_id_f5296873(Object * ptr, int32_t arg1, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsShapeQueryResult *>(ptr)->get_result_object_id(arg1_in);
    *arg_ret = (uint64_t)ret;
}

MonoObject* godot_icall_PhysicsShapeQueryResult_get_result_object_90d51b7a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsShapeQueryResult *>(ptr)->get_result_object(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_PhysicsShapeQueryResult_get_result_object_shape_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PhysicsShapeQueryResult *>(ptr)->get_result_object_shape(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_PinJoint_set_param_54a63c46(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<PinJoint *>(ptr)->set_param((PinJoint::Param)arg1_in, arg2_in);
}

void godot_icall_PinJoint_get_param_1203a663(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<PinJoint *>(ptr)->get_param((PinJoint::Param)arg1_in);
    *arg_ret = (float)ret;
}

Object* godot_icall_PinJoint_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PinJoint")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_PinJoint2D_set_softness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PinJoint2D *>(ptr)->set_softness(arg1_in);
}

void godot_icall_PinJoint2D_get_softness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PinJoint2D *>(ptr)->get_softness();
    *arg_ret = (float)ret;
}

Object* godot_icall_PinJoint2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PinJoint2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_PlaneMesh_set_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<PlaneMesh *>(ptr)->set_size(arg1_in);
}

void godot_icall_PlaneMesh_get_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PlaneMesh *>(ptr)->get_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_PlaneMesh_set_subdivide_width_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PlaneMesh *>(ptr)->set_subdivide_width(arg1_in);
}

int32_t godot_icall_PlaneMesh_get_subdivide_width_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PlaneMesh *>(ptr)->get_subdivide_width();
    return static_cast<int32_t>(ret);
}

void godot_icall_PlaneMesh_set_subdivide_depth_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PlaneMesh *>(ptr)->set_subdivide_depth(arg1_in);
}

int32_t godot_icall_PlaneMesh_get_subdivide_depth_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PlaneMesh *>(ptr)->get_subdivide_depth();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_PlaneMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PlaneMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_PlaneShape_set_plane_582036ef(Object * ptr, GDMonoMarshal::M_Plane* arg1) {
    ERR_FAIL_NULL(ptr);
    Plane arg1_in = MARSHALLED_IN(Plane, arg1);
    static_cast<PlaneShape *>(ptr)->set_plane(arg1_in);
}

void godot_icall_PlaneShape_get_plane_8702117d(Object * ptr, GDMonoMarshal::M_Plane* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Plane(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PlaneShape *>(ptr)->get_plane();
    *arg_ret = MARSHALLED_OUT(Plane, ret);
}

Object* godot_icall_PlaneShape_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PlaneShape")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_PointMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PointMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Polygon2D_set_polygon_3a3116bd(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolVector2Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg1);
    static_cast<Polygon2D *>(ptr)->set_polygon(arg1_in);
}

MonoArray* godot_icall_Polygon2D_get_polygon_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Polygon2D *>(ptr)->get_polygon();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_Polygon2D_set_uv_3a3116bd(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolVector2Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg1);
    static_cast<Polygon2D *>(ptr)->set_uv(arg1_in);
}

MonoArray* godot_icall_Polygon2D_get_uv_e910f1af(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Polygon2D *>(ptr)->get_uv();
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_Polygon2D_set_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<Polygon2D *>(ptr)->set_color(arg1_in);
}

void godot_icall_Polygon2D_get_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Polygon2D *>(ptr)->get_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_Polygon2D_set_polygons_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Polygon2D *>(ptr)->set_polygons(*arg1);
}

Array* godot_icall_Polygon2D_get_polygons_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Polygon2D *>(ptr)->get_polygons();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_Polygon2D_set_vertex_colors_22e90985(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolColorArray arg1_in = GDMonoMarshal::mono_array_to_PoolColorArray(arg1);
    static_cast<Polygon2D *>(ptr)->set_vertex_colors(arg1_in);
}

MonoArray* godot_icall_Polygon2D_get_vertex_colors_e048d8e7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Polygon2D *>(ptr)->get_vertex_colors();
    return GDMonoMarshal::PoolColorArray_to_mono_array(ret);
}

void godot_icall_Polygon2D_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Polygon2D *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_Polygon2D_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Polygon2D *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Polygon2D_set_texture_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Polygon2D *>(ptr)->set_texture_offset(arg1_in);
}

void godot_icall_Polygon2D_get_texture_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Polygon2D *>(ptr)->get_texture_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Polygon2D_set_texture_rotation_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Polygon2D *>(ptr)->set_texture_rotation(arg1_in);
}

void godot_icall_Polygon2D_get_texture_rotation_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Polygon2D *>(ptr)->get_texture_rotation();
    *arg_ret = (float)ret;
}

void godot_icall_Polygon2D_set_texture_rotation_degrees_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Polygon2D *>(ptr)->set_texture_rotation_degrees(arg1_in);
}

void godot_icall_Polygon2D_get_texture_rotation_degrees_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Polygon2D *>(ptr)->get_texture_rotation_degrees();
    *arg_ret = (float)ret;
}

void godot_icall_Polygon2D_set_texture_scale_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Polygon2D *>(ptr)->set_texture_scale(arg1_in);
}

void godot_icall_Polygon2D_get_texture_scale_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Polygon2D *>(ptr)->get_texture_scale();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Polygon2D_set_invert_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Polygon2D *>(ptr)->set_invert(arg1_in);
}

MonoBoolean godot_icall_Polygon2D_get_invert_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Polygon2D *>(ptr)->get_invert();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Polygon2D_set_antialiased_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Polygon2D *>(ptr)->set_antialiased(arg1_in);
}

MonoBoolean godot_icall_Polygon2D_get_antialiased_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Polygon2D *>(ptr)->get_antialiased();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Polygon2D_set_invert_border_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Polygon2D *>(ptr)->set_invert_border(arg1_in);
}

void godot_icall_Polygon2D_get_invert_border_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Polygon2D *>(ptr)->get_invert_border();
    *arg_ret = (float)ret;
}

void godot_icall_Polygon2D_set_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Polygon2D *>(ptr)->set_offset(arg1_in);
}

void godot_icall_Polygon2D_get_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Polygon2D *>(ptr)->get_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Polygon2D_add_bone_86b513d0(Object * ptr, NodePath* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL(ptr);
    PoolRealArray arg2_in = GDMonoMarshal::mono_array_to_PoolRealArray(arg2);
    static_cast<Polygon2D *>(ptr)->add_bone(*arg1, arg2_in);
}

int32_t godot_icall_Polygon2D_get_bone_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Polygon2D *>(ptr)->get_bone_count();
    return static_cast<int32_t>(ret);
}

NodePath* godot_icall_Polygon2D_get_bone_path_1640f2b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Polygon2D *>(ptr)->get_bone_path(arg1_in);
    return memnew(NodePath(ret));
}

MonoArray* godot_icall_Polygon2D_get_bone_weights_8a6351b5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Polygon2D *>(ptr)->get_bone_weights(arg1_in);
    return GDMonoMarshal::PoolRealArray_to_mono_array(ret);
}

void godot_icall_Polygon2D_erase_bone_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Polygon2D *>(ptr)->erase_bone(arg1_in);
}

void godot_icall_Polygon2D_clear_bones_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Polygon2D *>(ptr)->clear_bones();
}

void godot_icall_Polygon2D_set_bone_path_e024f6ac(Object * ptr, int32_t arg1, NodePath* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Polygon2D *>(ptr)->set_bone_path(arg1_in, *arg2);
}

void godot_icall_Polygon2D_set_bone_weights_53629f7e(Object * ptr, int32_t arg1, MonoArray* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    PoolRealArray arg2_in = GDMonoMarshal::mono_array_to_PoolRealArray(arg2);
    static_cast<Polygon2D *>(ptr)->set_bone_weights(arg1_in, arg2_in);
}

void godot_icall_Polygon2D_set_skeleton_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Polygon2D *>(ptr)->set_skeleton(*arg1);
}

NodePath* godot_icall_Polygon2D_get_skeleton_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Polygon2D *>(ptr)->get_skeleton();
    return memnew(NodePath(ret));
}

void godot_icall_Polygon2D_set_internal_vertex_count_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Polygon2D *>(ptr)->set_internal_vertex_count(arg1_in);
}

int32_t godot_icall_Polygon2D_get_internal_vertex_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Polygon2D *>(ptr)->get_internal_vertex_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_Polygon2D__set_bones_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Polygon2D *>(ptr)->_set_bones(*arg1);
}

Array* godot_icall_Polygon2D__get_bones_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Polygon2D *>(ptr)->_get_bones();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_Polygon2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Polygon2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_PolygonPathFinder_setup_28911a29(Object * ptr, MonoArray* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecInt(arg2);
    static_cast<PolygonPathFinder *>(ptr)->setup(arg1_in, arg2_in);
}

MonoArray* godot_icall_PolygonPathFinder_find_path_c24f2533(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    auto ret = static_cast<PolygonPathFinder *>(ptr)->find_path(arg1_in, arg2_in);
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

MonoArray* godot_icall_PolygonPathFinder_get_intersections_c24f2533(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    auto ret = static_cast<PolygonPathFinder *>(ptr)->get_intersections(arg1_in, arg2_in);
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

void godot_icall_PolygonPathFinder_get_closest_point_af4cfa54(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<PolygonPathFinder *>(ptr)->get_closest_point(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoBoolean godot_icall_PolygonPathFinder_is_point_inside_fba3d544(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<PolygonPathFinder *>(ptr)->is_point_inside(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PolygonPathFinder_set_point_penalty_708a76ed(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<PolygonPathFinder *>(ptr)->set_point_penalty(arg1_in, arg2_in);
}

void godot_icall_PolygonPathFinder_get_point_penalty_c671df3a(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PolygonPathFinder *>(ptr)->get_point_penalty(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_PolygonPathFinder_get_bounds_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PolygonPathFinder *>(ptr)->get_bounds();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_PolygonPathFinder__set_data_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PolygonPathFinder *>(ptr)->_set_data(*arg1);
}

Dictionary* godot_icall_PolygonPathFinder__get_data_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PolygonPathFinder *>(ptr)->_get_data();
    return memnew(Dictionary(ret));
}

Object* godot_icall_PolygonPathFinder_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PolygonPathFinder")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Popup_set_as_minsize_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Popup *>(ptr)->set_as_minsize();
}

void godot_icall_Popup_popup_centered_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Popup *>(ptr)->popup_centered(arg1_in);
}

void godot_icall_Popup_popup_centered_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Popup *>(ptr)->popup_centered_ratio(arg1_in);
}

void godot_icall_Popup_popup_centered_minsize_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Popup *>(ptr)->popup_centered_minsize(arg1_in);
}

void godot_icall_Popup_popup_centered_clamped_eb94adb7(Object * ptr, GDMonoMarshal::M_Vector2* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Popup *>(ptr)->popup_centered_clamped(arg1_in, arg2_in);
}

void godot_icall_Popup_popup_a5ed61f1(Object * ptr, GDMonoMarshal::M_Rect2* arg1) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    static_cast<Popup *>(ptr)->popup(arg1_in);
}

void godot_icall_Popup_set_exclusive_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Popup *>(ptr)->set_exclusive(arg1_in);
}

MonoBoolean godot_icall_Popup_is_exclusive_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Popup *>(ptr)->is_exclusive();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_Popup_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Popup")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_PopupDialog_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PopupDialog")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_PopupMenu_add_item_5602fe8d(Object * ptr, MonoString* arg1, int32_t arg2, uint32_t arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    uint32_t arg3_in = static_cast<uint32_t>(arg3);
    static_cast<PopupMenu *>(ptr)->add_item(arg1_in, arg2_in, arg3_in);
}

void godot_icall_PopupMenu_add_icon_item_8dc5d7c4(Object * ptr, Object * arg1, MonoString* arg2, int32_t arg3, uint32_t arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    int32_t arg3_in = static_cast<int32_t>(arg3);
    uint32_t arg4_in = static_cast<uint32_t>(arg4);
    static_cast<PopupMenu *>(ptr)->add_icon_item(AutoRef(arg1), arg2_in, arg3_in, arg4_in);
}

void godot_icall_PopupMenu_add_check_item_5602fe8d(Object * ptr, MonoString* arg1, int32_t arg2, uint32_t arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    uint32_t arg3_in = static_cast<uint32_t>(arg3);
    static_cast<PopupMenu *>(ptr)->add_check_item(arg1_in, arg2_in, arg3_in);
}

void godot_icall_PopupMenu_add_icon_check_item_8dc5d7c4(Object * ptr, Object * arg1, MonoString* arg2, int32_t arg3, uint32_t arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    int32_t arg3_in = static_cast<int32_t>(arg3);
    uint32_t arg4_in = static_cast<uint32_t>(arg4);
    static_cast<PopupMenu *>(ptr)->add_icon_check_item(AutoRef(arg1), arg2_in, arg3_in, arg4_in);
}

void godot_icall_PopupMenu_add_radio_check_item_5602fe8d(Object * ptr, MonoString* arg1, int32_t arg2, uint32_t arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    uint32_t arg3_in = static_cast<uint32_t>(arg3);
    static_cast<PopupMenu *>(ptr)->add_radio_check_item(arg1_in, arg2_in, arg3_in);
}

void godot_icall_PopupMenu_add_icon_radio_check_item_8dc5d7c4(Object * ptr, Object * arg1, MonoString* arg2, int32_t arg3, uint32_t arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    int32_t arg3_in = static_cast<int32_t>(arg3);
    uint32_t arg4_in = static_cast<uint32_t>(arg4);
    static_cast<PopupMenu *>(ptr)->add_icon_radio_check_item(AutoRef(arg1), arg2_in, arg3_in, arg4_in);
}

void godot_icall_PopupMenu_add_multistate_item_3365324b(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3, int32_t arg4, uint32_t arg5) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    uint32_t arg5_in = static_cast<uint32_t>(arg5);
    static_cast<PopupMenu *>(ptr)->add_multistate_item(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

void godot_icall_PopupMenu_add_shortcut_44ed075b(Object * ptr, Object * arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<PopupMenu *>(ptr)->add_shortcut(AutoRef(arg1), arg2_in, arg3_in);
}

void godot_icall_PopupMenu_add_icon_shortcut_909fe38f(Object * ptr, Object * arg1, Object * arg2, int32_t arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<PopupMenu *>(ptr)->add_icon_shortcut(AutoRef(arg1), AutoRef(arg2), arg3_in, arg4_in);
}

void godot_icall_PopupMenu_add_check_shortcut_44ed075b(Object * ptr, Object * arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<PopupMenu *>(ptr)->add_check_shortcut(AutoRef(arg1), arg2_in, arg3_in);
}

void godot_icall_PopupMenu_add_icon_check_shortcut_909fe38f(Object * ptr, Object * arg1, Object * arg2, int32_t arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<PopupMenu *>(ptr)->add_icon_check_shortcut(AutoRef(arg1), AutoRef(arg2), arg3_in, arg4_in);
}

void godot_icall_PopupMenu_add_radio_check_shortcut_44ed075b(Object * ptr, Object * arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<PopupMenu *>(ptr)->add_radio_check_shortcut(AutoRef(arg1), arg2_in, arg3_in);
}

void godot_icall_PopupMenu_add_icon_radio_check_shortcut_909fe38f(Object * ptr, Object * arg1, Object * arg2, int32_t arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<PopupMenu *>(ptr)->add_icon_radio_check_shortcut(AutoRef(arg1), AutoRef(arg2), arg3_in, arg4_in);
}

void godot_icall_PopupMenu_add_submenu_item_35cdaa2e(Object * ptr, MonoString* arg1, MonoString* arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<PopupMenu *>(ptr)->add_submenu_item(arg1_in, arg2_in, arg3_in);
}

void godot_icall_PopupMenu_set_item_text_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<PopupMenu *>(ptr)->set_item_text(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_set_item_icon_f20a84e(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PopupMenu *>(ptr)->set_item_icon(arg1_in, AutoRef(arg2));
}

void godot_icall_PopupMenu_set_item_checked_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PopupMenu *>(ptr)->set_item_checked(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_set_item_id_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<PopupMenu *>(ptr)->set_item_id(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_set_item_accelerator_76ba17c1(Object * ptr, int32_t arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<PopupMenu *>(ptr)->set_item_accelerator(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_set_item_metadata_37bef04(Object * ptr, int32_t arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<PopupMenu *>(ptr)->set_item_metadata(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_set_item_disabled_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PopupMenu *>(ptr)->set_item_disabled(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_set_item_submenu_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<PopupMenu *>(ptr)->set_item_submenu(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_set_item_as_separator_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PopupMenu *>(ptr)->set_item_as_separator(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_set_item_as_checkable_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PopupMenu *>(ptr)->set_item_as_checkable(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_set_item_as_radio_checkable_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PopupMenu *>(ptr)->set_item_as_radio_checkable(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_set_item_tooltip_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<PopupMenu *>(ptr)->set_item_tooltip(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_set_item_shortcut_afe18c3b(Object * ptr, int32_t arg1, Object * arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<PopupMenu *>(ptr)->set_item_shortcut(arg1_in, AutoRef(arg2), arg3_in);
}

void godot_icall_PopupMenu_set_item_multistate_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<PopupMenu *>(ptr)->set_item_multistate(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_set_item_shortcut_disabled_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<PopupMenu *>(ptr)->set_item_shortcut_disabled(arg1_in, arg2_in);
}

void godot_icall_PopupMenu_toggle_item_checked_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PopupMenu *>(ptr)->toggle_item_checked(arg1_in);
}

void godot_icall_PopupMenu_toggle_item_multistate_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PopupMenu *>(ptr)->toggle_item_multistate(arg1_in);
}

MonoString* godot_icall_PopupMenu_get_item_text_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->get_item_text(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoObject* godot_icall_PopupMenu_get_item_icon_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->get_item_icon(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoBoolean godot_icall_PopupMenu_is_item_checked_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->is_item_checked(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_PopupMenu_get_item_id_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->get_item_id(arg1_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_PopupMenu_get_item_index_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->get_item_index(arg1_in);
    return static_cast<int32_t>(ret);
}

uint32_t godot_icall_PopupMenu_get_item_accelerator_52dccd8b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->get_item_accelerator(arg1_in);
    return static_cast<uint32_t>(ret);
}

MonoObject* godot_icall_PopupMenu_get_item_metadata_a9b2673d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->get_item_metadata(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoBoolean godot_icall_PopupMenu_is_item_disabled_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->is_item_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_PopupMenu_get_item_submenu_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->get_item_submenu(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_PopupMenu_is_item_separator_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->is_item_separator(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_PopupMenu_is_item_checkable_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->is_item_checkable(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_PopupMenu_is_item_radio_checkable_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->is_item_radio_checkable(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_PopupMenu_is_item_shortcut_disabled_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->is_item_shortcut_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_PopupMenu_get_item_tooltip_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->get_item_tooltip(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoObject* godot_icall_PopupMenu_get_item_shortcut_7e5ddc5f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<PopupMenu *>(ptr)->get_item_shortcut(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_PopupMenu_get_item_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PopupMenu *>(ptr)->get_item_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_PopupMenu_remove_item_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PopupMenu *>(ptr)->remove_item(arg1_in);
}

void godot_icall_PopupMenu_add_separator_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<PopupMenu *>(ptr)->add_separator(arg1_in);
}

void godot_icall_PopupMenu_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<PopupMenu *>(ptr)->clear();
}

void godot_icall_PopupMenu__set_items_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PopupMenu *>(ptr)->_set_items(*arg1);
}

Array* godot_icall_PopupMenu__get_items_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PopupMenu *>(ptr)->_get_items();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_PopupMenu_set_hide_on_item_selection_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PopupMenu *>(ptr)->set_hide_on_item_selection(arg1_in);
}

MonoBoolean godot_icall_PopupMenu_is_hide_on_item_selection_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PopupMenu *>(ptr)->is_hide_on_item_selection();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PopupMenu_set_hide_on_checkable_item_selection_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PopupMenu *>(ptr)->set_hide_on_checkable_item_selection(arg1_in);
}

MonoBoolean godot_icall_PopupMenu_is_hide_on_checkable_item_selection_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PopupMenu *>(ptr)->is_hide_on_checkable_item_selection();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PopupMenu_set_hide_on_state_item_selection_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PopupMenu *>(ptr)->set_hide_on_multistate_item_selection(arg1_in);
}

MonoBoolean godot_icall_PopupMenu_is_hide_on_state_item_selection_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PopupMenu *>(ptr)->is_hide_on_multistate_item_selection();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PopupMenu_set_submenu_popup_delay_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PopupMenu *>(ptr)->set_submenu_popup_delay(arg1_in);
}

void godot_icall_PopupMenu_get_submenu_popup_delay_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PopupMenu *>(ptr)->get_submenu_popup_delay();
    *arg_ret = (float)ret;
}

void godot_icall_PopupMenu_set_hide_on_window_lose_focus_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PopupMenu *>(ptr)->set_hide_on_window_lose_focus(arg1_in);
}

MonoBoolean godot_icall_PopupMenu_is_hide_on_window_lose_focus_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PopupMenu *>(ptr)->is_hide_on_window_lose_focus();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PopupMenu_set_allow_search_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PopupMenu *>(ptr)->set_allow_search(arg1_in);
}

MonoBoolean godot_icall_PopupMenu_get_allow_search_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PopupMenu *>(ptr)->get_allow_search();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_PopupMenu_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PopupMenu")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_PopupPanel_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PopupPanel")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Position2D__set_gizmo_extents_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Position2D *>(ptr)->set_gizmo_extents(arg1_in);
}

void godot_icall_Position2D__get_gizmo_extents_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Position2D *>(ptr)->get_gizmo_extents();
    *arg_ret = (float)ret;
}

Object* godot_icall_Position2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Position2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_Position3D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Position3D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_PrimitiveMesh_set_material_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<PrimitiveMesh *>(ptr)->set_material(AutoRef(arg1));
}

MonoObject* godot_icall_PrimitiveMesh_get_material_6d04d9a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PrimitiveMesh *>(ptr)->get_material();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Array* godot_icall_PrimitiveMesh_get_mesh_arrays_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<PrimitiveMesh *>(ptr)->_get_mesh_arrays();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_PrimitiveMesh_set_custom_aabb_ff67b409(Object * ptr, GDMonoMarshal::M_AABB* arg1) {
    ERR_FAIL_NULL(ptr);
    AABB arg1_in = MARSHALLED_IN(AABB, arg1);
    static_cast<PrimitiveMesh *>(ptr)->set_custom_aabb(arg1_in);
}

void godot_icall_PrimitiveMesh_get_custom_aabb_2dbf935b(Object * ptr, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PrimitiveMesh *>(ptr)->get_custom_aabb();
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

void godot_icall_PrimitiveMesh_set_flip_faces_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<PrimitiveMesh *>(ptr)->set_flip_faces(arg1_in);
}

MonoBoolean godot_icall_PrimitiveMesh_get_flip_faces_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<PrimitiveMesh *>(ptr)->get_flip_faces();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_PrismMesh_set_left_to_right_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<PrismMesh *>(ptr)->set_left_to_right(arg1_in);
}

void godot_icall_PrismMesh_get_left_to_right_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PrismMesh *>(ptr)->get_left_to_right();
    *arg_ret = (float)ret;
}

void godot_icall_PrismMesh_set_size_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<PrismMesh *>(ptr)->set_size(arg1_in);
}

void godot_icall_PrismMesh_get_size_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<PrismMesh *>(ptr)->get_size();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_PrismMesh_set_subdivide_width_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PrismMesh *>(ptr)->set_subdivide_width(arg1_in);
}

int32_t godot_icall_PrismMesh_get_subdivide_width_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PrismMesh *>(ptr)->get_subdivide_width();
    return static_cast<int32_t>(ret);
}

void godot_icall_PrismMesh_set_subdivide_height_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PrismMesh *>(ptr)->set_subdivide_height(arg1_in);
}

int32_t godot_icall_PrismMesh_get_subdivide_height_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PrismMesh *>(ptr)->get_subdivide_height();
    return static_cast<int32_t>(ret);
}

void godot_icall_PrismMesh_set_subdivide_depth_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<PrismMesh *>(ptr)->set_subdivide_depth(arg1_in);
}

int32_t godot_icall_PrismMesh_get_subdivide_depth_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<PrismMesh *>(ptr)->get_subdivide_depth();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_PrismMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "PrismMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ProceduralSky_set_sky_top_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ProceduralSky *>(ptr)->set_sky_top_color(arg1_in);
}

void godot_icall_ProceduralSky_get_sky_top_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_sky_top_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_ProceduralSky_set_sky_horizon_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ProceduralSky *>(ptr)->set_sky_horizon_color(arg1_in);
}

void godot_icall_ProceduralSky_get_sky_horizon_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_sky_horizon_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_ProceduralSky_set_sky_curve_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ProceduralSky *>(ptr)->set_sky_curve(arg1_in);
}

void godot_icall_ProceduralSky_get_sky_curve_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_sky_curve();
    *arg_ret = (float)ret;
}

void godot_icall_ProceduralSky_set_sky_energy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ProceduralSky *>(ptr)->set_sky_energy(arg1_in);
}

void godot_icall_ProceduralSky_get_sky_energy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_sky_energy();
    *arg_ret = (float)ret;
}

void godot_icall_ProceduralSky_set_ground_bottom_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ProceduralSky *>(ptr)->set_ground_bottom_color(arg1_in);
}

void godot_icall_ProceduralSky_get_ground_bottom_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_ground_bottom_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_ProceduralSky_set_ground_horizon_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ProceduralSky *>(ptr)->set_ground_horizon_color(arg1_in);
}

void godot_icall_ProceduralSky_get_ground_horizon_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_ground_horizon_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_ProceduralSky_set_ground_curve_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ProceduralSky *>(ptr)->set_ground_curve(arg1_in);
}

void godot_icall_ProceduralSky_get_ground_curve_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_ground_curve();
    *arg_ret = (float)ret;
}

void godot_icall_ProceduralSky_set_ground_energy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ProceduralSky *>(ptr)->set_ground_energy(arg1_in);
}

void godot_icall_ProceduralSky_get_ground_energy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_ground_energy();
    *arg_ret = (float)ret;
}

void godot_icall_ProceduralSky_set_sun_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ProceduralSky *>(ptr)->set_sun_color(arg1_in);
}

void godot_icall_ProceduralSky_get_sun_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_sun_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_ProceduralSky_set_sun_latitude_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ProceduralSky *>(ptr)->set_sun_latitude(arg1_in);
}

void godot_icall_ProceduralSky_get_sun_latitude_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_sun_latitude();
    *arg_ret = (float)ret;
}

void godot_icall_ProceduralSky_set_sun_longitude_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ProceduralSky *>(ptr)->set_sun_longitude(arg1_in);
}

void godot_icall_ProceduralSky_get_sun_longitude_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_sun_longitude();
    *arg_ret = (float)ret;
}

void godot_icall_ProceduralSky_set_sun_angle_min_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ProceduralSky *>(ptr)->set_sun_angle_min(arg1_in);
}

void godot_icall_ProceduralSky_get_sun_angle_min_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_sun_angle_min();
    *arg_ret = (float)ret;
}

void godot_icall_ProceduralSky_set_sun_angle_max_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ProceduralSky *>(ptr)->set_sun_angle_max(arg1_in);
}

void godot_icall_ProceduralSky_get_sun_angle_max_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_sun_angle_max();
    *arg_ret = (float)ret;
}

void godot_icall_ProceduralSky_set_sun_curve_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ProceduralSky *>(ptr)->set_sun_curve(arg1_in);
}

void godot_icall_ProceduralSky_get_sun_curve_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_sun_curve();
    *arg_ret = (float)ret;
}

void godot_icall_ProceduralSky_set_sun_energy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ProceduralSky *>(ptr)->set_sun_energy(arg1_in);
}

void godot_icall_ProceduralSky_get_sun_energy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProceduralSky *>(ptr)->get_sun_energy();
    *arg_ret = (float)ret;
}

void godot_icall_ProceduralSky_set_texture_size_b73b85a5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<ProceduralSky *>(ptr)->set_texture_size((ProceduralSky::TextureSize)arg1_in);
}

int32_t godot_icall_ProceduralSky_get_texture_size_adb543e0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ProceduralSky *>(ptr)->get_texture_size();
    return (int32_t)ret;
}

Object* godot_icall_ProceduralSky_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ProceduralSky")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ProgressBar_set_percent_visible_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ProgressBar *>(ptr)->set_percent_visible(arg1_in);
}

MonoBoolean godot_icall_ProgressBar_is_percent_visible_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ProgressBar *>(ptr)->is_percent_visible();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_ProgressBar_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ProgressBar")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoBoolean godot_icall_ProjectSettings_has_setting_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ProjectSettings *>(ptr)->has_setting(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ProjectSettings_set_setting_3a208116(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<ProjectSettings *>(ptr)->set_setting(arg1_in, arg2_in);
}

MonoObject* godot_icall_ProjectSettings_get_setting_6732bfd8(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ProjectSettings *>(ptr)->get_setting(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_ProjectSettings_set_order_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<ProjectSettings *>(ptr)->set_order(arg1_in, arg2_in);
}

int32_t godot_icall_ProjectSettings_get_order_79b61600(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ProjectSettings *>(ptr)->get_order(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_ProjectSettings_set_initial_value_3a208116(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<ProjectSettings *>(ptr)->set_initial_value(arg1_in, arg2_in);
}

void godot_icall_ProjectSettings_add_property_info_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ProjectSettings *>(ptr)->_add_property_info_bind(*arg1);
}

void godot_icall_ProjectSettings_clear_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<ProjectSettings *>(ptr)->clear(arg1_in);
}

MonoString* godot_icall_ProjectSettings_localize_path_98465fb(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ProjectSettings *>(ptr)->localize_path(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_ProjectSettings_globalize_path_98465fb(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ProjectSettings *>(ptr)->globalize_path(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_ProjectSettings_save_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ProjectSettings *>(ptr)->save();
    return (int32_t)ret;
}

MonoBoolean godot_icall_ProjectSettings_load_resource_pack_4c6b6f39(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<ProjectSettings *>(ptr)->_load_resource_pack(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_ProjectSettings_property_can_revert_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ProjectSettings *>(ptr)->property_can_revert(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_ProjectSettings_property_get_revert_74ba5e9e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ProjectSettings *>(ptr)->property_get_revert(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

int32_t godot_icall_ProjectSettings_save_custom_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ProjectSettings *>(ptr)->save_custom(arg1_in);
    return (int32_t)ret;
}

Object* godot_icall_ProjectSettings_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("ProjectSettings");
}

void godot_icall_ProximityGroup_set_group_name_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<ProximityGroup *>(ptr)->set_group_name(arg1_in);
}

MonoString* godot_icall_ProximityGroup_get_group_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ProximityGroup *>(ptr)->get_group_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_ProximityGroup_set_dispatch_mode_93c07036(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<ProximityGroup *>(ptr)->set_dispatch_mode((ProximityGroup::DispatchMode)arg1_in);
}

int32_t godot_icall_ProximityGroup_get_dispatch_mode_21b30f61(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ProximityGroup *>(ptr)->get_dispatch_mode();
    return (int32_t)ret;
}

void godot_icall_ProximityGroup_set_grid_radius_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<ProximityGroup *>(ptr)->set_grid_radius(arg1_in);
}

void godot_icall_ProximityGroup_get_grid_radius_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ProximityGroup *>(ptr)->get_grid_radius();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_ProximityGroup_broadcast_4a9ec68e(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<ProximityGroup *>(ptr)->broadcast(arg1_in, arg2_in);
}

Object* godot_icall_ProximityGroup_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ProximityGroup")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ProxyTexture_set_base_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ProxyTexture *>(ptr)->set_base(AutoRef(arg1));
}

MonoObject* godot_icall_ProxyTexture_get_base_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ProxyTexture *>(ptr)->get_base();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_ProxyTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ProxyTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_QuadMesh_set_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<QuadMesh *>(ptr)->set_size(arg1_in);
}

void godot_icall_QuadMesh_get_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<QuadMesh *>(ptr)->get_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

Object* godot_icall_QuadMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "QuadMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_RandomNumberGenerator_set_seed_9d9e6424(Object * ptr, uint64_t* arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = static_cast<int64_t>(*arg1);
    static_cast<RandomNumberGenerator *>(ptr)->set_seed(arg1_in);
}

void godot_icall_RandomNumberGenerator_get_seed_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RandomNumberGenerator *>(ptr)->get_seed();
    *arg_ret = (uint64_t)ret;
}

uint32_t godot_icall_RandomNumberGenerator_randi_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<RandomNumberGenerator *>(ptr)->randi();
    return static_cast<uint32_t>(ret);
}

void godot_icall_RandomNumberGenerator_randf_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RandomNumberGenerator *>(ptr)->randf();
    *arg_ret = (float)ret;
}

void godot_icall_RandomNumberGenerator_randfn_14e8e20e(Object * ptr, float* arg1, float* arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<RandomNumberGenerator *>(ptr)->randfn(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

void godot_icall_RandomNumberGenerator_randf_range_14e8e20e(Object * ptr, float* arg1, float* arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    float arg1_in = static_cast<float>(*arg1);
    float arg2_in = static_cast<float>(*arg2);
    auto ret = static_cast<RandomNumberGenerator *>(ptr)->randf_range(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

int32_t godot_icall_RandomNumberGenerator_randi_range_4170d7f7(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<RandomNumberGenerator *>(ptr)->randi_range(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_RandomNumberGenerator_randomize_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RandomNumberGenerator *>(ptr)->randomize();
}

Object* godot_icall_RandomNumberGenerator_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RandomNumberGenerator")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Range_get_value_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Range *>(ptr)->get_value();
    *arg_ret = (float)ret;
}

void godot_icall_Range_get_min_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Range *>(ptr)->get_min();
    *arg_ret = (float)ret;
}

void godot_icall_Range_get_max_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Range *>(ptr)->get_max();
    *arg_ret = (float)ret;
}

void godot_icall_Range_get_step_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Range *>(ptr)->get_step();
    *arg_ret = (float)ret;
}

void godot_icall_Range_get_page_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Range *>(ptr)->get_page();
    *arg_ret = (float)ret;
}

void godot_icall_Range_get_as_ratio_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Range *>(ptr)->get_as_ratio();
    *arg_ret = (float)ret;
}

void godot_icall_Range_set_value_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Range *>(ptr)->set_value(arg1_in);
}

void godot_icall_Range_set_min_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Range *>(ptr)->set_min(arg1_in);
}

void godot_icall_Range_set_max_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Range *>(ptr)->set_max(arg1_in);
}

void godot_icall_Range_set_step_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Range *>(ptr)->set_step(arg1_in);
}

void godot_icall_Range_set_page_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Range *>(ptr)->set_page(arg1_in);
}

void godot_icall_Range_set_as_ratio_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Range *>(ptr)->set_as_ratio(arg1_in);
}

void godot_icall_Range_set_use_rounded_values_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Range *>(ptr)->set_use_rounded_values(arg1_in);
}

MonoBoolean godot_icall_Range_is_using_rounded_values_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Range *>(ptr)->is_using_rounded_values();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Range_set_exp_ratio_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Range *>(ptr)->set_exp_ratio(arg1_in);
}

MonoBoolean godot_icall_Range_is_ratio_exp_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Range *>(ptr)->is_ratio_exp();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Range_set_allow_greater_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Range *>(ptr)->set_allow_greater(arg1_in);
}

MonoBoolean godot_icall_Range_is_greater_allowed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Range *>(ptr)->is_greater_allowed();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Range_set_allow_lesser_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Range *>(ptr)->set_allow_lesser(arg1_in);
}

MonoBoolean godot_icall_Range_is_lesser_allowed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Range *>(ptr)->is_lesser_allowed();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Range_share_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Range *>(ptr)->_share((Node*)arg1);
}

void godot_icall_Range_unshare_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Range *>(ptr)->unshare();
}

void godot_icall_RayCast_set_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RayCast *>(ptr)->set_enabled(arg1_in);
}

MonoBoolean godot_icall_RayCast_is_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RayCast *>(ptr)->is_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RayCast_set_cast_to_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<RayCast *>(ptr)->set_cast_to(arg1_in);
}

void godot_icall_RayCast_get_cast_to_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RayCast *>(ptr)->get_cast_to();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

MonoBoolean godot_icall_RayCast_is_colliding_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RayCast *>(ptr)->is_colliding();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RayCast_force_raycast_update_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RayCast *>(ptr)->force_raycast_update();
}

MonoObject* godot_icall_RayCast_get_collider_5bd95814(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RayCast *>(ptr)->get_collider();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_RayCast_get_collider_shape_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RayCast *>(ptr)->get_collider_shape();
    return static_cast<int32_t>(ret);
}

void godot_icall_RayCast_get_collision_point_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RayCast *>(ptr)->get_collision_point();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_RayCast_get_collision_normal_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RayCast *>(ptr)->get_collision_normal();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_RayCast_add_exception_rid_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RayCast *>(ptr)->add_exception_rid(*arg1);
}

void godot_icall_RayCast_add_exception_ad798950(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RayCast *>(ptr)->add_exception((Object*)arg1);
}

void godot_icall_RayCast_remove_exception_rid_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RayCast *>(ptr)->remove_exception_rid(*arg1);
}

void godot_icall_RayCast_remove_exception_ad798950(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RayCast *>(ptr)->remove_exception((Object*)arg1);
}

void godot_icall_RayCast_clear_exceptions_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RayCast *>(ptr)->clear_exceptions();
}

void godot_icall_RayCast_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<RayCast *>(ptr)->set_collision_mask(arg1_in);
}

uint32_t godot_icall_RayCast_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<RayCast *>(ptr)->get_collision_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_RayCast_set_collision_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<RayCast *>(ptr)->set_collision_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_RayCast_get_collision_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<RayCast *>(ptr)->get_collision_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RayCast_set_exclude_parent_body_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RayCast *>(ptr)->set_exclude_parent_body(arg1_in);
}

MonoBoolean godot_icall_RayCast_get_exclude_parent_body_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RayCast *>(ptr)->get_exclude_parent_body();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RayCast_set_collide_with_areas_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RayCast *>(ptr)->set_collide_with_areas(arg1_in);
}

MonoBoolean godot_icall_RayCast_is_collide_with_areas_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RayCast *>(ptr)->is_collide_with_areas_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RayCast_set_collide_with_bodies_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RayCast *>(ptr)->set_collide_with_bodies(arg1_in);
}

MonoBoolean godot_icall_RayCast_is_collide_with_bodies_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RayCast *>(ptr)->is_collide_with_bodies_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_RayCast_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RayCast")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_RayCast2D_set_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RayCast2D *>(ptr)->set_enabled(arg1_in);
}

MonoBoolean godot_icall_RayCast2D_is_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RayCast2D *>(ptr)->is_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RayCast2D_set_cast_to_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<RayCast2D *>(ptr)->set_cast_to(arg1_in);
}

void godot_icall_RayCast2D_get_cast_to_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RayCast2D *>(ptr)->get_cast_to();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoBoolean godot_icall_RayCast2D_is_colliding_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RayCast2D *>(ptr)->is_colliding();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RayCast2D_force_raycast_update_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RayCast2D *>(ptr)->force_raycast_update();
}

MonoObject* godot_icall_RayCast2D_get_collider_5bd95814(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RayCast2D *>(ptr)->get_collider();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_RayCast2D_get_collider_shape_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RayCast2D *>(ptr)->get_collider_shape();
    return static_cast<int32_t>(ret);
}

void godot_icall_RayCast2D_get_collision_point_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RayCast2D *>(ptr)->get_collision_point();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_RayCast2D_get_collision_normal_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RayCast2D *>(ptr)->get_collision_normal();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_RayCast2D_add_exception_rid_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RayCast2D *>(ptr)->add_exception_rid(*arg1);
}

void godot_icall_RayCast2D_add_exception_ad798950(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RayCast2D *>(ptr)->add_exception((Object*)arg1);
}

void godot_icall_RayCast2D_remove_exception_rid_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RayCast2D *>(ptr)->remove_exception_rid(*arg1);
}

void godot_icall_RayCast2D_remove_exception_ad798950(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RayCast2D *>(ptr)->remove_exception((Object*)arg1);
}

void godot_icall_RayCast2D_clear_exceptions_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RayCast2D *>(ptr)->clear_exceptions();
}

void godot_icall_RayCast2D_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<RayCast2D *>(ptr)->set_collision_mask(arg1_in);
}

uint32_t godot_icall_RayCast2D_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<RayCast2D *>(ptr)->get_collision_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_RayCast2D_set_collision_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<RayCast2D *>(ptr)->set_collision_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_RayCast2D_get_collision_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<RayCast2D *>(ptr)->get_collision_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RayCast2D_set_exclude_parent_body_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RayCast2D *>(ptr)->set_exclude_parent_body(arg1_in);
}

MonoBoolean godot_icall_RayCast2D_get_exclude_parent_body_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RayCast2D *>(ptr)->get_exclude_parent_body();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RayCast2D_set_collide_with_areas_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RayCast2D *>(ptr)->set_collide_with_areas(arg1_in);
}

MonoBoolean godot_icall_RayCast2D_is_collide_with_areas_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RayCast2D *>(ptr)->is_collide_with_areas_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RayCast2D_set_collide_with_bodies_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RayCast2D *>(ptr)->set_collide_with_bodies(arg1_in);
}

MonoBoolean godot_icall_RayCast2D_is_collide_with_bodies_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RayCast2D *>(ptr)->is_collide_with_bodies_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_RayCast2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RayCast2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_RayShape_set_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RayShape *>(ptr)->set_length(arg1_in);
}

void godot_icall_RayShape_get_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RayShape *>(ptr)->get_length();
    *arg_ret = (float)ret;
}

void godot_icall_RayShape_set_slips_on_slope_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RayShape *>(ptr)->set_slips_on_slope(arg1_in);
}

MonoBoolean godot_icall_RayShape_get_slips_on_slope_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RayShape *>(ptr)->get_slips_on_slope();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_RayShape_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RayShape")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_RayShape2D_set_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RayShape2D *>(ptr)->set_length(arg1_in);
}

void godot_icall_RayShape2D_get_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RayShape2D *>(ptr)->get_length();
    *arg_ret = (float)ret;
}

void godot_icall_RayShape2D_set_slips_on_slope_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RayShape2D *>(ptr)->set_slips_on_slope(arg1_in);
}

MonoBoolean godot_icall_RayShape2D_get_slips_on_slope_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RayShape2D *>(ptr)->get_slips_on_slope();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_RayShape2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RayShape2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_RectangleShape2D_set_extents_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<RectangleShape2D *>(ptr)->set_extents(arg1_in);
}

void godot_icall_RectangleShape2D_get_extents_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RectangleShape2D *>(ptr)->get_extents();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

Object* godot_icall_RectangleShape2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RectangleShape2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoBoolean godot_icall_RefCounted_init_ref_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RefCounted *>(ptr)->init_ref();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_RefCounted_reference_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RefCounted *>(ptr)->reference();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_RefCounted_unreference_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RefCounted *>(ptr)->unreference();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_RefCounted_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RefCounted")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ReferenceRect_get_border_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ReferenceRect *>(ptr)->get_border_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_ReferenceRect_set_border_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ReferenceRect *>(ptr)->set_border_color(arg1_in);
}

MonoBoolean godot_icall_ReferenceRect_get_editor_only_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ReferenceRect *>(ptr)->get_editor_only();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ReferenceRect_set_editor_only_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ReferenceRect *>(ptr)->set_editor_only(arg1_in);
}

Object* godot_icall_ReferenceRect_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ReferenceRect")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ReflectionProbe_set_intensity_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ReflectionProbe *>(ptr)->set_intensity(arg1_in);
}

void godot_icall_ReflectionProbe_get_intensity_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ReflectionProbe *>(ptr)->get_intensity();
    *arg_ret = (float)ret;
}

void godot_icall_ReflectionProbe_set_interior_ambient_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<ReflectionProbe *>(ptr)->set_interior_ambient(arg1_in);
}

void godot_icall_ReflectionProbe_get_interior_ambient_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ReflectionProbe *>(ptr)->get_interior_ambient();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_ReflectionProbe_set_interior_ambient_energy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ReflectionProbe *>(ptr)->set_interior_ambient_energy(arg1_in);
}

void godot_icall_ReflectionProbe_get_interior_ambient_energy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ReflectionProbe *>(ptr)->get_interior_ambient_energy();
    *arg_ret = (float)ret;
}

void godot_icall_ReflectionProbe_set_interior_ambient_probe_contribution_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ReflectionProbe *>(ptr)->set_interior_ambient_probe_contribution(arg1_in);
}

void godot_icall_ReflectionProbe_get_interior_ambient_probe_contribution_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ReflectionProbe *>(ptr)->get_interior_ambient_probe_contribution();
    *arg_ret = (float)ret;
}

void godot_icall_ReflectionProbe_set_max_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ReflectionProbe *>(ptr)->set_max_distance(arg1_in);
}

void godot_icall_ReflectionProbe_get_max_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ReflectionProbe *>(ptr)->get_max_distance();
    *arg_ret = (float)ret;
}

void godot_icall_ReflectionProbe_set_extents_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<ReflectionProbe *>(ptr)->set_extents(arg1_in);
}

void godot_icall_ReflectionProbe_get_extents_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ReflectionProbe *>(ptr)->get_extents();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_ReflectionProbe_set_origin_offset_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<ReflectionProbe *>(ptr)->set_origin_offset(arg1_in);
}

void godot_icall_ReflectionProbe_get_origin_offset_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ReflectionProbe *>(ptr)->get_origin_offset();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_ReflectionProbe_set_as_interior_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ReflectionProbe *>(ptr)->set_as_interior(arg1_in);
}

MonoBoolean godot_icall_ReflectionProbe_is_set_as_interior_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ReflectionProbe *>(ptr)->is_set_as_interior();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ReflectionProbe_set_enable_box_projection_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ReflectionProbe *>(ptr)->set_enable_box_projection(arg1_in);
}

MonoBoolean godot_icall_ReflectionProbe_is_box_projection_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ReflectionProbe *>(ptr)->is_box_projection_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ReflectionProbe_set_enable_shadows_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ReflectionProbe *>(ptr)->set_enable_shadows(arg1_in);
}

MonoBoolean godot_icall_ReflectionProbe_are_shadows_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ReflectionProbe *>(ptr)->are_shadows_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ReflectionProbe_set_cull_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<ReflectionProbe *>(ptr)->set_cull_mask(arg1_in);
}

uint32_t godot_icall_ReflectionProbe_get_cull_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<ReflectionProbe *>(ptr)->get_cull_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_ReflectionProbe_set_update_mode_69d4d73c(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<ReflectionProbe *>(ptr)->set_update_mode((ReflectionProbe::UpdateMode)arg1_in);
}

int32_t godot_icall_ReflectionProbe_get_update_mode_7fa6cd9f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ReflectionProbe *>(ptr)->get_update_mode();
    return (int32_t)ret;
}

Object* godot_icall_ReflectionProbe_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ReflectionProbe")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_RegEx_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RegEx *>(ptr)->clear();
}

int32_t godot_icall_RegEx_compile_73262d91(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<RegEx *>(ptr)->compile(arg1_in);
    return (int32_t)ret;
}

MonoObject* godot_icall_RegEx_search_4900fe29(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<RegEx *>(ptr)->search(arg1_in, arg2_in, arg3_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Array* godot_icall_RegEx_search_all_b63565b6(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<RegEx *>(ptr)->search_all(arg1_in, arg2_in, arg3_in);
    return memnew(Array(Variant::from(ret)));
}

MonoString* godot_icall_RegEx_sub_7152c05(Object * ptr, MonoString* arg1, MonoString* arg2, MonoBoolean arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL_V(ptr, NULL);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    String arg2_in = GDMonoMarshal::mono_string_to_godot(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    auto ret = static_cast<RegEx *>(ptr)->sub(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_RegEx_is_valid_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RegEx *>(ptr)->is_valid();
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_RegEx_get_pattern_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RegEx *>(ptr)->get_pattern();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_RegEx_get_group_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RegEx *>(ptr)->get_group_count();
    return static_cast<int32_t>(ret);
}

Array* godot_icall_RegEx_get_names_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RegEx *>(ptr)->get_names();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_RegEx_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RegEx")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoString* godot_icall_RegExMatch_get_subject_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RegExMatch *>(ptr)->get_subject();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_RegExMatch_get_group_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RegExMatch *>(ptr)->get_group_count();
    return static_cast<int32_t>(ret);
}

Dictionary* godot_icall_RegExMatch_get_names_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RegExMatch *>(ptr)->get_names();
    return memnew(Dictionary(ret));
}

Array* godot_icall_RegExMatch_get_strings_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RegExMatch *>(ptr)->get_strings();
    return memnew(Array(Variant::from(ret)));
}

MonoString* godot_icall_RegExMatch_get_string_c3f94cfa(Object * ptr, MonoObject* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    auto ret = static_cast<RegExMatch *>(ptr)->get_string(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_RegExMatch_get_start_374adec5(Object * ptr, MonoObject* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    auto ret = static_cast<RegExMatch *>(ptr)->get_start(arg1_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_RegExMatch_get_end_374adec5(Object * ptr, MonoObject* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    auto ret = static_cast<RegExMatch *>(ptr)->get_end(arg1_in);
    return static_cast<int32_t>(ret);
}

Object* godot_icall_RegExMatch_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RegExMatch")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_RemoteTransform_set_remote_node_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RemoteTransform *>(ptr)->set_remote_node(*arg1);
}

NodePath* godot_icall_RemoteTransform_get_remote_node_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RemoteTransform *>(ptr)->get_remote_node();
    return memnew(NodePath(ret));
}

void godot_icall_RemoteTransform_force_update_cache_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RemoteTransform *>(ptr)->force_update_cache();
}

void godot_icall_RemoteTransform_set_use_global_coordinates_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RemoteTransform *>(ptr)->set_use_global_coordinates(arg1_in);
}

MonoBoolean godot_icall_RemoteTransform_get_use_global_coordinates_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RemoteTransform *>(ptr)->get_use_global_coordinates();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RemoteTransform_set_update_position_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RemoteTransform *>(ptr)->set_update_position(arg1_in);
}

MonoBoolean godot_icall_RemoteTransform_get_update_position_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RemoteTransform *>(ptr)->get_update_position();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RemoteTransform_set_update_rotation_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RemoteTransform *>(ptr)->set_update_rotation(arg1_in);
}

MonoBoolean godot_icall_RemoteTransform_get_update_rotation_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RemoteTransform *>(ptr)->get_update_rotation();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RemoteTransform_set_update_scale_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RemoteTransform *>(ptr)->set_update_scale(arg1_in);
}

MonoBoolean godot_icall_RemoteTransform_get_update_scale_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RemoteTransform *>(ptr)->get_update_scale();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_RemoteTransform_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RemoteTransform")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_RemoteTransform2D_set_remote_node_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RemoteTransform2D *>(ptr)->set_remote_node(*arg1);
}

NodePath* godot_icall_RemoteTransform2D_get_remote_node_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RemoteTransform2D *>(ptr)->get_remote_node();
    return memnew(NodePath(ret));
}

void godot_icall_RemoteTransform2D_force_update_cache_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RemoteTransform2D *>(ptr)->force_update_cache();
}

void godot_icall_RemoteTransform2D_set_use_global_coordinates_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RemoteTransform2D *>(ptr)->set_use_global_coordinates(arg1_in);
}

MonoBoolean godot_icall_RemoteTransform2D_get_use_global_coordinates_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RemoteTransform2D *>(ptr)->get_use_global_coordinates();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RemoteTransform2D_set_update_position_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RemoteTransform2D *>(ptr)->set_update_position(arg1_in);
}

MonoBoolean godot_icall_RemoteTransform2D_get_update_position_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RemoteTransform2D *>(ptr)->get_update_position();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RemoteTransform2D_set_update_rotation_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RemoteTransform2D *>(ptr)->set_update_rotation(arg1_in);
}

MonoBoolean godot_icall_RemoteTransform2D_get_update_rotation_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RemoteTransform2D *>(ptr)->get_update_rotation();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RemoteTransform2D_set_update_scale_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RemoteTransform2D *>(ptr)->set_update_scale(arg1_in);
}

MonoBoolean godot_icall_RemoteTransform2D_get_update_scale_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RemoteTransform2D *>(ptr)->get_update_scale();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_RemoteTransform2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RemoteTransform2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Resource_set_path_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Resource *>(ptr)->set_path(arg1_in);
}

void godot_icall_Resource_take_over_path_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Resource *>(ptr)->set_path(arg1_in,true);
}

MonoString* godot_icall_Resource_get_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Resource *>(ptr)->get_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Resource_set_name_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Resource *>(ptr)->set_name(arg1_in);
}

MonoString* godot_icall_Resource_get_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Resource *>(ptr)->get_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

RID* godot_icall_Resource_get_rid_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Resource *>(ptr)->get_rid();
    return memnew(RID(ret));
}

void godot_icall_Resource_set_local_to_scene_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Resource *>(ptr)->set_local_to_scene(arg1_in);
}

MonoBoolean godot_icall_Resource_is_local_to_scene_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Resource *>(ptr)->is_local_to_scene();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Resource_get_local_scene_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Resource *>(ptr)->get_local_scene();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_Resource_setup_local_to_scene_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Resource *>(ptr)->setup_local_to_scene();
}

MonoObject* godot_icall_Resource_duplicate_571ccc89(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<Resource *>(ptr)->duplicate(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_Resource_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Resource")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_ResourceFormatLoader_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ResourceFormatLoader")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_ResourceFormatSaver_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ResourceFormatSaver")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoObject* godot_icall_ResourceInteractiveLoader_get_resource_c567ae79(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ResourceInteractiveLoader *>(ptr)->get_resource();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_ResourceInteractiveLoader_poll_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ResourceInteractiveLoader *>(ptr)->poll();
    return (int32_t)ret;
}

int32_t godot_icall_ResourceInteractiveLoader_wait_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ResourceInteractiveLoader *>(ptr)->wait();
    return (int32_t)ret;
}

int32_t godot_icall_ResourceInteractiveLoader_get_stage_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ResourceInteractiveLoader *>(ptr)->get_stage();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_ResourceInteractiveLoader_get_stage_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ResourceInteractiveLoader *>(ptr)->get_stage_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_ResourcePreloader__set_resources_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ResourcePreloader *>(ptr)->_set_resources(*arg1);
}

Array* godot_icall_ResourcePreloader__get_resources_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ResourcePreloader *>(ptr)->_get_resources();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_ResourcePreloader_add_resource_16ca4061(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<ResourcePreloader *>(ptr)->add_resource(arg1_in, AutoRef(arg2));
}

void godot_icall_ResourcePreloader_remove_resource_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<ResourcePreloader *>(ptr)->remove_resource(arg1_in);
}

void godot_icall_ResourcePreloader_rename_resource_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<ResourcePreloader *>(ptr)->rename_resource(arg1_in, arg2_in);
}

MonoBoolean godot_icall_ResourcePreloader_has_resource_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ResourcePreloader *>(ptr)->has_resource(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_ResourcePreloader_get_resource_c2e1949b(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ResourcePreloader *>(ptr)->get_resource(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoArray* godot_icall_ResourcePreloader_get_resource_list_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ResourcePreloader *>(ptr)->_get_resource_list();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

Object* godot_icall_ResourcePreloader_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ResourcePreloader")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_RichTextEffect_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RichTextEffect")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoString* godot_icall_RichTextLabel_get_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RichTextLabel *>(ptr)->get_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_RichTextLabel_add_text_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<RichTextLabel *>(ptr)->add_text(arg1_in);
}

void godot_icall_RichTextLabel_set_text_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<RichTextLabel *>(ptr)->set_text_utf8(arg1_in);
}

void godot_icall_RichTextLabel_add_image_6e5fd163(Object * ptr, Object * arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<RichTextLabel *>(ptr)->add_image(AutoRef(arg1), arg2_in, arg3_in);
}

void godot_icall_RichTextLabel_newline_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->add_newline();
}

MonoBoolean godot_icall_RichTextLabel_remove_line_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<RichTextLabel *>(ptr)->remove_line(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RichTextLabel_push_font_ea9e5ee2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->push_font(AutoRef(arg1));
}

void godot_icall_RichTextLabel_push_normal_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->push_normal();
}

void godot_icall_RichTextLabel_push_bold_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->push_bold();
}

void godot_icall_RichTextLabel_push_bold_italics_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->push_bold_italics();
}

void godot_icall_RichTextLabel_push_italics_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->push_italics();
}

void godot_icall_RichTextLabel_push_mono_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->push_mono();
}

void godot_icall_RichTextLabel_push_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<RichTextLabel *>(ptr)->push_color(arg1_in);
}

void godot_icall_RichTextLabel_push_align_d1cbb6bb(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<RichTextLabel *>(ptr)->push_align((RichTextLabel::Align)arg1_in);
}

void godot_icall_RichTextLabel_push_indent_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<RichTextLabel *>(ptr)->push_indent(arg1_in);
}

void godot_icall_RichTextLabel_push_list_6a9e6e22(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<RichTextLabel *>(ptr)->push_list((RichTextLabel::ListType)arg1_in);
}

void godot_icall_RichTextLabel_push_meta_62b5905c(Object * ptr, MonoObject* arg1) {
    ERR_FAIL_NULL(ptr);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    static_cast<RichTextLabel *>(ptr)->push_meta(arg1_in);
}

void godot_icall_RichTextLabel_push_underline_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->push_underline();
}

void godot_icall_RichTextLabel_push_strikethrough_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->push_strikethrough();
}

void godot_icall_RichTextLabel_push_table_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<RichTextLabel *>(ptr)->push_table(arg1_in);
}

void godot_icall_RichTextLabel_set_table_column_expand_c05129e5(Object * ptr, int32_t arg1, MonoBoolean arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<RichTextLabel *>(ptr)->set_table_column_expand(arg1_in, arg2_in, arg3_in);
}

void godot_icall_RichTextLabel_push_cell_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->push_cell();
}

void godot_icall_RichTextLabel_pop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->pop();
}

void godot_icall_RichTextLabel_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->clear();
}

void godot_icall_RichTextLabel_set_meta_underline_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RichTextLabel *>(ptr)->set_meta_underline(arg1_in);
}

MonoBoolean godot_icall_RichTextLabel_is_meta_underlined_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RichTextLabel *>(ptr)->is_meta_underlined();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RichTextLabel_set_override_selected_font_color_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RichTextLabel *>(ptr)->set_override_selected_font_color(arg1_in);
}

MonoBoolean godot_icall_RichTextLabel_is_overriding_selected_font_color_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RichTextLabel *>(ptr)->is_overriding_selected_font_color();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RichTextLabel_set_scroll_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RichTextLabel *>(ptr)->set_scroll_active(arg1_in);
}

MonoBoolean godot_icall_RichTextLabel_is_scroll_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RichTextLabel *>(ptr)->is_scroll_active();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RichTextLabel_set_scroll_follow_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RichTextLabel *>(ptr)->set_scroll_follow(arg1_in);
}

MonoBoolean godot_icall_RichTextLabel_is_scroll_following_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RichTextLabel *>(ptr)->is_scroll_following();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_RichTextLabel_get_v_scroll_37ab5951(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RichTextLabel *>(ptr)->get_v_scroll();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_RichTextLabel_scroll_to_line_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<RichTextLabel *>(ptr)->scroll_to_line(arg1_in);
}

void godot_icall_RichTextLabel_set_tab_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<RichTextLabel *>(ptr)->set_tab_size(arg1_in);
}

int32_t godot_icall_RichTextLabel_get_tab_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RichTextLabel *>(ptr)->get_tab_size();
    return static_cast<int32_t>(ret);
}

void godot_icall_RichTextLabel_set_selection_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RichTextLabel *>(ptr)->set_selection_enabled(arg1_in);
}

MonoBoolean godot_icall_RichTextLabel_is_selection_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RichTextLabel *>(ptr)->is_selection_enabled();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_RichTextLabel_parse_bbcode_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<RichTextLabel *>(ptr)->parse_bbcode(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_RichTextLabel_append_bbcode_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<RichTextLabel *>(ptr)->append_bbcode(arg1_in);
    return (int32_t)ret;
}

void godot_icall_RichTextLabel_set_bbcode_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<RichTextLabel *>(ptr)->set_bbcode(arg1_in);
}

MonoString* godot_icall_RichTextLabel_get_bbcode_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RichTextLabel *>(ptr)->get_bbcode();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_RichTextLabel_set_visible_characters_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<RichTextLabel *>(ptr)->set_visible_characters(arg1_in);
}

int32_t godot_icall_RichTextLabel_get_visible_characters_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RichTextLabel *>(ptr)->get_visible_characters();
    return static_cast<int32_t>(ret);
}

void godot_icall_RichTextLabel_set_percent_visible_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RichTextLabel *>(ptr)->set_percent_visible(arg1_in);
}

void godot_icall_RichTextLabel_get_percent_visible_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RichTextLabel *>(ptr)->get_percent_visible();
    *arg_ret = (float)ret;
}

int32_t godot_icall_RichTextLabel_get_total_character_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RichTextLabel *>(ptr)->get_total_character_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_RichTextLabel_set_use_bbcode_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RichTextLabel *>(ptr)->set_use_bbcode(arg1_in);
}

MonoBoolean godot_icall_RichTextLabel_is_using_bbcode_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RichTextLabel *>(ptr)->is_using_bbcode();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_RichTextLabel_get_line_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RichTextLabel *>(ptr)->get_line_count();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_RichTextLabel_get_visible_line_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RichTextLabel *>(ptr)->get_visible_line_count();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_RichTextLabel_get_content_height_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RichTextLabel *>(ptr)->get_content_height();
    return static_cast<int32_t>(ret);
}

Dictionary* godot_icall_RichTextLabel_parse_expressions_for_values_8a00ce5a(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    PoolStringArray arg1_in = GDMonoMarshal::mono_array_to_PoolStringArray(arg1);
    auto ret = static_cast<RichTextLabel *>(ptr)->parse_expressions_for_values(arg1_in);
    return memnew(Dictionary(ret));
}

void godot_icall_RichTextLabel_set_effects_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RichTextLabel *>(ptr)->set_effects(arg1->vals());
}

Array* godot_icall_RichTextLabel_get_effects_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RichTextLabel *>(ptr)->get_effects();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_RichTextLabel_install_effect_62b5905c(Object * ptr, MonoObject* arg1) {
    ERR_FAIL_NULL(ptr);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    static_cast<RichTextLabel *>(ptr)->install_effect(arg1_in);
}

Object* godot_icall_RichTextLabel_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RichTextLabel")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_RigidBody_set_mode_50f23ea3(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<RigidBody *>(ptr)->set_mode((RigidBody::Mode)arg1_in);
}

int32_t godot_icall_RigidBody_get_mode_8b96c86e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RigidBody *>(ptr)->get_mode();
    return (int32_t)ret;
}

void godot_icall_RigidBody_set_mass_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody *>(ptr)->set_mass(arg1_in);
}

void godot_icall_RigidBody_get_mass_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody *>(ptr)->get_mass();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody_set_weight_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody *>(ptr)->set_weight(arg1_in);
}

void godot_icall_RigidBody_get_weight_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody *>(ptr)->get_weight();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody_set_physics_material_override_e4d5a435(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RigidBody *>(ptr)->set_physics_material_override(AutoRef(arg1));
}

MonoObject* godot_icall_RigidBody_get_physics_material_override_226d8337(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RigidBody *>(ptr)->get_physics_material_override();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_RigidBody_set_linear_velocity_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<RigidBody *>(ptr)->set_linear_velocity(arg1_in);
}

void godot_icall_RigidBody_get_linear_velocity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody *>(ptr)->get_linear_velocity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_RigidBody_set_angular_velocity_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<RigidBody *>(ptr)->set_angular_velocity(arg1_in);
}

void godot_icall_RigidBody_get_angular_velocity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody *>(ptr)->get_angular_velocity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_RigidBody_set_gravity_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody *>(ptr)->set_gravity_scale(arg1_in);
}

void godot_icall_RigidBody_get_gravity_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody *>(ptr)->get_gravity_scale();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody_set_linear_damp_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody *>(ptr)->set_linear_damp(arg1_in);
}

void godot_icall_RigidBody_get_linear_damp_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody *>(ptr)->get_linear_damp();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody_set_angular_damp_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody *>(ptr)->set_angular_damp(arg1_in);
}

void godot_icall_RigidBody_get_angular_damp_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody *>(ptr)->get_angular_damp();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody_set_max_contacts_reported_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<RigidBody *>(ptr)->set_max_contacts_reported(arg1_in);
}

int32_t godot_icall_RigidBody_get_max_contacts_reported_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RigidBody *>(ptr)->get_max_contacts_reported();
    return static_cast<int32_t>(ret);
}

void godot_icall_RigidBody_set_use_custom_integrator_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RigidBody *>(ptr)->set_use_custom_integrator(arg1_in);
}

MonoBoolean godot_icall_RigidBody_is_using_custom_integrator_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RigidBody *>(ptr)->is_using_custom_integrator();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RigidBody_set_contact_monitor_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RigidBody *>(ptr)->set_contact_monitor(arg1_in);
}

MonoBoolean godot_icall_RigidBody_is_contact_monitor_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RigidBody *>(ptr)->is_contact_monitor_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RigidBody_set_use_continuous_collision_detection_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RigidBody *>(ptr)->set_use_continuous_collision_detection(arg1_in);
}

MonoBoolean godot_icall_RigidBody_is_using_continuous_collision_detection_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RigidBody *>(ptr)->is_using_continuous_collision_detection();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RigidBody_set_axis_velocity_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<RigidBody *>(ptr)->set_axis_velocity(arg1_in);
}

void godot_icall_RigidBody_add_central_force_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<RigidBody *>(ptr)->add_central_force(arg1_in);
}

void godot_icall_RigidBody_add_force_bf22f212(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<RigidBody *>(ptr)->add_force(arg1_in, arg2_in);
}

void godot_icall_RigidBody_add_torque_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<RigidBody *>(ptr)->add_torque(arg1_in);
}

void godot_icall_RigidBody_apply_central_impulse_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<RigidBody *>(ptr)->apply_central_impulse(arg1_in);
}

void godot_icall_RigidBody_apply_impulse_bf22f212(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<RigidBody *>(ptr)->apply_impulse(arg1_in, arg2_in);
}

void godot_icall_RigidBody_apply_torque_impulse_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<RigidBody *>(ptr)->apply_torque_impulse(arg1_in);
}

void godot_icall_RigidBody_set_sleeping_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RigidBody *>(ptr)->set_sleeping(arg1_in);
}

MonoBoolean godot_icall_RigidBody_is_sleeping_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RigidBody *>(ptr)->is_sleeping();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RigidBody_set_can_sleep_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RigidBody *>(ptr)->set_can_sleep(arg1_in);
}

MonoBoolean godot_icall_RigidBody_is_able_to_sleep_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RigidBody *>(ptr)->is_able_to_sleep();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RigidBody_set_axis_lock_cb8f1f44(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<RigidBody *>(ptr)->set_axis_lock((PhysicsServer::BodyAxis)arg1_in, arg2_in);
}

MonoBoolean godot_icall_RigidBody_get_axis_lock_81481178(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<RigidBody *>(ptr)->get_axis_lock((PhysicsServer::BodyAxis)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall_RigidBody_get_colliding_bodies_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RigidBody *>(ptr)->get_colliding_bodies();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_RigidBody_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RigidBody")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_RigidBody2D_set_mode_edbe7609(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<RigidBody2D *>(ptr)->set_mode((RigidBody2D::Mode)arg1_in);
}

int32_t godot_icall_RigidBody2D_get_mode_d0de29e4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RigidBody2D *>(ptr)->get_mode();
    return (int32_t)ret;
}

void godot_icall_RigidBody2D_set_mass_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody2D *>(ptr)->set_mass(arg1_in);
}

void godot_icall_RigidBody2D_get_mass_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody2D *>(ptr)->get_mass();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody2D_get_inertia_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody2D *>(ptr)->get_inertia();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody2D_set_inertia_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody2D *>(ptr)->set_inertia(arg1_in);
}

void godot_icall_RigidBody2D_set_weight_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody2D *>(ptr)->set_weight(arg1_in);
}

void godot_icall_RigidBody2D_get_weight_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody2D *>(ptr)->get_weight();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody2D_set_physics_material_override_e4d5a435(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<RigidBody2D *>(ptr)->set_physics_material_override(AutoRef(arg1));
}

MonoObject* godot_icall_RigidBody2D_get_physics_material_override_226d8337(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RigidBody2D *>(ptr)->get_physics_material_override();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_RigidBody2D_set_gravity_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody2D *>(ptr)->set_gravity_scale(arg1_in);
}

void godot_icall_RigidBody2D_get_gravity_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody2D *>(ptr)->get_gravity_scale();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody2D_set_linear_damp_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody2D *>(ptr)->set_linear_damp(arg1_in);
}

void godot_icall_RigidBody2D_get_linear_damp_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody2D *>(ptr)->get_linear_damp();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody2D_set_angular_damp_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody2D *>(ptr)->set_angular_damp(arg1_in);
}

void godot_icall_RigidBody2D_get_angular_damp_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody2D *>(ptr)->get_angular_damp();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody2D_set_linear_velocity_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<RigidBody2D *>(ptr)->set_linear_velocity(arg1_in);
}

void godot_icall_RigidBody2D_get_linear_velocity_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody2D *>(ptr)->get_linear_velocity();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_RigidBody2D_set_angular_velocity_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody2D *>(ptr)->set_angular_velocity(arg1_in);
}

void godot_icall_RigidBody2D_get_angular_velocity_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody2D *>(ptr)->get_angular_velocity();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody2D_set_max_contacts_reported_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<RigidBody2D *>(ptr)->set_max_contacts_reported(arg1_in);
}

int32_t godot_icall_RigidBody2D_get_max_contacts_reported_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RigidBody2D *>(ptr)->get_max_contacts_reported();
    return static_cast<int32_t>(ret);
}

void godot_icall_RigidBody2D_set_use_custom_integrator_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RigidBody2D *>(ptr)->set_use_custom_integrator(arg1_in);
}

MonoBoolean godot_icall_RigidBody2D_is_using_custom_integrator_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RigidBody2D *>(ptr)->is_using_custom_integrator();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RigidBody2D_set_contact_monitor_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RigidBody2D *>(ptr)->set_contact_monitor(arg1_in);
}

MonoBoolean godot_icall_RigidBody2D_is_contact_monitor_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RigidBody2D *>(ptr)->is_contact_monitor_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RigidBody2D_set_continuous_collision_detection_mode_dff0902f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<RigidBody2D *>(ptr)->set_continuous_collision_detection_mode((RigidBody2D::CCDMode)arg1_in);
}

int32_t godot_icall_RigidBody2D_get_continuous_collision_detection_mode_d526f3d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<RigidBody2D *>(ptr)->get_continuous_collision_detection_mode();
    return (int32_t)ret;
}

void godot_icall_RigidBody2D_set_axis_velocity_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<RigidBody2D *>(ptr)->set_axis_velocity(arg1_in);
}

void godot_icall_RigidBody2D_apply_central_impulse_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<RigidBody2D *>(ptr)->apply_central_impulse(arg1_in);
}

void godot_icall_RigidBody2D_apply_impulse_bf22f250(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<RigidBody2D *>(ptr)->apply_impulse(arg1_in, arg2_in);
}

void godot_icall_RigidBody2D_apply_torque_impulse_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody2D *>(ptr)->apply_torque_impulse(arg1_in);
}

void godot_icall_RigidBody2D_set_applied_force_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<RigidBody2D *>(ptr)->set_applied_force(arg1_in);
}

void godot_icall_RigidBody2D_get_applied_force_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody2D *>(ptr)->get_applied_force();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_RigidBody2D_set_applied_torque_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody2D *>(ptr)->set_applied_torque(arg1_in);
}

void godot_icall_RigidBody2D_get_applied_torque_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<RigidBody2D *>(ptr)->get_applied_torque();
    *arg_ret = (float)ret;
}

void godot_icall_RigidBody2D_add_central_force_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<RigidBody2D *>(ptr)->add_central_force(arg1_in);
}

void godot_icall_RigidBody2D_add_force_bf22f250(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<RigidBody2D *>(ptr)->add_force(arg1_in, arg2_in);
}

void godot_icall_RigidBody2D_add_torque_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<RigidBody2D *>(ptr)->add_torque(arg1_in);
}

void godot_icall_RigidBody2D_set_sleeping_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RigidBody2D *>(ptr)->set_sleeping(arg1_in);
}

MonoBoolean godot_icall_RigidBody2D_is_sleeping_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RigidBody2D *>(ptr)->is_sleeping();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_RigidBody2D_set_can_sleep_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<RigidBody2D *>(ptr)->set_can_sleep(arg1_in);
}

MonoBoolean godot_icall_RigidBody2D_is_able_to_sleep_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<RigidBody2D *>(ptr)->is_able_to_sleep();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_RigidBody2D_test_motion_78775b33(Object * ptr, GDMonoMarshal::M_Vector2* arg1, MonoBoolean arg2, float* arg3, Object * arg4) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    bool arg2_in = static_cast<bool>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    auto ret = static_cast<RigidBody2D *>(ptr)->_test_motion(arg1_in, arg2_in, arg3_in, AutoRef(arg4));
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall_RigidBody2D_get_colliding_bodies_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<RigidBody2D *>(ptr)->get_colliding_bodies();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_RigidBody2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "RigidBody2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_SceneState_get_node_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SceneState *>(ptr)->get_node_count();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_SceneState_get_node_type_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_node_type(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_SceneState_get_node_name_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_node_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

NodePath* godot_icall_SceneState_get_node_path_61f6a8b7(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<SceneState *>(ptr)->get_node_path(arg1_in, arg2_in);
    return memnew(NodePath(ret));
}

NodePath* godot_icall_SceneState_get_node_owner_path_1640f2b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_node_owner_path(arg1_in);
    return memnew(NodePath(ret));
}

MonoBoolean godot_icall_SceneState_is_node_instance_placeholder_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->is_node_instance_placeholder(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_SceneState_get_node_instance_placeholder_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_node_instance_placeholder(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoObject* godot_icall_SceneState_get_node_instance_81818a46(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_node_instance(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoArray* godot_icall_SceneState_get_node_groups_4fe63c75(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->_get_node_groups(arg1_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

int32_t godot_icall_SceneState_get_node_index_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_node_index(arg1_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_SceneState_get_node_property_count_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_node_property_count(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_SceneState_get_node_property_name_4aee5da5(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<SceneState *>(ptr)->get_node_property_name(arg1_in, arg2_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoObject* godot_icall_SceneState_get_node_property_value_fd743645(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<SceneState *>(ptr)->get_node_property_value(arg1_in, arg2_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

int32_t godot_icall_SceneState_get_connection_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SceneState *>(ptr)->get_connection_count();
    return static_cast<int32_t>(ret);
}

NodePath* godot_icall_SceneState_get_connection_source_1640f2b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_connection_source(arg1_in);
    return memnew(NodePath(ret));
}

MonoString* godot_icall_SceneState_get_connection_signal_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_connection_signal(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

NodePath* godot_icall_SceneState_get_connection_target_1640f2b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_connection_target(arg1_in);
    return memnew(NodePath(ret));
}

MonoString* godot_icall_SceneState_get_connection_method_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_connection_method(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_SceneState_get_connection_flags_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_connection_flags(arg1_in);
    return static_cast<int32_t>(ret);
}

Array* godot_icall_SceneState_get_connection_binds_2ca2fcca(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SceneState *>(ptr)->get_connection_binds(arg1_in);
    return memnew(Array(Variant::from(ret)));
}

MonoObject* godot_icall_SceneTree_get_root_16d0f927(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SceneTree *>(ptr)->get_root();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoBoolean godot_icall_SceneTree_has_group_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<SceneTree *>(ptr)->has_group(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SceneTree_set_auto_accept_quit_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SceneTree *>(ptr)->set_auto_accept_quit(arg1_in);
}

void godot_icall_SceneTree_set_quit_on_go_back_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SceneTree *>(ptr)->set_quit_on_go_back(arg1_in);
}

void godot_icall_SceneTree_set_debug_collisions_hint_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SceneTree *>(ptr)->set_debug_collisions_hint(arg1_in);
}

MonoBoolean godot_icall_SceneTree_is_debugging_collisions_hint_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SceneTree *>(ptr)->is_debugging_collisions_hint();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SceneTree_set_debug_navigation_hint_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SceneTree *>(ptr)->set_debug_navigation_hint(arg1_in);
}

MonoBoolean godot_icall_SceneTree_is_debugging_navigation_hint_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SceneTree *>(ptr)->is_debugging_navigation_hint();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SceneTree_set_edited_scene_root_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SceneTree *>(ptr)->set_edited_scene_root((Node*)arg1);
}

MonoObject* godot_icall_SceneTree_get_edited_scene_root_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SceneTree *>(ptr)->get_edited_scene_root();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_SceneTree_set_pause_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SceneTree *>(ptr)->set_pause(arg1_in);
}

MonoBoolean godot_icall_SceneTree_is_paused_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SceneTree *>(ptr)->is_paused();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SceneTree_set_input_as_handled_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<SceneTree *>(ptr)->set_input_as_handled();
}

MonoBoolean godot_icall_SceneTree_is_input_handled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SceneTree *>(ptr)->is_input_handled();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_SceneTree_create_timer_97631d5c(Object * ptr, float* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    float arg1_in = static_cast<float>(*arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<SceneTree *>(ptr)->create_timer(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_SceneTree_get_node_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SceneTree *>(ptr)->get_node_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_SceneTree_get_frame_282fe8d3(Object * ptr, int64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = int64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SceneTree *>(ptr)->get_frame();
    *arg_ret = static_cast<int64_t>(ret);
}

void godot_icall_SceneTree_quit_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<SceneTree *>(ptr)->quit(arg1_in);
}

void godot_icall_SceneTree_set_screen_stretch_ee35f6b8(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg3, float* arg4) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    int64_t arg2_in = (int64_t)arg2;
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    float arg4_in = static_cast<float>(*arg4);
    static_cast<SceneTree *>(ptr)->set_screen_stretch((SceneTree::StretchMode)arg1_in, (SceneTree::StretchAspect)arg2_in, arg3_in, arg4_in);
}

void godot_icall_SceneTree_queue_delete_ad798950(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SceneTree *>(ptr)->queue_delete((Object*)arg1);
}

MonoObject* godot_icall_SceneTree_call_group_flags_d792278f(Object * ptr, int32_t arg1, MonoString* arg2, MonoString* arg3, MonoArray* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int vararg_length = mono_array_length(arg4);
    int total_length = 3 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    Variant arg1_in = static_cast<Variant>(arg1);
    call_args[0] =&arg1_in;
    Variant arg2_in = GDMonoMarshal::mono_string_to_godot(arg2);
    call_args[1] =&arg2_in;
    Variant arg3_in = GDMonoMarshal::mono_string_to_godot(arg3);
    call_args[2] =&arg3_in;
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg4, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[3 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    auto ret = static_cast<SceneTree *>(ptr)->_call_group_flags(call_args.data(), total_length, vcall_error);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_SceneTree_notify_group_flags_9595846(Object * ptr, uint32_t arg1, MonoString* arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<SceneTree *>(ptr)->notify_group_flags(arg1_in, arg2_in, arg3_in);
}

void godot_icall_SceneTree_set_group_flags_6f454979(Object * ptr, uint32_t arg1, MonoString* arg2, MonoString* arg3, MonoObject* arg4) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    Variant arg4_in = GDMonoMarshal::mono_object_to_variant(arg4);
    static_cast<SceneTree *>(ptr)->set_group_flags(arg1_in, arg2_in, arg3_in, arg4_in);
}

MonoObject* godot_icall_SceneTree_call_group_f1b3fbca(Object * ptr, MonoString* arg1, MonoString* arg2, MonoArray* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int vararg_length = mono_array_length(arg3);
    int total_length = 2 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    Variant arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    call_args[0] =&arg1_in;
    Variant arg2_in = GDMonoMarshal::mono_string_to_godot(arg2);
    call_args[1] =&arg2_in;
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg3, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[2 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    auto ret = static_cast<SceneTree *>(ptr)->_call_group(call_args.data(), total_length, vcall_error);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_SceneTree_notify_group_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<SceneTree *>(ptr)->notify_group(arg1_in, arg2_in);
}

void godot_icall_SceneTree_set_group_b4caaa8e(Object * ptr, MonoString* arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<SceneTree *>(ptr)->set_group(arg1_in, arg2_in, arg3_in);
}

Array* godot_icall_SceneTree_get_nodes_in_group_6b21c46d(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<SceneTree *>(ptr)->_get_nodes_in_group(arg1_in);
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_SceneTree_set_current_scene_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SceneTree *>(ptr)->set_current_scene((Node*)arg1);
}

MonoObject* godot_icall_SceneTree_get_current_scene_87a9bfc5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SceneTree *>(ptr)->get_current_scene();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_SceneTree_change_scene_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<SceneTree *>(ptr)->change_scene(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_SceneTree_change_scene_to_19e77c9c(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SceneTree *>(ptr)->change_scene_to(AutoRef(arg1));
    return (int32_t)ret;
}

int32_t godot_icall_SceneTree_reload_current_scene_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SceneTree *>(ptr)->reload_current_scene();
    return (int32_t)ret;
}

void godot_icall_SceneTree_set_multiplayer_ca78cf97(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SceneTree *>(ptr)->set_multiplayer(AutoRef(arg1));
}

MonoObject* godot_icall_SceneTree_get_multiplayer_f8da1ad5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SceneTree *>(ptr)->get_multiplayer();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_SceneTree_set_multiplayer_poll_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SceneTree *>(ptr)->set_multiplayer_poll_enabled(arg1_in);
}

MonoBoolean godot_icall_SceneTree_is_multiplayer_poll_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SceneTree *>(ptr)->is_multiplayer_poll_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SceneTree_set_network_peer_6a099e0a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SceneTree *>(ptr)->set_network_peer(AutoRef(arg1));
}

MonoObject* godot_icall_SceneTree_get_network_peer_9929695a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SceneTree *>(ptr)->get_network_peer();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoBoolean godot_icall_SceneTree_is_network_server_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SceneTree *>(ptr)->is_network_server();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_SceneTree_has_network_peer_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SceneTree *>(ptr)->has_network_peer();
    return static_cast<MonoBoolean>(ret);
}

MonoArray* godot_icall_SceneTree_get_network_connected_peers_2a166acd(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SceneTree *>(ptr)->get_network_connected_peers();
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

int32_t godot_icall_SceneTree_get_network_unique_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SceneTree *>(ptr)->get_network_unique_id();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_SceneTree_get_rpc_sender_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SceneTree *>(ptr)->get_rpc_sender_id();
    return static_cast<int32_t>(ret);
}

void godot_icall_SceneTree_set_refuse_new_network_connections_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SceneTree *>(ptr)->set_refuse_new_network_connections(arg1_in);
}

MonoBoolean godot_icall_SceneTree_is_refusing_new_network_connections_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SceneTree *>(ptr)->is_refusing_new_network_connections();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SceneTree_set_use_font_oversampling_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SceneTree *>(ptr)->set_use_font_oversampling(arg1_in);
}

MonoBoolean godot_icall_SceneTree_is_using_font_oversampling_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SceneTree *>(ptr)->is_using_font_oversampling();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_SceneTree_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SceneTree")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SceneTreeTimer_set_time_left_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SceneTreeTimer *>(ptr)->set_time_left(arg1_in);
}

void godot_icall_SceneTreeTimer_get_time_left_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SceneTreeTimer *>(ptr)->get_time_left();
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_Script_can_instance_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Script *>(ptr)->can_instance();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Script_instance_has_3b1660ba(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Script *>(ptr)->instance_has((Object*)arg1);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Script_has_source_code_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Script *>(ptr)->has_source_code();
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_Script_get_source_code_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Script *>(ptr)->get_source_code();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Script_set_source_code_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<Script *>(ptr)->set_source_code(arg1_in);
}

int32_t godot_icall_Script_reload_a4e6027a(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<Script *>(ptr)->reload(arg1_in);
    return (int32_t)ret;
}

MonoObject* godot_icall_Script_get_base_script_cb4d4ff8(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Script *>(ptr)->get_base_script();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoString* godot_icall_Script_get_instance_base_type_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Script *>(ptr)->get_instance_base_type();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_Script_has_script_signal_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Script *>(ptr)->has_script_signal(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall_Script_get_script_property_list_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Script *>(ptr)->_get_script_property_list();
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_Script_get_script_method_list_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Script *>(ptr)->_get_script_method_list();
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_Script_get_script_signal_list_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Script *>(ptr)->_get_script_signal_list();
    return memnew(Array(Variant::from(ret)));
}

Dictionary* godot_icall_Script_get_script_constant_map_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Script *>(ptr)->_get_script_constant_map();
    return memnew(Dictionary(ret));
}

MonoObject* godot_icall_Script_get_property_default_value_6732bfd8(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Script *>(ptr)->_get_property_default_value(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoBoolean godot_icall_Script_is_tool_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Script *>(ptr)->is_tool();
    return static_cast<MonoBoolean>(ret);
}

#ifdef TOOLS_ENABLED
void godot_icall_ScriptCreateDialog_config_899d9058(Object * ptr, MonoString* arg1, MonoString* arg2, MonoBoolean arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    bool arg3_in = static_cast<bool>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<ScriptCreateDialog *>(ptr)->config(arg1_in, arg2_in, arg3_in, arg4_in);
}

#endif // TOOLS_ENABLED
Object* godot_icall_ScriptCreateDialog_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ScriptCreateDialog")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
MonoObject* godot_icall_ScriptEditor_get_drag_data_fw_d0abbc24(Object * ptr, GDMonoMarshal::M_Vector2* arg1, Object * arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<ScriptEditor *>(ptr)->get_drag_data_fw(arg1_in, (Control*)arg2);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoBoolean godot_icall_ScriptEditor_can_drop_data_fw_6c2b897e(Object * ptr, GDMonoMarshal::M_Vector2* arg1, MonoObject* arg2, Object * arg3) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    auto ret = static_cast<ScriptEditor *>(ptr)->can_drop_data_fw(arg1_in, arg2_in, (Control*)arg3);
    return static_cast<MonoBoolean>(ret);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_ScriptEditor_drop_data_fw_85f514c2(Object * ptr, GDMonoMarshal::M_Vector2* arg1, MonoObject* arg2, Object * arg3) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<ScriptEditor *>(ptr)->drop_data_fw(arg1_in, arg2_in, (Control*)arg3);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_ScriptEditor_goto_line_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ScriptEditor *>(ptr)->_goto_script_line2(arg1_in);
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
MonoObject* godot_icall_ScriptEditor_get_current_script_cb4d4ff8(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ScriptEditor *>(ptr)->_get_current_script();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
Array* godot_icall_ScriptEditor_get_open_scripts_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ScriptEditor *>(ptr)->_get_open_scripts();
    return memnew(Array(ret));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall_ScriptEditor_open_script_create_dialog_fc93f18d(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<ScriptEditor *>(ptr)->open_script_create_dialog(arg1_in, arg2_in);
}

#endif // TOOLS_ENABLED
void godot_icall_ScrollBar_set_custom_step_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<ScrollBar *>(ptr)->set_custom_step(arg1_in);
}

void godot_icall_ScrollBar_get_custom_step_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<ScrollBar *>(ptr)->get_custom_step();
    *arg_ret = (float)ret;
}

void godot_icall_ScrollContainer_set_enable_h_scroll_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ScrollContainer *>(ptr)->set_enable_h_scroll(arg1_in);
}

MonoBoolean godot_icall_ScrollContainer_is_h_scroll_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ScrollContainer *>(ptr)->is_h_scroll_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ScrollContainer_set_enable_v_scroll_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ScrollContainer *>(ptr)->set_enable_v_scroll(arg1_in);
}

MonoBoolean godot_icall_ScrollContainer_is_v_scroll_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ScrollContainer *>(ptr)->is_v_scroll_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ScrollContainer_set_h_scroll_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ScrollContainer *>(ptr)->set_h_scroll(arg1_in);
}

int32_t godot_icall_ScrollContainer_get_h_scroll_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ScrollContainer *>(ptr)->get_h_scroll();
    return static_cast<int32_t>(ret);
}

void godot_icall_ScrollContainer_set_v_scroll_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ScrollContainer *>(ptr)->set_v_scroll(arg1_in);
}

int32_t godot_icall_ScrollContainer_get_v_scroll_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ScrollContainer *>(ptr)->get_v_scroll();
    return static_cast<int32_t>(ret);
}

void godot_icall_ScrollContainer_set_deadzone_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ScrollContainer *>(ptr)->set_deadzone(arg1_in);
}

int32_t godot_icall_ScrollContainer_get_deadzone_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ScrollContainer *>(ptr)->get_deadzone();
    return static_cast<int32_t>(ret);
}

void godot_icall_ScrollContainer_set_follow_focus_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ScrollContainer *>(ptr)->set_follow_focus(arg1_in);
}

MonoBoolean godot_icall_ScrollContainer_is_following_focus_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ScrollContainer *>(ptr)->is_following_focus();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_ScrollContainer_get_h_scrollbar_2a5f1c93(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ScrollContainer *>(ptr)->get_h_scrollbar();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_ScrollContainer_get_v_scrollbar_37ab5951(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ScrollContainer *>(ptr)->get_v_scrollbar();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Object* godot_icall_ScrollContainer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ScrollContainer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SegmentShape2D_set_a_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<SegmentShape2D *>(ptr)->set_a(arg1_in);
}

void godot_icall_SegmentShape2D_get_a_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SegmentShape2D *>(ptr)->get_a();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_SegmentShape2D_set_b_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<SegmentShape2D *>(ptr)->set_b(arg1_in);
}

void godot_icall_SegmentShape2D_get_b_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SegmentShape2D *>(ptr)->get_b();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

Object* godot_icall_SegmentShape2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SegmentShape2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_Shader_get_mode_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Shader *>(ptr)->get_mode();
    return static_cast<int32_t>(ret);
}

void godot_icall_Shader_set_code_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<Shader *>(ptr)->set_code(arg1_in);
}

MonoString* godot_icall_Shader_get_code_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Shader *>(ptr)->get_code();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Shader_set_default_texture_param_16ca4061(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Shader *>(ptr)->set_default_texture_param(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_Shader_get_default_texture_param_c2e1949b(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Shader *>(ptr)->get_default_texture_param(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoBoolean godot_icall_Shader_has_param_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Shader *>(ptr)->has_param(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_Shader_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Shader")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ShaderMaterial_set_shader_abc8f6ee(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ShaderMaterial *>(ptr)->set_shader(AutoRef(arg1));
}

MonoObject* godot_icall_ShaderMaterial_get_shader_596a517e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ShaderMaterial *>(ptr)->get_shader();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_ShaderMaterial_set_shader_param_3a208116(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<ShaderMaterial *>(ptr)->set_shader_param(arg1_in, arg2_in);
}

MonoObject* godot_icall_ShaderMaterial_get_shader_param_6732bfd8(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ShaderMaterial *>(ptr)->get_shader_param(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoBoolean godot_icall_ShaderMaterial_property_can_revert_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ShaderMaterial *>(ptr)->property_can_revert(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_ShaderMaterial_property_get_revert_6732bfd8(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<ShaderMaterial *>(ptr)->property_get_revert(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

Object* godot_icall_ShaderMaterial_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ShaderMaterial")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Shape_set_margin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Shape *>(ptr)->set_margin(arg1_in);
}

void godot_icall_Shape_get_margin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Shape *>(ptr)->get_margin();
    *arg_ret = (float)ret;
}

void godot_icall_Shape2D_set_custom_solver_bias_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Shape2D *>(ptr)->set_custom_solver_bias(arg1_in);
}

void godot_icall_Shape2D_get_custom_solver_bias_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Shape2D *>(ptr)->get_custom_solver_bias();
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_Shape2D_collide_abafdbaf(Object * ptr, GDMonoMarshal::M_Transform2D* arg1, Object * arg2, GDMonoMarshal::M_Transform2D* arg3) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    Transform2D arg3_in = MARSHALLED_IN(Transform2D, arg3);
    auto ret = static_cast<Shape2D *>(ptr)->collide(arg1_in, AutoRef(arg2), arg3_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Shape2D_collide_with_motion_a01c87fc(Object * ptr, GDMonoMarshal::M_Transform2D* arg1, GDMonoMarshal::M_Vector2* arg2, Object * arg3, GDMonoMarshal::M_Transform2D* arg4, GDMonoMarshal::M_Vector2* arg5) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Transform2D arg4_in = MARSHALLED_IN(Transform2D, arg4);
    Vector2 arg5_in = MARSHALLED_IN(Vector2, arg5);
    auto ret = static_cast<Shape2D *>(ptr)->collide_with_motion(arg1_in, arg2_in, AutoRef(arg3), arg4_in, arg5_in);
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall_Shape2D_collide_and_get_contacts_df683537(Object * ptr, GDMonoMarshal::M_Transform2D* arg1, Object * arg2, GDMonoMarshal::M_Transform2D* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    Transform2D arg3_in = MARSHALLED_IN(Transform2D, arg3);
    auto ret = static_cast<Shape2D *>(ptr)->collide_and_get_contacts(arg1_in, AutoRef(arg2), arg3_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_Shape2D_collide_with_motion_and_get_contacts_d54a283c(Object * ptr, GDMonoMarshal::M_Transform2D* arg1, GDMonoMarshal::M_Vector2* arg2, Object * arg3, GDMonoMarshal::M_Transform2D* arg4, GDMonoMarshal::M_Vector2* arg5) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Transform2D arg4_in = MARSHALLED_IN(Transform2D, arg4);
    Vector2 arg5_in = MARSHALLED_IN(Vector2, arg5);
    auto ret = static_cast<Shape2D *>(ptr)->collide_with_motion_and_get_contacts(arg1_in, arg2_in, AutoRef(arg3), arg4_in, arg5_in);
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_ShortCut_set_shortcut_7ac4986f(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ShortCut *>(ptr)->set_shortcut(AutoRef(arg1));
}

MonoObject* godot_icall_ShortCut_get_shortcut_a85e66fd(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ShortCut *>(ptr)->get_shortcut();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoBoolean godot_icall_ShortCut_is_valid_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ShortCut *>(ptr)->is_valid();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_ShortCut_is_shortcut_c8931195(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ShortCut *>(ptr)->is_shortcut(AutoRef(arg1));
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_ShortCut_get_as_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ShortCut *>(ptr)->get_as_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_ShortCut_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ShortCut")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Skeleton_add_bone_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Skeleton *>(ptr)->add_bone(arg1_in);
}

int32_t godot_icall_Skeleton_find_bone_6d3db7c6(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Skeleton *>(ptr)->find_bone(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_Skeleton_get_bone_name_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Skeleton *>(ptr)->get_bone_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_Skeleton_get_bone_parent_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Skeleton *>(ptr)->get_bone_parent(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Skeleton_set_bone_parent_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Skeleton *>(ptr)->set_bone_parent(arg1_in, arg2_in);
}

int32_t godot_icall_Skeleton_get_bone_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Skeleton *>(ptr)->get_bone_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_Skeleton_unparent_bone_and_rest_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Skeleton *>(ptr)->unparent_bone_and_rest(arg1_in);
}

void godot_icall_Skeleton_get_bone_rest_466c8cd4(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Skeleton *>(ptr)->get_bone_rest(arg1_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_Skeleton_set_bone_rest_7ede1ff(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<Skeleton *>(ptr)->set_bone_rest(arg1_in, arg2_in);
}

MonoObject* godot_icall_Skeleton_register_skin_dde4542e(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Skeleton *>(ptr)->register_skin(AutoRef(arg1));
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Skeleton_localize_rests_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Skeleton *>(ptr)->localize_rests();
}

void godot_icall_Skeleton_set_bone_disable_rest_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Skeleton *>(ptr)->set_bone_disable_rest(arg1_in, arg2_in);
}

MonoBoolean godot_icall_Skeleton_is_bone_rest_disabled_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Skeleton *>(ptr)->is_bone_rest_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Skeleton_bind_child_node_to_bone_285f5ed1(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Skeleton *>(ptr)->bind_child_node_to_bone(arg1_in, (Node*)arg2);
}

void godot_icall_Skeleton_unbind_child_node_from_bone_285f5ed1(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Skeleton *>(ptr)->unbind_child_node_from_bone(arg1_in, (Node*)arg2);
}

Array* godot_icall_Skeleton_get_bound_child_nodes_to_bone_2ca2fcca(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Skeleton *>(ptr)->_get_bound_child_nodes_to_bone(arg1_in);
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_Skeleton_clear_bones_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Skeleton *>(ptr)->clear_bones();
}

void godot_icall_Skeleton_get_bone_pose_466c8cd4(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Skeleton *>(ptr)->get_bone_pose(arg1_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_Skeleton_set_bone_pose_7ede1ff(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<Skeleton *>(ptr)->set_bone_pose(arg1_in, arg2_in);
}

void godot_icall_Skeleton_set_bone_global_pose_override_769cf2f7(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg2, float* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    float arg3_in = static_cast<float>(*arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<Skeleton *>(ptr)->set_bone_global_pose_override(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_Skeleton_get_bone_global_pose_466c8cd4(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Skeleton *>(ptr)->get_bone_global_pose(arg1_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_Skeleton_get_bone_custom_pose_466c8cd4(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Skeleton *>(ptr)->get_bone_custom_pose(arg1_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_Skeleton_set_bone_custom_pose_7ede1ff(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<Skeleton *>(ptr)->set_bone_custom_pose(arg1_in, arg2_in);
}

void godot_icall_Skeleton_physical_bones_stop_simulation_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Skeleton *>(ptr)->physical_bones_stop_simulation();
}

void godot_icall_Skeleton_physical_bones_start_simulation_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Skeleton *>(ptr)->physical_bones_start_simulation_on(*arg1);
}

void godot_icall_Skeleton_physical_bones_add_collision_exception_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Skeleton *>(ptr)->physical_bones_add_collision_exception(*arg1);
}

void godot_icall_Skeleton_physical_bones_remove_collision_exception_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Skeleton *>(ptr)->physical_bones_remove_collision_exception(*arg1);
}

Object* godot_icall_Skeleton_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Skeleton")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_Skeleton2D_get_bone_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Skeleton2D *>(ptr)->get_bone_count();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_Skeleton2D_get_bone_13543d24(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Skeleton2D *>(ptr)->get_bone(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

RID* godot_icall_Skeleton2D_get_skeleton_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Skeleton2D *>(ptr)->get_skeleton();
    return memnew(RID(ret));
}

Object* godot_icall_Skeleton2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Skeleton2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SkeletonIK_set_root_bone_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<SkeletonIK *>(ptr)->set_root_bone(arg1_in);
}

MonoString* godot_icall_SkeletonIK_get_root_bone_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SkeletonIK *>(ptr)->get_root_bone();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_SkeletonIK_set_tip_bone_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<SkeletonIK *>(ptr)->set_tip_bone(arg1_in);
}

MonoString* godot_icall_SkeletonIK_get_tip_bone_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SkeletonIK *>(ptr)->get_tip_bone();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_SkeletonIK_set_interpolation_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SkeletonIK *>(ptr)->set_interpolation(arg1_in);
}

void godot_icall_SkeletonIK_get_interpolation_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SkeletonIK *>(ptr)->get_interpolation();
    *arg_ret = (float)ret;
}

void godot_icall_SkeletonIK_set_target_transform_655b85c9(Object * ptr, GDMonoMarshal::M_Transform* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform arg1_in = MARSHALLED_IN(Transform, arg1);
    static_cast<SkeletonIK *>(ptr)->set_target_transform(arg1_in);
}

void godot_icall_SkeletonIK_get_target_transform_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SkeletonIK *>(ptr)->get_target_transform();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_SkeletonIK_set_target_node_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SkeletonIK *>(ptr)->set_target_node(*arg1);
}

NodePath* godot_icall_SkeletonIK_get_target_node_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SkeletonIK *>(ptr)->get_target_node();
    return memnew(NodePath(ret));
}

void godot_icall_SkeletonIK_set_override_tip_basis_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SkeletonIK *>(ptr)->set_override_tip_basis(arg1_in);
}

MonoBoolean godot_icall_SkeletonIK_is_override_tip_basis_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SkeletonIK *>(ptr)->is_override_tip_basis();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SkeletonIK_set_use_magnet_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SkeletonIK *>(ptr)->set_use_magnet(arg1_in);
}

MonoBoolean godot_icall_SkeletonIK_is_using_magnet_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SkeletonIK *>(ptr)->is_using_magnet();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SkeletonIK_set_magnet_position_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<SkeletonIK *>(ptr)->set_magnet_position(arg1_in);
}

void godot_icall_SkeletonIK_get_magnet_position_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SkeletonIK *>(ptr)->get_magnet_position();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

MonoObject* godot_icall_SkeletonIK_get_parent_skeleton_e6ae7d08(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SkeletonIK *>(ptr)->get_parent_skeleton();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoBoolean godot_icall_SkeletonIK_is_running_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SkeletonIK *>(ptr)->is_running();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SkeletonIK_set_min_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SkeletonIK *>(ptr)->set_min_distance(arg1_in);
}

void godot_icall_SkeletonIK_get_min_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SkeletonIK *>(ptr)->get_min_distance();
    *arg_ret = (float)ret;
}

void godot_icall_SkeletonIK_set_max_iterations_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<SkeletonIK *>(ptr)->set_max_iterations(arg1_in);
}

int32_t godot_icall_SkeletonIK_get_max_iterations_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SkeletonIK *>(ptr)->get_max_iterations();
    return static_cast<int32_t>(ret);
}

void godot_icall_SkeletonIK_start_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SkeletonIK *>(ptr)->start(arg1_in);
}

void godot_icall_SkeletonIK_stop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<SkeletonIK *>(ptr)->stop();
}

Object* godot_icall_SkeletonIK_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SkeletonIK")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Skin_set_bind_count_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Skin *>(ptr)->set_bind_count(arg1_in);
}

int32_t godot_icall_Skin_get_bind_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Skin *>(ptr)->get_bind_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_Skin_add_bind_7ede1ff(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<Skin *>(ptr)->add_bind(arg1_in, arg2_in);
}

void godot_icall_Skin_set_bind_pose_7ede1ff(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<Skin *>(ptr)->set_bind_pose(arg1_in, arg2_in);
}

void godot_icall_Skin_get_bind_pose_466c8cd4(Object * ptr, int32_t arg1, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Skin *>(ptr)->get_bind_pose(arg1_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_Skin_set_bind_bone_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Skin *>(ptr)->set_bind_bone(arg1_in, arg2_in);
}

int32_t godot_icall_Skin_get_bind_bone_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Skin *>(ptr)->get_bind_bone(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Skin_clear_binds_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Skin *>(ptr)->clear_binds();
}

Object* godot_icall_Skin_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Skin")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

RID* godot_icall_SkinReference_get_skeleton_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SkinReference *>(ptr)->get_skeleton();
    return memnew(RID(ret));
}

MonoObject* godot_icall_SkinReference_get_skin_938dc832(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SkinReference *>(ptr)->get_skin();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Sky_set_radiance_size_da42fcee(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Sky *>(ptr)->set_radiance_size((Sky::RadianceSize)arg1_in);
}

int32_t godot_icall_Sky_get_radiance_size_b6d220e9(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Sky *>(ptr)->get_radiance_size();
    return (int32_t)ret;
}

void godot_icall_Slider_set_ticks_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Slider *>(ptr)->set_ticks(arg1_in);
}

int32_t godot_icall_Slider_get_ticks_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Slider *>(ptr)->get_ticks();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_Slider_get_ticks_on_borders_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Slider *>(ptr)->get_ticks_on_borders();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Slider_set_ticks_on_borders_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Slider *>(ptr)->set_ticks_on_borders(arg1_in);
}

void godot_icall_Slider_set_editable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Slider *>(ptr)->set_editable(arg1_in);
}

MonoBoolean godot_icall_Slider_is_editable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Slider *>(ptr)->is_editable();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Slider_set_scrollable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Slider *>(ptr)->set_scrollable(arg1_in);
}

MonoBoolean godot_icall_Slider_is_scrollable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Slider *>(ptr)->is_scrollable();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SliderJoint_set_param_1b52038e(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<SliderJoint *>(ptr)->set_param((SliderJoint::Param)arg1_in, arg2_in);
}

void godot_icall_SliderJoint_get_param_c1ceba83(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<SliderJoint *>(ptr)->get_param((SliderJoint::Param)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_SliderJoint__set_upper_limit_angular_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SliderJoint *>(ptr)->_set_upper_limit_angular(arg1_in);
}

void godot_icall_SliderJoint__get_upper_limit_angular_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SliderJoint *>(ptr)->_get_upper_limit_angular();
    *arg_ret = (float)ret;
}

void godot_icall_SliderJoint__set_lower_limit_angular_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SliderJoint *>(ptr)->_set_lower_limit_angular(arg1_in);
}

void godot_icall_SliderJoint__get_lower_limit_angular_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SliderJoint *>(ptr)->_get_lower_limit_angular();
    *arg_ret = (float)ret;
}

Object* godot_icall_SliderJoint_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SliderJoint")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SoftBody_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<SoftBody *>(ptr)->set_collision_mask(arg1_in);
}

uint32_t godot_icall_SoftBody_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<SoftBody *>(ptr)->get_collision_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_SoftBody_set_collision_layer_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<SoftBody *>(ptr)->set_collision_layer(arg1_in);
}

uint32_t godot_icall_SoftBody_get_collision_layer_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<SoftBody *>(ptr)->get_collision_layer();
    return static_cast<uint32_t>(ret);
}

void godot_icall_SoftBody_set_collision_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<SoftBody *>(ptr)->set_collision_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_SoftBody_get_collision_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SoftBody *>(ptr)->get_collision_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SoftBody_set_collision_layer_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<SoftBody *>(ptr)->set_collision_layer_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_SoftBody_get_collision_layer_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<SoftBody *>(ptr)->get_collision_layer_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SoftBody_set_parent_collision_ignore_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SoftBody *>(ptr)->set_parent_collision_ignore(*arg1);
}

NodePath* godot_icall_SoftBody_get_parent_collision_ignore_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SoftBody *>(ptr)->get_parent_collision_ignore();
    return memnew(NodePath(ret));
}

Array* godot_icall_SoftBody_get_collision_exceptions_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SoftBody *>(ptr)->get_collision_exceptions();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_SoftBody_add_collision_exception_with_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SoftBody *>(ptr)->add_collision_exception_with((Node*)arg1);
}

void godot_icall_SoftBody_remove_collision_exception_with_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SoftBody *>(ptr)->remove_collision_exception_with((Node*)arg1);
}

void godot_icall_SoftBody_set_simulation_precision_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<SoftBody *>(ptr)->set_simulation_precision(arg1_in);
}

int32_t godot_icall_SoftBody_get_simulation_precision_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SoftBody *>(ptr)->get_simulation_precision();
    return static_cast<int32_t>(ret);
}

void godot_icall_SoftBody_set_total_mass_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SoftBody *>(ptr)->set_total_mass(arg1_in);
}

void godot_icall_SoftBody_get_total_mass_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SoftBody *>(ptr)->get_total_mass();
    *arg_ret = (float)ret;
}

void godot_icall_SoftBody_set_linear_stiffness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SoftBody *>(ptr)->set_linear_stiffness(arg1_in);
}

void godot_icall_SoftBody_get_linear_stiffness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SoftBody *>(ptr)->get_linear_stiffness();
    *arg_ret = (float)ret;
}

void godot_icall_SoftBody_set_areaAngular_stiffness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SoftBody *>(ptr)->set_areaAngular_stiffness(arg1_in);
}

void godot_icall_SoftBody_get_areaAngular_stiffness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SoftBody *>(ptr)->get_areaAngular_stiffness();
    *arg_ret = (float)ret;
}

void godot_icall_SoftBody_set_volume_stiffness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SoftBody *>(ptr)->set_volume_stiffness(arg1_in);
}

void godot_icall_SoftBody_get_volume_stiffness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SoftBody *>(ptr)->get_volume_stiffness();
    *arg_ret = (float)ret;
}

void godot_icall_SoftBody_set_pressure_coefficient_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SoftBody *>(ptr)->set_pressure_coefficient(arg1_in);
}

void godot_icall_SoftBody_get_pressure_coefficient_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SoftBody *>(ptr)->get_pressure_coefficient();
    *arg_ret = (float)ret;
}

void godot_icall_SoftBody_set_pose_matching_coefficient_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SoftBody *>(ptr)->set_pose_matching_coefficient(arg1_in);
}

void godot_icall_SoftBody_get_pose_matching_coefficient_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SoftBody *>(ptr)->get_pose_matching_coefficient();
    *arg_ret = (float)ret;
}

void godot_icall_SoftBody_set_damping_coefficient_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SoftBody *>(ptr)->set_damping_coefficient(arg1_in);
}

void godot_icall_SoftBody_get_damping_coefficient_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SoftBody *>(ptr)->get_damping_coefficient();
    *arg_ret = (float)ret;
}

void godot_icall_SoftBody_set_drag_coefficient_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SoftBody *>(ptr)->set_drag_coefficient(arg1_in);
}

void godot_icall_SoftBody_get_drag_coefficient_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SoftBody *>(ptr)->get_drag_coefficient();
    *arg_ret = (float)ret;
}

void godot_icall_SoftBody_set_ray_pickable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SoftBody *>(ptr)->set_ray_pickable(arg1_in);
}

MonoBoolean godot_icall_SoftBody_is_ray_pickable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SoftBody *>(ptr)->is_ray_pickable();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_SoftBody_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SoftBody")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Spatial_set_transform_655b85c9(Object * ptr, GDMonoMarshal::M_Transform* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform arg1_in = MARSHALLED_IN(Transform, arg1);
    static_cast<Spatial *>(ptr)->set_transform(arg1_in);
}

void godot_icall_Spatial_get_transform_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Spatial *>(ptr)->get_transform();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_Spatial_set_translation_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Spatial *>(ptr)->set_translation(arg1_in);
}

void godot_icall_Spatial_get_translation_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Spatial *>(ptr)->get_translation();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Spatial_set_rotation_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Spatial *>(ptr)->set_rotation(arg1_in);
}

void godot_icall_Spatial_get_rotation_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Spatial *>(ptr)->get_rotation();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Spatial_set_rotation_degrees_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Spatial *>(ptr)->set_rotation_degrees(arg1_in);
}

void godot_icall_Spatial_get_rotation_degrees_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Spatial *>(ptr)->get_rotation_degrees();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Spatial_set_scale_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Spatial *>(ptr)->set_scale(arg1_in);
}

void godot_icall_Spatial_get_scale_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Spatial *>(ptr)->get_scale();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Spatial_set_global_transform_655b85c9(Object * ptr, GDMonoMarshal::M_Transform* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform arg1_in = MARSHALLED_IN(Transform, arg1);
    static_cast<Spatial *>(ptr)->set_global_transform(arg1_in);
}

void godot_icall_Spatial_get_global_transform_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Spatial *>(ptr)->get_global_transform();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

MonoObject* godot_icall_Spatial_get_parent_spatial_5ca237df(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Spatial *>(ptr)->get_parent_spatial();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_Spatial_set_ignore_transform_notification_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Spatial *>(ptr)->set_ignore_transform_notification(arg1_in);
}

void godot_icall_Spatial_set_as_toplevel_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Spatial *>(ptr)->set_as_toplevel(arg1_in);
}

MonoBoolean godot_icall_Spatial_is_set_as_toplevel_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Spatial *>(ptr)->is_set_as_toplevel();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Spatial_set_disable_scale_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Spatial *>(ptr)->set_disable_scale(arg1_in);
}

MonoBoolean godot_icall_Spatial_is_scale_disabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Spatial *>(ptr)->is_scale_disabled();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Spatial_get_world_1e353b0f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Spatial *>(ptr)->get_world();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Spatial_force_update_transform_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Spatial *>(ptr)->force_update_transform();
}

void godot_icall_Spatial_update_gizmo_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Spatial *>(ptr)->update_gizmo();
}

void godot_icall_Spatial_set_gizmo_b6a1956d(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Spatial *>(ptr)->set_gizmo(AutoRef(arg1));
}

MonoObject* godot_icall_Spatial_get_gizmo_748173ff(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Spatial *>(ptr)->get_gizmo();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Spatial_set_visible_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Spatial *>(ptr)->set_visible(arg1_in);
}

MonoBoolean godot_icall_Spatial_is_visible_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Spatial *>(ptr)->is_visible();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Spatial_is_visible_in_tree_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Spatial *>(ptr)->is_visible_in_tree();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Spatial_show_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Spatial *>(ptr)->show();
}

void godot_icall_Spatial_hide_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Spatial *>(ptr)->hide();
}

void godot_icall_Spatial_set_notify_local_transform_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Spatial *>(ptr)->set_notify_local_transform(arg1_in);
}

MonoBoolean godot_icall_Spatial_is_local_transform_notification_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Spatial *>(ptr)->is_local_transform_notification_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Spatial_set_notify_transform_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Spatial *>(ptr)->set_notify_transform(arg1_in);
}

MonoBoolean godot_icall_Spatial_is_transform_notification_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Spatial *>(ptr)->is_transform_notification_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Spatial_rotate_eb94ad74(Object * ptr, GDMonoMarshal::M_Vector3* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Spatial *>(ptr)->rotate(arg1_in, arg2_in);
}

void godot_icall_Spatial_global_rotate_eb94ad74(Object * ptr, GDMonoMarshal::M_Vector3* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Spatial *>(ptr)->global_rotate(arg1_in, arg2_in);
}

void godot_icall_Spatial_global_scale_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Spatial *>(ptr)->global_scale(arg1_in);
}

void godot_icall_Spatial_global_translate_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Spatial *>(ptr)->global_translate(arg1_in);
}

void godot_icall_Spatial_rotate_object_local_eb94ad74(Object * ptr, GDMonoMarshal::M_Vector3* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<Spatial *>(ptr)->rotate_object_local(arg1_in, arg2_in);
}

void godot_icall_Spatial_scale_object_local_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Spatial *>(ptr)->scale_object_local(arg1_in);
}

void godot_icall_Spatial_translate_object_local_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Spatial *>(ptr)->translate_object_local(arg1_in);
}

void godot_icall_Spatial_rotate_x_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Spatial *>(ptr)->rotate_x(arg1_in);
}

void godot_icall_Spatial_rotate_y_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Spatial *>(ptr)->rotate_y(arg1_in);
}

void godot_icall_Spatial_rotate_z_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Spatial *>(ptr)->rotate_z(arg1_in);
}

void godot_icall_Spatial_translate_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<Spatial *>(ptr)->translate(arg1_in);
}

void godot_icall_Spatial_orthonormalize_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Spatial *>(ptr)->orthonormalize();
}

void godot_icall_Spatial_set_identity_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Spatial *>(ptr)->set_identity();
}

void godot_icall_Spatial_look_at_bf22f212(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<Spatial *>(ptr)->look_at(arg1_in, arg2_in);
}

void godot_icall_Spatial_look_at_from_position_8d29af1e(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, GDMonoMarshal::M_Vector3* arg3) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    Vector3 arg3_in = MARSHALLED_IN(Vector3, arg3);
    static_cast<Spatial *>(ptr)->look_at_from_position(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Spatial_to_local_af4cfa14(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    auto ret = static_cast<Spatial *>(ptr)->to_local(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_Spatial_to_global_af4cfa14(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    auto ret = static_cast<Spatial *>(ptr)->to_global(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

Object* godot_icall_Spatial_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Spatial")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SpatialMaterial_set_albedo_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<SpatialMaterial *>(ptr)->set_albedo(arg1_in);
}

void godot_icall_SpatialMaterial_get_albedo_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_albedo();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_SpatialMaterial_set_specular_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_specular(arg1_in);
}

void godot_icall_SpatialMaterial_get_specular_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_specular();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_metallic_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_metallic(arg1_in);
}

void godot_icall_SpatialMaterial_get_metallic_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_metallic();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_roughness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_roughness(arg1_in);
}

void godot_icall_SpatialMaterial_get_roughness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_roughness();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_emission_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<SpatialMaterial *>(ptr)->set_emission(arg1_in);
}

void godot_icall_SpatialMaterial_get_emission_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_emission();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_SpatialMaterial_set_emission_energy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_emission_energy(arg1_in);
}

void godot_icall_SpatialMaterial_get_emission_energy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_emission_energy();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_normal_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_normal_scale(arg1_in);
}

void godot_icall_SpatialMaterial_get_normal_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_normal_scale();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_rim_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_rim(arg1_in);
}

void godot_icall_SpatialMaterial_get_rim_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_rim();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_rim_tint_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_rim_tint(arg1_in);
}

void godot_icall_SpatialMaterial_get_rim_tint_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_rim_tint();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_clearcoat_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_clearcoat(arg1_in);
}

void godot_icall_SpatialMaterial_get_clearcoat_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_clearcoat();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_clearcoat_gloss_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_clearcoat_gloss(arg1_in);
}

void godot_icall_SpatialMaterial_get_clearcoat_gloss_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_clearcoat_gloss();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_anisotropy_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_anisotropy(arg1_in);
}

void godot_icall_SpatialMaterial_get_anisotropy_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_anisotropy();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_depth_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_depth_scale(arg1_in);
}

void godot_icall_SpatialMaterial_get_depth_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_depth_scale();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_subsurface_scattering_strength_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_subsurface_scattering_strength(arg1_in);
}

void godot_icall_SpatialMaterial_get_subsurface_scattering_strength_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_subsurface_scattering_strength();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_transmission_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<SpatialMaterial *>(ptr)->set_transmission(arg1_in);
}

void godot_icall_SpatialMaterial_get_transmission_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_transmission();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_SpatialMaterial_set_refraction_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_refraction(arg1_in);
}

void godot_icall_SpatialMaterial_get_refraction_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_refraction();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_line_width_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_line_width(arg1_in);
}

void godot_icall_SpatialMaterial_get_line_width_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_line_width();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_point_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_point_size(arg1_in);
}

void godot_icall_SpatialMaterial_get_point_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_point_size();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_detail_uv_a024e460(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_detail_uv((SpatialMaterial::DetailUV)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_detail_uv_5efe4304(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_detail_uv();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_blend_mode_c5b84632(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_blend_mode((SpatialMaterial::BlendMode)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_blend_mode_399a132(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_blend_mode();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_depth_draw_mode_31803d22(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_depth_draw_mode((SpatialMaterial::DepthDrawMode)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_depth_draw_mode_efa20c42(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_depth_draw_mode();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_cull_mode_ce9116b1(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_cull_mode((SpatialMaterial::CullMode)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_cull_mode_fcb0f1b3(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_cull_mode();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_diffuse_mode_c07a8ff3(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_diffuse_mode((SpatialMaterial::DiffuseMode)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_diffuse_mode_fedc5a71(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_diffuse_mode();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_specular_mode_2557830c(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_specular_mode((SpatialMaterial::SpecularMode)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_specular_mode_e3ef5e60(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_specular_mode();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_flag_3cbc5e5c(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<SpatialMaterial *>(ptr)->set_flag((SpatialMaterial::Flags)arg1_in, arg2_in);
}

MonoBoolean godot_icall_SpatialMaterial_get_flag_96c571a7(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_flag((SpatialMaterial::Flags)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpatialMaterial_set_feature_1a6b640c(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<SpatialMaterial *>(ptr)->set_feature((SpatialMaterial::Feature)arg1_in, arg2_in);
}

MonoBoolean godot_icall_SpatialMaterial_get_feature_3a7ae32(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_feature((SpatialMaterial::Feature)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpatialMaterial_set_texture_b251c09e(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_texture((SpatialMaterial::TextureParam)arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_SpatialMaterial_get_texture_83038d6b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_texture((SpatialMaterial::TextureParam)arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_SpatialMaterial_set_detail_blend_mode_c5b84632(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_detail_blend_mode((SpatialMaterial::BlendMode)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_detail_blend_mode_399a132(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_detail_blend_mode();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_uv1_scale_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<SpatialMaterial *>(ptr)->set_uv1_scale(arg1_in);
}

void godot_icall_SpatialMaterial_get_uv1_scale_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_uv1_scale();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_SpatialMaterial_set_uv1_offset_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<SpatialMaterial *>(ptr)->set_uv1_offset(arg1_in);
}

void godot_icall_SpatialMaterial_get_uv1_offset_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_uv1_offset();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_SpatialMaterial_set_uv1_triplanar_blend_sharpness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_uv1_triplanar_blend_sharpness(arg1_in);
}

void godot_icall_SpatialMaterial_get_uv1_triplanar_blend_sharpness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_uv1_triplanar_blend_sharpness();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_uv2_scale_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<SpatialMaterial *>(ptr)->set_uv2_scale(arg1_in);
}

void godot_icall_SpatialMaterial_get_uv2_scale_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_uv2_scale();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_SpatialMaterial_set_uv2_offset_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<SpatialMaterial *>(ptr)->set_uv2_offset(arg1_in);
}

void godot_icall_SpatialMaterial_get_uv2_offset_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_uv2_offset();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_SpatialMaterial_set_uv2_triplanar_blend_sharpness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_uv2_triplanar_blend_sharpness(arg1_in);
}

void godot_icall_SpatialMaterial_get_uv2_triplanar_blend_sharpness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_uv2_triplanar_blend_sharpness();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_billboard_mode_20a3461a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_billboard_mode((SpatialMaterial::BillboardMode)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_billboard_mode_de82a14a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_billboard_mode();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_particles_anim_h_frames_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<SpatialMaterial *>(ptr)->set_particles_anim_h_frames(arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_particles_anim_h_frames_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_particles_anim_h_frames();
    return static_cast<int32_t>(ret);
}

void godot_icall_SpatialMaterial_set_particles_anim_v_frames_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<SpatialMaterial *>(ptr)->set_particles_anim_v_frames(arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_particles_anim_v_frames_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_particles_anim_v_frames();
    return static_cast<int32_t>(ret);
}

void godot_icall_SpatialMaterial_set_particles_anim_loop_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SpatialMaterial *>(ptr)->set_particles_anim_loop(arg1_in);
}

MonoBoolean godot_icall_SpatialMaterial_get_particles_anim_loop_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_particles_anim_loop();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpatialMaterial_set_depth_deep_parallax_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SpatialMaterial *>(ptr)->set_depth_deep_parallax(arg1_in);
}

MonoBoolean godot_icall_SpatialMaterial_is_depth_deep_parallax_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SpatialMaterial *>(ptr)->is_depth_deep_parallax_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpatialMaterial_set_depth_deep_parallax_min_layers_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<SpatialMaterial *>(ptr)->set_depth_deep_parallax_min_layers(arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_depth_deep_parallax_min_layers_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_depth_deep_parallax_min_layers();
    return static_cast<int32_t>(ret);
}

void godot_icall_SpatialMaterial_set_depth_deep_parallax_max_layers_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<SpatialMaterial *>(ptr)->set_depth_deep_parallax_max_layers(arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_depth_deep_parallax_max_layers_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_depth_deep_parallax_max_layers();
    return static_cast<int32_t>(ret);
}

void godot_icall_SpatialMaterial_set_depth_deep_parallax_flip_tangent_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SpatialMaterial *>(ptr)->set_depth_deep_parallax_flip_tangent(arg1_in);
}

MonoBoolean godot_icall_SpatialMaterial_get_depth_deep_parallax_flip_tangent_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_depth_deep_parallax_flip_tangent();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpatialMaterial_set_depth_deep_parallax_flip_binormal_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SpatialMaterial *>(ptr)->set_depth_deep_parallax_flip_binormal(arg1_in);
}

MonoBoolean godot_icall_SpatialMaterial_get_depth_deep_parallax_flip_binormal_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_depth_deep_parallax_flip_binormal();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpatialMaterial_set_grow_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_grow(arg1_in);
}

void godot_icall_SpatialMaterial_get_grow_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_grow();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_emission_operator_e9a43bc9(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_emission_operator((SpatialMaterial::EmissionOperator)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_emission_operator_4dd88324(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_emission_operator();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_ao_light_affect_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_ao_light_affect(arg1_in);
}

void godot_icall_SpatialMaterial_get_ao_light_affect_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_ao_light_affect();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_alpha_scissor_threshold_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_alpha_scissor_threshold(arg1_in);
}

void godot_icall_SpatialMaterial_get_alpha_scissor_threshold_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_alpha_scissor_threshold();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_grow_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SpatialMaterial *>(ptr)->set_grow_enabled(arg1_in);
}

MonoBoolean godot_icall_SpatialMaterial_is_grow_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SpatialMaterial *>(ptr)->is_grow_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpatialMaterial_set_metallic_texture_channel_2380fd08(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_metallic_texture_channel((SpatialMaterial::TextureChannel)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_metallic_texture_channel_e1a24c5c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_metallic_texture_channel();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_roughness_texture_channel_2380fd08(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_roughness_texture_channel((SpatialMaterial::TextureChannel)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_roughness_texture_channel_e1a24c5c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_roughness_texture_channel();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_ao_texture_channel_2380fd08(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_ao_texture_channel((SpatialMaterial::TextureChannel)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_ao_texture_channel_e1a24c5c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_ao_texture_channel();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_refraction_texture_channel_2380fd08(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_refraction_texture_channel((SpatialMaterial::TextureChannel)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_refraction_texture_channel_e1a24c5c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_refraction_texture_channel();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_proximity_fade_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SpatialMaterial *>(ptr)->set_proximity_fade(arg1_in);
}

MonoBoolean godot_icall_SpatialMaterial_is_proximity_fade_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SpatialMaterial *>(ptr)->is_proximity_fade_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpatialMaterial_set_proximity_fade_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_proximity_fade_distance(arg1_in);
}

void godot_icall_SpatialMaterial_get_proximity_fade_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_proximity_fade_distance();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_distance_fade_4a404934(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpatialMaterial *>(ptr)->set_distance_fade((SpatialMaterial::DistanceFadeMode)arg1_in);
}

int32_t godot_icall_SpatialMaterial_get_distance_fade_493167e7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_distance_fade();
    return (int32_t)ret;
}

void godot_icall_SpatialMaterial_set_distance_fade_max_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_distance_fade_max_distance(arg1_in);
}

void godot_icall_SpatialMaterial_get_distance_fade_max_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_distance_fade_max_distance();
    *arg_ret = (float)ret;
}

void godot_icall_SpatialMaterial_set_distance_fade_min_distance_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpatialMaterial *>(ptr)->set_distance_fade_min_distance(arg1_in);
}

void godot_icall_SpatialMaterial_get_distance_fade_min_distance_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialMaterial *>(ptr)->get_distance_fade_min_distance();
    *arg_ret = (float)ret;
}

Object* godot_icall_SpatialMaterial_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SpatialMaterial")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SpatialVelocityTracker_set_track_physics_step_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SpatialVelocityTracker *>(ptr)->set_track_physics_step(arg1_in);
}

MonoBoolean godot_icall_SpatialVelocityTracker_is_tracking_physics_step_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SpatialVelocityTracker *>(ptr)->is_tracking_physics_step();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpatialVelocityTracker_update_position_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<SpatialVelocityTracker *>(ptr)->update_position(arg1_in);
}

void godot_icall_SpatialVelocityTracker_get_tracked_linear_velocity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpatialVelocityTracker *>(ptr)->get_tracked_linear_velocity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_SpatialVelocityTracker_reset_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<SpatialVelocityTracker *>(ptr)->reset(arg1_in);
}

Object* godot_icall_SpatialVelocityTracker_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SpatialVelocityTracker")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SphereMesh_set_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SphereMesh *>(ptr)->set_radius(arg1_in);
}

void godot_icall_SphereMesh_get_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SphereMesh *>(ptr)->get_radius();
    *arg_ret = (float)ret;
}

void godot_icall_SphereMesh_set_height_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SphereMesh *>(ptr)->set_height(arg1_in);
}

void godot_icall_SphereMesh_get_height_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SphereMesh *>(ptr)->get_height();
    *arg_ret = (float)ret;
}

void godot_icall_SphereMesh_set_radial_segments_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<SphereMesh *>(ptr)->set_radial_segments(arg1_in);
}

int32_t godot_icall_SphereMesh_get_radial_segments_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SphereMesh *>(ptr)->get_radial_segments();
    return static_cast<int32_t>(ret);
}

void godot_icall_SphereMesh_set_rings_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<SphereMesh *>(ptr)->set_rings(arg1_in);
}

int32_t godot_icall_SphereMesh_get_rings_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SphereMesh *>(ptr)->get_rings();
    return static_cast<int32_t>(ret);
}

void godot_icall_SphereMesh_set_is_hemisphere_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SphereMesh *>(ptr)->set_is_hemisphere(arg1_in);
}

MonoBoolean godot_icall_SphereMesh_get_is_hemisphere_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SphereMesh *>(ptr)->get_is_hemisphere();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_SphereMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SphereMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SphereShape_set_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SphereShape *>(ptr)->set_radius(arg1_in);
}

void godot_icall_SphereShape_get_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SphereShape *>(ptr)->get_radius();
    *arg_ret = (float)ret;
}

Object* godot_icall_SphereShape_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SphereShape")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SpinBox_set_align_e83a8d0a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpinBox *>(ptr)->set_align((LineEdit::Align)arg1_in);
}

int32_t godot_icall_SpinBox_get_align_3e41aa45(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpinBox *>(ptr)->get_align();
    return (int32_t)ret;
}

void godot_icall_SpinBox_set_suffix_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<SpinBox *>(ptr)->set_suffix(arg1_in);
}

MonoString* godot_icall_SpinBox_get_suffix_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SpinBox *>(ptr)->get_suffix();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_SpinBox_set_prefix_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<SpinBox *>(ptr)->set_prefix(arg1_in);
}

MonoString* godot_icall_SpinBox_get_prefix_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SpinBox *>(ptr)->get_prefix();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_SpinBox_set_editable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SpinBox *>(ptr)->set_editable(arg1_in);
}

MonoBoolean godot_icall_SpinBox_is_editable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SpinBox *>(ptr)->is_editable();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpinBox_apply_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<SpinBox *>(ptr)->apply();
}

MonoObject* godot_icall_SpinBox_get_line_edit_3297ede3(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SpinBox *>(ptr)->get_line_edit();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Object* godot_icall_SpinBox_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SpinBox")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SplitContainer_set_split_offset_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<SplitContainer *>(ptr)->set_split_offset(arg1_in);
}

int32_t godot_icall_SplitContainer_get_split_offset_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SplitContainer *>(ptr)->get_split_offset();
    return static_cast<int32_t>(ret);
}

void godot_icall_SplitContainer_clamp_split_offset_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<SplitContainer *>(ptr)->clamp_split_offset();
}

void godot_icall_SplitContainer_set_collapsed_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SplitContainer *>(ptr)->set_collapsed(arg1_in);
}

MonoBoolean godot_icall_SplitContainer_is_collapsed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SplitContainer *>(ptr)->is_collapsed();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SplitContainer_set_dragger_visibility_939602ae(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SplitContainer *>(ptr)->set_dragger_visibility((SplitContainer::DraggerVisibility)arg1_in);
}

int32_t godot_icall_SplitContainer_get_dragger_visibility_bceaa729(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SplitContainer *>(ptr)->get_dragger_visibility();
    return (int32_t)ret;
}

Object* godot_icall_SpotLight_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SpotLight")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SpringArm_get_hit_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpringArm *>(ptr)->get_hit_length();
    *arg_ret = (float)ret;
}

void godot_icall_SpringArm_set_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpringArm *>(ptr)->set_length(arg1_in);
}

void godot_icall_SpringArm_get_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpringArm *>(ptr)->get_length();
    *arg_ret = (float)ret;
}

void godot_icall_SpringArm_set_shape_f51cd014(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SpringArm *>(ptr)->set_shape(AutoRef(arg1));
}

MonoObject* godot_icall_SpringArm_get_shape_34362f58(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SpringArm *>(ptr)->get_shape();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_SpringArm_add_excluded_object_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SpringArm *>(ptr)->add_excluded_object(*arg1);
}

MonoBoolean godot_icall_SpringArm_remove_excluded_object_36cc12b4(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SpringArm *>(ptr)->remove_excluded_object(*arg1);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpringArm_clear_excluded_objects_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<SpringArm *>(ptr)->clear_excluded_objects();
}

void godot_icall_SpringArm_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<SpringArm *>(ptr)->set_mask(arg1_in);
}

uint32_t godot_icall_SpringArm_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<SpringArm *>(ptr)->get_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_SpringArm_set_margin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpringArm *>(ptr)->set_margin(arg1_in);
}

void godot_icall_SpringArm_get_margin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpringArm *>(ptr)->get_margin();
    *arg_ret = (float)ret;
}

Object* godot_icall_SpringArm_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SpringArm")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Sprite_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Sprite *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_Sprite_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Sprite *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Sprite_set_normal_map_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Sprite *>(ptr)->set_normal_map(AutoRef(arg1));
}

MonoObject* godot_icall_Sprite_get_normal_map_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Sprite *>(ptr)->get_normal_map();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Sprite_set_centered_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Sprite *>(ptr)->set_centered(arg1_in);
}

MonoBoolean godot_icall_Sprite_is_centered_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Sprite *>(ptr)->is_centered();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Sprite_set_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Sprite *>(ptr)->set_offset(arg1_in);
}

void godot_icall_Sprite_get_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Sprite *>(ptr)->get_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Sprite_set_flip_h_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Sprite *>(ptr)->set_flip_h(arg1_in);
}

MonoBoolean godot_icall_Sprite_is_flipped_h_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Sprite *>(ptr)->is_flipped_h();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Sprite_set_flip_v_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Sprite *>(ptr)->set_flip_v(arg1_in);
}

MonoBoolean godot_icall_Sprite_is_flipped_v_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Sprite *>(ptr)->is_flipped_v();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Sprite_set_region_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Sprite *>(ptr)->set_region(arg1_in);
}

MonoBoolean godot_icall_Sprite_is_region_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Sprite *>(ptr)->is_region();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Sprite_is_pixel_opaque_fba3d544(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Sprite *>(ptr)->is_pixel_opaque(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Sprite_set_region_rect_a5ed61f1(Object * ptr, GDMonoMarshal::M_Rect2* arg1) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    static_cast<Sprite *>(ptr)->set_region_rect(arg1_in);
}

void godot_icall_Sprite_get_region_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Sprite *>(ptr)->get_region_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_Sprite_set_region_filter_clip_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Sprite *>(ptr)->set_region_filter_clip(arg1_in);
}

MonoBoolean godot_icall_Sprite_is_region_filter_clip_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Sprite *>(ptr)->is_region_filter_clip_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Sprite_set_frame_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Sprite *>(ptr)->set_frame(arg1_in);
}

int32_t godot_icall_Sprite_get_frame_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Sprite *>(ptr)->get_frame();
    return static_cast<int32_t>(ret);
}

void godot_icall_Sprite_set_frame_coords_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Sprite *>(ptr)->set_frame_coords(arg1_in);
}

void godot_icall_Sprite_get_frame_coords_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Sprite *>(ptr)->get_frame_coords();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Sprite_set_vframes_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Sprite *>(ptr)->set_vframes(arg1_in);
}

int32_t godot_icall_Sprite_get_vframes_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Sprite *>(ptr)->get_vframes();
    return static_cast<int32_t>(ret);
}

void godot_icall_Sprite_set_hframes_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Sprite *>(ptr)->set_hframes(arg1_in);
}

int32_t godot_icall_Sprite_get_hframes_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Sprite *>(ptr)->get_hframes();
    return static_cast<int32_t>(ret);
}

void godot_icall_Sprite_get_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Sprite *>(ptr)->get_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

Object* godot_icall_Sprite_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Sprite")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Sprite3D_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Sprite3D *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_Sprite3D_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Sprite3D *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Sprite3D_set_region_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Sprite3D *>(ptr)->set_region(arg1_in);
}

MonoBoolean godot_icall_Sprite3D_is_region_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Sprite3D *>(ptr)->is_region();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Sprite3D_set_region_rect_a5ed61f1(Object * ptr, GDMonoMarshal::M_Rect2* arg1) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    static_cast<Sprite3D *>(ptr)->set_region_rect(arg1_in);
}

void godot_icall_Sprite3D_get_region_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Sprite3D *>(ptr)->get_region_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_Sprite3D_set_frame_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Sprite3D *>(ptr)->set_frame(arg1_in);
}

int32_t godot_icall_Sprite3D_get_frame_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Sprite3D *>(ptr)->get_frame();
    return static_cast<int32_t>(ret);
}

void godot_icall_Sprite3D_set_frame_coords_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Sprite3D *>(ptr)->set_frame_coords(arg1_in);
}

void godot_icall_Sprite3D_get_frame_coords_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Sprite3D *>(ptr)->get_frame_coords();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Sprite3D_set_vframes_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Sprite3D *>(ptr)->set_vframes(arg1_in);
}

int32_t godot_icall_Sprite3D_get_vframes_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Sprite3D *>(ptr)->get_vframes();
    return static_cast<int32_t>(ret);
}

void godot_icall_Sprite3D_set_hframes_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Sprite3D *>(ptr)->set_hframes(arg1_in);
}

int32_t godot_icall_Sprite3D_get_hframes_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Sprite3D *>(ptr)->get_hframes();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_Sprite3D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Sprite3D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SpriteBase3D_set_centered_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SpriteBase3D *>(ptr)->set_centered(arg1_in);
}

MonoBoolean godot_icall_SpriteBase3D_is_centered_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SpriteBase3D *>(ptr)->is_centered();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpriteBase3D_set_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<SpriteBase3D *>(ptr)->set_offset(arg1_in);
}

void godot_icall_SpriteBase3D_get_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpriteBase3D *>(ptr)->get_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_SpriteBase3D_set_flip_h_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SpriteBase3D *>(ptr)->set_flip_h(arg1_in);
}

MonoBoolean godot_icall_SpriteBase3D_is_flipped_h_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SpriteBase3D *>(ptr)->is_flipped_h();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpriteBase3D_set_flip_v_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SpriteBase3D *>(ptr)->set_flip_v(arg1_in);
}

MonoBoolean godot_icall_SpriteBase3D_is_flipped_v_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<SpriteBase3D *>(ptr)->is_flipped_v();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpriteBase3D_set_modulate_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<SpriteBase3D *>(ptr)->set_modulate(arg1_in);
}

void godot_icall_SpriteBase3D_get_modulate_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpriteBase3D *>(ptr)->get_modulate();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_SpriteBase3D_set_opacity_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpriteBase3D *>(ptr)->set_opacity(arg1_in);
}

void godot_icall_SpriteBase3D_get_opacity_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpriteBase3D *>(ptr)->get_opacity();
    *arg_ret = (float)ret;
}

void godot_icall_SpriteBase3D_set_pixel_size_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<SpriteBase3D *>(ptr)->set_pixel_size(arg1_in);
}

void godot_icall_SpriteBase3D_get_pixel_size_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpriteBase3D *>(ptr)->get_pixel_size();
    *arg_ret = (float)ret;
}

void godot_icall_SpriteBase3D_set_axis_90db7b14(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpriteBase3D *>(ptr)->set_axis((Vector3::Axis)arg1_in);
}

int32_t godot_icall_SpriteBase3D_get_axis_4e7ac658(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpriteBase3D *>(ptr)->get_axis();
    return (int32_t)ret;
}

void godot_icall_SpriteBase3D_set_draw_flag_d1f8608b(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<SpriteBase3D *>(ptr)->set_draw_flag((SpriteBase3D::DrawFlags)arg1_in, arg2_in);
}

MonoBoolean godot_icall_SpriteBase3D_get_draw_flag_cdf2e5e1(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<SpriteBase3D *>(ptr)->get_draw_flag((SpriteBase3D::DrawFlags)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpriteBase3D_set_alpha_cut_mode_29e715b5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpriteBase3D *>(ptr)->set_alpha_cut_mode((SpriteBase3D::AlphaCutMode)arg1_in);
}

int32_t godot_icall_SpriteBase3D_get_alpha_cut_mode_d73ef4b7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpriteBase3D *>(ptr)->get_alpha_cut_mode();
    return (int32_t)ret;
}

void godot_icall_SpriteBase3D_set_billboard_mode_20a3461a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SpriteBase3D *>(ptr)->set_billboard_mode((SpatialMaterial::BillboardMode)arg1_in);
}

int32_t godot_icall_SpriteBase3D_get_billboard_mode_de82a14a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<SpriteBase3D *>(ptr)->get_billboard_mode();
    return (int32_t)ret;
}

void godot_icall_SpriteBase3D_get_item_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<SpriteBase3D *>(ptr)->get_item_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

MonoObject* godot_icall_SpriteBase3D_generate_triangle_mesh_c1c0bb02(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SpriteBase3D *>(ptr)->generate_triangle_mesh();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_SpriteFrames_add_animation_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<SpriteFrames *>(ptr)->add_animation(arg1_in);
}

MonoBoolean godot_icall_SpriteFrames_has_animation_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<SpriteFrames *>(ptr)->has_animation(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpriteFrames_remove_animation_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<SpriteFrames *>(ptr)->remove_animation(arg1_in);
}

void godot_icall_SpriteFrames_rename_animation_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<SpriteFrames *>(ptr)->rename_animation(arg1_in, arg2_in);
}

MonoArray* godot_icall_SpriteFrames_get_animation_names_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SpriteFrames *>(ptr)->get_animation_names();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall_SpriteFrames_set_animation_speed_ec7139b1(Object * ptr, MonoString* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    static_cast<SpriteFrames *>(ptr)->set_animation_speed(arg1_in, arg2_in);
}

void godot_icall_SpriteFrames_get_animation_speed_9f10687(Object * ptr, MonoString* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<SpriteFrames *>(ptr)->get_animation_speed(arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_SpriteFrames_set_animation_loop_f253b141(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<SpriteFrames *>(ptr)->set_animation_loop(arg1_in, arg2_in);
}

MonoBoolean godot_icall_SpriteFrames_get_animation_loop_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<SpriteFrames *>(ptr)->get_animation_loop(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_SpriteFrames_add_frame_b3412c2d(Object * ptr, MonoString* arg1, Object * arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<SpriteFrames *>(ptr)->add_frame(arg1_in, AutoRef(arg2), arg3_in);
}

int32_t godot_icall_SpriteFrames_get_frame_count_79b61600(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<SpriteFrames *>(ptr)->get_frame_count(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_SpriteFrames_get_frame_fd44d69c(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<SpriteFrames *>(ptr)->get_frame(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_SpriteFrames_set_frame_ff84b506(Object * ptr, MonoString* arg1, int32_t arg2, Object * arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<SpriteFrames *>(ptr)->set_frame(arg1_in, arg2_in, AutoRef(arg3));
}

void godot_icall_SpriteFrames_remove_frame_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<SpriteFrames *>(ptr)->remove_frame(arg1_in, arg2_in);
}

void godot_icall_SpriteFrames_clear_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<SpriteFrames *>(ptr)->clear(arg1_in);
}

void godot_icall_SpriteFrames_clear_all_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<SpriteFrames *>(ptr)->clear_all();
}

void godot_icall_SpriteFrames__set_frames_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SpriteFrames *>(ptr)->_set_frames(*arg1);
}

Array* godot_icall_SpriteFrames__get_frames_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SpriteFrames *>(ptr)->_get_frames();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_SpriteFrames__set_animations_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SpriteFrames *>(ptr)->_set_animations(*arg1);
}

Array* godot_icall_SpriteFrames__get_animations_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SpriteFrames *>(ptr)->_get_animations();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_SpriteFrames_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SpriteFrames")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_StaticBody_set_constant_linear_velocity_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<StaticBody *>(ptr)->set_constant_linear_velocity(arg1_in);
}

void godot_icall_StaticBody_set_constant_angular_velocity_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<StaticBody *>(ptr)->set_constant_angular_velocity(arg1_in);
}

void godot_icall_StaticBody_get_constant_linear_velocity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StaticBody *>(ptr)->get_constant_linear_velocity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_StaticBody_get_constant_angular_velocity_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StaticBody *>(ptr)->get_constant_angular_velocity();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall_StaticBody_set_physics_material_override_e4d5a435(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<StaticBody *>(ptr)->set_physics_material_override(AutoRef(arg1));
}

MonoObject* godot_icall_StaticBody_get_physics_material_override_226d8337(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<StaticBody *>(ptr)->get_physics_material_override();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_StaticBody_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "StaticBody")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_StaticBody2D_set_constant_linear_velocity_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<StaticBody2D *>(ptr)->set_constant_linear_velocity(arg1_in);
}

void godot_icall_StaticBody2D_set_constant_angular_velocity_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<StaticBody2D *>(ptr)->set_constant_angular_velocity(arg1_in);
}

void godot_icall_StaticBody2D_get_constant_linear_velocity_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StaticBody2D *>(ptr)->get_constant_linear_velocity();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_StaticBody2D_get_constant_angular_velocity_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StaticBody2D *>(ptr)->get_constant_angular_velocity();
    *arg_ret = (float)ret;
}

void godot_icall_StaticBody2D_set_physics_material_override_e4d5a435(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<StaticBody2D *>(ptr)->set_physics_material_override(AutoRef(arg1));
}

MonoObject* godot_icall_StaticBody2D_get_physics_material_override_226d8337(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<StaticBody2D *>(ptr)->get_physics_material_override();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_StaticBody2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "StaticBody2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_StreamPeer_put_data_7c32072c(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecByte(arg1);
    auto ret = static_cast<StreamPeer *>(ptr)->_put_data(arg1_in);
    return (int32_t)ret;
}

Array* godot_icall_StreamPeer_put_partial_data_ade8f6c5(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecByte(arg1);
    auto ret = static_cast<StreamPeer *>(ptr)->_put_partial_data(arg1_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_StreamPeer_get_data_2ca2fcca(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<StreamPeer *>(ptr)->_get_data(arg1_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_StreamPeer_get_partial_data_2ca2fcca(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<StreamPeer *>(ptr)->_get_partial_data(arg1_in);
    return memnew(Array(Variant::from(ret)));
}

int32_t godot_icall_StreamPeer_get_available_bytes_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StreamPeer *>(ptr)->get_available_bytes();
    return static_cast<int32_t>(ret);
}

void godot_icall_StreamPeer_set_big_endian_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<StreamPeer *>(ptr)->set_big_endian(arg1_in);
}

MonoBoolean godot_icall_StreamPeer_is_big_endian_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<StreamPeer *>(ptr)->is_big_endian_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_StreamPeer_put_8_d0aaf02a(Object * ptr, int8_t arg1) {
    ERR_FAIL_NULL(ptr);
    int8_t arg1_in = static_cast<int8_t>(arg1);
    static_cast<StreamPeer *>(ptr)->put_8(arg1_in);
}

void godot_icall_StreamPeer_put_u8_a31c261d(Object * ptr, uint8_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint8_t arg1_in = static_cast<uint8_t>(arg1);
    static_cast<StreamPeer *>(ptr)->put_u8(arg1_in);
}

void godot_icall_StreamPeer_put_16_6b3fd69f(Object * ptr, int16_t arg1) {
    ERR_FAIL_NULL(ptr);
    int16_t arg1_in = static_cast<int16_t>(arg1);
    static_cast<StreamPeer *>(ptr)->put_16(arg1_in);
}

void godot_icall_StreamPeer_put_u16_2b2eae4(Object * ptr, uint16_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint16_t arg1_in = static_cast<uint16_t>(arg1);
    static_cast<StreamPeer *>(ptr)->put_u16(arg1_in);
}

void godot_icall_StreamPeer_put_32_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<StreamPeer *>(ptr)->put_32(arg1_in);
}

void godot_icall_StreamPeer_put_u32_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<StreamPeer *>(ptr)->put_u32(arg1_in);
}

void godot_icall_StreamPeer_put_64_f9161991(Object * ptr, int64_t* arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = static_cast<int64_t>(*arg1);
    static_cast<StreamPeer *>(ptr)->put_64(arg1_in);
}

void godot_icall_StreamPeer_put_u64_9d9e6424(Object * ptr, uint64_t* arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = static_cast<int64_t>(*arg1);
    static_cast<StreamPeer *>(ptr)->put_u64(arg1_in);
}

void godot_icall_StreamPeer_put_float_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<StreamPeer *>(ptr)->put_float(arg1_in);
}

void godot_icall_StreamPeer_put_double_f96f5126(Object * ptr, double* arg1) {
    ERR_FAIL_NULL(ptr);
    double arg1_in = static_cast<double>(*arg1);
    static_cast<StreamPeer *>(ptr)->put_double(arg1_in);
}

void godot_icall_StreamPeer_put_string_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<StreamPeer *>(ptr)->put_string(arg1_in);
}

void godot_icall_StreamPeer_put_utf8_string_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<StreamPeer *>(ptr)->put_utf8_string(arg1_in);
}

void godot_icall_StreamPeer_put_var_aff2c475(Object * ptr, MonoObject* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<StreamPeer *>(ptr)->put_var(arg1_in, arg2_in);
}

int8_t godot_icall_StreamPeer_get_8_e8c4f3a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int8_t());
    auto ret = static_cast<StreamPeer *>(ptr)->get_8();
    return static_cast<int8_t>(ret);
}

uint8_t godot_icall_StreamPeer_get_u8_6236014f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint8_t());
    auto ret = static_cast<StreamPeer *>(ptr)->get_u8();
    return static_cast<uint8_t>(ret);
}

int16_t godot_icall_StreamPeer_get_16_9a1731cd(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int16_t());
    auto ret = static_cast<StreamPeer *>(ptr)->get_16();
    return static_cast<int16_t>(ret);
}

uint16_t godot_icall_StreamPeer_get_u16_c0943588(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint16_t());
    auto ret = static_cast<StreamPeer *>(ptr)->get_u16();
    return static_cast<uint16_t>(ret);
}

int32_t godot_icall_StreamPeer_get_32_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StreamPeer *>(ptr)->get_32();
    return static_cast<int32_t>(ret);
}

uint32_t godot_icall_StreamPeer_get_u32_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<StreamPeer *>(ptr)->get_u32();
    return static_cast<uint32_t>(ret);
}

void godot_icall_StreamPeer_get_64_282fe8d3(Object * ptr, int64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = int64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StreamPeer *>(ptr)->get_64();
    *arg_ret = static_cast<int64_t>(ret);
}

void godot_icall_StreamPeer_get_u64_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StreamPeer *>(ptr)->get_u64();
    *arg_ret = (uint64_t)ret;
}

void godot_icall_StreamPeer_get_float_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StreamPeer *>(ptr)->get_float();
    *arg_ret = (float)ret;
}

void godot_icall_StreamPeer_get_double_27c6b046(Object * ptr, double* arg_ret) {
    if (ptr == nullptr) { *arg_ret = double(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StreamPeer *>(ptr)->get_double();
    *arg_ret = (double)ret;
}

MonoString* godot_icall_StreamPeer_get_string_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<StreamPeer *>(ptr)->get_string(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoObject* godot_icall_StreamPeer_get_var_f23997c6(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<StreamPeer *>(ptr)->get_var(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_StreamPeerBuffer_seek_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<StreamPeerBuffer *>(ptr)->seek(arg1_in);
}

int32_t godot_icall_StreamPeerBuffer_get_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StreamPeerBuffer *>(ptr)->get_size();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_StreamPeerBuffer_get_position_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StreamPeerBuffer *>(ptr)->get_position();
    return static_cast<int32_t>(ret);
}

void godot_icall_StreamPeerBuffer_resize_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<StreamPeerBuffer *>(ptr)->resize(arg1_in);
}

void godot_icall_StreamPeerBuffer_set_data_array_627085c1(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecByte(arg1);
    static_cast<StreamPeerBuffer *>(ptr)->set_data_array(eastl::move(arg1_in));
}

MonoArray* godot_icall_StreamPeerBuffer_get_data_array_8edaba4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<StreamPeerBuffer *>(ptr)->get_data_array();
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

void godot_icall_StreamPeerBuffer_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<StreamPeerBuffer *>(ptr)->clear();
}

MonoObject* godot_icall_StreamPeerBuffer_duplicate_42e72ff7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<StreamPeerBuffer *>(ptr)->duplicate();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_StreamPeerBuffer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "StreamPeerBuffer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_StreamPeerSSL_poll_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<StreamPeerSSL *>(ptr)->poll();
}

int32_t godot_icall_StreamPeerSSL_accept_stream_372072(Object * ptr, Object * arg1, Object * arg2, Object * arg3, Object * arg4) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StreamPeerSSL *>(ptr)->accept_stream(AutoRef(arg1), AutoRef(arg2), AutoRef(arg3), AutoRef(arg4));
    return (int32_t)ret;
}

int32_t godot_icall_StreamPeerSSL_connect_to_stream_b8532bf8(Object * ptr, Object * arg1, MonoBoolean arg2, MonoString* arg3, Object * arg4) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    bool arg2_in = static_cast<bool>(arg2);
    TmpString<512> arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    auto ret = static_cast<StreamPeerSSL *>(ptr)->connect_to_stream(AutoRef(arg1), arg2_in, arg3_in, AutoRef(arg4));
    return (int32_t)ret;
}

int32_t godot_icall_StreamPeerSSL_get_status_56023443(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StreamPeerSSL *>(ptr)->get_status();
    return (int32_t)ret;
}

void godot_icall_StreamPeerSSL_disconnect_from_stream_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<StreamPeerSSL *>(ptr)->disconnect_from_stream();
}

void godot_icall_StreamPeerSSL_set_blocking_handshake_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<StreamPeerSSL *>(ptr)->set_blocking_handshake_enabled(arg1_in);
}

MonoBoolean godot_icall_StreamPeerSSL_is_blocking_handshake_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<StreamPeerSSL *>(ptr)->is_blocking_handshake_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_StreamPeerSSL_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "StreamPeerSSL")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_StreamPeerTCP_connect_to_host_79efd067(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<StreamPeerTCP *>(ptr)->connect_to_host(IP_Address(arg1_in), arg2_in);
    return (int32_t)ret;
}

MonoBoolean godot_icall_StreamPeerTCP_is_connected_to_host_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<StreamPeerTCP *>(ptr)->is_connected_to_host();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_StreamPeerTCP_get_status_3d4e458a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StreamPeerTCP *>(ptr)->get_status();
    return (int32_t)ret;
}

MonoString* godot_icall_StreamPeerTCP_get_connected_host_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<StreamPeerTCP *>(ptr)->get_connected_host();
    return GDMonoMarshal::mono_string_from_godot(String(ret));
}

uint16_t godot_icall_StreamPeerTCP_get_connected_port_c0943588(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint16_t());
    auto ret = static_cast<StreamPeerTCP *>(ptr)->get_connected_port();
    return static_cast<uint16_t>(ret);
}

void godot_icall_StreamPeerTCP_disconnect_from_host_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<StreamPeerTCP *>(ptr)->disconnect_from_host();
}

void godot_icall_StreamPeerTCP_set_no_delay_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<StreamPeerTCP *>(ptr)->set_no_delay(arg1_in);
}

Object* godot_icall_StreamPeerTCP_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "StreamPeerTCP")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_StreamTexture_load_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<StreamTexture *>(ptr)->load(arg1_in);
    return (int32_t)ret;
}

MonoString* godot_icall_StreamTexture_get_load_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<StreamTexture *>(ptr)->get_load_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_StreamTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "StreamTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoBoolean godot_icall_StyleBox_test_mask_d2f95539(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Rect2* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    auto ret = static_cast<StyleBox *>(ptr)->test_mask(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_StyleBox_set_default_margin_86b3589f(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<StyleBox *>(ptr)->set_default_margin((Margin)arg1_in, arg2_in);
}

void godot_icall_StyleBox_get_default_margin_cb96d2bf(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<StyleBox *>(ptr)->get_default_margin((Margin)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_StyleBox_get_margin_cb96d2bf(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<StyleBox *>(ptr)->get_margin((Margin)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_StyleBox_get_minimum_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StyleBox *>(ptr)->get_minimum_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_StyleBox_get_center_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StyleBox *>(ptr)->get_center_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_StyleBox_get_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StyleBox *>(ptr)->get_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoObject* godot_icall_StyleBox_get_current_item_drawn_da29fc04(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<StyleBox *>(ptr)->get_current_item_drawn();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_StyleBox_draw_4b206f31(Object * ptr, RID* arg1, GDMonoMarshal::M_Rect2* arg2) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    static_cast<StyleBox *>(ptr)->draw(*arg1, arg2_in);
}

Object* godot_icall_StyleBoxEmpty_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "StyleBoxEmpty")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_StyleBoxFlat_set_bg_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_bg_color(arg1_in);
}

void godot_icall_StyleBoxFlat_get_bg_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StyleBoxFlat *>(ptr)->get_bg_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_StyleBoxFlat_set_border_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_border_color(arg1_in);
}

void godot_icall_StyleBoxFlat_get_border_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StyleBoxFlat *>(ptr)->get_border_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_StyleBoxFlat_set_border_width_all_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_border_width_all(arg1_in);
}

int32_t godot_icall_StyleBoxFlat_get_border_width_min_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StyleBoxFlat *>(ptr)->get_border_width_min();
    return static_cast<int32_t>(ret);
}

void godot_icall_StyleBoxFlat_set_border_width_d167c784(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<StyleBoxFlat *>(ptr)->set_border_width((Margin)arg1_in, arg2_in);
}

int32_t godot_icall_StyleBoxFlat_get_border_width_bbd2c228(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<StyleBoxFlat *>(ptr)->get_border_width((Margin)arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_StyleBoxFlat_set_border_blend_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_border_blend(arg1_in);
}

MonoBoolean godot_icall_StyleBoxFlat_get_border_blend_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<StyleBoxFlat *>(ptr)->get_border_blend();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_StyleBoxFlat_set_corner_radius_individual_2b70940c(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<StyleBoxFlat *>(ptr)->set_corner_radius_individual(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_StyleBoxFlat_set_corner_radius_all_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_corner_radius_all(arg1_in);
}

void godot_icall_StyleBoxFlat_set_corner_radius_766ac35f(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<StyleBoxFlat *>(ptr)->set_corner_radius((Corner)arg1_in, arg2_in);
}

int32_t godot_icall_StyleBoxFlat_get_corner_radius_b371a287(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<StyleBoxFlat *>(ptr)->get_corner_radius((Corner)arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_StyleBoxFlat_set_expand_margin_86b3589f(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<StyleBoxFlat *>(ptr)->set_expand_margin_size((Margin)arg1_in, arg2_in);
}

void godot_icall_StyleBoxFlat_set_expand_margin_all_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_expand_margin_size_all(arg1_in);
}

void godot_icall_StyleBoxFlat_set_expand_margin_individual_1ce1c818(Object * ptr, float* arg1, float* arg2, float* arg3, float* arg4) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    static_cast<StyleBoxFlat *>(ptr)->set_expand_margin_size_individual(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_StyleBoxFlat_get_expand_margin_cb96d2bf(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<StyleBoxFlat *>(ptr)->get_expand_margin_size((Margin)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_StyleBoxFlat_set_draw_center_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_draw_center(arg1_in);
}

MonoBoolean godot_icall_StyleBoxFlat_is_draw_center_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<StyleBoxFlat *>(ptr)->is_draw_center_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_StyleBoxFlat_set_shadow_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_shadow_color(arg1_in);
}

void godot_icall_StyleBoxFlat_get_shadow_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StyleBoxFlat *>(ptr)->get_shadow_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_StyleBoxFlat_set_shadow_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_shadow_size(arg1_in);
}

int32_t godot_icall_StyleBoxFlat_get_shadow_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StyleBoxFlat *>(ptr)->get_shadow_size();
    return static_cast<int32_t>(ret);
}

void godot_icall_StyleBoxFlat_set_shadow_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_shadow_offset(arg1_in);
}

void godot_icall_StyleBoxFlat_get_shadow_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StyleBoxFlat *>(ptr)->get_shadow_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_StyleBoxFlat_set_anti_aliased_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_anti_aliased(arg1_in);
}

MonoBoolean godot_icall_StyleBoxFlat_is_anti_aliased_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<StyleBoxFlat *>(ptr)->is_anti_aliased();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_StyleBoxFlat_set_aa_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_aa_size(arg1_in);
}

int32_t godot_icall_StyleBoxFlat_get_aa_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StyleBoxFlat *>(ptr)->get_aa_size();
    return static_cast<int32_t>(ret);
}

void godot_icall_StyleBoxFlat_set_corner_detail_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<StyleBoxFlat *>(ptr)->set_corner_detail(arg1_in);
}

int32_t godot_icall_StyleBoxFlat_get_corner_detail_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StyleBoxFlat *>(ptr)->get_corner_detail();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_StyleBoxFlat_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "StyleBoxFlat")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_StyleBoxLine_set_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<StyleBoxLine *>(ptr)->set_color(arg1_in);
}

void godot_icall_StyleBoxLine_get_color_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StyleBoxLine *>(ptr)->get_color();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_StyleBoxLine_set_thickness_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<StyleBoxLine *>(ptr)->set_thickness(arg1_in);
}

int32_t godot_icall_StyleBoxLine_get_thickness_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StyleBoxLine *>(ptr)->get_thickness();
    return static_cast<int32_t>(ret);
}

void godot_icall_StyleBoxLine_set_grow_begin_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<StyleBoxLine *>(ptr)->set_grow_begin(arg1_in);
}

void godot_icall_StyleBoxLine_get_grow_begin_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StyleBoxLine *>(ptr)->get_grow_begin();
    *arg_ret = (float)ret;
}

void godot_icall_StyleBoxLine_set_grow_end_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<StyleBoxLine *>(ptr)->set_grow_end(arg1_in);
}

void godot_icall_StyleBoxLine_get_grow_end_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StyleBoxLine *>(ptr)->get_grow_end();
    *arg_ret = (float)ret;
}

void godot_icall_StyleBoxLine_set_vertical_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<StyleBoxLine *>(ptr)->set_vertical(arg1_in);
}

MonoBoolean godot_icall_StyleBoxLine_is_vertical_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<StyleBoxLine *>(ptr)->is_vertical();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_StyleBoxLine_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "StyleBoxLine")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_StyleBoxTexture_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<StyleBoxTexture *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_StyleBoxTexture_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<StyleBoxTexture *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_StyleBoxTexture_set_normal_map_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<StyleBoxTexture *>(ptr)->set_normal_map(AutoRef(arg1));
}

MonoObject* godot_icall_StyleBoxTexture_get_normal_map_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<StyleBoxTexture *>(ptr)->get_normal_map();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_StyleBoxTexture_set_margin_size_86b3589f(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<StyleBoxTexture *>(ptr)->set_margin_size((Margin)arg1_in, arg2_in);
}

void godot_icall_StyleBoxTexture_get_margin_size_cb96d2bf(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<StyleBoxTexture *>(ptr)->get_margin_size((Margin)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_StyleBoxTexture_set_expand_margin_size_86b3589f(Object * ptr, int32_t arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    float arg2_in = static_cast<float>(*arg2);
    static_cast<StyleBoxTexture *>(ptr)->set_expand_margin_size((Margin)arg1_in, arg2_in);
}

void godot_icall_StyleBoxTexture_set_expand_margin_all_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<StyleBoxTexture *>(ptr)->set_expand_margin_size_all(arg1_in);
}

void godot_icall_StyleBoxTexture_set_expand_margin_individual_1ce1c818(Object * ptr, float* arg1, float* arg2, float* arg3, float* arg4) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    static_cast<StyleBoxTexture *>(ptr)->set_expand_margin_size_individual(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_StyleBoxTexture_get_expand_margin_size_cb96d2bf(Object * ptr, int32_t arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<StyleBoxTexture *>(ptr)->get_expand_margin_size((Margin)arg1_in);
    *arg_ret = (float)ret;
}

void godot_icall_StyleBoxTexture_set_region_rect_a5ed61f1(Object * ptr, GDMonoMarshal::M_Rect2* arg1) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    static_cast<StyleBoxTexture *>(ptr)->set_region_rect(arg1_in);
}

void godot_icall_StyleBoxTexture_get_region_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StyleBoxTexture *>(ptr)->get_region_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_StyleBoxTexture_set_draw_center_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<StyleBoxTexture *>(ptr)->set_draw_center(arg1_in);
}

MonoBoolean godot_icall_StyleBoxTexture_is_draw_center_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<StyleBoxTexture *>(ptr)->is_draw_center_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_StyleBoxTexture_set_modulate_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<StyleBoxTexture *>(ptr)->set_modulate(arg1_in);
}

void godot_icall_StyleBoxTexture_get_modulate_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<StyleBoxTexture *>(ptr)->get_modulate();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_StyleBoxTexture_set_h_axis_stretch_mode_76e9d12f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<StyleBoxTexture *>(ptr)->set_h_axis_stretch_mode((StyleBoxTexture::AxisStretchMode)arg1_in);
}

int32_t godot_icall_StyleBoxTexture_get_h_axis_stretch_mode_b449303d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StyleBoxTexture *>(ptr)->get_h_axis_stretch_mode();
    return (int32_t)ret;
}

void godot_icall_StyleBoxTexture_set_v_axis_stretch_mode_76e9d12f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<StyleBoxTexture *>(ptr)->set_v_axis_stretch_mode((StyleBoxTexture::AxisStretchMode)arg1_in);
}

int32_t godot_icall_StyleBoxTexture_get_v_axis_stretch_mode_b449303d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<StyleBoxTexture *>(ptr)->get_v_axis_stretch_mode();
    return (int32_t)ret;
}

Object* godot_icall_StyleBoxTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "StyleBoxTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_SurfaceTool_begin_f37c6b05(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<SurfaceTool *>(ptr)->begin((Mesh::PrimitiveType)arg1_in);
}

void godot_icall_SurfaceTool_add_vertex_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<SurfaceTool *>(ptr)->add_vertex(arg1_in);
}

void godot_icall_SurfaceTool_add_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<SurfaceTool *>(ptr)->add_color(arg1_in);
}

void godot_icall_SurfaceTool_add_normal_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<SurfaceTool *>(ptr)->add_normal(arg1_in);
}

void godot_icall_SurfaceTool_add_tangent_582036ef(Object * ptr, GDMonoMarshal::M_Plane* arg1) {
    ERR_FAIL_NULL(ptr);
    Plane arg1_in = MARSHALLED_IN(Plane, arg1);
    static_cast<SurfaceTool *>(ptr)->add_tangent(arg1_in);
}

void godot_icall_SurfaceTool_add_uv_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<SurfaceTool *>(ptr)->add_uv(arg1_in);
}

void godot_icall_SurfaceTool_add_uv2_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<SurfaceTool *>(ptr)->add_uv2(arg1_in);
}

void godot_icall_SurfaceTool_add_bones_6b64efb8(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecInt(arg1);
    static_cast<SurfaceTool *>(ptr)->add_bones(arg1_in);
}

void godot_icall_SurfaceTool_add_weights_da080d07(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecFloat(arg1);
    static_cast<SurfaceTool *>(ptr)->add_weights(arg1_in);
}

void godot_icall_SurfaceTool_add_smooth_group_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SurfaceTool *>(ptr)->add_smooth_group(arg1_in);
}

void godot_icall_SurfaceTool_add_triangle_fan_88f248d8(Object * ptr, MonoArray* arg1, MonoArray* arg2, MonoArray* arg3, MonoArray* arg4, MonoArray* arg5, Array* arg6) {
    ERR_FAIL_NULL(ptr);
    PoolVector3Array arg1_in = GDMonoMarshal::mono_array_to_PoolVector3Array(arg1);
    PoolVector2Array arg2_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg2);
    PoolColorArray arg3_in = GDMonoMarshal::mono_array_to_PoolColorArray(arg3);
    PoolVector2Array arg4_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg4);
    PoolVector3Array arg5_in = GDMonoMarshal::mono_array_to_PoolVector3Array(arg5);
    static_cast<SurfaceTool *>(ptr)->add_triangle_fan(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in, asVec<Plane>(*arg6));
}

void godot_icall_SurfaceTool_add_index_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<SurfaceTool *>(ptr)->add_index(arg1_in);
}

void godot_icall_SurfaceTool_index_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<SurfaceTool *>(ptr)->index();
}

void godot_icall_SurfaceTool_deindex_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<SurfaceTool *>(ptr)->deindex();
}

void godot_icall_SurfaceTool_generate_normals_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<SurfaceTool *>(ptr)->generate_normals(arg1_in);
}

void godot_icall_SurfaceTool_generate_tangents_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<SurfaceTool *>(ptr)->generate_tangents();
}

void godot_icall_SurfaceTool_set_material_be2d0ec2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<SurfaceTool *>(ptr)->set_material(AutoRef(arg1));
}

void godot_icall_SurfaceTool_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<SurfaceTool *>(ptr)->clear();
}

void godot_icall_SurfaceTool_create_from_b225a3ec(Object * ptr, Object * arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<SurfaceTool *>(ptr)->create_from(AutoRef(arg1), arg2_in);
}

void godot_icall_SurfaceTool_create_from_blend_shape_8016b713(Object * ptr, Object * arg1, int32_t arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    static_cast<SurfaceTool *>(ptr)->create_from_blend_shape(AutoRef(arg1), arg2_in, arg3_in);
}

void godot_icall_SurfaceTool_append_from_4a00e1a3(Object * ptr, Object * arg1, int32_t arg2, GDMonoMarshal::M_Transform* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Transform arg3_in = MARSHALLED_IN(Transform, arg3);
    static_cast<SurfaceTool *>(ptr)->append_from(AutoRef(arg1), arg2_in, arg3_in);
}

MonoObject* godot_icall_SurfaceTool_commit_5ae3e369(Object * ptr, Object * arg1, uint32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    auto ret = static_cast<SurfaceTool *>(ptr)->commit(AutoRef(arg1), arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Array* godot_icall_SurfaceTool_commit_to_arrays_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<SurfaceTool *>(ptr)->commit_to_arrays();
    return memnew(Array(ret));
}

Object* godot_icall_SurfaceTool_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "SurfaceTool")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoBoolean godot_icall_TCP_Server_is_connection_available_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TCP_Server *>(ptr)->is_connection_available();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_TCP_Server_is_listening_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TCP_Server *>(ptr)->is_listening();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_TCP_Server_take_connection_3934ae26(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TCP_Server *>(ptr)->take_connection();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TCP_Server_stop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TCP_Server *>(ptr)->stop();
}

int32_t godot_icall_TCP_Server_listen_305edcf2(Object * ptr, uint16_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    uint16_t arg1_in = static_cast<uint16_t>(arg1);
    String arg2_in = GDMonoMarshal::mono_string_to_godot(arg2);
    auto ret = static_cast<TCP_Server *>(ptr)->listen(arg1_in, IP_Address(arg2_in));
    return (int32_t)ret;
}

Object* godot_icall_TCP_Server_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "TCP_Server")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_TabContainer_get_tab_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TabContainer *>(ptr)->get_tab_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_TabContainer_set_current_tab_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TabContainer *>(ptr)->set_current_tab(arg1_in);
}

int32_t godot_icall_TabContainer_get_current_tab_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TabContainer *>(ptr)->get_current_tab();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_TabContainer_get_previous_tab_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TabContainer *>(ptr)->get_previous_tab();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_TabContainer_get_current_tab_control_eb752350(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TabContainer *>(ptr)->get_current_tab_control();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_TabContainer_get_tab_control_3e93266d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TabContainer *>(ptr)->get_tab_control(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_TabContainer_set_tab_align_a0f70dc5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<TabContainer *>(ptr)->set_tab_align((TabContainer::TabAlign)arg1_in);
}

int32_t godot_icall_TabContainer_get_tab_align_1c44ef00(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TabContainer *>(ptr)->get_tab_align();
    return (int32_t)ret;
}

void godot_icall_TabContainer_set_tabs_visible_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TabContainer *>(ptr)->set_tabs_visible(arg1_in);
}

MonoBoolean godot_icall_TabContainer_are_tabs_visible_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TabContainer *>(ptr)->are_tabs_visible();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TabContainer_set_tab_title_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<TabContainer *>(ptr)->set_tab_title(arg1_in, arg2_in);
}

MonoString* godot_icall_TabContainer_get_tab_title_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TabContainer *>(ptr)->get_tab_title(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_TabContainer_set_tab_icon_f20a84e(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TabContainer *>(ptr)->set_tab_icon(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_TabContainer_get_tab_icon_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TabContainer *>(ptr)->get_tab_icon(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TabContainer_set_tab_disabled_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<TabContainer *>(ptr)->set_tab_disabled(arg1_in, arg2_in);
}

MonoBoolean godot_icall_TabContainer_get_tab_disabled_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TabContainer *>(ptr)->get_tab_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TabContainer_set_popup_598860a7(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TabContainer *>(ptr)->set_popup((Node*)arg1);
}

MonoObject* godot_icall_TabContainer_get_popup_fec44d35(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TabContainer *>(ptr)->get_popup();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_TabContainer_set_drag_to_rearrange_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TabContainer *>(ptr)->set_drag_to_rearrange_enabled(arg1_in);
}

MonoBoolean godot_icall_TabContainer_get_drag_to_rearrange_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TabContainer *>(ptr)->get_drag_to_rearrange_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TabContainer_set_tabs_rearrange_group_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TabContainer *>(ptr)->set_tabs_rearrange_group(arg1_in);
}

int32_t godot_icall_TabContainer_get_tabs_rearrange_group_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TabContainer *>(ptr)->get_tabs_rearrange_group();
    return static_cast<int32_t>(ret);
}

void godot_icall_TabContainer_set_use_hidden_tabs_for_min_size_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TabContainer *>(ptr)->set_use_hidden_tabs_for_min_size(arg1_in);
}

MonoBoolean godot_icall_TabContainer_get_use_hidden_tabs_for_min_size_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TabContainer *>(ptr)->get_use_hidden_tabs_for_min_size();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_TabContainer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "TabContainer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_Tabs_get_tab_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tabs *>(ptr)->get_tab_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_Tabs_set_current_tab_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Tabs *>(ptr)->set_current_tab(arg1_in);
}

int32_t godot_icall_Tabs_get_current_tab_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tabs *>(ptr)->get_current_tab();
    return static_cast<int32_t>(ret);
}

void godot_icall_Tabs_set_tab_title_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<Tabs *>(ptr)->set_tab_title(arg1_in, arg2_in);
}

MonoString* godot_icall_Tabs_get_tab_title_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Tabs *>(ptr)->get_tab_title(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Tabs_set_tab_icon_f20a84e(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Tabs *>(ptr)->set_tab_icon(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_Tabs_get_tab_icon_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Tabs *>(ptr)->get_tab_icon(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Tabs_set_tab_disabled_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Tabs *>(ptr)->set_tab_disabled(arg1_in, arg2_in);
}

MonoBoolean godot_icall_Tabs_get_tab_disabled_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Tabs *>(ptr)->get_tab_disabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Tabs_remove_tab_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Tabs *>(ptr)->remove_tab(arg1_in);
}

void godot_icall_Tabs_add_tab_febc050(Object * ptr, MonoString* arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Tabs *>(ptr)->add_tab(arg1_in, AutoRef(arg2));
}

void godot_icall_Tabs_set_tab_align_b3fa70bb(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Tabs *>(ptr)->set_tab_align((Tabs::TabAlign)arg1_in);
}

int32_t godot_icall_Tabs_get_tab_align_9f426976(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tabs *>(ptr)->get_tab_align();
    return (int32_t)ret;
}

int32_t godot_icall_Tabs_get_tab_offset_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tabs *>(ptr)->get_tab_offset();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_Tabs_get_offset_buttons_visible_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tabs *>(ptr)->get_offset_buttons_visible();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Tabs_ensure_tab_visible_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Tabs *>(ptr)->ensure_tab_visible(arg1_in);
}

void godot_icall_Tabs_get_tab_rect_c485f536(Object * ptr, int32_t arg1, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Tabs *>(ptr)->get_tab_rect(arg1_in);
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_Tabs_move_tab_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Tabs *>(ptr)->move_tab(arg1_in, arg2_in);
}

void godot_icall_Tabs_set_tab_close_display_policy_62aaf7bf(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Tabs *>(ptr)->set_tab_close_display_policy((Tabs::CloseButtonDisplayPolicy)arg1_in);
}

int32_t godot_icall_Tabs_get_tab_close_display_policy_a08c52ad(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tabs *>(ptr)->get_tab_close_display_policy();
    return (int32_t)ret;
}

void godot_icall_Tabs_set_scrolling_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Tabs *>(ptr)->set_scrolling_enabled(arg1_in);
}

MonoBoolean godot_icall_Tabs_get_scrolling_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tabs *>(ptr)->get_scrolling_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Tabs_set_drag_to_rearrange_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Tabs *>(ptr)->set_drag_to_rearrange_enabled(arg1_in);
}

MonoBoolean godot_icall_Tabs_get_drag_to_rearrange_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tabs *>(ptr)->get_drag_to_rearrange_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Tabs_set_tabs_rearrange_group_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Tabs *>(ptr)->set_tabs_rearrange_group(arg1_in);
}

int32_t godot_icall_Tabs_get_tabs_rearrange_group_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tabs *>(ptr)->get_tabs_rearrange_group();
    return static_cast<int32_t>(ret);
}

void godot_icall_Tabs_set_select_with_rmb_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Tabs *>(ptr)->set_select_with_rmb(arg1_in);
}

MonoBoolean godot_icall_Tabs_get_select_with_rmb_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tabs *>(ptr)->get_select_with_rmb();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_Tabs_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Tabs")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_TextEdit_set_text_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<TextEdit *>(ptr)->set_text_utf8(arg1_in);
}

void godot_icall_TextEdit_insert_text_at_cursor_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<TextEdit *>(ptr)->insert_text_at_cursor_utf8(arg1_in);
}

int32_t godot_icall_TextEdit_get_line_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextEdit *>(ptr)->get_line_count();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_TextEdit_get_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextEdit *>(ptr)->get_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_TextEdit_get_line_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TextEdit *>(ptr)->get_line(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_TextEdit_center_viewport_to_cursor_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->center_viewport_to_cursor();
}

void godot_icall_TextEdit_cursor_set_column_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<TextEdit *>(ptr)->cursor_set_column(arg1_in, arg2_in);
}

void godot_icall_TextEdit_cursor_set_line_9f853a4(Object * ptr, int32_t arg1, MonoBoolean arg2, MonoBoolean arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<TextEdit *>(ptr)->cursor_set_line(arg1_in, arg2_in, arg3_in, arg4_in);
}

int32_t godot_icall_TextEdit_cursor_get_column_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextEdit *>(ptr)->cursor_get_column();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_TextEdit_cursor_get_line_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextEdit *>(ptr)->cursor_get_line();
    return static_cast<int32_t>(ret);
}

void godot_icall_TextEdit_cursor_set_blink_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->cursor_set_blink_enabled(arg1_in);
}

MonoBoolean godot_icall_TextEdit_cursor_get_blink_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->cursor_get_blink_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_cursor_set_blink_speed_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<TextEdit *>(ptr)->cursor_set_blink_speed(arg1_in);
}

void godot_icall_TextEdit_cursor_get_blink_speed_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TextEdit *>(ptr)->cursor_get_blink_speed();
    *arg_ret = (float)ret;
}

void godot_icall_TextEdit_cursor_set_block_mode_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->cursor_set_block_mode(arg1_in);
}

MonoBoolean godot_icall_TextEdit_cursor_is_block_mode_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->cursor_is_block_mode();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_right_click_moves_caret_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_right_click_moves_caret(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_right_click_moving_caret_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_right_click_moving_caret();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_readonly_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_readonly(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_readonly_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_readonly();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_wrap_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_wrap_enabled(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_wrap_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_wrap_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_context_menu_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_context_menu_enabled(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_context_menu_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_context_menu_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_shortcut_keys_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_shortcut_keys_enabled(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_shortcut_keys_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_shortcut_keys_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_selecting_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_selecting_enabled(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_selecting_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_selecting_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_cut_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->cut();
}

void godot_icall_TextEdit_copy_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->copy();
}

void godot_icall_TextEdit_paste_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->paste();
}

void godot_icall_TextEdit_select_2b70940c(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<TextEdit *>(ptr)->select(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_TextEdit_select_all_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->select_all();
}

void godot_icall_TextEdit_deselect_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->deselect();
}

MonoBoolean godot_icall_TextEdit_is_selection_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_selection_active();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_TextEdit_get_selection_from_line_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextEdit *>(ptr)->get_selection_from_line();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_TextEdit_get_selection_from_column_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextEdit *>(ptr)->get_selection_from_column();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_TextEdit_get_selection_to_line_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextEdit *>(ptr)->get_selection_to_line();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_TextEdit_get_selection_to_column_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextEdit *>(ptr)->get_selection_to_column();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_TextEdit_get_selection_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextEdit *>(ptr)->get_selection_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_TextEdit_get_word_under_cursor_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextEdit *>(ptr)->get_word_under_cursor();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoArray* godot_icall_TextEdit_search_828871db(Object * ptr, MonoString* arg1, uint32_t arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    auto ret = static_cast<TextEdit *>(ptr)->_search_bind(arg1_in, arg2_in, arg3_in, arg4_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

void godot_icall_TextEdit_undo_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->undo();
}

void godot_icall_TextEdit_redo_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->redo();
}

void godot_icall_TextEdit_clear_undo_history_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->clear_undo_history();
}

void godot_icall_TextEdit_set_show_line_numbers_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_show_line_numbers(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_show_line_numbers_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_show_line_numbers_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_draw_tabs_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_draw_tabs(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_drawing_tabs_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_drawing_tabs();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_draw_spaces_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_draw_spaces(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_drawing_spaces_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_drawing_spaces();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_breakpoint_gutter_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_breakpoint_gutter_enabled(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_breakpoint_gutter_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_breakpoint_gutter_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_draw_fold_gutter_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_draw_fold_gutter(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_drawing_fold_gutter_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_drawing_fold_gutter();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_hiding_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_hiding_enabled(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_hiding_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_hiding_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_line_as_hidden_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<TextEdit *>(ptr)->set_line_as_hidden(arg1_in, arg2_in);
}

MonoBoolean godot_icall_TextEdit_is_line_hidden_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TextEdit *>(ptr)->is_line_hidden(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_fold_all_lines_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->fold_all_lines();
}

void godot_icall_TextEdit_unhide_all_lines_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->unhide_all_lines();
}

void godot_icall_TextEdit_fold_line_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TextEdit *>(ptr)->fold_line(arg1_in);
}

void godot_icall_TextEdit_unfold_line_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TextEdit *>(ptr)->unfold_line(arg1_in);
}

void godot_icall_TextEdit_toggle_fold_line_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TextEdit *>(ptr)->toggle_fold_line(arg1_in);
}

MonoBoolean godot_icall_TextEdit_can_fold_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TextEdit *>(ptr)->can_fold(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_TextEdit_is_folded_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TextEdit *>(ptr)->is_folded(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_highlight_all_occurrences_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_highlight_all_occurrences(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_highlight_all_occurrences_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_highlight_all_occurrences_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_override_selected_font_color_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_override_selected_font_color(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_overriding_selected_font_color_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_overriding_selected_font_color();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_syntax_coloring_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_syntax_coloring(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_syntax_coloring_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_syntax_coloring_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_highlight_current_line_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_highlight_current_line(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_highlight_current_line_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_highlight_current_line_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_smooth_scroll_enable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_smooth_scroll_enabled(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_smooth_scroll_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_smooth_scroll_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_v_scroll_speed_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<TextEdit *>(ptr)->set_v_scroll_speed(arg1_in);
}

void godot_icall_TextEdit_get_v_scroll_speed_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TextEdit *>(ptr)->get_v_scroll_speed();
    *arg_ret = (float)ret;
}

void godot_icall_TextEdit_set_v_scroll_f96f5126(Object * ptr, double* arg1) {
    ERR_FAIL_NULL(ptr);
    double arg1_in = static_cast<double>(*arg1);
    static_cast<TextEdit *>(ptr)->set_v_scroll(arg1_in);
}

void godot_icall_TextEdit_get_v_scroll_27c6b046(Object * ptr, double* arg_ret) {
    if (ptr == nullptr) { *arg_ret = double(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TextEdit *>(ptr)->get_v_scroll();
    *arg_ret = (double)ret;
}

void godot_icall_TextEdit_set_h_scroll_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TextEdit *>(ptr)->set_h_scroll(arg1_in);
}

int32_t godot_icall_TextEdit_get_h_scroll_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextEdit *>(ptr)->get_h_scroll();
    return static_cast<int32_t>(ret);
}

void godot_icall_TextEdit_add_keyword_color_3954fcd4(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<TextEdit *>(ptr)->add_keyword_color(arg1_in, arg2_in);
}

MonoBoolean godot_icall_TextEdit_has_keyword_color_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<TextEdit *>(ptr)->has_keyword_color(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_get_keyword_color_95edb1c2(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<TextEdit *>(ptr)->get_keyword_color(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_TextEdit_add_color_region_70ae3823(Object * ptr, MonoString* arg1, MonoString* arg2, GDMonoMarshal::M_Color* arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Color arg3_in = MARSHALLED_IN(Color, arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<TextEdit *>(ptr)->add_color_region(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_TextEdit_clear_colors_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->clear_colors();
}

void godot_icall_TextEdit_menu_option_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TextEdit *>(ptr)->menu_option(arg1_in);
}

MonoObject* godot_icall_TextEdit_get_menu_d0a780e0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextEdit *>(ptr)->get_menu();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Array* godot_icall_TextEdit_get_breakpoints_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextEdit *>(ptr)->get_breakpoints_array();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_TextEdit_remove_breakpoints_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextEdit *>(ptr)->remove_breakpoints();
}

void godot_icall_TextEdit_set_draw_minimap_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextEdit *>(ptr)->set_draw_minimap(arg1_in);
}

MonoBoolean godot_icall_TextEdit_is_drawing_minimap_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextEdit *>(ptr)->is_drawing_minimap();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextEdit_set_minimap_width_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TextEdit *>(ptr)->set_minimap_width(arg1_in);
}

int32_t godot_icall_TextEdit_get_minimap_width_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextEdit *>(ptr)->get_minimap_width();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_TextEdit_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "TextEdit")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_TextFile_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "TextFile")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_Texture_get_width_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Texture *>(ptr)->get_width();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_Texture_get_height_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Texture *>(ptr)->get_height();
    return static_cast<int32_t>(ret);
}

void godot_icall_Texture_get_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Texture *>(ptr)->get_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoBoolean godot_icall_Texture_has_alpha_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Texture *>(ptr)->has_alpha();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Texture_set_flags_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<Texture *>(ptr)->set_flags(arg1_in);
}

uint32_t godot_icall_Texture_get_flags_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<Texture *>(ptr)->get_flags();
    return static_cast<uint32_t>(ret);
}

void godot_icall_Texture_draw_a53038c6(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Color* arg3, MonoBoolean arg4, Object * arg5) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Color arg3_in = MARSHALLED_IN(Color, arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<Texture *>(ptr)->draw(*arg1, arg2_in, arg3_in, arg4_in, AutoRef(arg5));
}

void godot_icall_Texture_draw_rect_7aa5210b(Object * ptr, RID* arg1, GDMonoMarshal::M_Rect2* arg2, MonoBoolean arg3, GDMonoMarshal::M_Color* arg4, MonoBoolean arg5, Object * arg6) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    bool arg3_in = static_cast<bool>(arg3);
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    bool arg5_in = static_cast<bool>(arg5);
    static_cast<Texture *>(ptr)->draw_rect(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, AutoRef(arg6));
}

void godot_icall_Texture_draw_rect_region_62108b19(Object * ptr, RID* arg1, GDMonoMarshal::M_Rect2* arg2, GDMonoMarshal::M_Rect2* arg3, GDMonoMarshal::M_Color* arg4, MonoBoolean arg5, Object * arg6, MonoBoolean arg7) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    Rect2 arg3_in = MARSHALLED_IN(Rect2, arg3);
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    bool arg5_in = static_cast<bool>(arg5);
    bool arg7_in = static_cast<bool>(arg7);
    static_cast<Texture *>(ptr)->draw_rect_region(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, AutoRef(arg6), arg7_in);
}

MonoObject* godot_icall_Texture_get_data_20b1d94c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Texture *>(ptr)->get_data();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_Texture3D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Texture3D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_TextureArray_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "TextureArray")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_TextureButton_set_normal_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextureButton *>(ptr)->set_normal_texture(AutoRef(arg1));
}

void godot_icall_TextureButton_set_pressed_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextureButton *>(ptr)->set_pressed_texture(AutoRef(arg1));
}

void godot_icall_TextureButton_set_hover_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextureButton *>(ptr)->set_hover_texture(AutoRef(arg1));
}

void godot_icall_TextureButton_set_disabled_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextureButton *>(ptr)->set_disabled_texture(AutoRef(arg1));
}

void godot_icall_TextureButton_set_focused_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextureButton *>(ptr)->set_focused_texture(AutoRef(arg1));
}

void godot_icall_TextureButton_set_click_mask_bbda8618(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextureButton *>(ptr)->set_click_mask(AutoRef(arg1));
}

void godot_icall_TextureButton_set_expand_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextureButton *>(ptr)->set_expand(arg1_in);
}

void godot_icall_TextureButton_set_stretch_mode_aefc984e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<TextureButton *>(ptr)->set_stretch_mode((TextureButton::StretchMode)arg1_in);
}

MonoObject* godot_icall_TextureButton_get_normal_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextureButton *>(ptr)->get_normal_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_TextureButton_get_pressed_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextureButton *>(ptr)->get_pressed_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_TextureButton_get_hover_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextureButton *>(ptr)->get_hover_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_TextureButton_get_disabled_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextureButton *>(ptr)->get_disabled_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_TextureButton_get_focused_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextureButton *>(ptr)->get_focused_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_TextureButton_get_click_mask_697c614c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextureButton *>(ptr)->get_click_mask();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoBoolean godot_icall_TextureButton_get_expand_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextureButton *>(ptr)->get_expand();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_TextureButton_get_stretch_mode_c86cfcc9(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextureButton *>(ptr)->get_stretch_mode();
    return (int32_t)ret;
}

Object* godot_icall_TextureButton_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "TextureButton")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_TextureLayered_set_flags_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<TextureLayered *>(ptr)->set_flags(arg1_in);
}

uint32_t godot_icall_TextureLayered_get_flags_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<TextureLayered *>(ptr)->get_flags();
    return static_cast<uint32_t>(ret);
}

int32_t godot_icall_TextureLayered_get_format_648eb81f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextureLayered *>(ptr)->get_format();
    return (int32_t)ret;
}

uint32_t godot_icall_TextureLayered_get_width_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<TextureLayered *>(ptr)->get_width();
    return static_cast<uint32_t>(ret);
}

uint32_t godot_icall_TextureLayered_get_height_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<TextureLayered *>(ptr)->get_height();
    return static_cast<uint32_t>(ret);
}

uint32_t godot_icall_TextureLayered_get_depth_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<TextureLayered *>(ptr)->get_depth();
    return static_cast<uint32_t>(ret);
}

void godot_icall_TextureLayered_create_be7361d6(Object * ptr, uint32_t arg1, uint32_t arg2, uint32_t arg3, int32_t arg4, uint32_t arg5) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    uint32_t arg3_in = static_cast<uint32_t>(arg3);
    int64_t arg4_in = (int64_t)arg4;
    uint32_t arg5_in = static_cast<uint32_t>(arg5);
    static_cast<TextureLayered *>(ptr)->create(arg1_in, arg2_in, arg3_in, (Image::Format)arg4_in, arg5_in);
}

void godot_icall_TextureLayered_set_layer_data_78f77ff7(Object * ptr, Object * arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<TextureLayered *>(ptr)->set_layer_data(AutoRef(arg1), arg2_in);
}

MonoObject* godot_icall_TextureLayered_get_layer_data_d2d368f0(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TextureLayered *>(ptr)->get_layer_data(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TextureLayered_set_data_partial_72823ad0(Object * ptr, Object * arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    static_cast<TextureLayered *>(ptr)->set_data_partial(AutoRef(arg1), arg2_in, arg3_in, arg4_in, arg5_in);
}

void godot_icall_TextureLayered__set_data_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextureLayered *>(ptr)->_set_data(*arg1);
}

Dictionary* godot_icall_TextureLayered__get_data_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextureLayered *>(ptr)->_get_data();
    return memnew(Dictionary(ret));
}

void godot_icall_TextureProgress_set_under_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextureProgress *>(ptr)->set_under_texture(AutoRef(arg1));
}

MonoObject* godot_icall_TextureProgress_get_under_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextureProgress *>(ptr)->get_under_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TextureProgress_set_progress_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextureProgress *>(ptr)->set_progress_texture(AutoRef(arg1));
}

MonoObject* godot_icall_TextureProgress_get_progress_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextureProgress *>(ptr)->get_progress_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TextureProgress_set_over_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextureProgress *>(ptr)->set_over_texture(AutoRef(arg1));
}

MonoObject* godot_icall_TextureProgress_get_over_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextureProgress *>(ptr)->get_over_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TextureProgress_set_fill_mode_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TextureProgress *>(ptr)->set_fill_mode(arg1_in);
}

int32_t godot_icall_TextureProgress_get_fill_mode_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextureProgress *>(ptr)->get_fill_mode();
    return static_cast<int32_t>(ret);
}

void godot_icall_TextureProgress_set_tint_under_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<TextureProgress *>(ptr)->set_tint_under(arg1_in);
}

void godot_icall_TextureProgress_get_tint_under_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TextureProgress *>(ptr)->get_tint_under();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_TextureProgress_set_tint_progress_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<TextureProgress *>(ptr)->set_tint_progress(arg1_in);
}

void godot_icall_TextureProgress_get_tint_progress_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TextureProgress *>(ptr)->get_tint_progress();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_TextureProgress_set_tint_over_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<TextureProgress *>(ptr)->set_tint_over(arg1_in);
}

void godot_icall_TextureProgress_get_tint_over_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TextureProgress *>(ptr)->get_tint_over();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_TextureProgress_set_radial_initial_angle_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<TextureProgress *>(ptr)->set_radial_initial_angle(arg1_in);
}

void godot_icall_TextureProgress_get_radial_initial_angle_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TextureProgress *>(ptr)->get_radial_initial_angle();
    *arg_ret = (float)ret;
}

void godot_icall_TextureProgress_set_radial_center_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<TextureProgress *>(ptr)->set_radial_center_offset(arg1_in);
}

void godot_icall_TextureProgress_get_radial_center_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TextureProgress *>(ptr)->get_radial_center_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_TextureProgress_set_fill_degrees_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<TextureProgress *>(ptr)->set_fill_degrees(arg1_in);
}

void godot_icall_TextureProgress_get_fill_degrees_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TextureProgress *>(ptr)->get_fill_degrees();
    *arg_ret = (float)ret;
}

void godot_icall_TextureProgress_set_stretch_margin_d167c784(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<TextureProgress *>(ptr)->set_stretch_margin((Margin)arg1_in, arg2_in);
}

int32_t godot_icall_TextureProgress_get_stretch_margin_bbd2c228(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<TextureProgress *>(ptr)->get_stretch_margin((Margin)arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_TextureProgress_set_nine_patch_stretch_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextureProgress *>(ptr)->set_nine_patch_stretch(arg1_in);
}

MonoBoolean godot_icall_TextureProgress_get_nine_patch_stretch_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextureProgress *>(ptr)->get_nine_patch_stretch();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_TextureProgress_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "TextureProgress")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_TextureRect_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TextureRect *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_TextureRect_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TextureRect *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TextureRect_set_expand_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextureRect *>(ptr)->set_expand(arg1_in);
}

MonoBoolean godot_icall_TextureRect_has_expand_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextureRect *>(ptr)->has_expand();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextureRect_set_flip_h_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextureRect *>(ptr)->set_flip_h(arg1_in);
}

MonoBoolean godot_icall_TextureRect_is_flipped_h_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextureRect *>(ptr)->is_flipped_h();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextureRect_set_flip_v_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TextureRect *>(ptr)->set_flip_v(arg1_in);
}

MonoBoolean godot_icall_TextureRect_is_flipped_v_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TextureRect *>(ptr)->is_flipped_v();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TextureRect_set_stretch_mode_d1b19090(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<TextureRect *>(ptr)->set_stretch_mode((TextureRect::StretchMode)arg1_in);
}

int32_t godot_icall_TextureRect_get_stretch_mode_8e9a34e3(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TextureRect *>(ptr)->get_stretch_mode();
    return (int32_t)ret;
}

Object* godot_icall_TextureRect_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "TextureRect")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Theme_set_icon_a8b3ea44(Object * ptr, MonoString* arg1, MonoString* arg2, Object * arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<Theme *>(ptr)->set_icon(arg1_in, arg2_in, AutoRef(arg3));
}

MonoObject* godot_icall_Theme_get_icon_bcfbe107(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Theme *>(ptr)->get_icon(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoBoolean godot_icall_Theme_has_icon_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Theme *>(ptr)->has_icon(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Theme_clear_icon_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<Theme *>(ptr)->clear_icon(arg1_in, arg2_in);
}

MonoArray* godot_icall_Theme_get_icon_list_37ac58f7(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<Theme *>(ptr)->_get_icon_list(arg1_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall_Theme_set_stylebox_b8b65953(Object * ptr, MonoString* arg1, MonoString* arg2, Object * arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<Theme *>(ptr)->set_stylebox(arg1_in, arg2_in, AutoRef(arg3));
}

MonoObject* godot_icall_Theme_get_stylebox_ac08e40f(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Theme *>(ptr)->get_stylebox(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoBoolean godot_icall_Theme_has_stylebox_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Theme *>(ptr)->has_stylebox(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Theme_clear_stylebox_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<Theme *>(ptr)->clear_stylebox(arg1_in, arg2_in);
}

MonoArray* godot_icall_Theme_get_stylebox_list_37ac58f7(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<Theme *>(ptr)->_get_stylebox_list(arg1_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

MonoArray* godot_icall_Theme_get_stylebox_types_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Theme *>(ptr)->get_stylebox_types();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall_Theme_set_font_3c3c771c(Object * ptr, MonoString* arg1, MonoString* arg2, Object * arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<Theme *>(ptr)->set_font(arg1_in, arg2_in, AutoRef(arg3));
}

MonoObject* godot_icall_Theme_get_font_4abe4d7b(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Theme *>(ptr)->get_font(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoBoolean godot_icall_Theme_has_font_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Theme *>(ptr)->has_font(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Theme_clear_font_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<Theme *>(ptr)->clear_font(arg1_in, arg2_in);
}

MonoArray* godot_icall_Theme_get_font_list_37ac58f7(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<Theme *>(ptr)->_get_font_list(arg1_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall_Theme_set_color_24b040d4(Object * ptr, MonoString* arg1, MonoString* arg2, GDMonoMarshal::M_Color* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Color arg3_in = MARSHALLED_IN(Color, arg3);
    static_cast<Theme *>(ptr)->set_color(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Theme_get_color_aa87570e(Object * ptr, MonoString* arg1, MonoString* arg2, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Theme *>(ptr)->get_color(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

MonoBoolean godot_icall_Theme_has_color_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Theme *>(ptr)->has_color(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Theme_clear_color_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<Theme *>(ptr)->clear_color(arg1_in, arg2_in);
}

MonoArray* godot_icall_Theme_get_color_list_37ac58f7(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<Theme *>(ptr)->_get_color_list(arg1_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall_Theme_set_constant_35cdaa2e(Object * ptr, MonoString* arg1, MonoString* arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<Theme *>(ptr)->set_constant(arg1_in, arg2_in, arg3_in);
}

int32_t godot_icall_Theme_get_constant_7185a084(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Theme *>(ptr)->get_constant(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_Theme_has_constant_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Theme *>(ptr)->has_constant(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Theme_clear_constant_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<Theme *>(ptr)->clear_constant(arg1_in, arg2_in);
}

MonoArray* godot_icall_Theme_get_constant_list_37ac58f7(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<Theme *>(ptr)->_get_constant_list(arg1_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall_Theme_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Theme *>(ptr)->clear();
}

void godot_icall_Theme_set_default_font_ea9e5ee2(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Theme *>(ptr)->set_default_font(AutoRef(arg1));
}

MonoObject* godot_icall_Theme_get_default_font_18b7a982(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Theme *>(ptr)->get_default_theme_font();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoArray* godot_icall_Theme_get_type_list_82ee0a94(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Theme *>(ptr)->_get_type_list(arg1_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall_Theme_copy_default_theme_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Theme *>(ptr)->copy_default_theme();
}

void godot_icall_Theme_copy_theme_77a4d7dc(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Theme *>(ptr)->copy_theme(AutoRef(arg1));
}

Object* godot_icall_Theme_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Theme")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_TileMap_set_tileset_cc0bfa01(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TileMap *>(ptr)->set_tileset(AutoRef(arg1));
}

MonoObject* godot_icall_TileMap_get_tileset_fb2b4563(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TileMap *>(ptr)->get_tileset();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TileMap_set_mode_da9f57d4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<TileMap *>(ptr)->set_mode((TileMap::Mode)arg1_in);
}

int32_t godot_icall_TileMap_get_mode_1b20b807(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TileMap *>(ptr)->get_mode();
    return (int32_t)ret;
}

void godot_icall_TileMap_set_half_offset_ec3fb535(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<TileMap *>(ptr)->set_half_offset((TileMap::HalfOffset)arg1_in);
}

int32_t godot_icall_TileMap_get_half_offset_1b179437(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TileMap *>(ptr)->get_half_offset();
    return (int32_t)ret;
}

void godot_icall_TileMap_set_custom_transform_dfe2915f(Object * ptr, GDMonoMarshal::M_Transform2D* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    static_cast<TileMap *>(ptr)->set_custom_transform(arg1_in);
}

void godot_icall_TileMap_get_custom_transform_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TileMap *>(ptr)->get_custom_transform();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_TileMap_set_cell_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<TileMap *>(ptr)->set_cell_size(arg1_in);
}

void godot_icall_TileMap_get_cell_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TileMap *>(ptr)->get_cell_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_TileMap_set_quadrant_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TileMap *>(ptr)->set_quadrant_size(arg1_in);
}

int32_t godot_icall_TileMap_get_quadrant_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TileMap *>(ptr)->get_quadrant_size();
    return static_cast<int32_t>(ret);
}

void godot_icall_TileMap_set_tile_origin_24d7be65(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<TileMap *>(ptr)->set_tile_origin((TileMap::TileOrigin)arg1_in);
}

int32_t godot_icall_TileMap_get_tile_origin_e26f8907(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TileMap *>(ptr)->get_tile_origin();
    return (int32_t)ret;
}

void godot_icall_TileMap_set_clip_uv_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TileMap *>(ptr)->set_clip_uv(arg1_in);
}

MonoBoolean godot_icall_TileMap_get_clip_uv_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TileMap *>(ptr)->get_clip_uv();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TileMap_set_y_sort_mode_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TileMap *>(ptr)->set_y_sort_mode(arg1_in);
}

MonoBoolean godot_icall_TileMap_is_y_sort_mode_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TileMap *>(ptr)->is_y_sort_mode_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TileMap_set_compatibility_mode_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TileMap *>(ptr)->set_compatibility_mode(arg1_in);
}

MonoBoolean godot_icall_TileMap_is_compatibility_mode_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TileMap *>(ptr)->is_compatibility_mode_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TileMap_set_centered_textures_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TileMap *>(ptr)->set_centered_textures(arg1_in);
}

MonoBoolean godot_icall_TileMap_is_centered_textures_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TileMap *>(ptr)->is_centered_textures_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TileMap_set_collision_use_kinematic_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TileMap *>(ptr)->set_collision_use_kinematic(arg1_in);
}

MonoBoolean godot_icall_TileMap_get_collision_use_kinematic_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TileMap *>(ptr)->get_collision_use_kinematic();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TileMap_set_collision_use_parent_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TileMap *>(ptr)->set_collision_use_parent(arg1_in);
}

MonoBoolean godot_icall_TileMap_get_collision_use_parent_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TileMap *>(ptr)->get_collision_use_parent();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TileMap_set_collision_layer_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<TileMap *>(ptr)->set_collision_layer(arg1_in);
}

uint32_t godot_icall_TileMap_get_collision_layer_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<TileMap *>(ptr)->get_collision_layer();
    return static_cast<uint32_t>(ret);
}

void godot_icall_TileMap_set_collision_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<TileMap *>(ptr)->set_collision_mask(arg1_in);
}

uint32_t godot_icall_TileMap_get_collision_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<TileMap *>(ptr)->get_collision_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_TileMap_set_collision_layer_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<TileMap *>(ptr)->set_collision_layer_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_TileMap_get_collision_layer_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileMap *>(ptr)->get_collision_layer_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TileMap_set_collision_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<TileMap *>(ptr)->set_collision_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_TileMap_get_collision_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileMap *>(ptr)->get_collision_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TileMap_set_collision_friction_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<TileMap *>(ptr)->set_collision_friction(arg1_in);
}

void godot_icall_TileMap_get_collision_friction_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TileMap *>(ptr)->get_collision_friction();
    *arg_ret = (float)ret;
}

void godot_icall_TileMap_set_collision_bounce_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<TileMap *>(ptr)->set_collision_bounce(arg1_in);
}

void godot_icall_TileMap_get_collision_bounce_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TileMap *>(ptr)->get_collision_bounce();
    *arg_ret = (float)ret;
}

void godot_icall_TileMap_set_occluder_light_mask_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TileMap *>(ptr)->set_occluder_light_mask(arg1_in);
}

int32_t godot_icall_TileMap_get_occluder_light_mask_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TileMap *>(ptr)->get_occluder_light_mask();
    return static_cast<int32_t>(ret);
}

void godot_icall_TileMap_set_cell_ddae4890(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, MonoBoolean arg4, MonoBoolean arg5, MonoBoolean arg6, GDMonoMarshal::M_Vector2* arg7) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    bool arg5_in = static_cast<bool>(arg5);
    bool arg6_in = static_cast<bool>(arg6);
    Vector2 arg7_in = MARSHALLED_IN(Vector2, arg7);
    static_cast<TileMap *>(ptr)->set_cell(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in, arg7_in);
}

void godot_icall_TileMap_set_cellv_25f115ce(Object * ptr, GDMonoMarshal::M_Vector2* arg1, int32_t arg2, MonoBoolean arg3, MonoBoolean arg4, MonoBoolean arg5) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    bool arg5_in = static_cast<bool>(arg5);
    static_cast<TileMap *>(ptr)->set_cellv(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

int32_t godot_icall_TileMap_get_cell_4170d7f7(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TileMap *>(ptr)->get_cell(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_TileMap_get_cellv_3c0b8d03(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<TileMap *>(ptr)->get_cellv(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_TileMap_is_cell_x_flipped_c8b57d14(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TileMap *>(ptr)->is_cell_x_flipped(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_TileMap_is_cell_y_flipped_c8b57d14(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TileMap *>(ptr)->is_cell_y_flipped(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_TileMap_is_cell_transposed_c8b57d14(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TileMap *>(ptr)->is_cell_transposed(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TileMap_get_cell_autotile_coord_804c9047(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TileMap *>(ptr)->get_cell_autotile_coord(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_TileMap_fix_invalid_tiles_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TileMap *>(ptr)->fix_invalid_tiles();
}

void godot_icall_TileMap_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TileMap *>(ptr)->clear();
}

Array* godot_icall_TileMap_get_used_cells_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TileMap *>(ptr)->get_used_cells();
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall_TileMap_get_used_cells_by_id_2ca2fcca(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileMap *>(ptr)->get_used_cells_by_id(arg1_in);
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_TileMap_get_used_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<TileMap *>(ptr)->get_used_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_TileMap_map_to_world_a90b56f3(Object * ptr, GDMonoMarshal::M_Vector2* arg1, MonoBoolean arg2, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<TileMap *>(ptr)->map_to_world(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_TileMap_world_to_map_af4cfa54(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<TileMap *>(ptr)->world_to_map(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_TileMap_update_dirty_quadrants_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TileMap *>(ptr)->update_dirty_quadrants();
}

void godot_icall_TileMap_update_bitmask_area_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<TileMap *>(ptr)->update_bitmask_area(arg1_in);
}

void godot_icall_TileMap_update_bitmask_region_bf22f250(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<TileMap *>(ptr)->update_bitmask_region(arg1_in, arg2_in);
}

Object* godot_icall_TileMap_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "TileMap")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_TileSet_create_tile_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TileSet *>(ptr)->create_tile(arg1_in);
}

void godot_icall_TileSet_autotile_clear_bitmask_map_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TileSet *>(ptr)->autotile_clear_bitmask_map(arg1_in);
}

void godot_icall_TileSet_autotile_set_icon_coordinate_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<TileSet *>(ptr)->autotile_set_icon_coordinate(arg1_in, arg2_in);
}

void godot_icall_TileSet_autotile_get_icon_coordinate_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->autotile_get_icon_coordinate(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_TileSet_autotile_set_subtile_priority_e6e535b1(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<TileSet *>(ptr)->autotile_set_subtile_priority(arg1_in, arg2_in, arg3_in);
}

int32_t godot_icall_TileSet_autotile_get_subtile_priority_cd3ee255(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    auto ret = static_cast<TileSet *>(ptr)->autotile_get_subtile_priority(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_TileSet_autotile_set_z_index_e6e535b1(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<TileSet *>(ptr)->autotile_set_z_index(arg1_in, arg2_in, arg3_in);
}

int32_t godot_icall_TileSet_autotile_get_z_index_cd3ee255(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    auto ret = static_cast<TileSet *>(ptr)->autotile_get_z_index(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_TileSet_autotile_set_light_occluder_92cac33f(Object * ptr, int32_t arg1, Object * arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<TileSet *>(ptr)->autotile_set_light_occluder(arg1_in, AutoRef(arg2), arg3_in);
}

MonoObject* godot_icall_TileSet_autotile_get_light_occluder_ea81765(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    auto ret = static_cast<TileSet *>(ptr)->autotile_get_light_occluder(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TileSet_autotile_set_navigation_polygon_403be5a0(Object * ptr, int32_t arg1, Object * arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<TileSet *>(ptr)->autotile_set_navigation_polygon(arg1_in, AutoRef(arg2), arg3_in);
}

MonoObject* godot_icall_TileSet_autotile_get_navigation_polygon_ee39918d(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    auto ret = static_cast<TileSet *>(ptr)->autotile_get_navigation_polygon(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TileSet_autotile_set_bitmask_2c192e6a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2, uint32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    uint32_t arg3_in = static_cast<uint32_t>(arg3);
    static_cast<TileSet *>(ptr)->autotile_set_bitmask(arg1_in, arg2_in, arg3_in);
}

uint32_t godot_icall_TileSet_autotile_get_bitmask_57ac7fa2(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    auto ret = static_cast<TileSet *>(ptr)->autotile_get_bitmask(arg1_in, arg2_in);
    return static_cast<uint32_t>(ret);
}

void godot_icall_TileSet_autotile_set_bitmask_mode_fe915cd(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<TileSet *>(ptr)->autotile_set_bitmask_mode(arg1_in, (TileSet::BitmaskMode)arg2_in);
}

int32_t godot_icall_TileSet_autotile_get_bitmask_mode_43628012(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->autotile_get_bitmask_mode(arg1_in);
    return (int32_t)ret;
}

void godot_icall_TileSet_autotile_set_spacing_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<TileSet *>(ptr)->autotile_set_spacing(arg1_in, arg2_in);
}

int32_t godot_icall_TileSet_autotile_get_spacing_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->autotile_get_spacing(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_TileSet_autotile_set_size_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<TileSet *>(ptr)->autotile_set_size(arg1_in, arg2_in);
}

void godot_icall_TileSet_autotile_get_size_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->autotile_get_size(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_TileSet_tile_set_name_cd663605(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<TileSet *>(ptr)->tile_set_name(arg1_in, arg2_in);
}

MonoString* godot_icall_TileSet_tile_get_name_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_TileSet_tile_set_texture_f20a84e(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TileSet *>(ptr)->tile_set_texture(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_TileSet_tile_get_texture_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_texture(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TileSet_tile_set_normal_map_f20a84e(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TileSet *>(ptr)->tile_set_normal_map(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_TileSet_tile_get_normal_map_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_normal_map(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TileSet_tile_set_material_cc3e65d1(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TileSet *>(ptr)->tile_set_material(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_TileSet_tile_get_material_2184bb1f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_material(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TileSet_tile_set_modulate_932531de(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<TileSet *>(ptr)->tile_set_modulate(arg1_in, arg2_in);
}

void godot_icall_TileSet_tile_get_modulate_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_modulate(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_TileSet_tile_set_texture_offset_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<TileSet *>(ptr)->tile_set_texture_offset(arg1_in, arg2_in);
}

void godot_icall_TileSet_tile_get_texture_offset_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_texture_offset(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_TileSet_tile_set_region_44225da7(Object * ptr, int32_t arg1, GDMonoMarshal::M_Rect2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    static_cast<TileSet *>(ptr)->tile_set_region(arg1_in, arg2_in);
}

void godot_icall_TileSet_tile_get_region_c485f536(Object * ptr, int32_t arg1, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_region(arg1_in);
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_TileSet_tile_set_shape_3bf237d8(Object * ptr, int32_t arg1, int32_t arg2, Object * arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<TileSet *>(ptr)->tile_set_shape(arg1_in, arg2_in, AutoRef(arg3));
}

MonoObject* godot_icall_TileSet_tile_get_shape_13324318(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_shape(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TileSet_tile_set_shape_offset_f91f3ee4(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<TileSet *>(ptr)->tile_set_shape_offset(arg1_in, arg2_in, arg3_in);
}

void godot_icall_TileSet_tile_get_shape_offset_804c9047(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_shape_offset(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_TileSet_tile_set_shape_transform_6b29715b(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Transform2D* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Transform2D arg3_in = MARSHALLED_IN(Transform2D, arg3);
    static_cast<TileSet *>(ptr)->tile_set_shape_transform(arg1_in, arg2_in, arg3_in);
}

void godot_icall_TileSet_tile_get_shape_transform_80915930(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_shape_transform(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_TileSet_tile_set_shape_one_way_c76f61ef(Object * ptr, int32_t arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<TileSet *>(ptr)->tile_set_shape_one_way(arg1_in, arg2_in, arg3_in);
}

MonoBoolean godot_icall_TileSet_tile_get_shape_one_way_c8b57d14(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_shape_one_way(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TileSet_tile_set_shape_one_way_margin_ac8ee9bf(Object * ptr, int32_t arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    static_cast<TileSet *>(ptr)->tile_set_shape_one_way_margin(arg1_in, arg2_in, arg3_in);
}

void godot_icall_TileSet_tile_get_shape_one_way_margin_4da5f18d(Object * ptr, int32_t arg1, int32_t arg2, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_shape_one_way_margin(arg1_in, arg2_in);
    *arg_ret = (float)ret;
}

void godot_icall_TileSet_tile_add_shape_8d82ab0e(Object * ptr, int32_t arg1, Object * arg2, GDMonoMarshal::M_Transform2D* arg3, MonoBoolean arg4, GDMonoMarshal::M_Vector2* arg5) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Transform2D arg3_in = MARSHALLED_IN(Transform2D, arg3);
    bool arg4_in = static_cast<bool>(arg4);
    Vector2 arg5_in = MARSHALLED_IN(Vector2, arg5);
    static_cast<TileSet *>(ptr)->tile_add_shape(arg1_in, AutoRef(arg2), arg3_in, arg4_in, arg5_in);
}

int32_t godot_icall_TileSet_tile_get_shape_count_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_shape_count(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_TileSet_tile_set_shapes_fbe503c0(Object * ptr, int32_t arg1, Array* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TileSet *>(ptr)->_tile_set_shapes(arg1_in, *arg2);
}

Array* godot_icall_TileSet_tile_get_shapes_2ca2fcca(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->_tile_get_shapes(arg1_in);
    return memnew(Array(ret));
}

void godot_icall_TileSet_tile_set_tile_mode_18d899c6(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<TileSet *>(ptr)->tile_set_tile_mode(arg1_in, (TileSet::TileMode)arg2_in);
}

int32_t godot_icall_TileSet_tile_get_tile_mode_2760cf(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_tile_mode(arg1_in);
    return (int32_t)ret;
}

void godot_icall_TileSet_tile_set_navigation_polygon_89b66733(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TileSet *>(ptr)->tile_set_navigation_polygon(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_TileSet_tile_get_navigation_polygon_1ebd3d05(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_navigation_polygon(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TileSet_tile_set_navigation_polygon_offset_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<TileSet *>(ptr)->tile_set_navigation_polygon_offset(arg1_in, arg2_in);
}

void godot_icall_TileSet_tile_get_navigation_polygon_offset_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_navigation_polygon_offset(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_TileSet_tile_set_light_occluder_4a339960(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TileSet *>(ptr)->tile_set_light_occluder(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_TileSet_tile_get_light_occluder_44008982(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_light_occluder(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TileSet_tile_set_occluder_offset_3c383c4a(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<TileSet *>(ptr)->tile_set_occluder_offset(arg1_in, arg2_in);
}

void godot_icall_TileSet_tile_get_occluder_offset_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_occluder_offset(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_TileSet_tile_set_z_index_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<TileSet *>(ptr)->tile_set_z_index(arg1_in, arg2_in);
}

int32_t godot_icall_TileSet_tile_get_z_index_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TileSet *>(ptr)->tile_get_z_index(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_TileSet_remove_tile_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TileSet *>(ptr)->remove_tile(arg1_in);
}

void godot_icall_TileSet_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TileSet *>(ptr)->clear();
}

int32_t godot_icall_TileSet_get_last_unused_tile_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TileSet *>(ptr)->get_last_unused_tile_id();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_TileSet_find_tile_by_name_6d3db7c6(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<TileSet *>(ptr)->find_tile_by_name(arg1_in);
    return static_cast<int32_t>(ret);
}

Array* godot_icall_TileSet_get_tiles_ids_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TileSet *>(ptr)->_get_tiles_ids();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_TileSet_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "TileSet")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Timer_set_wait_time_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Timer *>(ptr)->set_wait_time(arg1_in);
}

void godot_icall_Timer_get_wait_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Timer *>(ptr)->get_wait_time();
    *arg_ret = (float)ret;
}

void godot_icall_Timer_set_one_shot_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Timer *>(ptr)->set_one_shot(arg1_in);
}

MonoBoolean godot_icall_Timer_is_one_shot_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Timer *>(ptr)->is_one_shot();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Timer_set_autostart_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Timer *>(ptr)->set_autostart(arg1_in);
}

MonoBoolean godot_icall_Timer_has_autostart_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Timer *>(ptr)->has_autostart();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Timer_start_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Timer *>(ptr)->start(arg1_in);
}

void godot_icall_Timer_stop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Timer *>(ptr)->stop();
}

void godot_icall_Timer_set_paused_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Timer *>(ptr)->set_paused(arg1_in);
}

MonoBoolean godot_icall_Timer_is_paused_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Timer *>(ptr)->is_paused();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Timer_is_stopped_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Timer *>(ptr)->is_stopped();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Timer_get_time_left_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Timer *>(ptr)->get_time_left();
    *arg_ret = (float)ret;
}

void godot_icall_Timer_set_timer_process_mode_93342f87(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Timer *>(ptr)->set_timer_process_mode((Timer::TimerProcessMode)arg1_in);
}

int32_t godot_icall_Timer_get_timer_process_mode_520dfae5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Timer *>(ptr)->get_timer_process_mode();
    return (int32_t)ret;
}

Object* godot_icall_Timer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Timer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_ToolButton_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ToolButton")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_TouchScreenButton_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TouchScreenButton *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_TouchScreenButton_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TouchScreenButton *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TouchScreenButton_set_texture_pressed_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TouchScreenButton *>(ptr)->set_texture_pressed(AutoRef(arg1));
}

MonoObject* godot_icall_TouchScreenButton_get_texture_pressed_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TouchScreenButton *>(ptr)->get_texture_pressed();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TouchScreenButton_set_bitmask_bbda8618(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TouchScreenButton *>(ptr)->set_bitmask(AutoRef(arg1));
}

MonoObject* godot_icall_TouchScreenButton_get_bitmask_697c614c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TouchScreenButton *>(ptr)->get_bitmask();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TouchScreenButton_set_shape_2fd85eda(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TouchScreenButton *>(ptr)->set_shape(AutoRef(arg1));
}

MonoObject* godot_icall_TouchScreenButton_get_shape_dd79a98a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TouchScreenButton *>(ptr)->get_shape();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TouchScreenButton_set_shape_centered_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TouchScreenButton *>(ptr)->set_shape_centered(arg1_in);
}

MonoBoolean godot_icall_TouchScreenButton_is_shape_centered_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TouchScreenButton *>(ptr)->is_shape_centered();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TouchScreenButton_set_shape_visible_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TouchScreenButton *>(ptr)->set_shape_visible(arg1_in);
}

MonoBoolean godot_icall_TouchScreenButton_is_shape_visible_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TouchScreenButton *>(ptr)->is_shape_visible();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TouchScreenButton_set_action_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<TouchScreenButton *>(ptr)->set_action(arg1_in);
}

MonoString* godot_icall_TouchScreenButton_get_action_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TouchScreenButton *>(ptr)->get_action();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_TouchScreenButton_set_visibility_mode_6547695b(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<TouchScreenButton *>(ptr)->set_visibility_mode((TouchScreenButton::VisibilityMode)arg1_in);
}

int32_t godot_icall_TouchScreenButton_get_visibility_mode_e2427616(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TouchScreenButton *>(ptr)->get_visibility_mode();
    return (int32_t)ret;
}

void godot_icall_TouchScreenButton_set_passby_press_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TouchScreenButton *>(ptr)->set_passby_press(arg1_in);
}

MonoBoolean godot_icall_TouchScreenButton_is_passby_press_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TouchScreenButton *>(ptr)->is_passby_press_enabled();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_TouchScreenButton_is_pressed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TouchScreenButton *>(ptr)->is_pressed();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_TouchScreenButton_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "TouchScreenButton")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Translation_set_locale_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Translation *>(ptr)->set_locale(arg1_in);
}

MonoString* godot_icall_Translation_get_locale_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Translation *>(ptr)->get_locale();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Translation_add_message_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<Translation *>(ptr)->add_message(arg1_in, arg2_in);
}

MonoString* godot_icall_Translation_get_message_67c8521(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<Translation *>(ptr)->get_message(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Translation_erase_message_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<Translation *>(ptr)->erase_message(arg1_in);
}

MonoArray* godot_icall_Translation_get_message_list_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Translation *>(ptr)->_get_message_list();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

int32_t godot_icall_Translation_get_message_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Translation *>(ptr)->get_message_count();
    return static_cast<int32_t>(ret);
}

void godot_icall_Translation__set_messages_9e6917c5(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolStringArray arg1_in = GDMonoMarshal::mono_array_to_PoolStringArray(arg1);
    static_cast<Translation *>(ptr)->_set_messages(arg1_in);
}

MonoArray* godot_icall_Translation__get_messages_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Translation *>(ptr)->_get_messages();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

Object* godot_icall_Translation_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Translation")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_TranslationServer_set_locale_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<TranslationServer *>(ptr)->set_locale(arg1_in);
}

MonoString* godot_icall_TranslationServer_get_locale_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TranslationServer *>(ptr)->get_locale();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_TranslationServer_get_locale_name_98465fb(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<TranslationServer *>(ptr)->get_locale_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_TranslationServer_translate_67c8521(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<TranslationServer *>(ptr)->translate(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_TranslationServer_add_translation_96eab132(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TranslationServer *>(ptr)->add_translation(AutoRef(arg1));
}

void godot_icall_TranslationServer_remove_translation_96eab132(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TranslationServer *>(ptr)->remove_translation(AutoRef(arg1));
}

void godot_icall_TranslationServer_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TranslationServer *>(ptr)->clear();
}

Array* godot_icall_TranslationServer_get_loaded_locales_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TranslationServer *>(ptr)->get_loaded_locales();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_TranslationServer_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("TranslationServer");
}

void godot_icall_Tree_clear_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Tree *>(ptr)->clear();
}

MonoObject* godot_icall_Tree_create_item_daa9ce5e(Object * ptr, Object * arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Tree *>(ptr)->_create_item((Object*)arg1, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_Tree_get_root_cfc68b6c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Tree *>(ptr)->get_root();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_Tree_set_column_min_width_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<Tree *>(ptr)->set_column_min_width(arg1_in, arg2_in);
}

void godot_icall_Tree_set_column_expand_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<Tree *>(ptr)->set_column_expand(arg1_in, arg2_in);
}

int32_t godot_icall_Tree_get_column_width_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Tree *>(ptr)->get_column_width(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Tree_set_hide_root_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Tree *>(ptr)->set_hide_root(arg1_in);
}

MonoBoolean godot_icall_Tree_is_root_hidden_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tree *>(ptr)->is_root_hidden();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Tree_get_next_selected_d063c4c4(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Tree *>(ptr)->_get_next_selected((Object*)arg1);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_Tree_get_selected_cfc68b6c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Tree *>(ptr)->get_selected();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_Tree_get_selected_column_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tree *>(ptr)->get_selected_column();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_Tree_get_pressed_button_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tree *>(ptr)->get_pressed_button();
    return static_cast<int32_t>(ret);
}

void godot_icall_Tree_set_select_mode_1724f4bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Tree *>(ptr)->set_select_mode((Tree::SelectMode)arg1_in);
}

int32_t godot_icall_Tree_get_select_mode_e177871f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tree *>(ptr)->get_select_mode();
    return (int32_t)ret;
}

void godot_icall_Tree_set_columns_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Tree *>(ptr)->set_columns(arg1_in);
}

int32_t godot_icall_Tree_get_columns_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tree *>(ptr)->get_columns();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_Tree_get_edited_cfc68b6c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Tree *>(ptr)->get_edited();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_Tree_get_edited_column_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tree *>(ptr)->get_edited_column();
    return static_cast<int32_t>(ret);
}

void godot_icall_Tree_get_custom_popup_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Tree *>(ptr)->get_custom_popup_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_Tree_get_item_area_rect_321b8845(Object * ptr, Object * arg1, int32_t arg2, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<Tree *>(ptr)->_get_item_rect((Object*)arg1, arg2_in);
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

MonoObject* godot_icall_Tree_get_item_at_position_90dc128e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Tree *>(ptr)->get_item_at_position(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

int32_t godot_icall_Tree_get_column_at_position_3c0b8d03(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Tree *>(ptr)->get_column_at_position(arg1_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_Tree_get_drop_section_at_position_3c0b8d03(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto ret = static_cast<Tree *>(ptr)->get_drop_section_at_position(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_Tree_ensure_cursor_is_visible_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Tree *>(ptr)->ensure_cursor_is_visible();
}

void godot_icall_Tree_set_column_titles_visible_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Tree *>(ptr)->set_column_titles_visible(arg1_in);
}

MonoBoolean godot_icall_Tree_are_column_titles_visible_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tree *>(ptr)->are_column_titles_visible();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Tree_set_column_title_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<Tree *>(ptr)->set_column_title(arg1_in, arg2_in);
}

MonoString* godot_icall_Tree_get_column_title_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Tree *>(ptr)->get_column_title(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_Tree_get_scroll_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Tree *>(ptr)->get_scroll();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Tree_set_hide_folding_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Tree *>(ptr)->set_hide_folding(arg1_in);
}

MonoBoolean godot_icall_Tree_is_folding_hidden_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tree *>(ptr)->is_folding_hidden();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Tree_set_drop_mode_flags_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Tree *>(ptr)->set_drop_mode_flags(arg1_in);
}

int32_t godot_icall_Tree_get_drop_mode_flags_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tree *>(ptr)->get_drop_mode_flags();
    return static_cast<int32_t>(ret);
}

void godot_icall_Tree_set_allow_rmb_select_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Tree *>(ptr)->set_allow_rmb_select(arg1_in);
}

MonoBoolean godot_icall_Tree_get_allow_rmb_select_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tree *>(ptr)->get_allow_rmb_select();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Tree_set_allow_reselect_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Tree *>(ptr)->set_allow_reselect(arg1_in);
}

MonoBoolean godot_icall_Tree_get_allow_reselect_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tree *>(ptr)->get_allow_reselect();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_Tree_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Tree")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_TreeItem_set_cell_mode_ed860e57(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<TreeItem *>(ptr)->set_cell_mode(arg1_in, (TreeItem::TreeCellMode)arg2_in);
}

int32_t godot_icall_TreeItem_get_cell_mode_a1bc8d7a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_cell_mode(arg1_in);
    return (int32_t)ret;
}

void godot_icall_TreeItem_set_checked_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<TreeItem *>(ptr)->set_checked(arg1_in, arg2_in);
}

MonoBoolean godot_icall_TreeItem_is_checked_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->is_checked(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TreeItem_set_text_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<TreeItem *>(ptr)->set_text(arg1_in, arg2_in);
}

MonoString* godot_icall_TreeItem_get_text_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_text(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_TreeItem_set_icon_f20a84e(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TreeItem *>(ptr)->set_icon(arg1_in, AutoRef(arg2));
}

MonoObject* godot_icall_TreeItem_get_icon_561b2831(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_icon(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TreeItem_set_icon_region_44225da7(Object * ptr, int32_t arg1, GDMonoMarshal::M_Rect2* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    static_cast<TreeItem *>(ptr)->set_icon_region(arg1_in, arg2_in);
}

void godot_icall_TreeItem_get_icon_region_c485f536(Object * ptr, int32_t arg1, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_icon_region(arg1_in);
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_TreeItem_set_icon_max_width_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<TreeItem *>(ptr)->set_icon_max_width(arg1_in, arg2_in);
}

int32_t godot_icall_TreeItem_get_icon_max_width_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_icon_max_width(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_TreeItem_set_icon_modulate_932531de(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<TreeItem *>(ptr)->set_icon_modulate(arg1_in, arg2_in);
}

void godot_icall_TreeItem_get_icon_modulate_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_icon_modulate(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_TreeItem_set_range_8ba02e52(Object * ptr, int32_t arg1, double* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    double arg2_in = static_cast<double>(*arg2);
    static_cast<TreeItem *>(ptr)->set_range(arg1_in, arg2_in);
}

void godot_icall_TreeItem_get_range_9e9b15bc(Object * ptr, int32_t arg1, double* arg_ret) {
    if (ptr == nullptr) { *arg_ret = double(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_range(arg1_in);
    *arg_ret = (double)ret;
}

void godot_icall_TreeItem_set_range_config_2248655b(Object * ptr, int32_t arg1, double* arg2, double* arg3, double* arg4, MonoBoolean arg5) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    double arg2_in = static_cast<double>(*arg2);
    double arg3_in = static_cast<double>(*arg3);
    double arg4_in = static_cast<double>(*arg4);
    bool arg5_in = static_cast<bool>(arg5);
    static_cast<TreeItem *>(ptr)->set_range_config(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

Dictionary* godot_icall_TreeItem_get_range_config_5940524d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->_get_range_config(arg1_in);
    return memnew(Dictionary(ret));
}

void godot_icall_TreeItem_set_metadata_37bef04(Object * ptr, int32_t arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<TreeItem *>(ptr)->set_metadata(arg1_in, arg2_in);
}

MonoObject* godot_icall_TreeItem_get_metadata_a9b2673d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_metadata(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_TreeItem_set_custom_draw_ffadd884(Object * ptr, int32_t arg1, Object * arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    static_cast<TreeItem *>(ptr)->set_custom_draw(arg1_in, (Object*)arg2, arg3_in);
}

void godot_icall_TreeItem_set_collapsed_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TreeItem *>(ptr)->set_collapsed(arg1_in);
}

MonoBoolean godot_icall_TreeItem_is_collapsed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TreeItem *>(ptr)->is_collapsed();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TreeItem_set_custom_minimum_height_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TreeItem *>(ptr)->set_custom_minimum_height(arg1_in);
}

int32_t godot_icall_TreeItem_get_custom_minimum_height_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<TreeItem *>(ptr)->get_custom_minimum_height();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_TreeItem_get_next_cfc68b6c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TreeItem *>(ptr)->get_next();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_TreeItem_get_prev_cfc68b6c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TreeItem *>(ptr)->get_prev();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_TreeItem_get_parent_cfc68b6c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TreeItem *>(ptr)->get_parent();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_TreeItem_get_children_cfc68b6c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<TreeItem *>(ptr)->get_children();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_TreeItem_get_next_visible_e30cdd81(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_next_visible(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

MonoObject* godot_icall_TreeItem_get_prev_visible_e30cdd81(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_prev_visible(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_TreeItem_remove_child_ad798950(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<TreeItem *>(ptr)->_remove_child((Object*)arg1);
}

void godot_icall_TreeItem_set_selectable_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<TreeItem *>(ptr)->set_selectable(arg1_in, arg2_in);
}

MonoBoolean godot_icall_TreeItem_is_selectable_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->is_selectable(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_TreeItem_is_selected_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->is_selected(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TreeItem_select_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TreeItem *>(ptr)->select(arg1_in);
}

void godot_icall_TreeItem_deselect_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TreeItem *>(ptr)->deselect(arg1_in);
}

void godot_icall_TreeItem_set_editable_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<TreeItem *>(ptr)->set_editable(arg1_in, arg2_in);
}

MonoBoolean godot_icall_TreeItem_is_editable_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->is_editable(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TreeItem_set_custom_color_932531de(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<TreeItem *>(ptr)->set_custom_color(arg1_in, arg2_in);
}

void godot_icall_TreeItem_clear_custom_color_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TreeItem *>(ptr)->clear_custom_color(arg1_in);
}

void godot_icall_TreeItem_get_custom_color_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_custom_color(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_TreeItem_set_custom_bg_color_666eacd7(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<TreeItem *>(ptr)->set_custom_bg_color(arg1_in, arg2_in, arg3_in);
}

void godot_icall_TreeItem_clear_custom_bg_color_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<TreeItem *>(ptr)->clear_custom_bg_color(arg1_in);
}

void godot_icall_TreeItem_get_custom_bg_color_eaf668ad(Object * ptr, int32_t arg1, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_custom_bg_color(arg1_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_TreeItem_set_custom_as_button_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<TreeItem *>(ptr)->set_custom_as_button(arg1_in, arg2_in);
}

MonoBoolean godot_icall_TreeItem_is_custom_set_as_button_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->is_custom_set_as_button(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TreeItem_add_button_c0fab81b(Object * ptr, int32_t arg1, Object * arg2, int32_t arg3, MonoBoolean arg4, MonoString* arg5) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    StringName arg5_in(GDMonoMarshal::mono_string_to_godot(arg5));
    static_cast<TreeItem *>(ptr)->add_button(arg1_in, AutoRef(arg2), arg3_in, arg4_in, arg5_in);
}

int32_t godot_icall_TreeItem_get_button_count_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_button_count(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_TreeItem_get_button_tooltip_4aee5da5(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TreeItem *>(ptr)->get_button_tooltip(arg1_in, arg2_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoObject* godot_icall_TreeItem_get_button_c0b9684(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TreeItem *>(ptr)->get_button(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_TreeItem_set_button_a27b318(Object * ptr, int32_t arg1, int32_t arg2, Object * arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<TreeItem *>(ptr)->set_button(arg1_in, arg2_in, AutoRef(arg3));
}

void godot_icall_TreeItem_erase_button_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<TreeItem *>(ptr)->erase_button(arg1_in, arg2_in);
}

void godot_icall_TreeItem_set_button_disabled_c76f61ef(Object * ptr, int32_t arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<TreeItem *>(ptr)->set_button_disabled(arg1_in, arg2_in, arg3_in);
}

MonoBoolean godot_icall_TreeItem_is_button_disabled_c8b57d14(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<TreeItem *>(ptr)->is_button_disabled(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TreeItem_set_expand_right_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<TreeItem *>(ptr)->set_expand_right(arg1_in, arg2_in);
}

MonoBoolean godot_icall_TreeItem_get_expand_right_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_expand_right(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_TreeItem_set_tooltip_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<TreeItem *>(ptr)->set_tooltip(arg1_in, arg2_in);
}

MonoString* godot_icall_TreeItem_get_tooltip_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_tooltip(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_TreeItem_set_text_align_c1b2ee66(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<TreeItem *>(ptr)->set_text_align(arg1_in, (TreeItem::TextAlign)arg2_in);
}

int32_t godot_icall_TreeItem_get_text_align_b78560c7(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<TreeItem *>(ptr)->get_text_align(arg1_in);
    return (int32_t)ret;
}

void godot_icall_TreeItem_move_to_top_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TreeItem *>(ptr)->move_to_top();
}

void godot_icall_TreeItem_move_to_bottom_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<TreeItem *>(ptr)->move_to_bottom();
}

void godot_icall_TreeItem_set_disable_folding_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<TreeItem *>(ptr)->set_disable_folding(arg1_in);
}

MonoBoolean godot_icall_TreeItem_is_folding_disabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<TreeItem *>(ptr)->is_folding_disabled();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_TreeItem_call_recursive_a1852e0c(Object * ptr, MonoString* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int vararg_length = mono_array_length(arg2);
    int total_length = 1 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    Variant arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    call_args[0] =&arg1_in;
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg2, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[1 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    auto ret = static_cast<TreeItem *>(ptr)->_call_recursive_bind(call_args.data(), total_length, vcall_error);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

Object* godot_icall_TriangleMesh_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "TriangleMesh")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoBoolean godot_icall_Tween_is_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tween *>(ptr)->is_active();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Tween_set_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Tween *>(ptr)->set_active(arg1_in);
}

MonoBoolean godot_icall_Tween_is_repeat_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tween *>(ptr)->is_repeat();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Tween_set_repeat_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Tween *>(ptr)->set_repeat(arg1_in);
}

void godot_icall_Tween_set_speed_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<Tween *>(ptr)->set_speed_scale(arg1_in);
}

void godot_icall_Tween_get_speed_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Tween *>(ptr)->get_speed_scale();
    *arg_ret = (float)ret;
}

void godot_icall_Tween_set_tween_process_mode_2dfc3ab3(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Tween *>(ptr)->set_tween_process_mode((Tween::TweenProcessMode)arg1_in);
}

int32_t godot_icall_Tween_get_tween_process_mode_db5605b1(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Tween *>(ptr)->get_tween_process_mode();
    return (int32_t)ret;
}

MonoBoolean godot_icall_Tween_start_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tween *>(ptr)->start();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_reset_6b881708(Object * ptr, Object * arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Tween *>(ptr)->reset((Object*)arg1, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_reset_all_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tween *>(ptr)->reset_all();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_stop_6b881708(Object * ptr, Object * arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Tween *>(ptr)->stop((Object*)arg1, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_stop_all_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tween *>(ptr)->stop_all();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_resume_6b881708(Object * ptr, Object * arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Tween *>(ptr)->resume((Object*)arg1, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_resume_all_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tween *>(ptr)->resume_all();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_remove_6b881708(Object * ptr, Object * arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<Tween *>(ptr)->remove((Object*)arg1, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_remove_all_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Tween *>(ptr)->remove_all();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_seek_2e15e021(Object * ptr, float* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    float arg1_in = static_cast<float>(*arg1);
    auto ret = static_cast<Tween *>(ptr)->seek(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Tween_tell_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Tween *>(ptr)->tell();
    *arg_ret = (float)ret;
}

void godot_icall_Tween_get_runtime_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Tween *>(ptr)->get_runtime();
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_Tween_interpolate_property_3170f345(Object * ptr, Object * arg1, NodePath* arg2, MonoObject* arg3, MonoObject* arg4, float* arg5, int32_t arg6, int32_t arg7, float* arg8) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    Variant arg4_in = GDMonoMarshal::mono_object_to_variant(arg4);
    float arg5_in = static_cast<float>(*arg5);
    int64_t arg6_in = (int64_t)arg6;
    int64_t arg7_in = (int64_t)arg7;
    float arg8_in = static_cast<float>(*arg8);
    auto ret = static_cast<Tween *>(ptr)->interpolate_property((Object*)arg1, *arg2, arg3_in, arg4_in, arg5_in, (Tween::TransitionType)arg6_in, (Tween::EaseType)arg7_in, arg8_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_interpolate_method_75b1d34d(Object * ptr, Object * arg1, MonoString* arg2, MonoObject* arg3, MonoObject* arg4, float* arg5, int32_t arg6, int32_t arg7, float* arg8) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    Variant arg4_in = GDMonoMarshal::mono_object_to_variant(arg4);
    float arg5_in = static_cast<float>(*arg5);
    int64_t arg6_in = (int64_t)arg6;
    int64_t arg7_in = (int64_t)arg7;
    float arg8_in = static_cast<float>(*arg8);
    auto ret = static_cast<Tween *>(ptr)->interpolate_method((Object*)arg1, arg2_in, arg3_in, arg4_in, arg5_in, (Tween::TransitionType)arg6_in, (Tween::EaseType)arg7_in, arg8_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_interpolate_callback_76f1ec4d(Object * ptr, Object * arg1, float* arg2, MonoString* arg3, MonoObject* arg4, MonoObject* arg5, MonoObject* arg6, MonoObject* arg7, MonoObject* arg8) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    float arg2_in = static_cast<float>(*arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    Variant arg4_in = GDMonoMarshal::mono_object_to_variant(arg4);
    Variant arg5_in = GDMonoMarshal::mono_object_to_variant(arg5);
    Variant arg6_in = GDMonoMarshal::mono_object_to_variant(arg6);
    Variant arg7_in = GDMonoMarshal::mono_object_to_variant(arg7);
    Variant arg8_in = GDMonoMarshal::mono_object_to_variant(arg8);
    auto ret = static_cast<Tween *>(ptr)->interpolate_callback((Object*)arg1, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in, arg7_in, arg8_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_interpolate_deferred_callback_76f1ec4d(Object * ptr, Object * arg1, float* arg2, MonoString* arg3, MonoObject* arg4, MonoObject* arg5, MonoObject* arg6, MonoObject* arg7, MonoObject* arg8) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    float arg2_in = static_cast<float>(*arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    Variant arg4_in = GDMonoMarshal::mono_object_to_variant(arg4);
    Variant arg5_in = GDMonoMarshal::mono_object_to_variant(arg5);
    Variant arg6_in = GDMonoMarshal::mono_object_to_variant(arg6);
    Variant arg7_in = GDMonoMarshal::mono_object_to_variant(arg7);
    Variant arg8_in = GDMonoMarshal::mono_object_to_variant(arg8);
    auto ret = static_cast<Tween *>(ptr)->interpolate_deferred_callback((Object*)arg1, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in, arg7_in, arg8_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_follow_property_e54614ab(Object * ptr, Object * arg1, NodePath* arg2, MonoObject* arg3, Object * arg4, NodePath* arg5, float* arg6, int32_t arg7, int32_t arg8, float* arg9) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    float arg6_in = static_cast<float>(*arg6);
    int64_t arg7_in = (int64_t)arg7;
    int64_t arg8_in = (int64_t)arg8;
    float arg9_in = static_cast<float>(*arg9);
    auto ret = static_cast<Tween *>(ptr)->follow_property((Object*)arg1, *arg2, arg3_in, (Object*)arg4, *arg5, arg6_in, (Tween::TransitionType)arg7_in, (Tween::EaseType)arg8_in, arg9_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_follow_method_3753ab0c(Object * ptr, Object * arg1, MonoString* arg2, MonoObject* arg3, Object * arg4, MonoString* arg5, float* arg6, int32_t arg7, int32_t arg8, float* arg9) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    StringName arg5_in(GDMonoMarshal::mono_string_to_godot(arg5));
    float arg6_in = static_cast<float>(*arg6);
    int64_t arg7_in = (int64_t)arg7;
    int64_t arg8_in = (int64_t)arg8;
    float arg9_in = static_cast<float>(*arg9);
    auto ret = static_cast<Tween *>(ptr)->follow_method((Object*)arg1, arg2_in, arg3_in, (Object*)arg4, arg5_in, arg6_in, (Tween::TransitionType)arg7_in, (Tween::EaseType)arg8_in, arg9_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_targeting_property_15fff0ba(Object * ptr, Object * arg1, NodePath* arg2, Object * arg3, NodePath* arg4, MonoObject* arg5, float* arg6, int32_t arg7, int32_t arg8, float* arg9) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Variant arg5_in = GDMonoMarshal::mono_object_to_variant(arg5);
    float arg6_in = static_cast<float>(*arg6);
    int64_t arg7_in = (int64_t)arg7;
    int64_t arg8_in = (int64_t)arg8;
    float arg9_in = static_cast<float>(*arg9);
    auto ret = static_cast<Tween *>(ptr)->targeting_property((Object*)arg1, *arg2, (Object*)arg3, *arg4, arg5_in, arg6_in, (Tween::TransitionType)arg7_in, (Tween::EaseType)arg8_in, arg9_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_Tween_targeting_method_909d0a9c(Object * ptr, Object * arg1, MonoString* arg2, Object * arg3, MonoString* arg4, MonoObject* arg5, float* arg6, int32_t arg7, int32_t arg8, float* arg9) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    StringName arg4_in(GDMonoMarshal::mono_string_to_godot(arg4));
    Variant arg5_in = GDMonoMarshal::mono_object_to_variant(arg5);
    float arg6_in = static_cast<float>(*arg6);
    int64_t arg7_in = (int64_t)arg7;
    int64_t arg8_in = (int64_t)arg8;
    float arg9_in = static_cast<float>(*arg9);
    auto ret = static_cast<Tween *>(ptr)->targeting_method((Object*)arg1, arg2_in, (Object*)arg3, arg4_in, arg5_in, arg6_in, (Tween::TransitionType)arg7_in, (Tween::EaseType)arg8_in, arg9_in);
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_Tween_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Tween")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_UPNP_get_device_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<UPNP *>(ptr)->get_device_count();
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_UPNP_get_device_6dca64f9(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<UPNP *>(ptr)->get_device(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_UPNP_add_device_88e11eba(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<UPNP *>(ptr)->add_device(AutoRef(arg1));
}

void godot_icall_UPNP_set_device_992664ee(Object * ptr, int32_t arg1, Object * arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<UPNP *>(ptr)->set_device(arg1_in, AutoRef(arg2));
}

void godot_icall_UPNP_remove_device_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<UPNP *>(ptr)->remove_device(arg1_in);
}

void godot_icall_UPNP_clear_devices_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<UPNP *>(ptr)->clear_devices();
}

MonoObject* godot_icall_UPNP_get_gateway_3640e9aa(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<UPNP *>(ptr)->get_gateway();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_UPNP_discover_b43a9270(Object * ptr, int32_t arg1, int32_t arg2, MonoString* arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    TmpString<512> arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    auto ret = static_cast<UPNP *>(ptr)->discover(arg1_in, arg2_in, arg3_in);
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_UPNP_query_external_address_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<UPNP *>(ptr)->query_external_address();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_UPNP_add_port_mapping_3bffc24b(Object * ptr, int32_t arg1, int32_t arg2, MonoString* arg3, MonoString* arg4, int32_t arg5) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    String arg3_in = GDMonoMarshal::mono_string_to_godot(arg3);
    String arg4_in = GDMonoMarshal::mono_string_to_godot(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    auto ret = static_cast<UPNP *>(ptr)->add_port_mapping(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_UPNP_delete_port_mapping_7c08ec16(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<UPNP *>(ptr)->delete_port_mapping(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_UPNP_set_discover_multicast_if_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<UPNP *>(ptr)->set_discover_multicast_if(arg1_in);
}

MonoString* godot_icall_UPNP_get_discover_multicast_if_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<UPNP *>(ptr)->get_discover_multicast_if();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_UPNP_set_discover_local_port_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<UPNP *>(ptr)->set_discover_local_port(arg1_in);
}

int32_t godot_icall_UPNP_get_discover_local_port_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<UPNP *>(ptr)->get_discover_local_port();
    return static_cast<int32_t>(ret);
}

void godot_icall_UPNP_set_discover_ipv6_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<UPNP *>(ptr)->set_discover_ipv6(arg1_in);
}

MonoBoolean godot_icall_UPNP_is_discover_ipv6_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<UPNP *>(ptr)->is_discover_ipv6();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_UPNP_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "UPNP")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoBoolean godot_icall_UPNPDevice_is_valid_gateway_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<UPNPDevice *>(ptr)->is_valid_gateway();
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_UPNPDevice_query_external_address_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<UPNPDevice *>(ptr)->query_external_address();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall_UPNPDevice_add_port_mapping_3bffc24b(Object * ptr, int32_t arg1, int32_t arg2, MonoString* arg3, MonoString* arg4, int32_t arg5) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    String arg3_in = GDMonoMarshal::mono_string_to_godot(arg3);
    String arg4_in = GDMonoMarshal::mono_string_to_godot(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    auto ret = static_cast<UPNPDevice *>(ptr)->add_port_mapping(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_UPNPDevice_delete_port_mapping_7c08ec16(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<UPNPDevice *>(ptr)->delete_port_mapping(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_UPNPDevice_set_description_url_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<UPNPDevice *>(ptr)->set_description_url(arg1_in);
}

MonoString* godot_icall_UPNPDevice_get_description_url_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<UPNPDevice *>(ptr)->get_description_url();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_UPNPDevice_set_service_type_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<UPNPDevice *>(ptr)->set_service_type(arg1_in);
}

MonoString* godot_icall_UPNPDevice_get_service_type_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<UPNPDevice *>(ptr)->get_service_type();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_UPNPDevice_set_igd_control_url_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<UPNPDevice *>(ptr)->set_igd_control_url(arg1_in);
}

MonoString* godot_icall_UPNPDevice_get_igd_control_url_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<UPNPDevice *>(ptr)->get_igd_control_url();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_UPNPDevice_set_igd_service_type_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<UPNPDevice *>(ptr)->set_igd_service_type(arg1_in);
}

MonoString* godot_icall_UPNPDevice_get_igd_service_type_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<UPNPDevice *>(ptr)->get_igd_service_type();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_UPNPDevice_set_igd_our_addr_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<UPNPDevice *>(ptr)->set_igd_our_addr(arg1_in);
}

MonoString* godot_icall_UPNPDevice_get_igd_our_addr_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<UPNPDevice *>(ptr)->get_igd_our_addr();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_UPNPDevice_set_igd_status_49809a86(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<UPNPDevice *>(ptr)->set_igd_status((UPNPDevice::IGDStatus)arg1_in);
}

int32_t godot_icall_UPNPDevice_get_igd_status_77a265e6(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<UPNPDevice *>(ptr)->get_igd_status();
    return (int32_t)ret;
}

Object* godot_icall_UPNPDevice_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "UPNPDevice")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_UndoRedo_create_action_2a07168a(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int64_t arg2_in = (int64_t)arg2;
    static_cast<UndoRedo *>(ptr)->create_action(arg1_in, (UndoRedo::MergeMode)arg2_in);
}

void godot_icall_UndoRedo_commit_action_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<UndoRedo *>(ptr)->commit_action();
}

MonoBoolean godot_icall_UndoRedo_is_commiting_action_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<UndoRedo *>(ptr)->is_committing_action();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_UndoRedo_add_do_method_a0841b08(Object * ptr, Object * arg1, MonoString* arg2, MonoArray* arg3) {
    ERR_FAIL_NULL(ptr);
    int vararg_length = mono_array_length(arg3);
    int total_length = 2 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    Variant arg1_in = Variant::from(arg1);
    call_args[0] =&arg1_in;
    Variant arg2_in = GDMonoMarshal::mono_string_to_godot(arg2);
    call_args[1] =&arg2_in;
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg3, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[2 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    static_cast<UndoRedo *>(ptr)->_add_do_method(call_args.data(), total_length, vcall_error);
}

void godot_icall_UndoRedo_add_undo_method_a0841b08(Object * ptr, Object * arg1, MonoString* arg2, MonoArray* arg3) {
    ERR_FAIL_NULL(ptr);
    int vararg_length = mono_array_length(arg3);
    int total_length = 2 + vararg_length;
    ArgumentsVector<Variant> varargs(vararg_length);
    ArgumentsVector<const Variant *> call_args(total_length);
    Variant arg1_in = Variant::from(arg1);
    call_args[0] =&arg1_in;
    Variant arg2_in = GDMonoMarshal::mono_string_to_godot(arg2);
    call_args[1] =&arg2_in;
    for (int i = 0; i < vararg_length; i++) {
        MonoObject* elem = mono_array_get(arg3, MonoObject*, i);
        varargs[i]= GDMonoMarshal::mono_object_to_variant(elem);
        call_args[2 + i] = &varargs[i];
    }
    Variant::CallError vcall_error;
    static_cast<UndoRedo *>(ptr)->_add_undo_method(call_args.data(), total_length, vcall_error);
}

void godot_icall_UndoRedo_add_do_property_91d4cdd2(Object * ptr, Object * arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<UndoRedo *>(ptr)->add_do_property((Object*)arg1, arg2_in, arg3_in);
}

void godot_icall_UndoRedo_add_undo_property_91d4cdd2(Object * ptr, Object * arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<UndoRedo *>(ptr)->add_undo_property((Object*)arg1, arg2_in, arg3_in);
}

void godot_icall_UndoRedo_add_do_reference_ad798950(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<UndoRedo *>(ptr)->add_do_reference((Object*)arg1);
}

void godot_icall_UndoRedo_add_undo_reference_ad798950(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<UndoRedo *>(ptr)->add_undo_reference((Object*)arg1);
}

void godot_icall_UndoRedo_clear_history_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<UndoRedo *>(ptr)->clear_history(arg1_in);
}

MonoString* godot_icall_UndoRedo_get_current_action_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<UndoRedo *>(ptr)->get_current_action_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_UndoRedo_has_undo_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<UndoRedo *>(ptr)->has_undo();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_UndoRedo_has_redo_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<UndoRedo *>(ptr)->has_redo();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_UndoRedo_get_version_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<UndoRedo *>(ptr)->get_version();
    *arg_ret = (uint64_t)ret;
}

MonoBoolean godot_icall_UndoRedo_redo_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<UndoRedo *>(ptr)->redo();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_UndoRedo_undo_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<UndoRedo *>(ptr)->undo();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_UndoRedo_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "UndoRedo")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VBoxContainer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VBoxContainer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VScrollBar_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VScrollBar")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VSeparator_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VSeparator")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VSlider_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VSlider")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VSplitContainer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VSplitContainer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VehicleBody_set_engine_force_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleBody *>(ptr)->set_engine_force(arg1_in);
}

void godot_icall_VehicleBody_get_engine_force_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleBody *>(ptr)->get_engine_force();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleBody_set_brake_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleBody *>(ptr)->set_brake(arg1_in);
}

void godot_icall_VehicleBody_get_brake_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleBody *>(ptr)->get_brake();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleBody_set_steering_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleBody *>(ptr)->set_steering(arg1_in);
}

void godot_icall_VehicleBody_get_steering_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleBody *>(ptr)->get_steering();
    *arg_ret = (float)ret;
}

Object* godot_icall_VehicleBody_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VehicleBody")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VehicleWheel_set_radius_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleWheel *>(ptr)->set_radius(arg1_in);
}

void godot_icall_VehicleWheel_get_radius_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_radius();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleWheel_set_suspension_rest_length_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleWheel *>(ptr)->set_suspension_rest_length(arg1_in);
}

void godot_icall_VehicleWheel_get_suspension_rest_length_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_suspension_rest_length();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleWheel_set_suspension_travel_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleWheel *>(ptr)->set_suspension_travel(arg1_in);
}

void godot_icall_VehicleWheel_get_suspension_travel_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_suspension_travel();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleWheel_set_suspension_stiffness_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleWheel *>(ptr)->set_suspension_stiffness(arg1_in);
}

void godot_icall_VehicleWheel_get_suspension_stiffness_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_suspension_stiffness();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleWheel_set_suspension_max_force_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleWheel *>(ptr)->set_suspension_max_force(arg1_in);
}

void godot_icall_VehicleWheel_get_suspension_max_force_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_suspension_max_force();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleWheel_set_damping_compression_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleWheel *>(ptr)->set_damping_compression(arg1_in);
}

void godot_icall_VehicleWheel_get_damping_compression_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_damping_compression();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleWheel_set_damping_relaxation_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleWheel *>(ptr)->set_damping_relaxation(arg1_in);
}

void godot_icall_VehicleWheel_get_damping_relaxation_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_damping_relaxation();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleWheel_set_use_as_traction_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<VehicleWheel *>(ptr)->set_use_as_traction(arg1_in);
}

MonoBoolean godot_icall_VehicleWheel_is_used_as_traction_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VehicleWheel *>(ptr)->is_used_as_traction();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VehicleWheel_set_use_as_steering_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<VehicleWheel *>(ptr)->set_use_as_steering(arg1_in);
}

MonoBoolean godot_icall_VehicleWheel_is_used_as_steering_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VehicleWheel *>(ptr)->is_used_as_steering();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VehicleWheel_set_friction_slip_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleWheel *>(ptr)->set_friction_slip(arg1_in);
}

void godot_icall_VehicleWheel_get_friction_slip_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_friction_slip();
    *arg_ret = (float)ret;
}

MonoBoolean godot_icall_VehicleWheel_is_in_contact_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VehicleWheel *>(ptr)->is_in_contact();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VehicleWheel_set_roll_influence_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleWheel *>(ptr)->set_roll_influence(arg1_in);
}

void godot_icall_VehicleWheel_get_roll_influence_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_roll_influence();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleWheel_get_skidinfo_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_skidinfo();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleWheel_get_rpm_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_rpm();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleWheel_set_engine_force_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleWheel *>(ptr)->set_engine_force(arg1_in);
}

void godot_icall_VehicleWheel_get_engine_force_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_engine_force();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleWheel_set_brake_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleWheel *>(ptr)->set_brake(arg1_in);
}

void godot_icall_VehicleWheel_get_brake_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_brake();
    *arg_ret = (float)ret;
}

void godot_icall_VehicleWheel_set_steering_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VehicleWheel *>(ptr)->set_steering(arg1_in);
}

void godot_icall_VehicleWheel_get_steering_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VehicleWheel *>(ptr)->get_steering();
    *arg_ret = (float)ret;
}

Object* godot_icall_VehicleWheel_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VehicleWheel")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VideoPlayer_set_stream_b4bbe12e(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VideoPlayer *>(ptr)->set_stream(AutoRef(arg1));
}

MonoObject* godot_icall_VideoPlayer_get_stream_729b403e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VideoPlayer *>(ptr)->get_stream();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_VideoPlayer_play_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<VideoPlayer *>(ptr)->play();
}

void godot_icall_VideoPlayer_stop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<VideoPlayer *>(ptr)->stop();
}

MonoBoolean godot_icall_VideoPlayer_is_playing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VideoPlayer *>(ptr)->is_playing();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VideoPlayer_set_paused_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<VideoPlayer *>(ptr)->set_paused(arg1_in);
}

MonoBoolean godot_icall_VideoPlayer_is_paused_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VideoPlayer *>(ptr)->is_paused();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VideoPlayer_set_volume_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VideoPlayer *>(ptr)->set_volume(arg1_in);
}

void godot_icall_VideoPlayer_get_volume_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VideoPlayer *>(ptr)->get_volume();
    *arg_ret = (float)ret;
}

void godot_icall_VideoPlayer_set_volume_db_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VideoPlayer *>(ptr)->set_volume_db(arg1_in);
}

void godot_icall_VideoPlayer_get_volume_db_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VideoPlayer *>(ptr)->get_volume_db();
    *arg_ret = (float)ret;
}

void godot_icall_VideoPlayer_set_audio_track_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<VideoPlayer *>(ptr)->set_audio_track(arg1_in);
}

int32_t godot_icall_VideoPlayer_get_audio_track_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VideoPlayer *>(ptr)->get_audio_track();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_VideoPlayer_get_stream_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VideoPlayer *>(ptr)->get_stream_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VideoPlayer_set_stream_position_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VideoPlayer *>(ptr)->set_stream_position(arg1_in);
}

void godot_icall_VideoPlayer_get_stream_position_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VideoPlayer *>(ptr)->get_stream_position();
    *arg_ret = (float)ret;
}

void godot_icall_VideoPlayer_set_autoplay_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<VideoPlayer *>(ptr)->set_autoplay(arg1_in);
}

MonoBoolean godot_icall_VideoPlayer_has_autoplay_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VideoPlayer *>(ptr)->has_autoplay();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VideoPlayer_set_expand_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<VideoPlayer *>(ptr)->set_expand(arg1_in);
}

MonoBoolean godot_icall_VideoPlayer_has_expand_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VideoPlayer *>(ptr)->has_expand();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VideoPlayer_set_buffering_msec_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<VideoPlayer *>(ptr)->set_buffering_msec(arg1_in);
}

int32_t godot_icall_VideoPlayer_get_buffering_msec_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VideoPlayer *>(ptr)->get_buffering_msec();
    return static_cast<int32_t>(ret);
}

void godot_icall_VideoPlayer_set_bus_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VideoPlayer *>(ptr)->set_bus(arg1_in);
}

MonoString* godot_icall_VideoPlayer_get_bus_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VideoPlayer *>(ptr)->get_bus();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoObject* godot_icall_VideoPlayer_get_video_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VideoPlayer *>(ptr)->get_video_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_VideoPlayer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VideoPlayer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_Viewport_set_use_arvr_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_use_arvr(arg1_in);
}

MonoBoolean godot_icall_Viewport_use_arvr_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->use_arvr();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Viewport *>(ptr)->set_size(arg1_in);
}

void godot_icall_Viewport_get_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Viewport *>(ptr)->get_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Viewport_set_world_2d_453eac2b(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Viewport *>(ptr)->set_world_2d(AutoRef(arg1));
}

MonoObject* godot_icall_Viewport_get_world_2d_84187b39(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Viewport *>(ptr)->get_world_2d();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_Viewport_find_world_2d_84187b39(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Viewport *>(ptr)->find_world_2d();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Viewport_set_world_ef1dec5d(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Viewport *>(ptr)->set_world(AutoRef(arg1));
}

MonoObject* godot_icall_Viewport_get_world_1e353b0f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Viewport *>(ptr)->get_world();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_Viewport_find_world_1e353b0f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Viewport *>(ptr)->find_world();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Viewport_set_canvas_transform_dfe2915f(Object * ptr, GDMonoMarshal::M_Transform2D* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    static_cast<Viewport *>(ptr)->set_canvas_transform(arg1_in);
}

void godot_icall_Viewport_get_canvas_transform_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Viewport *>(ptr)->get_canvas_transform();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_Viewport_set_global_canvas_transform_dfe2915f(Object * ptr, GDMonoMarshal::M_Transform2D* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg1_in = MARSHALLED_IN(Transform2D, arg1);
    static_cast<Viewport *>(ptr)->set_global_canvas_transform(arg1_in);
}

void godot_icall_Viewport_get_global_canvas_transform_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Viewport *>(ptr)->get_global_canvas_transform();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_Viewport_get_final_transform_d44700d(Object * ptr, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Viewport *>(ptr)->get_final_transform();
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_Viewport_get_visible_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Viewport *>(ptr)->get_visible_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall_Viewport_set_transparent_background_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_transparent_background(arg1_in);
}

MonoBoolean godot_icall_Viewport_has_transparent_background_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->has_transparent_background();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_size_override_443302f5(Object * ptr, MonoBoolean arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<Viewport *>(ptr)->set_size_override(arg1_in, arg2_in, arg3_in);
}

void godot_icall_Viewport_get_size_override_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Viewport *>(ptr)->get_size_override();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoBoolean godot_icall_Viewport_is_size_override_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->is_size_override_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_size_override_stretch_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_size_override_stretch(arg1_in);
}

MonoBoolean godot_icall_Viewport_is_size_override_stretch_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->is_size_override_stretch_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_vflip_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_vflip(arg1_in);
}

MonoBoolean godot_icall_Viewport_get_vflip_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->get_vflip();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_clear_mode_8d1ec28d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Viewport *>(ptr)->set_clear_mode((Viewport::ClearMode)arg1_in);
}

int32_t godot_icall_Viewport_get_clear_mode_3c381ddf(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Viewport *>(ptr)->get_clear_mode();
    return (int32_t)ret;
}

void godot_icall_Viewport_set_update_mode_94511153(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Viewport *>(ptr)->set_update_mode((Viewport::UpdateMode)arg1_in);
}

int32_t godot_icall_Viewport_get_update_mode_52f0f011(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Viewport *>(ptr)->get_update_mode();
    return (int32_t)ret;
}

void godot_icall_Viewport_set_msaa_6330ff9f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Viewport *>(ptr)->set_msaa((Viewport::MSAA)arg1_in);
}

int32_t godot_icall_Viewport_get_msaa_a2124acd(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Viewport *>(ptr)->get_msaa();
    return (int32_t)ret;
}

void godot_icall_Viewport_set_hdr_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_hdr(arg1_in);
}

MonoBoolean godot_icall_Viewport_get_hdr_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->get_hdr();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_usage_f6077388(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Viewport *>(ptr)->set_usage((Viewport::Usage)arg1_in);
}

int32_t godot_icall_Viewport_get_usage_7a2c1beb(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Viewport *>(ptr)->get_usage();
    return (int32_t)ret;
}

void godot_icall_Viewport_set_debug_draw_6864315a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<Viewport *>(ptr)->set_debug_draw((Viewport::DebugDraw)arg1_in);
}

int32_t godot_icall_Viewport_get_debug_draw_46b3ea95(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Viewport *>(ptr)->get_debug_draw();
    return (int32_t)ret;
}

int32_t godot_icall_Viewport_get_render_info_3cb8fde0(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<Viewport *>(ptr)->get_render_info((Viewport::RenderInfo)arg1_in);
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_Viewport_get_texture_c987223c(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Viewport *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_Viewport_set_physics_object_picking_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_physics_object_picking(arg1_in);
}

MonoBoolean godot_icall_Viewport_get_physics_object_picking_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->get_physics_object_picking();
    return static_cast<MonoBoolean>(ret);
}

RID* godot_icall_Viewport_get_viewport_rid_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Viewport *>(ptr)->get_viewport_rid();
    return memnew(RID(ret));
}

void godot_icall_Viewport_input_7ac4986f(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Viewport *>(ptr)->input(AutoRef(arg1));
}

void godot_icall_Viewport_unhandled_input_7ac4986f(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<Viewport *>(ptr)->unhandled_input(AutoRef(arg1));
}

void godot_icall_Viewport_update_worlds_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Viewport *>(ptr)->update_worlds();
}

void godot_icall_Viewport_set_use_own_world_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_use_own_world(arg1_in);
}

MonoBoolean godot_icall_Viewport_is_using_own_world_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->is_using_own_world();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Viewport_get_camera_b804d7b0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Viewport *>(ptr)->get_camera();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_Viewport_set_as_audio_listener_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_as_audio_listener(arg1_in);
}

MonoBoolean godot_icall_Viewport_is_audio_listener_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->is_audio_listener();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_as_audio_listener_2d_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_as_audio_listener_2d(arg1_in);
}

MonoBoolean godot_icall_Viewport_is_audio_listener_2d_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->is_audio_listener_2d();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_attach_to_screen_rect_a5ed61f1(Object * ptr, GDMonoMarshal::M_Rect2* arg1) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    static_cast<Viewport *>(ptr)->set_attach_to_screen_rect(arg1_in);
}

void godot_icall_Viewport_set_use_render_direct_to_screen_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_use_render_direct_to_screen(arg1_in);
}

MonoBoolean godot_icall_Viewport_is_using_render_direct_to_screen_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->is_using_render_direct_to_screen();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_get_mouse_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<Viewport *>(ptr)->get_mouse_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_Viewport_warp_mouse_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<Viewport *>(ptr)->warp_mouse(arg1_in);
}

MonoBoolean godot_icall_Viewport_gui_has_modal_stack_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->gui_has_modal_stack();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Viewport_gui_get_drag_data_a08d6f10(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Viewport *>(ptr)->gui_get_drag_data();
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoBoolean godot_icall_Viewport_gui_is_dragging_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->gui_is_dragging();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_Viewport_get_modal_stack_top_eb752350(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<Viewport *>(ptr)->get_modal_stack_top();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall_Viewport_set_disable_input_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_disable_input(arg1_in);
}

MonoBoolean godot_icall_Viewport_is_input_disabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->is_input_disabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_disable_3d_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_disable_3d(arg1_in);
}

MonoBoolean godot_icall_Viewport_is_3d_disabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->is_3d_disabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_keep_3d_linear_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_keep_3d_linear(arg1_in);
}

MonoBoolean godot_icall_Viewport_get_keep_3d_linear_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->get_keep_3d_linear();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_shadow_atlas_size_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<Viewport *>(ptr)->set_shadow_atlas_size(arg1_in);
}

int32_t godot_icall_Viewport_get_shadow_atlas_size_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<Viewport *>(ptr)->get_shadow_atlas_size();
    return static_cast<int32_t>(ret);
}

void godot_icall_Viewport_set_snap_controls_to_pixels_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_snap_controls_to_pixels(arg1_in);
}

MonoBoolean godot_icall_Viewport_is_snap_controls_to_pixels_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->is_snap_controls_to_pixels_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_shadow_atlas_quadrant_subdiv_fdf743f(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<Viewport *>(ptr)->set_shadow_atlas_quadrant_subdiv(arg1_in, (Viewport::ShadowAtlasQuadrantSubdiv)arg2_in);
}

int32_t godot_icall_Viewport_get_shadow_atlas_quadrant_subdiv_5f690c44(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<Viewport *>(ptr)->get_shadow_atlas_quadrant_subdiv(arg1_in);
    return (int32_t)ret;
}

void godot_icall_Viewport_set_input_as_handled_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<Viewport *>(ptr)->set_input_as_handled();
}

MonoBoolean godot_icall_Viewport_is_input_handled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->is_input_handled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_Viewport_set_handle_input_locally_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<Viewport *>(ptr)->set_handle_input_locally(arg1_in);
}

MonoBoolean godot_icall_Viewport_is_handling_input_locally_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<Viewport *>(ptr)->is_handling_input_locally();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_Viewport_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "Viewport")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ViewportContainer_set_stretch_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<ViewportContainer *>(ptr)->set_stretch(arg1_in);
}

MonoBoolean godot_icall_ViewportContainer_is_stretch_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<ViewportContainer *>(ptr)->is_stretch_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_ViewportContainer_set_stretch_shrink_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<ViewportContainer *>(ptr)->set_stretch_shrink(arg1_in);
}

int32_t godot_icall_ViewportContainer_get_stretch_shrink_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<ViewportContainer *>(ptr)->get_stretch_shrink();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_ViewportContainer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ViewportContainer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_ViewportTexture_set_viewport_path_in_scene_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<ViewportTexture *>(ptr)->set_viewport_path_in_scene(*arg1);
}

NodePath* godot_icall_ViewportTexture_get_viewport_path_in_scene_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<ViewportTexture *>(ptr)->get_viewport_path_in_scene();
    return memnew(NodePath(ret));
}

Object* godot_icall_ViewportTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "ViewportTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisibilityEnabler_set_enabler_138f911d(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisibilityEnabler *>(ptr)->set_enabler((VisibilityEnabler::Enabler)arg1_in, arg2_in);
}

MonoBoolean godot_icall_VisibilityEnabler_is_enabler_enabled_3911799(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<VisibilityEnabler *>(ptr)->is_enabler_enabled((VisibilityEnabler::Enabler)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_VisibilityEnabler_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisibilityEnabler")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisibilityEnabler2D_set_enabler_c56a5206(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisibilityEnabler2D *>(ptr)->set_enabler((VisibilityEnabler2D::Enabler)arg1_in, arg2_in);
}

MonoBoolean godot_icall_VisibilityEnabler2D_is_enabler_enabled_ebb3e32f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<VisibilityEnabler2D *>(ptr)->is_enabler_enabled((VisibilityEnabler2D::Enabler)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_VisibilityEnabler2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisibilityEnabler2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisibilityNotifier_set_aabb_ff67b409(Object * ptr, GDMonoMarshal::M_AABB* arg1) {
    ERR_FAIL_NULL(ptr);
    AABB arg1_in = MARSHALLED_IN(AABB, arg1);
    static_cast<VisibilityNotifier *>(ptr)->set_aabb(arg1_in);
}

void godot_icall_VisibilityNotifier_get_aabb_2dbf935b(Object * ptr, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisibilityNotifier *>(ptr)->get_aabb();
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

MonoBoolean godot_icall_VisibilityNotifier_is_on_screen_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VisibilityNotifier *>(ptr)->is_on_screen();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_VisibilityNotifier_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisibilityNotifier")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisibilityNotifier2D_set_rect_a5ed61f1(Object * ptr, GDMonoMarshal::M_Rect2* arg1) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg1_in = MARSHALLED_IN(Rect2, arg1);
    static_cast<VisibilityNotifier2D *>(ptr)->set_rect(arg1_in);
}

void godot_icall_VisibilityNotifier2D_get_rect_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisibilityNotifier2D *>(ptr)->get_rect();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

MonoBoolean godot_icall_VisibilityNotifier2D_is_on_screen_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VisibilityNotifier2D *>(ptr)->is_on_screen();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_VisibilityNotifier2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisibilityNotifier2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualInstance_set_base_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualInstance *>(ptr)->set_base(*arg1);
}

RID* godot_icall_VisualInstance_get_base_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualInstance *>(ptr)->get_base();
    return memnew(RID(ret));
}

RID* godot_icall_VisualInstance_get_instance_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualInstance *>(ptr)->get_instance();
    return memnew(RID(ret));
}

void godot_icall_VisualInstance_set_layer_mask_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<VisualInstance *>(ptr)->set_layer_mask(arg1_in);
}

uint32_t godot_icall_VisualInstance_get_layer_mask_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<VisualInstance *>(ptr)->get_layer_mask();
    return static_cast<uint32_t>(ret);
}

void godot_icall_VisualInstance_set_layer_mask_bit_4ae8febd(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualInstance *>(ptr)->set_layer_mask_bit(arg1_in, arg2_in);
}

MonoBoolean godot_icall_VisualInstance_get_layer_mask_bit_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<VisualInstance *>(ptr)->get_layer_mask_bit(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualInstance_get_transformed_aabb_2dbf935b(Object * ptr, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualInstance *>(ptr)->get_transformed_aabb();
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

void godot_icall_VisualInstance_get_aabb_2dbf935b(Object * ptr, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualInstance *>(ptr)->get_aabb();
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

void godot_icall_VisualScript_add_function_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScript *>(ptr)->add_function(arg1_in);
}

MonoBoolean godot_icall_VisualScript_has_function_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<VisualScript *>(ptr)->has_function(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualScript_remove_function_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScript *>(ptr)->remove_function(arg1_in);
}

void godot_icall_VisualScript_rename_function_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<VisualScript *>(ptr)->rename_function(arg1_in, arg2_in);
}

void godot_icall_VisualScript_set_function_scroll_20e37454(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<VisualScript *>(ptr)->set_function_scroll(arg1_in, arg2_in);
}

void godot_icall_VisualScript_get_function_scroll_edf24f59(Object * ptr, MonoString* arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<VisualScript *>(ptr)->get_function_scroll(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_VisualScript_add_node_fd47592b(Object * ptr, MonoString* arg1, int32_t arg2, Object * arg3, GDMonoMarshal::M_Vector2* arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Vector2 arg4_in = MARSHALLED_IN(Vector2, arg4);
    static_cast<VisualScript *>(ptr)->add_node(arg1_in, arg2_in, AutoRef(arg3), arg4_in);
}

void godot_icall_VisualScript_remove_node_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualScript *>(ptr)->remove_node(arg1_in, arg2_in);
}

int32_t godot_icall_VisualScript_get_function_node_id_79b61600(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<VisualScript *>(ptr)->get_function_node_id(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall_VisualScript_get_node_cbdb98ee(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualScript *>(ptr)->get_node(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoBoolean godot_icall_VisualScript_has_node_19efc97a(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualScript *>(ptr)->has_node(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualScript_set_node_position_889c2902(Object * ptr, MonoString* arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<VisualScript *>(ptr)->set_node_position(arg1_in, arg2_in, arg3_in);
}

void godot_icall_VisualScript_get_node_position_98221d26(Object * ptr, MonoString* arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualScript *>(ptr)->get_node_position(arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_VisualScript_sequence_connect_fe69b8b1(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<VisualScript *>(ptr)->sequence_connect(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_VisualScript_sequence_disconnect_fe69b8b1(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<VisualScript *>(ptr)->sequence_disconnect(arg1_in, arg2_in, arg3_in, arg4_in);
}

MonoBoolean godot_icall_VisualScript_has_sequence_connection_1d6d8385(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    auto ret = static_cast<VisualScript *>(ptr)->has_sequence_connection(arg1_in, arg2_in, arg3_in, arg4_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualScript_data_connect_69a13a64(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    static_cast<VisualScript *>(ptr)->data_connect(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

void godot_icall_VisualScript_data_disconnect_69a13a64(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    static_cast<VisualScript *>(ptr)->data_disconnect(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

MonoBoolean godot_icall_VisualScript_has_data_connection_3d11a90f(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    auto ret = static_cast<VisualScript *>(ptr)->has_data_connection(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualScript_add_variable_a7febfc1(Object * ptr, MonoString* arg1, MonoObject* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<VisualScript *>(ptr)->add_variable(arg1_in, arg2_in, arg3_in);
}

MonoBoolean godot_icall_VisualScript_has_variable_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<VisualScript *>(ptr)->has_variable(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualScript_remove_variable_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScript *>(ptr)->remove_variable(arg1_in);
}

void godot_icall_VisualScript_set_variable_default_value_3a208116(Object * ptr, MonoString* arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<VisualScript *>(ptr)->set_variable_default_value(arg1_in, arg2_in);
}

MonoObject* godot_icall_VisualScript_get_variable_default_value_6732bfd8(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<VisualScript *>(ptr)->get_variable_default_value(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_VisualScript_set_variable_info_b8799e85(Object * ptr, MonoString* arg1, Dictionary* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScript *>(ptr)->_set_variable_info(arg1_in, *arg2);
}

Dictionary* godot_icall_VisualScript_get_variable_info_18c08bf6(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<VisualScript *>(ptr)->get_variable_info(arg1_in);
    return memnew(Dictionary(ret));
}

void godot_icall_VisualScript_set_variable_export_f253b141(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualScript *>(ptr)->set_variable_export(arg1_in, arg2_in);
}

MonoBoolean godot_icall_VisualScript_get_variable_export_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<VisualScript *>(ptr)->get_variable_export(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualScript_rename_variable_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<VisualScript *>(ptr)->rename_variable(arg1_in, arg2_in);
}

void godot_icall_VisualScript_add_custom_signal_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScript *>(ptr)->add_custom_signal(arg1_in);
}

MonoBoolean godot_icall_VisualScript_has_custom_signal_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<VisualScript *>(ptr)->has_custom_signal(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualScript_custom_signal_add_argument_6b96b493(Object * ptr, MonoString* arg1, int32_t arg2, MonoString* arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int64_t arg2_in = (int64_t)arg2;
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<VisualScript *>(ptr)->custom_signal_add_argument(arg1_in, (VariantType)arg2_in, arg3_in, arg4_in);
}

void godot_icall_VisualScript_custom_signal_set_argument_type_c9cc5858(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int64_t arg3_in = (int64_t)arg3;
    static_cast<VisualScript *>(ptr)->custom_signal_set_argument_type(arg1_in, arg2_in, (VariantType)arg3_in);
}

int32_t godot_icall_VisualScript_custom_signal_get_argument_type_926a3f4a(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualScript *>(ptr)->custom_signal_get_argument_type(arg1_in, arg2_in);
    return (int32_t)ret;
}

void godot_icall_VisualScript_custom_signal_set_argument_name_cd41be07(Object * ptr, MonoString* arg1, int32_t arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    StringName arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    static_cast<VisualScript *>(ptr)->custom_signal_set_argument_name(arg1_in, arg2_in, arg3_in);
}

MonoString* godot_icall_VisualScript_custom_signal_get_argument_name_58fcd4d0(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualScript *>(ptr)->custom_signal_get_argument_name(arg1_in, arg2_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScript_custom_signal_remove_argument_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualScript *>(ptr)->custom_signal_remove_argument(arg1_in, arg2_in);
}

int32_t godot_icall_VisualScript_custom_signal_get_argument_count_79b61600(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<VisualScript *>(ptr)->custom_signal_get_argument_count(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualScript_custom_signal_swap_argument_cc6f6a0(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<VisualScript *>(ptr)->custom_signal_swap_argument(arg1_in, arg2_in, arg3_in);
}

void godot_icall_VisualScript_remove_custom_signal_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScript *>(ptr)->remove_custom_signal(arg1_in);
}

void godot_icall_VisualScript_rename_custom_signal_7dacd953(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<VisualScript *>(ptr)->rename_custom_signal(arg1_in, arg2_in);
}

void godot_icall_VisualScript_set_instance_base_type_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScript *>(ptr)->set_instance_base_type(arg1_in);
}

void godot_icall_VisualScript__set_data_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScript *>(ptr)->_set_data(*arg1);
}

Dictionary* godot_icall_VisualScript__get_data_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScript *>(ptr)->_get_data();
    return memnew(Dictionary(ret));
}

Object* godot_icall_VisualScript_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScript")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptBasicTypeConstant_set_basic_type_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptBasicTypeConstant *>(ptr)->set_basic_type((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptBasicTypeConstant_get_basic_type_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptBasicTypeConstant *>(ptr)->get_basic_type();
    return (int32_t)ret;
}

void godot_icall_VisualScriptBasicTypeConstant_set_basic_type_constant_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptBasicTypeConstant *>(ptr)->set_basic_type_constant(arg1_in);
}

MonoString* godot_icall_VisualScriptBasicTypeConstant_get_basic_type_constant_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptBasicTypeConstant *>(ptr)->get_basic_type_constant();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_VisualScriptBasicTypeConstant_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptBasicTypeConstant")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptBuiltinFunc_set_func_5b1d66da(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptBuiltinFunc *>(ptr)->set_func((VisualScriptBuiltinFunc::BuiltinFunc)arg1_in);
}

int32_t godot_icall_VisualScriptBuiltinFunc_get_func_8a34c18a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptBuiltinFunc *>(ptr)->get_func();
    return (int32_t)ret;
}

Object* godot_icall_VisualScriptBuiltinFunc_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptBuiltinFunc")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptClassConstant_set_class_constant_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptClassConstant *>(ptr)->set_class_constant(arg1_in);
}

MonoString* godot_icall_VisualScriptClassConstant_get_class_constant_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptClassConstant *>(ptr)->get_class_constant();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptClassConstant_set_base_type_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptClassConstant *>(ptr)->set_base_type(arg1_in);
}

MonoString* godot_icall_VisualScriptClassConstant_get_base_type_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptClassConstant *>(ptr)->get_base_type();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_VisualScriptClassConstant_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptClassConstant")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptComment_set_title_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<VisualScriptComment *>(ptr)->set_title(arg1_in);
}

MonoString* godot_icall_VisualScriptComment_get_title_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptComment *>(ptr)->get_title();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptComment_set_description_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<VisualScriptComment *>(ptr)->set_description(arg1_in);
}

MonoString* godot_icall_VisualScriptComment_get_description_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptComment *>(ptr)->get_description();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptComment_set_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<VisualScriptComment *>(ptr)->set_size(arg1_in);
}

void godot_icall_VisualScriptComment_get_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualScriptComment *>(ptr)->get_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

Object* godot_icall_VisualScriptComment_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptComment")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptComposeArray_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptComposeArray")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptCondition_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptCondition")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptConstant_set_constant_type_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptConstant *>(ptr)->set_constant_type((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptConstant_get_constant_type_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptConstant *>(ptr)->get_constant_type();
    return (int32_t)ret;
}

void godot_icall_VisualScriptConstant_set_constant_value_62b5905c(Object * ptr, MonoObject* arg1) {
    ERR_FAIL_NULL(ptr);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    static_cast<VisualScriptConstant *>(ptr)->set_constant_value(arg1_in);
}

MonoObject* godot_icall_VisualScriptConstant_get_constant_value_a08d6f10(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptConstant *>(ptr)->get_constant_value();
    return GDMonoMarshal::variant_to_mono_object(ret);
}

Object* godot_icall_VisualScriptConstant_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptConstant")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptConstructor_set_constructor_type_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptConstructor *>(ptr)->set_constructor_type((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptConstructor_get_constructor_type_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptConstructor *>(ptr)->get_constructor_type();
    return (int32_t)ret;
}

void godot_icall_VisualScriptConstructor_set_constructor_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScriptConstructor *>(ptr)->set_constructor(*arg1);
}

Dictionary* godot_icall_VisualScriptConstructor_get_constructor_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptConstructor *>(ptr)->get_constructor();
    return memnew(Dictionary(ret));
}

Object* godot_icall_VisualScriptConstructor_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptConstructor")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptCustomNode_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptCustomNode")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptDeconstruct_set_deconstruct_type_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptDeconstruct *>(ptr)->set_deconstruct_type((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptDeconstruct_get_deconstruct_type_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptDeconstruct *>(ptr)->get_deconstruct_type();
    return (int32_t)ret;
}

void godot_icall_VisualScriptDeconstruct__set_elem_cache_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScriptDeconstruct *>(ptr)->_set_elem_cache(*arg1);
}

Array* godot_icall_VisualScriptDeconstruct__get_elem_cache_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptDeconstruct *>(ptr)->_get_elem_cache();
    return memnew(Array(Variant::from(ret)));
}

Object* godot_icall_VisualScriptDeconstruct_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptDeconstruct")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptEmitSignal_set_signal_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptEmitSignal *>(ptr)->set_signal(arg1_in);
}

MonoString* godot_icall_VisualScriptEmitSignal_get_signal_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptEmitSignal *>(ptr)->get_signal();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_VisualScriptEmitSignal_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptEmitSignal")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptEngineSingleton_set_singleton_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptEngineSingleton *>(ptr)->set_singleton(arg1_in);
}

MonoString* godot_icall_VisualScriptEngineSingleton_get_singleton_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptEngineSingleton *>(ptr)->get_singleton();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_VisualScriptEngineSingleton_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptEngineSingleton")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptExpression_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptExpression")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptFunction_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptFunction")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptFunctionCall_set_base_type_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptFunctionCall *>(ptr)->set_base_type(arg1_in);
}

MonoString* godot_icall_VisualScriptFunctionCall_get_base_type_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptFunctionCall *>(ptr)->get_base_type();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptFunctionCall_set_base_script_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptFunctionCall *>(ptr)->set_base_script(arg1_in);
}

MonoString* godot_icall_VisualScriptFunctionCall_get_base_script_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptFunctionCall *>(ptr)->get_base_script();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptFunctionCall_set_basic_type_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptFunctionCall *>(ptr)->set_basic_type((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptFunctionCall_get_basic_type_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptFunctionCall *>(ptr)->get_basic_type();
    return (int32_t)ret;
}

void godot_icall_VisualScriptFunctionCall_set_singleton_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptFunctionCall *>(ptr)->set_singleton(arg1_in);
}

MonoString* godot_icall_VisualScriptFunctionCall_get_singleton_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptFunctionCall *>(ptr)->get_singleton();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptFunctionCall_set_function_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptFunctionCall *>(ptr)->set_function(arg1_in);
}

MonoString* godot_icall_VisualScriptFunctionCall_get_function_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptFunctionCall *>(ptr)->get_function();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptFunctionCall_set_call_mode_1c3a0cd9(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptFunctionCall *>(ptr)->set_call_mode((VisualScriptFunctionCall::CallMode)arg1_in);
}

int32_t godot_icall_VisualScriptFunctionCall_get_call_mode_96c510f4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptFunctionCall *>(ptr)->get_call_mode();
    return (int32_t)ret;
}

void godot_icall_VisualScriptFunctionCall_set_base_path_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScriptFunctionCall *>(ptr)->set_base_path(*arg1);
}

NodePath* godot_icall_VisualScriptFunctionCall_get_base_path_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptFunctionCall *>(ptr)->get_base_path();
    return memnew(NodePath(ret));
}

void godot_icall_VisualScriptFunctionCall_set_use_default_args_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<VisualScriptFunctionCall *>(ptr)->set_use_default_args(arg1_in);
}

int32_t godot_icall_VisualScriptFunctionCall_get_use_default_args_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptFunctionCall *>(ptr)->get_use_default_args();
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualScriptFunctionCall__set_argument_cache_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScriptFunctionCall *>(ptr)->_set_argument_cache(*arg1);
}

Dictionary* godot_icall_VisualScriptFunctionCall__get_argument_cache_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptFunctionCall *>(ptr)->_get_argument_cache();
    return memnew(Dictionary(ret));
}

void godot_icall_VisualScriptFunctionCall_set_rpc_call_mode_899e69c2(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptFunctionCall *>(ptr)->set_rpc_call_mode((VisualScriptFunctionCall::RPCCallMode)arg1_in);
}

int32_t godot_icall_VisualScriptFunctionCall_get_rpc_call_mode_37b7b8a2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptFunctionCall *>(ptr)->get_rpc_call_mode();
    return (int32_t)ret;
}

void godot_icall_VisualScriptFunctionCall_set_validate_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<VisualScriptFunctionCall *>(ptr)->set_validate(arg1_in);
}

MonoBoolean godot_icall_VisualScriptFunctionCall_get_validate_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VisualScriptFunctionCall *>(ptr)->get_validate();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_VisualScriptFunctionCall_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptFunctionCall")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptFunctionState_connect_to_signal_d94ae12e(Object * ptr, Object * arg1, MonoString* arg2, Array* arg3) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<VisualScriptFunctionState *>(ptr)->connect_to_signal((Object*)arg1, arg2_in, *arg3);
}

MonoObject* godot_icall_VisualScriptFunctionState_resume_61377341(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptFunctionState *>(ptr)->resume(*arg1);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoBoolean godot_icall_VisualScriptFunctionState_is_valid_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VisualScriptFunctionState *>(ptr)->is_valid();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_VisualScriptFunctionState_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptFunctionState")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptGlobalConstant_set_global_constant_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<VisualScriptGlobalConstant *>(ptr)->set_global_constant(arg1_in);
}

int32_t godot_icall_VisualScriptGlobalConstant_get_global_constant_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptGlobalConstant *>(ptr)->get_global_constant();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_VisualScriptGlobalConstant_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptGlobalConstant")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptIndexGet_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptIndexGet")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptIndexSet_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptIndexSet")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptInputAction_set_action_name_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptInputAction *>(ptr)->set_action_name(arg1_in);
}

MonoString* godot_icall_VisualScriptInputAction_get_action_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptInputAction *>(ptr)->get_action_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptInputAction_set_action_mode_88125a3f(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptInputAction *>(ptr)->set_action_mode((VisualScriptInputAction::Mode)arg1_in);
}

int32_t godot_icall_VisualScriptInputAction_get_action_mode_a057b28a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptInputAction *>(ptr)->get_action_mode();
    return (int32_t)ret;
}

Object* godot_icall_VisualScriptInputAction_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptInputAction")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptIterator_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptIterator")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptLists_add_input_data_port_fce73ba6(Object * ptr, int32_t arg1, MonoString* arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<VisualScriptLists *>(ptr)->add_input_data_port((VariantType)arg1_in, arg2_in, arg3_in);
}

void godot_icall_VisualScriptLists_set_input_data_port_name_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<VisualScriptLists *>(ptr)->set_input_data_port_name(arg1_in, arg2_in);
}

void godot_icall_VisualScriptLists_set_input_data_port_type_fd684c8c(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<VisualScriptLists *>(ptr)->set_input_data_port_type(arg1_in, (VariantType)arg2_in);
}

void godot_icall_VisualScriptLists_remove_input_data_port_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<VisualScriptLists *>(ptr)->remove_input_data_port(arg1_in);
}

void godot_icall_VisualScriptLists_add_output_data_port_fce73ba6(Object * ptr, int32_t arg1, MonoString* arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<VisualScriptLists *>(ptr)->add_output_data_port((VariantType)arg1_in, arg2_in, arg3_in);
}

void godot_icall_VisualScriptLists_set_output_data_port_name_c1ffd74f(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<VisualScriptLists *>(ptr)->set_output_data_port_name(arg1_in, arg2_in);
}

void godot_icall_VisualScriptLists_set_output_data_port_type_fd684c8c(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int64_t arg2_in = (int64_t)arg2;
    static_cast<VisualScriptLists *>(ptr)->set_output_data_port_type(arg1_in, (VariantType)arg2_in);
}

void godot_icall_VisualScriptLists_remove_output_data_port_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<VisualScriptLists *>(ptr)->remove_output_data_port(arg1_in);
}

void godot_icall_VisualScriptLocalVar_set_var_name_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptLocalVar *>(ptr)->set_var_name(arg1_in);
}

MonoString* godot_icall_VisualScriptLocalVar_get_var_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptLocalVar *>(ptr)->get_var_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptLocalVar_set_var_type_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptLocalVar *>(ptr)->set_var_type((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptLocalVar_get_var_type_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptLocalVar *>(ptr)->get_var_type();
    return (int32_t)ret;
}

Object* godot_icall_VisualScriptLocalVar_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptLocalVar")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptLocalVarSet_set_var_name_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptLocalVarSet *>(ptr)->set_var_name(arg1_in);
}

MonoString* godot_icall_VisualScriptLocalVarSet_get_var_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptLocalVarSet *>(ptr)->get_var_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptLocalVarSet_set_var_type_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptLocalVarSet *>(ptr)->set_var_type((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptLocalVarSet_get_var_type_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptLocalVarSet *>(ptr)->get_var_type();
    return (int32_t)ret;
}

Object* godot_icall_VisualScriptLocalVarSet_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptLocalVarSet")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptMathConstant_set_math_constant_9a056eb6(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptMathConstant *>(ptr)->set_math_constant((VisualScriptMathConstant::MathConstant)arg1_in);
}

int32_t godot_icall_VisualScriptMathConstant_get_math_constant_491cb9b6(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptMathConstant *>(ptr)->get_math_constant();
    return (int32_t)ret;
}

Object* godot_icall_VisualScriptMathConstant_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptMathConstant")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoObject* godot_icall_VisualScriptNode_get_visual_script_19e455ec(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptNode *>(ptr)->get_visual_script();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_VisualScriptNode_set_default_input_value_37bef04(Object * ptr, int32_t arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<VisualScriptNode *>(ptr)->set_default_input_value(arg1_in, arg2_in);
}

MonoObject* godot_icall_VisualScriptNode_get_default_input_value_a9b2673d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<VisualScriptNode *>(ptr)->get_default_input_value(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_VisualScriptNode_ports_changed_notify_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScriptNode *>(ptr)->ports_changed_notify();
}

void godot_icall_VisualScriptNode__set_default_input_values_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScriptNode *>(ptr)->_set_default_input_values(*arg1);
}

Array* godot_icall_VisualScriptNode__get_default_input_values_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptNode *>(ptr)->_get_default_input_values();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_VisualScriptOperator_set_operator_e062591e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptOperator *>(ptr)->set_operator((Variant::Operator)arg1_in);
}

int32_t godot_icall_VisualScriptOperator_get_operator_1ec3a84e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptOperator *>(ptr)->get_operator();
    return (int32_t)ret;
}

void godot_icall_VisualScriptOperator_set_typed_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptOperator *>(ptr)->set_typed((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptOperator_get_typed_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptOperator *>(ptr)->get_typed();
    return (int32_t)ret;
}

Object* godot_icall_VisualScriptOperator_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptOperator")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptPreload_set_preload_7ce53eb(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScriptPreload *>(ptr)->set_preload(AutoRef(arg1));
}

MonoObject* godot_icall_VisualScriptPreload_get_preload_c567ae79(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptPreload *>(ptr)->get_preload();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_VisualScriptPreload_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptPreload")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptPropertyGet_set_base_type_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptPropertyGet *>(ptr)->set_base_type(arg1_in);
}

MonoString* godot_icall_VisualScriptPropertyGet_get_base_type_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptPropertyGet *>(ptr)->get_base_type();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptPropertyGet_set_base_script_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptPropertyGet *>(ptr)->set_base_script(arg1_in);
}

MonoString* godot_icall_VisualScriptPropertyGet_get_base_script_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptPropertyGet *>(ptr)->get_base_script();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptPropertyGet_set_basic_type_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptPropertyGet *>(ptr)->set_basic_type((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptPropertyGet_get_basic_type_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptPropertyGet *>(ptr)->get_basic_type();
    return (int32_t)ret;
}

void godot_icall_VisualScriptPropertyGet__set_type_cache_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptPropertyGet *>(ptr)->_set_type_cache((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptPropertyGet__get_type_cache_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptPropertyGet *>(ptr)->_get_type_cache();
    return (int32_t)ret;
}

void godot_icall_VisualScriptPropertyGet_set_property_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptPropertyGet *>(ptr)->set_property(arg1_in);
}

MonoString* godot_icall_VisualScriptPropertyGet_get_property_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptPropertyGet *>(ptr)->get_property();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptPropertyGet_set_call_mode_399da78(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptPropertyGet *>(ptr)->set_call_mode((VisualScriptPropertyGet::CallMode)arg1_in);
}

int32_t godot_icall_VisualScriptPropertyGet_get_call_mode_c1b924ec(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptPropertyGet *>(ptr)->get_call_mode();
    return (int32_t)ret;
}

void godot_icall_VisualScriptPropertyGet_set_base_path_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScriptPropertyGet *>(ptr)->set_base_path(*arg1);
}

NodePath* godot_icall_VisualScriptPropertyGet_get_base_path_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptPropertyGet *>(ptr)->get_base_path();
    return memnew(NodePath(ret));
}

void godot_icall_VisualScriptPropertyGet_set_index_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptPropertyGet *>(ptr)->set_index(arg1_in);
}

MonoString* godot_icall_VisualScriptPropertyGet_get_index_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptPropertyGet *>(ptr)->get_index();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_VisualScriptPropertyGet_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptPropertyGet")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptPropertySet_set_base_type_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptPropertySet *>(ptr)->set_base_type(arg1_in);
}

MonoString* godot_icall_VisualScriptPropertySet_get_base_type_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptPropertySet *>(ptr)->get_base_type();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptPropertySet_set_base_script_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptPropertySet *>(ptr)->set_base_script(arg1_in);
}

MonoString* godot_icall_VisualScriptPropertySet_get_base_script_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptPropertySet *>(ptr)->get_base_script();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptPropertySet_set_basic_type_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptPropertySet *>(ptr)->set_basic_type((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptPropertySet_get_basic_type_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptPropertySet *>(ptr)->get_basic_type();
    return (int32_t)ret;
}

void godot_icall_VisualScriptPropertySet__set_type_cache_e472adcf(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScriptPropertySet *>(ptr)->_set_type_cache(*arg1);
}

Dictionary* godot_icall_VisualScriptPropertySet__get_type_cache_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptPropertySet *>(ptr)->_get_type_cache();
    return memnew(Dictionary(ret));
}

void godot_icall_VisualScriptPropertySet_set_property_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptPropertySet *>(ptr)->set_property(arg1_in);
}

MonoString* godot_icall_VisualScriptPropertySet_get_property_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptPropertySet *>(ptr)->get_property();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptPropertySet_set_call_mode_86c9a7c(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptPropertySet *>(ptr)->set_call_mode((VisualScriptPropertySet::CallMode)arg1_in);
}

int32_t godot_icall_VisualScriptPropertySet_get_call_mode_b6c664f0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptPropertySet *>(ptr)->get_call_mode();
    return (int32_t)ret;
}

void godot_icall_VisualScriptPropertySet_set_base_path_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScriptPropertySet *>(ptr)->set_base_path(*arg1);
}

NodePath* godot_icall_VisualScriptPropertySet_get_base_path_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptPropertySet *>(ptr)->get_base_path();
    return memnew(NodePath(ret));
}

void godot_icall_VisualScriptPropertySet_set_index_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptPropertySet *>(ptr)->set_index(arg1_in);
}

MonoString* godot_icall_VisualScriptPropertySet_get_index_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptPropertySet *>(ptr)->get_index();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptPropertySet_set_assign_op_e894e9b1(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptPropertySet *>(ptr)->set_assign_op((VisualScriptPropertySet::AssignOp)arg1_in);
}

int32_t godot_icall_VisualScriptPropertySet_get_assign_op_c37223fc(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptPropertySet *>(ptr)->get_assign_op();
    return (int32_t)ret;
}

Object* godot_icall_VisualScriptPropertySet_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptPropertySet")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptResourcePath_set_resource_path_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptResourcePath *>(ptr)->set_resource_path(arg1_in);
}

MonoString* godot_icall_VisualScriptResourcePath_get_resource_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptResourcePath *>(ptr)->get_resource_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_VisualScriptResourcePath_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptResourcePath")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptReturn_set_return_type_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptReturn *>(ptr)->set_return_type((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptReturn_get_return_type_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptReturn *>(ptr)->get_return_type();
    return (int32_t)ret;
}

void godot_icall_VisualScriptReturn_set_enable_return_value_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<VisualScriptReturn *>(ptr)->set_enable_return_value(arg1_in);
}

MonoBoolean godot_icall_VisualScriptReturn_is_return_value_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VisualScriptReturn *>(ptr)->is_return_value_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_VisualScriptReturn_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptReturn")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptSceneNode_set_node_path_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScriptSceneNode *>(ptr)->set_node_path(*arg1);
}

NodePath* godot_icall_VisualScriptSceneNode_get_node_path_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptSceneNode *>(ptr)->get_node_path();
    return memnew(NodePath(ret));
}

Object* godot_icall_VisualScriptSceneNode_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptSceneNode")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptSceneTree_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptSceneTree")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptSelect_set_typed_2ca776e4(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptSelect *>(ptr)->set_typed((VariantType)arg1_in);
}

int32_t godot_icall_VisualScriptSelect_get_typed_da7ed188(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptSelect *>(ptr)->get_typed();
    return (int32_t)ret;
}

Object* godot_icall_VisualScriptSelect_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptSelect")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptSelf_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptSelf")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptSequence_set_steps_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<VisualScriptSequence *>(ptr)->set_steps(arg1_in);
}

int32_t godot_icall_VisualScriptSequence_get_steps_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptSequence *>(ptr)->get_steps();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_VisualScriptSequence_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptSequence")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptSubCall_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptSubCall")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptSwitch_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptSwitch")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptTypeCast_set_base_type_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptTypeCast *>(ptr)->set_base_type(arg1_in);
}

MonoString* godot_icall_VisualScriptTypeCast_get_base_type_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptTypeCast *>(ptr)->get_base_type();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptTypeCast_set_base_script_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptTypeCast *>(ptr)->set_base_script(arg1_in);
}

MonoString* godot_icall_VisualScriptTypeCast_get_base_script_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptTypeCast *>(ptr)->get_base_script();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_VisualScriptTypeCast_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptTypeCast")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptVariableGet_set_variable_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptVariableGet *>(ptr)->set_variable(arg1_in);
}

MonoString* godot_icall_VisualScriptVariableGet_get_variable_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptVariableGet *>(ptr)->get_variable();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_VisualScriptVariableGet_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptVariableGet")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptVariableSet_set_variable_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptVariableSet *>(ptr)->set_variable(arg1_in);
}

MonoString* godot_icall_VisualScriptVariableSet_get_variable_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptVariableSet *>(ptr)->get_variable();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_VisualScriptVariableSet_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptVariableSet")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualScriptWhile_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptWhile")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptYield_set_yield_mode_9acc9a29(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptYield *>(ptr)->set_yield_mode((VisualScriptYield::YieldMode)arg1_in);
}

int32_t godot_icall_VisualScriptYield_get_yield_mode_4866653b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptYield *>(ptr)->get_yield_mode();
    return (int32_t)ret;
}

void godot_icall_VisualScriptYield_set_wait_time_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VisualScriptYield *>(ptr)->set_wait_time(arg1_in);
}

void godot_icall_VisualScriptYield_get_wait_time_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualScriptYield *>(ptr)->get_wait_time();
    *arg_ret = (float)ret;
}

Object* godot_icall_VisualScriptYield_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptYield")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualScriptYieldSignal_set_base_type_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptYieldSignal *>(ptr)->set_base_type(arg1_in);
}

MonoString* godot_icall_VisualScriptYieldSignal_get_base_type_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptYieldSignal *>(ptr)->get_base_type();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptYieldSignal_set_signal_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualScriptYieldSignal *>(ptr)->set_signal(arg1_in);
}

MonoString* godot_icall_VisualScriptYieldSignal_get_signal_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptYieldSignal *>(ptr)->get_signal();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualScriptYieldSignal_set_call_mode_addb6322(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualScriptYieldSignal *>(ptr)->set_call_mode((VisualScriptYieldSignal::CallMode)arg1_in);
}

int32_t godot_icall_VisualScriptYieldSignal_get_call_mode_e4d8928d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualScriptYieldSignal *>(ptr)->get_call_mode();
    return (int32_t)ret;
}

void godot_icall_VisualScriptYieldSignal_set_base_path_1e08804(Object * ptr, NodePath* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualScriptYieldSignal *>(ptr)->set_base_path(*arg1);
}

NodePath* godot_icall_VisualScriptYieldSignal_get_base_path_bf425768(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualScriptYieldSignal *>(ptr)->get_base_path();
    return memnew(NodePath(ret));
}

Object* godot_icall_VisualScriptYieldSignal_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualScriptYieldSignal")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualServer_force_sync_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->sync();
}

void godot_icall_VisualServer_force_draw_c783ccca(Object * ptr, MonoBoolean arg1, double* arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    double arg2_in = static_cast<double>(*arg2);
    static_cast<VisualServer *>(ptr)->draw(arg1_in, arg2_in);
}

void godot_icall_VisualServer_sync_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->sync();
}

void godot_icall_VisualServer_draw_c783ccca(Object * ptr, MonoBoolean arg1, double* arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    double arg2_in = static_cast<double>(*arg2);
    static_cast<VisualServer *>(ptr)->draw(arg1_in, arg2_in);
}

RID* godot_icall_VisualServer_texture_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->texture_create();
    return memnew(RID(ret));
}

RID* godot_icall_VisualServer_texture_create_from_image_c87a7b80(Object * ptr, Object * arg1, uint32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->texture_create_from_image(AutoRef(arg1), arg2_in);
    return memnew(RID(ret));
}

void godot_icall_VisualServer_texture_allocate_25a9ca24(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, uint32_t arg7) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int64_t arg5_in = (int64_t)arg5;
    int32_t arg6_in = static_cast<int32_t>(arg6);
    uint32_t arg7_in = static_cast<uint32_t>(arg7);
    static_cast<VisualServer *>(ptr)->texture_allocate(*arg1, arg2_in, arg3_in, arg4_in, (Image::Format)arg5_in, (VS::TextureType)arg6_in, arg7_in);
}

void godot_icall_VisualServer_texture_set_data_68988578(Object * ptr, RID* arg1, Object * arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<VisualServer *>(ptr)->texture_set_data(*arg1, AutoRef(arg2), arg3_in);
}

void godot_icall_VisualServer_texture_set_data_partial_ef9fd2e(Object * ptr, RID* arg1, Object * arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, int32_t arg10) {
    ERR_FAIL_NULL(ptr);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    int32_t arg6_in = static_cast<int32_t>(arg6);
    int32_t arg7_in = static_cast<int32_t>(arg7);
    int32_t arg8_in = static_cast<int32_t>(arg8);
    int32_t arg9_in = static_cast<int32_t>(arg9);
    int32_t arg10_in = static_cast<int32_t>(arg10);
    static_cast<VisualServer *>(ptr)->texture_set_data_partial(*arg1, AutoRef(arg2), arg3_in, arg4_in, arg5_in, arg6_in, arg7_in, arg8_in, arg9_in, arg10_in);
}

MonoObject* godot_icall_VisualServer_texture_get_data_cea36e64(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->texture_get_data(*arg1, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_VisualServer_texture_set_flags_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<VisualServer *>(ptr)->texture_set_flags(*arg1, arg2_in);
}

uint32_t godot_icall_VisualServer_texture_get_flags_1867c419(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<VisualServer *>(ptr)->texture_get_flags(*arg1);
    return static_cast<uint32_t>(ret);
}

int32_t godot_icall_VisualServer_texture_get_format_25a22d81(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualServer *>(ptr)->texture_get_format(*arg1);
    return (int32_t)ret;
}

int32_t godot_icall_VisualServer_texture_get_type_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualServer *>(ptr)->texture_get_type(*arg1);
    return static_cast<int32_t>(ret);
}

uint32_t godot_icall_VisualServer_texture_get_texid_1867c419(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<VisualServer *>(ptr)->texture_get_texid(*arg1);
    return static_cast<uint32_t>(ret);
}

uint32_t godot_icall_VisualServer_texture_get_width_1867c419(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<VisualServer *>(ptr)->texture_get_width(*arg1);
    return static_cast<uint32_t>(ret);
}

uint32_t godot_icall_VisualServer_texture_get_height_1867c419(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<VisualServer *>(ptr)->texture_get_height(*arg1);
    return static_cast<uint32_t>(ret);
}

uint32_t godot_icall_VisualServer_texture_get_depth_1867c419(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<VisualServer *>(ptr)->texture_get_depth(*arg1);
    return static_cast<uint32_t>(ret);
}

void godot_icall_VisualServer_texture_set_size_override_c1c02a59(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<VisualServer *>(ptr)->texture_set_size_override(*arg1, arg2_in, arg3_in, arg4_in);
}

void godot_icall_VisualServer_texture_set_path_d45c5753(Object * ptr, RID* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<VisualServer *>(ptr)->texture_set_path(*arg1, arg2_in);
}

MonoString* godot_icall_VisualServer_texture_get_path_8e62b7cc(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->texture_get_path(*arg1);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualServer_texture_set_shrink_all_x2_on_set_data_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<VisualServer *>(ptr)->texture_set_shrink_all_x2_on_set_data(arg1_in);
}

void godot_icall_VisualServer_texture_bind_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<VisualServer *>(ptr)->texture_bind(*arg1, arg2_in);
}

Array* godot_icall_VisualServer_texture_debug_usage_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->_texture_debug_usage_bind();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_VisualServer_textures_keep_original_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<VisualServer *>(ptr)->textures_keep_original(arg1_in);
}

RID* godot_icall_VisualServer_sky_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->sky_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_sky_set_texture_980180a6(Object * ptr, RID* arg1, RID* arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<VisualServer *>(ptr)->sky_set_texture(*arg1, *arg2, arg3_in);
}

RID* godot_icall_VisualServer_shader_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->shader_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_shader_set_code_879ee574(Object * ptr, RID* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    String arg2_in = GDMonoMarshal::mono_string_to_godot(arg2);
    static_cast<VisualServer *>(ptr)->shader_set_code(*arg1, arg2_in);
}

MonoString* godot_icall_VisualServer_shader_get_code_8e62b7cc(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->shader_get_code(*arg1);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Array* godot_icall_VisualServer_shader_get_param_list_e33ff758(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->_shader_get_param_list_bind(*arg1);
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_VisualServer_shader_set_default_texture_param_6e3a1204(Object * ptr, RID* arg1, MonoString* arg2, RID* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<VisualServer *>(ptr)->shader_set_default_texture_param(*arg1, arg2_in, *arg3);
}

RID* godot_icall_VisualServer_shader_get_default_texture_param_136fcc74(Object * ptr, RID* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<VisualServer *>(ptr)->shader_get_default_texture_param(*arg1, arg2_in);
    return memnew(RID(ret));
}

RID* godot_icall_VisualServer_material_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->material_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_material_set_shader_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->material_set_shader(*arg1, *arg2);
}

RID* godot_icall_VisualServer_material_get_shader_c09e26c0(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->material_get_shader(*arg1);
    return memnew(RID(ret));
}

void godot_icall_VisualServer_material_set_param_2bd01b16(Object * ptr, RID* arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<VisualServer *>(ptr)->material_set_param(*arg1, arg2_in, arg3_in);
}

MonoObject* godot_icall_VisualServer_material_get_param_626d676d(Object * ptr, RID* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<VisualServer *>(ptr)->material_get_param(*arg1, arg2_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoObject* godot_icall_VisualServer_material_get_param_default_626d676d(Object * ptr, RID* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<VisualServer *>(ptr)->material_get_param_default(*arg1, arg2_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_VisualServer_material_set_render_priority_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->material_set_render_priority(*arg1, arg2_in);
}

void godot_icall_VisualServer_material_set_line_width_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->material_set_line_width(*arg1, arg2_in);
}

void godot_icall_VisualServer_material_set_next_pass_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->material_set_next_pass(*arg1, *arg2);
}

RID* godot_icall_VisualServer_mesh_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->mesh_create();
    return memnew(RID(ret));
}

uint32_t godot_icall_VisualServer_mesh_surface_get_format_offset_c7c8c828(Object * ptr, uint32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    auto ret = static_cast<VisualServer *>(ptr)->mesh_surface_get_format_offset(arg1_in, arg2_in, arg3_in, arg4_in);
    return static_cast<uint32_t>(ret);
}

uint32_t godot_icall_VisualServer_mesh_surface_get_format_stride_d481a46b(Object * ptr, uint32_t arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<VisualServer *>(ptr)->mesh_surface_get_format_stride(arg1_in, arg2_in, arg3_in);
    return static_cast<uint32_t>(ret);
}

void godot_icall_VisualServer_mesh_add_surface_from_arrays_36892d9(Object * ptr, RID* arg1, int32_t arg2, Array* arg3, Array* arg4, uint32_t arg5) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    uint32_t arg5_in = static_cast<uint32_t>(arg5);
    static_cast<VisualServer *>(ptr)->_mesh_add_surface_from_arrays(*arg1, (VS::PrimitiveType)arg2_in, *arg3, *arg4, arg5_in);
}

void godot_icall_VisualServer_mesh_set_blend_shape_count_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->mesh_set_blend_shape_count(*arg1, arg2_in);
}

int32_t godot_icall_VisualServer_mesh_get_blend_shape_count_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualServer *>(ptr)->mesh_get_blend_shape_count(*arg1);
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualServer_mesh_set_blend_shape_mode_ae1981ce(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->mesh_set_blend_shape_mode(*arg1, (VS::BlendShapeMode)arg2_in);
}

int32_t godot_icall_VisualServer_mesh_get_blend_shape_mode_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualServer *>(ptr)->mesh_get_blend_shape_mode(*arg1);
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualServer_mesh_surface_update_region_a8abd755(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3, MonoArray* arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto arg4_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg4);
    static_cast<VisualServer *>(ptr)->mesh_surface_update_region(*arg1, arg2_in, arg3_in, arg4_in);
}

void godot_icall_VisualServer_mesh_surface_set_material_ee265321(Object * ptr, RID* arg1, int32_t arg2, RID* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->mesh_surface_set_material(*arg1, arg2_in, *arg3);
}

RID* godot_icall_VisualServer_mesh_surface_get_material_d5ef04d9(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->mesh_surface_get_material(*arg1, arg2_in);
    return memnew(RID(ret));
}

int32_t godot_icall_VisualServer_mesh_surface_get_array_len_9fb6ae46(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->mesh_surface_get_array_len(*arg1, arg2_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_VisualServer_mesh_surface_get_array_index_len_9fb6ae46(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->mesh_surface_get_array_index_len(*arg1, arg2_in);
    return static_cast<int32_t>(ret);
}

MonoArray* godot_icall_VisualServer_mesh_surface_get_array_c14dbfe6(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->mesh_surface_get_array(*arg1, arg2_in);
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

MonoArray* godot_icall_VisualServer_mesh_surface_get_index_array_c14dbfe6(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->mesh_surface_get_index_array(*arg1, arg2_in);
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

Array* godot_icall_VisualServer_mesh_surface_get_arrays_25b24b67(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->mesh_surface_get_arrays(*arg1, arg2_in);
    return memnew(Array(ret));
}

Array* godot_icall_VisualServer_mesh_surface_get_blend_shape_arrays_25b24b67(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->_mesh_surface_get_blend_shape_arrays(*arg1, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

uint32_t godot_icall_VisualServer_mesh_surface_get_format_c5ad1bb6(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->mesh_surface_get_format(*arg1, arg2_in);
    return static_cast<uint32_t>(ret);
}

int32_t godot_icall_VisualServer_mesh_surface_get_primitive_type_9fb6ae46(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->mesh_surface_get_primitive_type(*arg1, arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualServer_mesh_surface_get_aabb_455ffc0(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->mesh_surface_get_aabb(*arg1, arg2_in);
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

Array* godot_icall_VisualServer_mesh_surface_get_skeleton_aabb_25b24b67(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->_mesh_surface_get_skeleton_aabb_bind(*arg1, arg2_in);
    return memnew(Array(ret));
}

void godot_icall_VisualServer_mesh_remove_surface_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->mesh_remove_surface(*arg1, arg2_in);
}

int32_t godot_icall_VisualServer_mesh_get_surface_count_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualServer *>(ptr)->mesh_get_surface_count(*arg1);
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualServer_mesh_set_custom_aabb_119d5c29(Object * ptr, RID* arg1, GDMonoMarshal::M_AABB* arg2) {
    ERR_FAIL_NULL(ptr);
    AABB arg2_in = MARSHALLED_IN(AABB, arg2);
    static_cast<VisualServer *>(ptr)->mesh_set_custom_aabb(*arg1, arg2_in);
}

void godot_icall_VisualServer_mesh_get_custom_aabb_52100836(Object * ptr, RID* arg1, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->mesh_get_custom_aabb(*arg1);
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

void godot_icall_VisualServer_mesh_clear_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->mesh_clear(*arg1);
}

RID* godot_icall_VisualServer_multimesh_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->multimesh_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_multimesh_allocate_190d316c(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    static_cast<VisualServer *>(ptr)->multimesh_allocate(*arg1, arg2_in, (VS::MultimeshTransformFormat)arg3_in, (VS::MultimeshColorFormat)arg4_in, (VS::MultimeshCustomDataFormat)arg5_in);
}

int32_t godot_icall_VisualServer_multimesh_get_instance_count_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualServer *>(ptr)->multimesh_get_instance_count(*arg1);
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualServer_multimesh_set_mesh_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->multimesh_set_mesh(*arg1, *arg2);
}

void godot_icall_VisualServer_multimesh_instance_set_transform_107e50a2(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Transform arg3_in = MARSHALLED_IN(Transform, arg3);
    static_cast<VisualServer *>(ptr)->multimesh_instance_set_transform(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_multimesh_instance_set_transform_2d_87074d30(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform2D* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Transform2D arg3_in = MARSHALLED_IN(Transform2D, arg3);
    static_cast<VisualServer *>(ptr)->multimesh_instance_set_transform_2d(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_multimesh_instance_set_color_a406a09d(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Color* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Color arg3_in = MARSHALLED_IN(Color, arg3);
    static_cast<VisualServer *>(ptr)->multimesh_instance_set_color(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_multimesh_instance_set_custom_data_a406a09d(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Color* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Color arg3_in = MARSHALLED_IN(Color, arg3);
    static_cast<VisualServer *>(ptr)->multimesh_instance_set_custom_data(*arg1, arg2_in, arg3_in);
}

RID* godot_icall_VisualServer_multimesh_get_mesh_c09e26c0(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->multimesh_get_mesh(*arg1);
    return memnew(RID(ret));
}

void godot_icall_VisualServer_multimesh_get_aabb_52100836(Object * ptr, RID* arg1, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->multimesh_get_aabb(*arg1);
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

void godot_icall_VisualServer_multimesh_instance_get_transform_5be89b94(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->multimesh_instance_get_transform(*arg1, arg2_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_VisualServer_multimesh_instance_get_transform_2d_61871ef9(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->multimesh_instance_get_transform_2d(*arg1, arg2_in);
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

void godot_icall_VisualServer_multimesh_instance_get_color_17cdf6c7(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->multimesh_instance_get_color(*arg1, arg2_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_VisualServer_multimesh_instance_get_custom_data_17cdf6c7(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->multimesh_instance_get_custom_data(*arg1, arg2_in);
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

void godot_icall_VisualServer_multimesh_set_visible_instances_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->multimesh_set_visible_instances(*arg1, arg2_in);
}

int32_t godot_icall_VisualServer_multimesh_get_visible_instances_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualServer *>(ptr)->multimesh_get_visible_instances(*arg1);
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualServer_multimesh_set_as_bulk_array_5e60a868(Object * ptr, RID* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL(ptr);
    PoolRealArray arg2_in = GDMonoMarshal::mono_array_to_PoolRealArray(arg2);
    static_cast<VisualServer *>(ptr)->multimesh_set_as_bulk_array(*arg1, arg2_in);
}

RID* godot_icall_VisualServer_immediate_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->immediate_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_immediate_begin_2979e38c(Object * ptr, RID* arg1, int32_t arg2, RID* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->immediate_begin(*arg1, (VS::PrimitiveType)arg2_in, *arg3);
}

void godot_icall_VisualServer_immediate_vertex_832e4d15(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<VisualServer *>(ptr)->immediate_vertex(*arg1, arg2_in);
}

void godot_icall_VisualServer_immediate_vertex_2d_832e4d14(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<VisualServer *>(ptr)->immediate_vertex_2d(*arg1, arg2_in);
}

void godot_icall_VisualServer_immediate_normal_832e4d15(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<VisualServer *>(ptr)->immediate_normal(*arg1, arg2_in);
}

void godot_icall_VisualServer_immediate_tangent_a8e2dec7(Object * ptr, RID* arg1, GDMonoMarshal::M_Plane* arg2) {
    ERR_FAIL_NULL(ptr);
    Plane arg2_in = MARSHALLED_IN(Plane, arg2);
    static_cast<VisualServer *>(ptr)->immediate_tangent(*arg1, arg2_in);
}

void godot_icall_VisualServer_immediate_color_1e215388(Object * ptr, RID* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<VisualServer *>(ptr)->immediate_color(*arg1, arg2_in);
}

void godot_icall_VisualServer_immediate_uv_832e4d14(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<VisualServer *>(ptr)->immediate_uv(*arg1, arg2_in);
}

void godot_icall_VisualServer_immediate_uv2_832e4d14(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<VisualServer *>(ptr)->immediate_uv2(*arg1, arg2_in);
}

void godot_icall_VisualServer_immediate_end_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->immediate_end(*arg1);
}

void godot_icall_VisualServer_immediate_clear_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->immediate_clear(*arg1);
}

void godot_icall_VisualServer_immediate_set_material_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->immediate_set_material(*arg1, *arg2);
}

RID* godot_icall_VisualServer_immediate_get_material_c09e26c0(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->immediate_get_material(*arg1);
    return memnew(RID(ret));
}

RID* godot_icall_VisualServer_skeleton_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->skeleton_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_skeleton_allocate_eb795dfc(Object * ptr, RID* arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<VisualServer *>(ptr)->skeleton_allocate(*arg1, arg2_in, arg3_in);
}

int32_t godot_icall_VisualServer_skeleton_get_bone_count_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualServer *>(ptr)->skeleton_get_bone_count(*arg1);
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualServer_skeleton_bone_set_transform_107e50a2(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Transform arg3_in = MARSHALLED_IN(Transform, arg3);
    static_cast<VisualServer *>(ptr)->skeleton_bone_set_transform(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_skeleton_bone_get_transform_5be89b94(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->skeleton_bone_get_transform(*arg1, arg2_in);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_VisualServer_skeleton_bone_set_transform_2d_87074d30(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform2D* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Transform2D arg3_in = MARSHALLED_IN(Transform2D, arg3);
    static_cast<VisualServer *>(ptr)->skeleton_bone_set_transform_2d(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_skeleton_bone_get_transform_2d_61871ef9(Object * ptr, RID* arg1, int32_t arg2, GDMonoMarshal::M_Transform2D* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform2D(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->skeleton_bone_get_transform_2d(*arg1, arg2_in);
    *arg_ret = MARSHALLED_OUT(Transform2D, ret);
}

RID* godot_icall_VisualServer_directional_light_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->directional_light_create();
    return memnew(RID(ret));
}

RID* godot_icall_VisualServer_omni_light_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->omni_light_create();
    return memnew(RID(ret));
}

RID* godot_icall_VisualServer_spot_light_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->spot_light_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_light_set_color_1e215388(Object * ptr, RID* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<VisualServer *>(ptr)->light_set_color(*arg1, arg2_in);
}

void godot_icall_VisualServer_light_set_param_8508d4e6(Object * ptr, RID* arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    static_cast<VisualServer *>(ptr)->light_set_param(*arg1, (VS::LightParam)arg2_in, arg3_in);
}

void godot_icall_VisualServer_light_set_shadow_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->light_set_shadow(*arg1, arg2_in);
}

void godot_icall_VisualServer_light_set_shadow_color_1e215388(Object * ptr, RID* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<VisualServer *>(ptr)->light_set_shadow_color(*arg1, arg2_in);
}

void godot_icall_VisualServer_light_set_projector_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->light_set_projector(*arg1, *arg2);
}

void godot_icall_VisualServer_light_set_negative_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->light_set_negative(*arg1, arg2_in);
}

void godot_icall_VisualServer_light_set_cull_mask_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<VisualServer *>(ptr)->light_set_cull_mask(*arg1, arg2_in);
}

void godot_icall_VisualServer_light_set_reverse_cull_face_mode_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->light_set_reverse_cull_face_mode(*arg1, arg2_in);
}

void godot_icall_VisualServer_light_set_use_gi_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->light_set_use_gi(*arg1, arg2_in);
}

void godot_icall_VisualServer_light_omni_set_shadow_mode_b4802e47(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->light_omni_set_shadow_mode(*arg1, (VS::LightOmniShadowMode)arg2_in);
}

void godot_icall_VisualServer_light_omni_set_shadow_detail_3763f70d(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->light_omni_set_shadow_detail(*arg1, (VS::LightOmniShadowDetail)arg2_in);
}

void godot_icall_VisualServer_light_directional_set_shadow_mode_b83eebe(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->light_directional_set_shadow_mode(*arg1, (VS::LightDirectionalShadowMode)arg2_in);
}

void godot_icall_VisualServer_light_directional_set_blend_splits_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->light_directional_set_blend_splits(*arg1, arg2_in);
}

void godot_icall_VisualServer_light_directional_set_shadow_depth_range_mode_8a710de8(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->light_directional_set_shadow_depth_range_mode(*arg1, (VS::LightDirectionalShadowDepthRangeMode)arg2_in);
}

RID* godot_icall_VisualServer_reflection_probe_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->reflection_probe_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_reflection_probe_set_update_mode_18f1538c(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->reflection_probe_set_update_mode(*arg1, (VS::ReflectionProbeUpdateMode)arg2_in);
}

void godot_icall_VisualServer_reflection_probe_set_intensity_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->reflection_probe_set_intensity(*arg1, arg2_in);
}

void godot_icall_VisualServer_reflection_probe_set_interior_ambient_1e215388(Object * ptr, RID* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<VisualServer *>(ptr)->reflection_probe_set_interior_ambient(*arg1, arg2_in);
}

void godot_icall_VisualServer_reflection_probe_set_interior_ambient_energy_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->reflection_probe_set_interior_ambient_energy(*arg1, arg2_in);
}

void godot_icall_VisualServer_reflection_probe_set_interior_ambient_probe_contribution_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->reflection_probe_set_interior_ambient_probe_contribution(*arg1, arg2_in);
}

void godot_icall_VisualServer_reflection_probe_set_max_distance_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->reflection_probe_set_max_distance(*arg1, arg2_in);
}

void godot_icall_VisualServer_reflection_probe_set_extents_832e4d15(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<VisualServer *>(ptr)->reflection_probe_set_extents(*arg1, arg2_in);
}

void godot_icall_VisualServer_reflection_probe_set_origin_offset_832e4d15(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector3* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    static_cast<VisualServer *>(ptr)->reflection_probe_set_origin_offset(*arg1, arg2_in);
}

void godot_icall_VisualServer_reflection_probe_set_as_interior_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->reflection_probe_set_as_interior(*arg1, arg2_in);
}

void godot_icall_VisualServer_reflection_probe_set_enable_box_projection_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->reflection_probe_set_enable_box_projection(*arg1, arg2_in);
}

void godot_icall_VisualServer_reflection_probe_set_enable_shadows_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->reflection_probe_set_enable_shadows(*arg1, arg2_in);
}

void godot_icall_VisualServer_reflection_probe_set_cull_mask_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<VisualServer *>(ptr)->reflection_probe_set_cull_mask(*arg1, arg2_in);
}

RID* godot_icall_VisualServer_gi_probe_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->gi_probe_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_gi_probe_set_bounds_119d5c29(Object * ptr, RID* arg1, GDMonoMarshal::M_AABB* arg2) {
    ERR_FAIL_NULL(ptr);
    AABB arg2_in = MARSHALLED_IN(AABB, arg2);
    static_cast<VisualServer *>(ptr)->gi_probe_set_bounds(*arg1, arg2_in);
}

void godot_icall_VisualServer_gi_probe_get_bounds_52100836(Object * ptr, RID* arg1, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->gi_probe_get_bounds(*arg1);
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

void godot_icall_VisualServer_gi_probe_set_cell_size_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->gi_probe_set_cell_size(*arg1, arg2_in);
}

void godot_icall_VisualServer_gi_probe_get_cell_size_8194d7a8(Object * ptr, RID* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->gi_probe_get_cell_size(*arg1);
    *arg_ret = (float)ret;
}

void godot_icall_VisualServer_gi_probe_set_to_cell_xform_8bd903e9(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<VisualServer *>(ptr)->gi_probe_set_to_cell_xform(*arg1, arg2_in);
}

void godot_icall_VisualServer_gi_probe_get_to_cell_xform_8fc9bb26(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->gi_probe_get_to_cell_xform(*arg1);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_VisualServer_gi_probe_set_dynamic_data_15f60597(Object * ptr, RID* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL(ptr);
    PoolIntArray arg2_in = GDMonoMarshal::mono_array_to_PoolIntArray(arg2);
    static_cast<VisualServer *>(ptr)->gi_probe_set_dynamic_data(*arg1, arg2_in);
}

MonoArray* godot_icall_VisualServer_gi_probe_get_dynamic_data_be6d4707(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->gi_probe_get_dynamic_data(*arg1);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

void godot_icall_VisualServer_gi_probe_set_dynamic_range_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->gi_probe_set_dynamic_range(*arg1, arg2_in);
}

int32_t godot_icall_VisualServer_gi_probe_get_dynamic_range_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualServer *>(ptr)->gi_probe_get_dynamic_range(*arg1);
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualServer_gi_probe_set_energy_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->gi_probe_set_energy(*arg1, arg2_in);
}

void godot_icall_VisualServer_gi_probe_get_energy_8194d7a8(Object * ptr, RID* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->gi_probe_get_energy(*arg1);
    *arg_ret = (float)ret;
}

void godot_icall_VisualServer_gi_probe_set_bias_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->gi_probe_set_bias(*arg1, arg2_in);
}

void godot_icall_VisualServer_gi_probe_get_bias_8194d7a8(Object * ptr, RID* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->gi_probe_get_bias(*arg1);
    *arg_ret = (float)ret;
}

void godot_icall_VisualServer_gi_probe_set_normal_bias_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->gi_probe_set_normal_bias(*arg1, arg2_in);
}

void godot_icall_VisualServer_gi_probe_get_normal_bias_8194d7a8(Object * ptr, RID* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->gi_probe_get_normal_bias(*arg1);
    *arg_ret = (float)ret;
}

void godot_icall_VisualServer_gi_probe_set_propagation_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->gi_probe_set_propagation(*arg1, arg2_in);
}

void godot_icall_VisualServer_gi_probe_get_propagation_8194d7a8(Object * ptr, RID* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->gi_probe_get_propagation(*arg1);
    *arg_ret = (float)ret;
}

void godot_icall_VisualServer_gi_probe_set_interior_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->gi_probe_set_interior(*arg1, arg2_in);
}

MonoBoolean godot_icall_VisualServer_gi_probe_is_interior_36cc12b4(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VisualServer *>(ptr)->gi_probe_is_interior(*arg1);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualServer_gi_probe_set_compress_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->gi_probe_set_compress(*arg1, arg2_in);
}

MonoBoolean godot_icall_VisualServer_gi_probe_is_compressed_36cc12b4(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VisualServer *>(ptr)->gi_probe_is_compressed(*arg1);
    return static_cast<MonoBoolean>(ret);
}

RID* godot_icall_VisualServer_lightmap_capture_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->lightmap_capture_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_lightmap_capture_set_bounds_119d5c29(Object * ptr, RID* arg1, GDMonoMarshal::M_AABB* arg2) {
    ERR_FAIL_NULL(ptr);
    AABB arg2_in = MARSHALLED_IN(AABB, arg2);
    static_cast<VisualServer *>(ptr)->lightmap_capture_set_bounds(*arg1, arg2_in);
}

void godot_icall_VisualServer_lightmap_capture_get_bounds_52100836(Object * ptr, RID* arg1, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->lightmap_capture_get_bounds(*arg1);
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

void godot_icall_VisualServer_lightmap_capture_set_octree_36cf44fe(Object * ptr, RID* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL(ptr);
    PoolByteArray arg2_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg2);
    static_cast<VisualServer *>(ptr)->lightmap_capture_set_octree(*arg1, arg2_in);
}

void godot_icall_VisualServer_lightmap_capture_set_octree_cell_transform_8bd903e9(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<VisualServer *>(ptr)->lightmap_capture_set_octree_cell_transform(*arg1, arg2_in);
}

void godot_icall_VisualServer_lightmap_capture_get_octree_cell_transform_8fc9bb26(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->lightmap_capture_get_octree_cell_transform(*arg1);
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

void godot_icall_VisualServer_lightmap_capture_set_octree_cell_subdiv_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->lightmap_capture_set_octree_cell_subdiv(*arg1, arg2_in);
}

int32_t godot_icall_VisualServer_lightmap_capture_get_octree_cell_subdiv_f1d0c933(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualServer *>(ptr)->lightmap_capture_get_octree_cell_subdiv(*arg1);
    return static_cast<int32_t>(ret);
}

MonoArray* godot_icall_VisualServer_lightmap_capture_get_octree_4aec9864(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->lightmap_capture_get_octree(*arg1);
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

void godot_icall_VisualServer_lightmap_capture_set_energy_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->lightmap_capture_set_energy(*arg1, arg2_in);
}

void godot_icall_VisualServer_lightmap_capture_get_energy_8194d7a8(Object * ptr, RID* arg1, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->lightmap_capture_get_energy(*arg1);
    *arg_ret = (float)ret;
}

RID* godot_icall_VisualServer_particles_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->particles_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_particles_set_emitting_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->particles_set_emitting(*arg1, arg2_in);
}

MonoBoolean godot_icall_VisualServer_particles_get_emitting_36cc12b4(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VisualServer *>(ptr)->particles_get_emitting(*arg1);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualServer_particles_set_amount_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->particles_set_amount(*arg1, arg2_in);
}

void godot_icall_VisualServer_particles_set_lifetime_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->particles_set_lifetime(*arg1, arg2_in);
}

void godot_icall_VisualServer_particles_set_one_shot_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->particles_set_one_shot(*arg1, arg2_in);
}

void godot_icall_VisualServer_particles_set_pre_process_time_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->particles_set_pre_process_time(*arg1, arg2_in);
}

void godot_icall_VisualServer_particles_set_explosiveness_ratio_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->particles_set_explosiveness_ratio(*arg1, arg2_in);
}

void godot_icall_VisualServer_particles_set_randomness_ratio_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->particles_set_randomness_ratio(*arg1, arg2_in);
}

void godot_icall_VisualServer_particles_set_custom_aabb_119d5c29(Object * ptr, RID* arg1, GDMonoMarshal::M_AABB* arg2) {
    ERR_FAIL_NULL(ptr);
    AABB arg2_in = MARSHALLED_IN(AABB, arg2);
    static_cast<VisualServer *>(ptr)->particles_set_custom_aabb(*arg1, arg2_in);
}

void godot_icall_VisualServer_particles_set_speed_scale_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->particles_set_speed_scale(*arg1, arg2_in);
}

void godot_icall_VisualServer_particles_set_use_local_coordinates_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->particles_set_use_local_coordinates(*arg1, arg2_in);
}

void godot_icall_VisualServer_particles_set_process_material_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->particles_set_process_material(*arg1, *arg2);
}

void godot_icall_VisualServer_particles_set_fixed_fps_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->particles_set_fixed_fps(*arg1, arg2_in);
}

void godot_icall_VisualServer_particles_set_fractional_delta_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->particles_set_fractional_delta(*arg1, arg2_in);
}

MonoBoolean godot_icall_VisualServer_particles_is_inactive_36cc12b4(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VisualServer *>(ptr)->particles_is_inactive(*arg1);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualServer_particles_request_process_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->particles_request_process(*arg1);
}

void godot_icall_VisualServer_particles_restart_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->particles_restart(*arg1);
}

void godot_icall_VisualServer_particles_set_draw_order_2116323a(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->particles_set_draw_order(*arg1, (VS::ParticlesDrawOrder)arg2_in);
}

void godot_icall_VisualServer_particles_set_draw_passes_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->particles_set_draw_passes(*arg1, arg2_in);
}

void godot_icall_VisualServer_particles_set_draw_pass_mesh_ee265321(Object * ptr, RID* arg1, int32_t arg2, RID* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->particles_set_draw_pass_mesh(*arg1, arg2_in, *arg3);
}

void godot_icall_VisualServer_particles_get_current_aabb_52100836(Object * ptr, RID* arg1, GDMonoMarshal::M_AABB* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_AABB(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualServer *>(ptr)->particles_get_current_aabb(*arg1);
    *arg_ret = MARSHALLED_OUT(AABB, ret);
}

void godot_icall_VisualServer_particles_set_emission_transform_8bd903e9(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<VisualServer *>(ptr)->particles_set_emission_transform(*arg1, arg2_in);
}

RID* godot_icall_VisualServer_camera_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->camera_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_camera_set_perspective_2ce495d3(Object * ptr, RID* arg1, float* arg2, float* arg3, float* arg4) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    static_cast<VisualServer *>(ptr)->camera_set_perspective(*arg1, arg2_in, arg3_in, arg4_in);
}

void godot_icall_VisualServer_camera_set_orthogonal_2ce495d3(Object * ptr, RID* arg1, float* arg2, float* arg3, float* arg4) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    static_cast<VisualServer *>(ptr)->camera_set_orthogonal(*arg1, arg2_in, arg3_in, arg4_in);
}

void godot_icall_VisualServer_camera_set_frustum_4f380ef6(Object * ptr, RID* arg1, float* arg2, GDMonoMarshal::M_Vector2* arg3, float* arg4, float* arg5) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    float arg4_in = static_cast<float>(*arg4);
    float arg5_in = static_cast<float>(*arg5);
    static_cast<VisualServer *>(ptr)->camera_set_frustum(*arg1, arg2_in, arg3_in, arg4_in, arg5_in);
}

void godot_icall_VisualServer_camera_set_transform_8bd903e9(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<VisualServer *>(ptr)->camera_set_transform(*arg1, arg2_in);
}

void godot_icall_VisualServer_camera_set_cull_mask_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<VisualServer *>(ptr)->camera_set_cull_mask(*arg1, arg2_in);
}

void godot_icall_VisualServer_camera_set_environment_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->camera_set_environment(*arg1, *arg2);
}

void godot_icall_VisualServer_camera_set_use_vertical_aspect_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->camera_set_use_vertical_aspect(*arg1, arg2_in);
}

RID* godot_icall_VisualServer_viewport_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->viewport_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_viewport_set_use_arvr_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_use_arvr(*arg1, arg2_in);
}

void godot_icall_VisualServer_viewport_set_size_95c34a97(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<VisualServer *>(ptr)->viewport_set_size(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_viewport_set_active_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_active(*arg1, arg2_in);
}

void godot_icall_VisualServer_viewport_set_parent_viewport_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->viewport_set_parent_viewport(*arg1, *arg2);
}

void godot_icall_VisualServer_viewport_attach_to_screen_d383bf44(Object * ptr, RID* arg1, GDMonoMarshal::M_Rect2* arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<VisualServer *>(ptr)->viewport_attach_to_screen(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_viewport_set_render_direct_to_screen_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_render_direct_to_screen(*arg1, arg2_in);
}

void godot_icall_VisualServer_viewport_detach_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->viewport_detach(*arg1);
}

void godot_icall_VisualServer_viewport_set_update_mode_bad8d8b7(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_update_mode(*arg1, (VS::ViewportUpdateMode)arg2_in);
}

void godot_icall_VisualServer_viewport_set_vflip_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_vflip(*arg1, arg2_in);
}

void godot_icall_VisualServer_viewport_set_clear_mode_1216a651(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_clear_mode(*arg1, (VS::ViewportClearMode)arg2_in);
}

RID* godot_icall_VisualServer_viewport_get_texture_c09e26c0(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->viewport_get_texture(*arg1);
    return memnew(RID(ret));
}

void godot_icall_VisualServer_viewport_set_hide_scenario_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_hide_scenario(*arg1, arg2_in);
}

void godot_icall_VisualServer_viewport_set_hide_canvas_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_hide_canvas(*arg1, arg2_in);
}

void godot_icall_VisualServer_viewport_set_disable_environment_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_disable_environment(*arg1, arg2_in);
}

void godot_icall_VisualServer_viewport_set_disable_3d_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_disable_3d(*arg1, arg2_in);
}

void godot_icall_VisualServer_viewport_attach_camera_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->viewport_attach_camera(*arg1, *arg2);
}

void godot_icall_VisualServer_viewport_set_scenario_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->viewport_set_scenario(*arg1, *arg2);
}

void godot_icall_VisualServer_viewport_attach_canvas_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->viewport_attach_canvas(*arg1, *arg2);
}

void godot_icall_VisualServer_viewport_remove_canvas_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->viewport_remove_canvas(*arg1, *arg2);
}

void godot_icall_VisualServer_viewport_set_canvas_transform_f5bd827b(Object * ptr, RID* arg1, RID* arg2, GDMonoMarshal::M_Transform2D* arg3) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg3_in = MARSHALLED_IN(Transform2D, arg3);
    static_cast<VisualServer *>(ptr)->viewport_set_canvas_transform(*arg1, *arg2, arg3_in);
}

void godot_icall_VisualServer_viewport_set_transparent_background_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_transparent_background(*arg1, arg2_in);
}

void godot_icall_VisualServer_viewport_set_global_canvas_transform_31203f57(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform2D* arg2) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg2_in = MARSHALLED_IN(Transform2D, arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_global_canvas_transform(*arg1, arg2_in);
}

void godot_icall_VisualServer_viewport_set_canvas_stacking_7c21f2b4(Object * ptr, RID* arg1, RID* arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<VisualServer *>(ptr)->viewport_set_canvas_stacking(*arg1, *arg2, arg3_in, arg4_in);
}

void godot_icall_VisualServer_viewport_set_shadow_atlas_size_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_shadow_atlas_size(*arg1, arg2_in);
}

void godot_icall_VisualServer_viewport_set_shadow_atlas_quadrant_subdivision_95c34a97(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<VisualServer *>(ptr)->viewport_set_shadow_atlas_quadrant_subdivision(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_viewport_set_msaa_f70eaa53(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_msaa(*arg1, (VS::ViewportMSAA)arg2_in);
}

void godot_icall_VisualServer_viewport_set_hdr_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_hdr(*arg1, arg2_in);
}

void godot_icall_VisualServer_viewport_set_usage_baeacd0a(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_usage(*arg1, (VS::ViewportUsage)arg2_in);
}

int32_t godot_icall_VisualServer_viewport_get_render_info_2b622867(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualServer *>(ptr)->viewport_get_render_info(*arg1, (VS::ViewportRenderInfo)arg2_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualServer_viewport_set_debug_draw_99186904(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->viewport_set_debug_draw(*arg1, (VS::ViewportDebugDraw)arg2_in);
}

RID* godot_icall_VisualServer_environment_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->environment_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_environment_set_background_44fcf58b(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->environment_set_background(*arg1, (VS::EnvironmentBG)arg2_in);
}

void godot_icall_VisualServer_environment_set_sky_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->environment_set_sky(*arg1, *arg2);
}

void godot_icall_VisualServer_environment_set_sky_custom_fov_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->environment_set_sky_custom_fov(*arg1, arg2_in);
}

void godot_icall_VisualServer_environment_set_sky_orientation_77266e47(Object * ptr, RID* arg1, GDMonoMarshal::M_Basis* arg2) {
    ERR_FAIL_NULL(ptr);
    Basis arg2_in = MARSHALLED_IN(Basis, arg2);
    static_cast<VisualServer *>(ptr)->environment_set_sky_orientation(*arg1, arg2_in);
}

void godot_icall_VisualServer_environment_set_bg_color_1e215388(Object * ptr, RID* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<VisualServer *>(ptr)->environment_set_bg_color(*arg1, arg2_in);
}

void godot_icall_VisualServer_environment_set_bg_energy_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->environment_set_bg_energy(*arg1, arg2_in);
}

void godot_icall_VisualServer_environment_set_canvas_max_layer_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->environment_set_canvas_max_layer(*arg1, arg2_in);
}

void godot_icall_VisualServer_environment_set_ambient_light_db2fa099(Object * ptr, RID* arg1, GDMonoMarshal::M_Color* arg2, float* arg3, float* arg4) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    static_cast<VisualServer *>(ptr)->environment_set_ambient_light(*arg1, arg2_in, arg3_in, arg4_in);
}

void godot_icall_VisualServer_environment_set_dof_blur_near_e2a0d508(Object * ptr, RID* arg1, MonoBoolean arg2, float* arg3, float* arg4, float* arg5, int32_t arg6) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    float arg5_in = static_cast<float>(*arg5);
    int32_t arg6_in = static_cast<int32_t>(arg6);
    static_cast<VisualServer *>(ptr)->environment_set_dof_blur_near(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, (VS::EnvironmentDOFBlurQuality)arg6_in);
}

void godot_icall_VisualServer_environment_set_dof_blur_far_e2a0d508(Object * ptr, RID* arg1, MonoBoolean arg2, float* arg3, float* arg4, float* arg5, int32_t arg6) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    float arg5_in = static_cast<float>(*arg5);
    int32_t arg6_in = static_cast<int32_t>(arg6);
    static_cast<VisualServer *>(ptr)->environment_set_dof_blur_far(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, (VS::EnvironmentDOFBlurQuality)arg6_in);
}

void godot_icall_VisualServer_environment_set_glow_992e7e68(Object * ptr, RID* arg1, MonoBoolean arg2, int32_t arg3, float* arg4, float* arg5, float* arg6, int32_t arg7, float* arg8, float* arg9, float* arg10, MonoBoolean arg11) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    float arg4_in = static_cast<float>(*arg4);
    float arg5_in = static_cast<float>(*arg5);
    float arg6_in = static_cast<float>(*arg6);
    int32_t arg7_in = static_cast<int32_t>(arg7);
    float arg8_in = static_cast<float>(*arg8);
    float arg9_in = static_cast<float>(*arg9);
    float arg10_in = static_cast<float>(*arg10);
    bool arg11_in = static_cast<bool>(arg11);
    static_cast<VisualServer *>(ptr)->environment_set_glow(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in, (VS::EnvironmentGlowBlendMode)arg7_in, arg8_in, arg9_in, arg10_in, arg11_in);
}

void godot_icall_VisualServer_environment_set_tonemap_42b444ac(Object * ptr, RID* arg1, int32_t arg2, float* arg3, float* arg4, MonoBoolean arg5, float* arg6, float* arg7, float* arg8, float* arg9) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    bool arg5_in = static_cast<bool>(arg5);
    float arg6_in = static_cast<float>(*arg6);
    float arg7_in = static_cast<float>(*arg7);
    float arg8_in = static_cast<float>(*arg8);
    float arg9_in = static_cast<float>(*arg9);
    static_cast<VisualServer *>(ptr)->environment_set_tonemap(*arg1, (VS::EnvironmentToneMapper)arg2_in, arg3_in, arg4_in, arg5_in, arg6_in, arg7_in, arg8_in, arg9_in);
}

void godot_icall_VisualServer_environment_set_adjustment_4e39fe6d(Object * ptr, RID* arg1, MonoBoolean arg2, float* arg3, float* arg4, float* arg5, RID* arg6) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    float arg5_in = static_cast<float>(*arg5);
    static_cast<VisualServer *>(ptr)->environment_set_adjustment(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, *arg6);
}

void godot_icall_VisualServer_environment_set_ssr_9d280ac6(Object * ptr, RID* arg1, MonoBoolean arg2, int32_t arg3, float* arg4, float* arg5, float* arg6, MonoBoolean arg7) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    float arg4_in = static_cast<float>(*arg4);
    float arg5_in = static_cast<float>(*arg5);
    float arg6_in = static_cast<float>(*arg6);
    bool arg7_in = static_cast<bool>(arg7);
    static_cast<VisualServer *>(ptr)->environment_set_ssr(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in, arg7_in);
}

void godot_icall_VisualServer_environment_set_ssao_fef26a51(Object * ptr, RID* arg1, MonoBoolean arg2, float* arg3, float* arg4, float* arg5, float* arg6, float* arg7, float* arg8, float* arg9, GDMonoMarshal::M_Color* arg10, int32_t arg11, int32_t arg12, float* arg13) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    float arg5_in = static_cast<float>(*arg5);
    float arg6_in = static_cast<float>(*arg6);
    float arg7_in = static_cast<float>(*arg7);
    float arg8_in = static_cast<float>(*arg8);
    float arg9_in = static_cast<float>(*arg9);
    Color arg10_in = MARSHALLED_IN(Color, arg10);
    int32_t arg11_in = static_cast<int32_t>(arg11);
    int32_t arg12_in = static_cast<int32_t>(arg12);
    float arg13_in = static_cast<float>(*arg13);
    static_cast<VisualServer *>(ptr)->environment_set_ssao(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in, arg7_in, arg8_in, arg9_in, arg10_in, (VS::EnvironmentSSAOQuality)arg11_in, (VS::EnvironmentSSAOBlur)arg12_in, arg13_in);
}

void godot_icall_VisualServer_environment_set_fog_c4839c63(Object * ptr, RID* arg1, MonoBoolean arg2, GDMonoMarshal::M_Color* arg3, GDMonoMarshal::M_Color* arg4, float* arg5) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    Color arg3_in = MARSHALLED_IN(Color, arg3);
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    float arg5_in = static_cast<float>(*arg5);
    static_cast<VisualServer *>(ptr)->environment_set_fog(*arg1, arg2_in, arg3_in, arg4_in, arg5_in);
}

void godot_icall_VisualServer_environment_set_fog_depth_9c4190e4(Object * ptr, RID* arg1, MonoBoolean arg2, float* arg3, float* arg4, float* arg5, MonoBoolean arg6, float* arg7) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    float arg5_in = static_cast<float>(*arg5);
    bool arg6_in = static_cast<bool>(arg6);
    float arg7_in = static_cast<float>(*arg7);
    static_cast<VisualServer *>(ptr)->environment_set_fog_depth(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in, arg7_in);
}

void godot_icall_VisualServer_environment_set_fog_height_25765caf(Object * ptr, RID* arg1, MonoBoolean arg2, float* arg3, float* arg4, float* arg5) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    float arg5_in = static_cast<float>(*arg5);
    static_cast<VisualServer *>(ptr)->environment_set_fog_height(*arg1, arg2_in, arg3_in, arg4_in, arg5_in);
}

RID* godot_icall_VisualServer_scenario_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->scenario_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_scenario_set_debug_35ba1cb3(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->scenario_set_debug(*arg1, (VS::ScenarioDebugMode)arg2_in);
}

void godot_icall_VisualServer_scenario_set_environment_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->scenario_set_environment(*arg1, *arg2);
}

void godot_icall_VisualServer_scenario_set_reflection_atlas_size_95c34a97(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<VisualServer *>(ptr)->scenario_set_reflection_atlas_size(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_scenario_set_fallback_environment_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->scenario_set_fallback_environment(*arg1, *arg2);
}

RID* godot_icall_VisualServer_instance_create2_9c923f47(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->instance_create2(*arg1, *arg2);
    return memnew(RID(ret));
}

RID* godot_icall_VisualServer_instance_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->instance_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_instance_set_base_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->instance_set_base(*arg1, *arg2);
}

void godot_icall_VisualServer_instance_set_scenario_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->instance_set_scenario(*arg1, *arg2);
}

void godot_icall_VisualServer_instance_set_layer_mask_7aa831af(Object * ptr, RID* arg1, uint32_t arg2) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg2_in = static_cast<uint32_t>(arg2);
    static_cast<VisualServer *>(ptr)->instance_set_layer_mask(*arg1, arg2_in);
}

void godot_icall_VisualServer_instance_set_transform_8bd903e9(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform* arg2) {
    ERR_FAIL_NULL(ptr);
    Transform arg2_in = MARSHALLED_IN(Transform, arg2);
    static_cast<VisualServer *>(ptr)->instance_set_transform(*arg1, arg2_in);
}

void godot_icall_VisualServer_instance_attach_object_instance_id_73956c1a(Object * ptr, RID* arg1, uint64_t* arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg2_in = static_cast<int64_t>(*arg2);
    static_cast<VisualServer *>(ptr)->instance_attach_object_instance_id(*arg1, arg2_in);
}

void godot_icall_VisualServer_instance_set_blend_shape_weight_c69fe5ac(Object * ptr, RID* arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    static_cast<VisualServer *>(ptr)->instance_set_blend_shape_weight(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_instance_set_surface_material_ee265321(Object * ptr, RID* arg1, int32_t arg2, RID* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->instance_set_surface_material(*arg1, arg2_in, *arg3);
}

void godot_icall_VisualServer_instance_set_visible_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->instance_set_visible(*arg1, arg2_in);
}

void godot_icall_VisualServer_instance_set_use_lightmap_5e9a7854(Object * ptr, RID* arg1, RID* arg2, RID* arg3) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->instance_set_use_lightmap(*arg1, *arg2, *arg3);
}

void godot_icall_VisualServer_instance_set_custom_aabb_119d5c29(Object * ptr, RID* arg1, GDMonoMarshal::M_AABB* arg2) {
    ERR_FAIL_NULL(ptr);
    AABB arg2_in = MARSHALLED_IN(AABB, arg2);
    static_cast<VisualServer *>(ptr)->instance_set_custom_aabb(*arg1, arg2_in);
}

void godot_icall_VisualServer_instance_attach_skeleton_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->instance_attach_skeleton(*arg1, *arg2);
}

void godot_icall_VisualServer_instance_set_extra_visibility_margin_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->instance_set_extra_visibility_margin(*arg1, arg2_in);
}

void godot_icall_VisualServer_instance_geometry_set_flag_5bd5be2(Object * ptr, RID* arg1, int32_t arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    static_cast<VisualServer *>(ptr)->instance_geometry_set_flag(*arg1, (VS::InstanceFlags)arg2_in, arg3_in);
}

void godot_icall_VisualServer_instance_geometry_set_cast_shadows_setting_4480f47e(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->instance_geometry_set_cast_shadows_setting(*arg1, (VS::ShadowCastingSetting)arg2_in);
}

void godot_icall_VisualServer_instance_geometry_set_material_override_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->instance_geometry_set_material_override(*arg1, *arg2);
}

void godot_icall_VisualServer_instance_geometry_set_draw_range_1d967e45(Object * ptr, RID* arg1, float* arg2, float* arg3, float* arg4, float* arg5) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    float arg5_in = static_cast<float>(*arg5);
    static_cast<VisualServer *>(ptr)->instance_geometry_set_draw_range(*arg1, arg2_in, arg3_in, arg4_in, arg5_in);
}

void godot_icall_VisualServer_instance_geometry_set_as_instance_lod_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->instance_geometry_set_as_instance_lod(*arg1, *arg2);
}

Array* godot_icall_VisualServer_instances_cull_aabb_2b028f03(Object * ptr, GDMonoMarshal::M_AABB* arg1, RID* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    AABB arg1_in = MARSHALLED_IN(AABB, arg1);
    auto ret = static_cast<VisualServer *>(ptr)->_instances_cull_aabb_bind(arg1_in, *arg2);
    return memnew(Array(ret));
}

Array* godot_icall_VisualServer_instances_cull_ray_bf50cee2(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, RID* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    auto ret = static_cast<VisualServer *>(ptr)->_instances_cull_ray_bind(arg1_in, arg2_in, *arg3);
    return memnew(Array(ret));
}

Array* godot_icall_VisualServer_instances_cull_convex_1c79d9ea(Object * ptr, Array* arg1, RID* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->_instances_cull_convex_bind(*arg1, *arg2);
    return memnew(Array(Variant::from(ret)));
}

RID* godot_icall_VisualServer_canvas_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->canvas_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_canvas_set_item_mirroring_3c7b404(Object * ptr, RID* arg1, RID* arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<VisualServer *>(ptr)->canvas_set_item_mirroring(*arg1, *arg2, arg3_in);
}

void godot_icall_VisualServer_canvas_set_modulate_1e215388(Object * ptr, RID* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<VisualServer *>(ptr)->canvas_set_modulate(*arg1, arg2_in);
}

RID* godot_icall_VisualServer_canvas_item_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->canvas_item_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_canvas_item_set_parent_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->canvas_item_set_parent(*arg1, *arg2);
}

void godot_icall_VisualServer_canvas_item_set_visible_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_visible(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_set_light_mask_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_light_mask(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_set_transform_31203f57(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform2D* arg2) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg2_in = MARSHALLED_IN(Transform2D, arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_transform(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_set_clip_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_clip(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_set_distance_field_mode_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_distance_field_mode(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_set_custom_rect_986bcedd(Object * ptr, RID* arg1, MonoBoolean arg2, GDMonoMarshal::M_Rect2* arg3) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    Rect2 arg3_in = MARSHALLED_IN(Rect2, arg3);
    static_cast<VisualServer *>(ptr)->canvas_item_set_custom_rect(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_canvas_item_set_modulate_1e215388(Object * ptr, RID* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_modulate(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_set_self_modulate_1e215388(Object * ptr, RID* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_self_modulate(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_set_draw_behind_parent_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_draw_behind_parent(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_add_line_43ef7a80(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3, GDMonoMarshal::M_Color* arg4, float* arg5, MonoBoolean arg6) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    float arg5_in = static_cast<float>(*arg5);
    bool arg6_in = static_cast<bool>(arg6);
    static_cast<VisualServer *>(ptr)->canvas_item_add_line(*arg1, arg2_in, arg3_in, arg4_in, arg5_in, arg6_in);
}

void godot_icall_VisualServer_canvas_item_add_polyline_6e0e11b1(Object * ptr, RID* arg1, MonoArray* arg2, MonoArray* arg3, float* arg4, MonoBoolean arg5) {
    ERR_FAIL_NULL(ptr);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg2);
    auto arg3_in = GDMonoMarshal::mono_array_to_NC_VecColor(arg3);
    float arg4_in = static_cast<float>(*arg4);
    bool arg5_in = static_cast<bool>(arg5);
    static_cast<VisualServer *>(ptr)->canvas_item_add_polyline(*arg1, arg2_in, arg3_in, arg4_in, arg5_in);
}

void godot_icall_VisualServer_canvas_item_add_rect_e27e994e(Object * ptr, RID* arg1, GDMonoMarshal::M_Rect2* arg2, GDMonoMarshal::M_Color* arg3) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    Color arg3_in = MARSHALLED_IN(Color, arg3);
    static_cast<VisualServer *>(ptr)->canvas_item_add_rect(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_canvas_item_add_circle_2636f0ec(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2, float* arg3, GDMonoMarshal::M_Color* arg4) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    float arg3_in = static_cast<float>(*arg3);
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    static_cast<VisualServer *>(ptr)->canvas_item_add_circle(*arg1, arg2_in, arg3_in, arg4_in);
}

void godot_icall_VisualServer_canvas_item_add_texture_rect_797e8552(Object * ptr, RID* arg1, GDMonoMarshal::M_Rect2* arg2, RID* arg3, MonoBoolean arg4, GDMonoMarshal::M_Color* arg5, MonoBoolean arg6, RID* arg7) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    bool arg4_in = static_cast<bool>(arg4);
    Color arg5_in = MARSHALLED_IN(Color, arg5);
    bool arg6_in = static_cast<bool>(arg6);
    static_cast<VisualServer *>(ptr)->canvas_item_add_texture_rect(*arg1, arg2_in, *arg3, arg4_in, arg5_in, arg6_in, *arg7);
}

void godot_icall_VisualServer_canvas_item_add_texture_rect_region_f589e103(Object * ptr, RID* arg1, GDMonoMarshal::M_Rect2* arg2, RID* arg3, GDMonoMarshal::M_Rect2* arg4, GDMonoMarshal::M_Color* arg5, MonoBoolean arg6, RID* arg7, MonoBoolean arg8) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    Rect2 arg4_in = MARSHALLED_IN(Rect2, arg4);
    Color arg5_in = MARSHALLED_IN(Color, arg5);
    bool arg6_in = static_cast<bool>(arg6);
    bool arg8_in = static_cast<bool>(arg8);
    static_cast<VisualServer *>(ptr)->canvas_item_add_texture_rect_region(*arg1, arg2_in, *arg3, arg4_in, arg5_in, arg6_in, *arg7, arg8_in);
}

void godot_icall_VisualServer_canvas_item_add_nine_patch_1c8b0919(Object * ptr, RID* arg1, GDMonoMarshal::M_Rect2* arg2, GDMonoMarshal::M_Rect2* arg3, RID* arg4, GDMonoMarshal::M_Vector2* arg5, GDMonoMarshal::M_Vector2* arg6, int32_t arg7, int32_t arg8, MonoBoolean arg9, GDMonoMarshal::M_Color* arg10, RID* arg11) {
    ERR_FAIL_NULL(ptr);
    Rect2 arg2_in = MARSHALLED_IN(Rect2, arg2);
    Rect2 arg3_in = MARSHALLED_IN(Rect2, arg3);
    Vector2 arg5_in = MARSHALLED_IN(Vector2, arg5);
    Vector2 arg6_in = MARSHALLED_IN(Vector2, arg6);
    int32_t arg7_in = static_cast<int32_t>(arg7);
    int32_t arg8_in = static_cast<int32_t>(arg8);
    bool arg9_in = static_cast<bool>(arg9);
    Color arg10_in = MARSHALLED_IN(Color, arg10);
    static_cast<VisualServer *>(ptr)->canvas_item_add_nine_patch(*arg1, arg2_in, arg3_in, *arg4, arg5_in, arg6_in,
            (VS::NinePatchAxisMode)arg7_in, (VS::NinePatchAxisMode)arg8_in, arg9_in, arg10_in, *arg11);
}

void godot_icall_VisualServer_canvas_item_add_primitive_ddcd3815(Object * ptr, RID* arg1, MonoArray* arg2, MonoArray* arg3, MonoArray* arg4, RID* arg5, float* arg6, RID* arg7) {
    ERR_FAIL_NULL(ptr);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg2);
    PoolColorArray arg3_in = GDMonoMarshal::mono_array_to_PoolColorArray(arg3);
    PoolVector2Array arg4_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg4);
    float arg6_in = static_cast<float>(*arg6);
    static_cast<VisualServer *>(ptr)->canvas_item_add_primitive(*arg1, arg2_in, arg3_in, arg4_in, *arg5, arg6_in, *arg7);
}

void godot_icall_VisualServer_canvas_item_add_polygon_3746c075(Object * ptr, RID* arg1, Array* arg2, MonoArray* arg3, MonoArray* arg4, RID* arg5, RID* arg6, MonoBoolean arg7) {
    ERR_FAIL_NULL(ptr);
    PoolColorArray arg3_in = GDMonoMarshal::mono_array_to_PoolColorArray(arg3);
    PoolVector2Array arg4_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg4);
    bool arg7_in = static_cast<bool>(arg7);
    static_cast<VisualServer *>(ptr)->canvas_item_add_polygon(*arg1, asVec<Vector2>(*arg2), arg3_in, arg4_in, *arg5, *arg6, arg7_in);
}

void godot_icall_VisualServer_canvas_item_add_triangle_array_73226e70(Object * ptr, RID* arg1, MonoArray* arg2, Array* arg3, MonoArray* arg4, MonoArray* arg5, MonoArray* arg6, MonoArray* arg7, RID* arg8, int32_t arg9, RID* arg10, MonoBoolean arg11, MonoBoolean arg12) {
    ERR_FAIL_NULL(ptr);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecInt(arg2);
    PoolColorArray arg4_in = GDMonoMarshal::mono_array_to_PoolColorArray(arg4);
    PoolVector2Array arg5_in = GDMonoMarshal::mono_array_to_PoolVector2Array(arg5);
    PoolIntArray arg6_in = GDMonoMarshal::mono_array_to_PoolIntArray(arg6);
    PoolRealArray arg7_in = GDMonoMarshal::mono_array_to_PoolRealArray(arg7);
    int32_t arg9_in = static_cast<int32_t>(arg9);
    bool arg11_in = static_cast<bool>(arg11);
    bool arg12_in = static_cast<bool>(arg12);
    static_cast<VisualServer *>(ptr)->canvas_item_add_triangle_array(*arg1, arg2_in, asVec<Vector2>(*arg3), arg4_in, arg5_in, arg6_in, arg7_in, *arg8, arg9_in, *arg10, arg11_in, arg12_in);
}

void godot_icall_VisualServer_canvas_item_add_mesh_9aacf2fa(Object * ptr, RID* arg1, RID* arg2, GDMonoMarshal::M_Transform2D* arg3, GDMonoMarshal::M_Color* arg4, RID* arg5, RID* arg6) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg3_in = MARSHALLED_IN(Transform2D, arg3);
    Color arg4_in = MARSHALLED_IN(Color, arg4);
    static_cast<VisualServer *>(ptr)->canvas_item_add_mesh(*arg1, *arg2, arg3_in, arg4_in, *arg5, *arg6);
}

void godot_icall_VisualServer_canvas_item_add_multimesh_9c05eab8(Object * ptr, RID* arg1, RID* arg2, RID* arg3, RID* arg4) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->canvas_item_add_multimesh(*arg1, *arg2, *arg3, *arg4);
}

void godot_icall_VisualServer_canvas_item_add_particles_9c05eab8(Object * ptr, RID* arg1, RID* arg2, RID* arg3, RID* arg4) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->canvas_item_add_particles(*arg1, *arg2, *arg3, *arg4);
}

void godot_icall_VisualServer_canvas_item_add_set_transform_31203f57(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform2D* arg2) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg2_in = MARSHALLED_IN(Transform2D, arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_add_set_transform(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_add_clip_ignore_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_add_clip_ignore(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_set_sort_children_by_y_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_sort_children_by_y(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_set_z_index_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_z_index(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_set_z_as_relative_to_parent_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_z_as_relative_to_parent(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_set_copy_to_backbuffer_986bcedd(Object * ptr, RID* arg1, MonoBoolean arg2, GDMonoMarshal::M_Rect2* arg3) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    Rect2 arg3_in = MARSHALLED_IN(Rect2, arg3);
    static_cast<VisualServer *>(ptr)->canvas_item_set_copy_to_backbuffer(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_canvas_item_clear_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->canvas_item_clear(*arg1);
}

void godot_icall_VisualServer_canvas_item_set_draw_index_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_draw_index(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_item_set_material_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->canvas_item_set_material(*arg1, *arg2);
}

void godot_icall_VisualServer_canvas_item_set_use_parent_material_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_item_set_use_parent_material(*arg1, arg2_in);
}

RID* godot_icall_VisualServer_canvas_light_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->canvas_light_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_canvas_light_attach_to_canvas_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->canvas_light_attach_to_canvas(*arg1, *arg2);
}

void godot_icall_VisualServer_canvas_light_set_enabled_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_enabled(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_scale_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_scale(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_transform_31203f57(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform2D* arg2) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg2_in = MARSHALLED_IN(Transform2D, arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_transform(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_texture_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->canvas_light_set_texture(*arg1, *arg2);
}

void godot_icall_VisualServer_canvas_light_set_texture_offset_832e4d14(Object * ptr, RID* arg1, GDMonoMarshal::M_Vector2* arg2) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_texture_offset(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_color_1e215388(Object * ptr, RID* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_color(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_height_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_height(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_energy_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_energy(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_z_range_95c34a97(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<VisualServer *>(ptr)->canvas_light_set_z_range(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_canvas_light_set_layer_range_95c34a97(Object * ptr, RID* arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    static_cast<VisualServer *>(ptr)->canvas_light_set_layer_range(*arg1, arg2_in, arg3_in);
}

void godot_icall_VisualServer_canvas_light_set_item_cull_mask_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_item_cull_mask(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_item_shadow_cull_mask_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_item_shadow_cull_mask(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_mode_4bae9d4c(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_mode(*arg1, (VS::CanvasLightMode)arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_shadow_enabled_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_shadow_enabled(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_shadow_buffer_size_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_shadow_buffer_size(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_shadow_gradient_length_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_shadow_gradient_length(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_shadow_filter_a083ca93(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_shadow_filter(*arg1, (VS::CanvasLightShadowFilter)arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_shadow_color_1e215388(Object * ptr, RID* arg1, GDMonoMarshal::M_Color* arg2) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_shadow_color(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_set_shadow_smooth_70bf90fb(Object * ptr, RID* arg1, float* arg2) {
    ERR_FAIL_NULL(ptr);
    float arg2_in = static_cast<float>(*arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_set_shadow_smooth(*arg1, arg2_in);
}

RID* godot_icall_VisualServer_canvas_light_occluder_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->canvas_light_occluder_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_canvas_light_occluder_attach_to_canvas_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->canvas_light_occluder_attach_to_canvas(*arg1, *arg2);
}

void godot_icall_VisualServer_canvas_light_occluder_set_enabled_56de082b(Object * ptr, RID* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_occluder_set_enabled(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_occluder_set_polygon_48010164(Object * ptr, RID* arg1, RID* arg2) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->canvas_light_occluder_set_polygon(*arg1, *arg2);
}

void godot_icall_VisualServer_canvas_light_occluder_set_transform_31203f57(Object * ptr, RID* arg1, GDMonoMarshal::M_Transform2D* arg2) {
    ERR_FAIL_NULL(ptr);
    Transform2D arg2_in = MARSHALLED_IN(Transform2D, arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_occluder_set_transform(*arg1, arg2_in);
}

void godot_icall_VisualServer_canvas_light_occluder_set_light_mask_f6439f2(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_light_occluder_set_light_mask(*arg1, arg2_in);
}

RID* godot_icall_VisualServer_canvas_occluder_polygon_create_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->canvas_occluder_polygon_create();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_canvas_occluder_polygon_set_shape_f698a253(Object * ptr, RID* arg1, Array* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL(ptr);
    bool arg3_in = static_cast<bool>(arg3);
    auto val = Variant(*arg2).as<PoolVector<Vector2>>();

    static_cast<VisualServer *>(ptr)->canvas_occluder_polygon_set_shape(*arg1, val.toSpan(), arg3_in);
}

void godot_icall_VisualServer_canvas_occluder_polygon_set_shape_as_lines_c7e12dae(Object * ptr, RID* arg1, Array* arg2) {
    ERR_FAIL_NULL(ptr);
    auto val = Variant(*arg2).as<PoolVector<Vector2>>();
    static_cast<VisualServer *>(ptr)->canvas_occluder_polygon_set_shape_as_lines(*arg1, val.toSpan());
}

void godot_icall_VisualServer_canvas_occluder_polygon_set_cull_mode_1096e63d(Object * ptr, RID* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualServer *>(ptr)->canvas_occluder_polygon_set_cull_mode(*arg1, (VS::CanvasOccluderPolygonCullMode)arg2_in);
}

void godot_icall_VisualServer_black_bars_set_margins_2b70940c(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<VisualServer *>(ptr)->black_bars_set_margins(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall_VisualServer_black_bars_set_images_9c05eab8(Object * ptr, RID* arg1, RID* arg2, RID* arg3, RID* arg4) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->black_bars_set_images(*arg1, *arg2, *arg3, *arg4);
}

void godot_icall_VisualServer_free_rid_a7039b4e(Object * ptr, RID* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->free_rid(*arg1);
}

void godot_icall_VisualServer_request_frame_drawn_callback_eca64843(Object * ptr, Object * arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL(ptr);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    static_cast<VisualServer *>(ptr)->request_frame_drawn_callback((Object*)arg1, arg2_in, arg3_in);
}

MonoBoolean godot_icall_VisualServer_has_changed_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VisualServer *>(ptr)->has_changed();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualServer_init_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->init();
}

void godot_icall_VisualServer_finish_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualServer *>(ptr)->finish();
}

int32_t godot_icall_VisualServer_get_render_info_c9bad872(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<VisualServer *>(ptr)->get_render_info((VS::RenderInfo)arg1_in);
    return static_cast<int32_t>(ret);
}

RID* godot_icall_VisualServer_make_sphere_mesh_6732e4a6(Object * ptr, int32_t arg1, int32_t arg2, float* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    float arg3_in = static_cast<float>(*arg3);
    auto ret = static_cast<VisualServer *>(ptr)->make_sphere_mesh(arg1_in, arg2_in, arg3_in);
    return memnew(RID(ret));
}

RID* godot_icall_VisualServer_get_test_cube_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->get_test_cube();
    return memnew(RID(ret));
}

RID* godot_icall_VisualServer_get_test_texture_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->get_test_texture();
    return memnew(RID(ret));
}

RID* godot_icall_VisualServer_get_white_texture_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualServer *>(ptr)->get_white_texture();
    return memnew(RID(ret));
}

void godot_icall_VisualServer_set_boot_image_f6359177(Object * ptr, Object * arg1, GDMonoMarshal::M_Color* arg2, MonoBoolean arg3, MonoBoolean arg4) {
    ERR_FAIL_NULL(ptr);
    Color arg2_in = MARSHALLED_IN(Color, arg2);
    bool arg3_in = static_cast<bool>(arg3);
    bool arg4_in = static_cast<bool>(arg4);
    static_cast<VisualServer *>(ptr)->set_boot_image(AutoRef(arg1), arg2_in, arg3_in, arg4_in);
}

void godot_icall_VisualServer_set_default_clear_color_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<VisualServer *>(ptr)->set_default_clear_color(arg1_in);
}

MonoBoolean godot_icall_VisualServer_has_feature_d61c266(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<VisualServer *>(ptr)->has_feature((VS::Features)arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_VisualServer_has_os_feature_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<VisualServer *>(ptr)->has_os_feature(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualServer_set_debug_generate_wireframes_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<VisualServer *>(ptr)->set_debug_generate_wireframes(arg1_in);
}

Object* godot_icall_VisualServer_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("VisualServer");
}

void godot_icall_VisualShader_set_mode_61668cc9(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<VisualShader *>(ptr)->set_mode((ShaderMode)arg1_in);
}

void godot_icall_VisualShader_add_node_b2083941(Object * ptr, int32_t arg1, Object * arg2, GDMonoMarshal::M_Vector2* arg3, int32_t arg4) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    static_cast<VisualShader *>(ptr)->add_node((VisualShader::Type)arg1_in, AutoRef(arg2), arg3_in, arg4_in);
}

MonoObject* godot_icall_VisualShader_get_node_81445b1a(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualShader *>(ptr)->get_node((VisualShader::Type)arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_VisualShader_set_node_position_a00a70f9(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg3) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    static_cast<VisualShader *>(ptr)->set_node_position((VisualShader::Type)arg1_in, arg2_in, arg3_in);
}

void godot_icall_VisualShader_get_node_position_f2f09061(Object * ptr, int32_t arg1, int32_t arg2, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    auto ret = static_cast<VisualShader *>(ptr)->get_node_position((VisualShader::Type)arg1_in, arg2_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoArray* godot_icall_VisualShader_get_node_list_5d9314e9(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<VisualShader *>(ptr)->get_node_list((VisualShader::Type)arg1_in);
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

int32_t godot_icall_VisualShader_get_valid_node_id_ceea996d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<VisualShader *>(ptr)->get_valid_node_id((VisualShader::Type)arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualShader_remove_node_f3746b92(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualShader *>(ptr)->remove_node((VisualShader::Type)arg1_in, arg2_in);
}

MonoBoolean godot_icall_VisualShader_is_node_connection_a2a4343(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    auto ret = static_cast<VisualShader *>(ptr)->is_node_connection((VisualShader::Type)arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_VisualShader_can_connect_nodes_a2a4343(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    auto ret = static_cast<VisualShader *>(ptr)->can_connect_nodes((VisualShader::Type)arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_VisualShader_connect_nodes_f669495b(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    auto ret = static_cast<VisualShader *>(ptr)->connect_nodes((VisualShader::Type)arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
    return (int32_t)ret;
}

void godot_icall_VisualShader_disconnect_nodes_658fa4ef(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    static_cast<VisualShader *>(ptr)->disconnect_nodes((VisualShader::Type)arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

void godot_icall_VisualShader_connect_nodes_forced_658fa4ef(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int32_t arg5_in = static_cast<int32_t>(arg5);
    static_cast<VisualShader *>(ptr)->connect_nodes_forced((VisualShader::Type)arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
}

Array* godot_icall_VisualShader_get_node_connections_c6454732(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<VisualShader *>(ptr)->_get_node_connections((VisualShader::Type)arg1_in);
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_VisualShader_set_graph_offset_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<VisualShader *>(ptr)->set_graph_offset(arg1_in);
}

void godot_icall_VisualShader_get_graph_offset_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualShader *>(ptr)->get_graph_offset();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

Object* godot_icall_VisualShader_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShader")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNode_set_output_port_for_preview_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<VisualShaderNode *>(ptr)->set_output_port_for_preview(arg1_in);
}

int32_t godot_icall_VisualShaderNode_get_output_port_for_preview_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNode *>(ptr)->get_output_port_for_preview();
    return static_cast<int32_t>(ret);
}

void godot_icall_VisualShaderNode_set_input_port_default_value_37bef04(Object * ptr, int32_t arg1, MonoObject* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    Variant arg2_in = GDMonoMarshal::mono_object_to_variant(arg2);
    static_cast<VisualShaderNode *>(ptr)->set_input_port_default_value(arg1_in, arg2_in);
}

MonoObject* godot_icall_VisualShaderNode_get_input_port_default_value_a9b2673d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<VisualShaderNode *>(ptr)->get_input_port_default_value(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall_VisualShaderNode__set_default_input_values_2923a790(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualShaderNode *>(ptr)->set_default_input_values(*arg1);
}

Array* godot_icall_VisualShaderNode__get_default_input_values_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualShaderNode *>(ptr)->get_default_input_values();
    return memnew(Array(Variant::from(ret)));
}

void godot_icall_VisualShaderNodeBooleanConstant_set_constant_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<VisualShaderNodeBooleanConstant *>(ptr)->set_constant(arg1_in);
}

MonoBoolean godot_icall_VisualShaderNodeBooleanConstant_get_constant_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<VisualShaderNodeBooleanConstant *>(ptr)->get_constant();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_VisualShaderNodeBooleanConstant_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeBooleanConstant")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeBooleanUniform_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeBooleanUniform")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeColorConstant_set_constant_f2e3b5aa(Object * ptr, GDMonoMarshal::M_Color* arg1) {
    ERR_FAIL_NULL(ptr);
    Color arg1_in = MARSHALLED_IN(Color, arg1);
    static_cast<VisualShaderNodeColorConstant *>(ptr)->set_constant(arg1_in);
}

void godot_icall_VisualShaderNodeColorConstant_get_constant_304394ba(Object * ptr, GDMonoMarshal::M_Color* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Color(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualShaderNodeColorConstant *>(ptr)->get_constant();
    *arg_ret = MARSHALLED_OUT(Color, ret);
}

Object* godot_icall_VisualShaderNodeColorConstant_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeColorConstant")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeColorFunc_set_function_b4d15653(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeColorFunc *>(ptr)->set_function((VisualShaderNodeColorFunc::Function)arg1_in);
}

int32_t godot_icall_VisualShaderNodeColorFunc_get_function_9f2d925e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeColorFunc *>(ptr)->get_function();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeColorFunc_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeColorFunc")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeColorOp_set_operator_a2017d08(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeColorOp *>(ptr)->set_operator((VisualShaderNodeColorOp::Operator)arg1_in);
}

int32_t godot_icall_VisualShaderNodeColorOp_get_operator_75b0716b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeColorOp *>(ptr)->get_operator();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeColorOp_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeColorOp")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeColorUniform_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeColorUniform")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeCompare_set_comparison_type_998ecb8(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeCompare *>(ptr)->set_comparison_type((VisualShaderNodeCompare::ComparisonType)arg1_in);
}

int32_t godot_icall_VisualShaderNodeCompare_get_comparison_type_b7ba3bac(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeCompare *>(ptr)->get_comparison_type();
    return (int32_t)ret;
}

void godot_icall_VisualShaderNodeCompare_set_function_139133a9(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeCompare *>(ptr)->set_function((VisualShaderNodeCompare::Function)arg1_in);
}

int32_t godot_icall_VisualShaderNodeCompare_get_function_6bc34884(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeCompare *>(ptr)->get_function();
    return (int32_t)ret;
}

void godot_icall_VisualShaderNodeCompare_set_condition_f995c042(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeCompare *>(ptr)->set_condition((VisualShaderNodeCompare::Condition)arg1_in);
}

int32_t godot_icall_VisualShaderNodeCompare_get_condition_b2065d2d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeCompare *>(ptr)->get_condition();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeCompare_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeCompare")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeCubeMap_set_source_4d9ad2a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeCubeMap *>(ptr)->set_source((VisualShaderNodeCubeMap::Source)arg1_in);
}

int32_t godot_icall_VisualShaderNodeCubeMap_get_source_520e41e5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeCubeMap *>(ptr)->get_source();
    return (int32_t)ret;
}

void godot_icall_VisualShaderNodeCubeMap_set_cube_map_1060ecb0(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualShaderNodeCubeMap *>(ptr)->set_cube_map(AutoRef(arg1));
}

MonoObject* godot_icall_VisualShaderNodeCubeMap_get_cube_map_cec23bb4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualShaderNodeCubeMap *>(ptr)->get_cube_map();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_VisualShaderNodeCubeMap_set_texture_type_76fd5fae(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeCubeMap *>(ptr)->set_texture_type((VisualShaderNodeCubeMap::TextureType)arg1_in);
}

int32_t godot_icall_VisualShaderNodeCubeMap_get_texture_type_144f4429(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeCubeMap *>(ptr)->get_texture_type();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeCubeMap_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeCubeMap")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeCubeMapUniform_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeCubeMapUniform")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeCustom_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeCustom")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeDeterminant_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeDeterminant")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeDotProduct_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeDotProduct")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeExpression_set_expression_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<VisualShaderNodeExpression *>(ptr)->set_expression(arg1_in);
}

MonoString* godot_icall_VisualShaderNodeExpression_get_expression_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualShaderNodeExpression *>(ptr)->get_expression();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_VisualShaderNodeExpression_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeExpression")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeFaceForward_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeFaceForward")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeFresnel_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeFresnel")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeGlobalExpression_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeGlobalExpression")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeGroupBase_set_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->set_size(arg1_in);
}

void godot_icall_VisualShaderNodeGroupBase_get_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualShaderNodeGroupBase *>(ptr)->get_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall_VisualShaderNodeGroupBase_set_inputs_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->set_inputs(arg1_in);
}

MonoString* godot_icall_VisualShaderNodeGroupBase_get_inputs_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualShaderNodeGroupBase *>(ptr)->get_inputs();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualShaderNodeGroupBase_set_outputs_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->set_outputs(arg1_in);
}

MonoString* godot_icall_VisualShaderNodeGroupBase_get_outputs_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualShaderNodeGroupBase *>(ptr)->get_outputs();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_VisualShaderNodeGroupBase_is_valid_port_name_e7336ea4(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<VisualShaderNodeGroupBase *>(ptr)->is_valid_port_name(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualShaderNodeGroupBase_add_input_port_f5af9704(Object * ptr, int32_t arg1, int32_t arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    String arg3_in = GDMonoMarshal::mono_string_to_godot(arg3);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->add_input_port(arg1_in, arg2_in, arg3_in);
}

void godot_icall_VisualShaderNodeGroupBase_remove_input_port_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->remove_input_port(arg1_in);
}

int32_t godot_icall_VisualShaderNodeGroupBase_get_input_port_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeGroupBase *>(ptr)->get_input_port_count();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_VisualShaderNodeGroupBase_has_input_port_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<VisualShaderNodeGroupBase *>(ptr)->has_input_port(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualShaderNodeGroupBase_clear_input_ports_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->clear_input_ports();
}

void godot_icall_VisualShaderNodeGroupBase_add_output_port_f5af9704(Object * ptr, int32_t arg1, int32_t arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    String arg3_in = GDMonoMarshal::mono_string_to_godot(arg3);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->add_output_port(arg1_in, arg2_in, arg3_in);
}

void godot_icall_VisualShaderNodeGroupBase_remove_output_port_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->remove_output_port(arg1_in);
}

int32_t godot_icall_VisualShaderNodeGroupBase_get_output_port_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeGroupBase *>(ptr)->get_output_port_count();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall_VisualShaderNodeGroupBase_has_output_port_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<VisualShaderNodeGroupBase *>(ptr)->has_output_port(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_VisualShaderNodeGroupBase_clear_output_ports_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->clear_output_ports();
}

void godot_icall_VisualShaderNodeGroupBase_set_input_port_name_3ba8c46a(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    String arg2_in = GDMonoMarshal::mono_string_to_godot(arg2);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->set_input_port_name(arg1_in, arg2_in);
}

void godot_icall_VisualShaderNodeGroupBase_set_input_port_type_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->set_input_port_type(arg1_in, arg2_in);
}

void godot_icall_VisualShaderNodeGroupBase_set_output_port_name_3ba8c46a(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    String arg2_in = GDMonoMarshal::mono_string_to_godot(arg2);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->set_output_port_name(arg1_in, arg2_in);
}

void godot_icall_VisualShaderNodeGroupBase_set_output_port_type_807eefe4(Object * ptr, int32_t arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<VisualShaderNodeGroupBase *>(ptr)->set_output_port_type(arg1_in, arg2_in);
}

int32_t godot_icall_VisualShaderNodeGroupBase_get_free_input_port_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeGroupBase *>(ptr)->get_free_input_port_id();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_VisualShaderNodeGroupBase_get_free_output_port_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeGroupBase *>(ptr)->get_free_output_port_id();
    return static_cast<int32_t>(ret);
}

Object* godot_icall_VisualShaderNodeGroupBase_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeGroupBase")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeIf_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeIf")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeInput_set_input_name_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualShaderNodeInput *>(ptr)->set_input_name(arg1_in);
}

MonoString* godot_icall_VisualShaderNodeInput_get_input_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualShaderNodeInput *>(ptr)->get_input_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_VisualShaderNodeInput_get_input_real_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualShaderNodeInput *>(ptr)->get_input_real_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall_VisualShaderNodeInput_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeInput")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeIs_set_function_dfa15874(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeIs *>(ptr)->set_function((VisualShaderNodeIs::Function)arg1_in);
}

int32_t godot_icall_VisualShaderNodeIs_get_function_e0cc91a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeIs *>(ptr)->get_function();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeIs_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeIs")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeOuterProduct_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeOuterProduct")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeScalarClamp_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeScalarClamp")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeScalarConstant_set_constant_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VisualShaderNodeScalarConstant *>(ptr)->set_constant(arg1_in);
}

void godot_icall_VisualShaderNodeScalarConstant_get_constant_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualShaderNodeScalarConstant *>(ptr)->get_constant();
    *arg_ret = (float)ret;
}

Object* godot_icall_VisualShaderNodeScalarConstant_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeScalarConstant")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeScalarDerivativeFunc_set_function_14b3f72d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeScalarDerivativeFunc *>(ptr)->set_function((VisualShaderNodeScalarDerivativeFunc::Function)arg1_in);
}

int32_t godot_icall_VisualShaderNodeScalarDerivativeFunc_get_function_b84f2bd8(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeScalarDerivativeFunc *>(ptr)->get_function();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeScalarDerivativeFunc_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeScalarDerivativeFunc")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeScalarFunc_set_function_7a08afde(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeScalarFunc *>(ptr)->set_function((VisualShaderNodeScalarFunc::Function)arg1_in);
}

int32_t godot_icall_VisualShaderNodeScalarFunc_get_function_cb293e99(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeScalarFunc *>(ptr)->get_function();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeScalarFunc_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeScalarFunc")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeScalarInterp_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeScalarInterp")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeScalarOp_set_operator_91af01f9(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeScalarOp *>(ptr)->set_operator((VisualShaderNodeScalarOp::Operator)arg1_in);
}

int32_t godot_icall_VisualShaderNodeScalarOp_get_operator_4f328214(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeScalarOp *>(ptr)->get_operator();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeScalarOp_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeScalarOp")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeScalarSmoothStep_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeScalarSmoothStep")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeScalarSwitch_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeScalarSwitch")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeScalarUniform_set_hint_e8b939b9(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeScalarUniform *>(ptr)->set_hint((VisualShaderNodeScalarUniform::Hint)arg1_in);
}

int32_t godot_icall_VisualShaderNodeScalarUniform_get_hint_dee4ff54(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeScalarUniform *>(ptr)->get_hint();
    return (int32_t)ret;
}

void godot_icall_VisualShaderNodeScalarUniform_set_min_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VisualShaderNodeScalarUniform *>(ptr)->set_min(arg1_in);
}

void godot_icall_VisualShaderNodeScalarUniform_get_min_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualShaderNodeScalarUniform *>(ptr)->get_min();
    *arg_ret = (float)ret;
}

void godot_icall_VisualShaderNodeScalarUniform_set_max_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VisualShaderNodeScalarUniform *>(ptr)->set_max(arg1_in);
}

void godot_icall_VisualShaderNodeScalarUniform_get_max_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualShaderNodeScalarUniform *>(ptr)->get_max();
    *arg_ret = (float)ret;
}

void godot_icall_VisualShaderNodeScalarUniform_set_step_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<VisualShaderNodeScalarUniform *>(ptr)->set_step(arg1_in);
}

void godot_icall_VisualShaderNodeScalarUniform_get_step_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualShaderNodeScalarUniform *>(ptr)->get_step();
    *arg_ret = (float)ret;
}

Object* godot_icall_VisualShaderNodeScalarUniform_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeScalarUniform")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeSwitch_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeSwitch")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeTexture_set_source_ed1e5f58(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeTexture *>(ptr)->set_source((VisualShaderNodeTexture::Source)arg1_in);
}

int32_t godot_icall_VisualShaderNodeTexture_get_source_7c6576fb(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeTexture *>(ptr)->get_source();
    return (int32_t)ret;
}

void godot_icall_VisualShaderNodeTexture_set_texture_7eecd31a(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<VisualShaderNodeTexture *>(ptr)->set_texture(AutoRef(arg1));
}

MonoObject* godot_icall_VisualShaderNodeTexture_get_texture_ac462e4a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualShaderNodeTexture *>(ptr)->get_texture();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_VisualShaderNodeTexture_set_texture_type_4b749e4c(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeTexture *>(ptr)->set_texture_type((VisualShaderNodeTexture::TextureType)arg1_in);
}

int32_t godot_icall_VisualShaderNodeTexture_get_texture_type_9415d92f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeTexture *>(ptr)->get_texture_type();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeTexture_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeTexture")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeTextureUniform_set_texture_type_e6e6c5ba(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeTextureUniform *>(ptr)->set_texture_type((VisualShaderNodeTextureUniform::TextureType)arg1_in);
}

int32_t godot_icall_VisualShaderNodeTextureUniform_get_texture_type_7a4baaf5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeTextureUniform *>(ptr)->get_texture_type();
    return (int32_t)ret;
}

void godot_icall_VisualShaderNodeTextureUniform_set_color_default_d0089463(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeTextureUniform *>(ptr)->set_color_default((VisualShaderNodeTextureUniform::ColorDefault)arg1_in);
}

int32_t godot_icall_VisualShaderNodeTextureUniform_get_color_default_e6d62cae(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeTextureUniform *>(ptr)->get_color_default();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeTextureUniform_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeTextureUniform")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeTextureUniformTriplanar_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeTextureUniformTriplanar")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeTransformCompose_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeTransformCompose")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeTransformConstant_set_constant_655b85c9(Object * ptr, GDMonoMarshal::M_Transform* arg1) {
    ERR_FAIL_NULL(ptr);
    Transform arg1_in = MARSHALLED_IN(Transform, arg1);
    static_cast<VisualShaderNodeTransformConstant *>(ptr)->set_constant(arg1_in);
}

void godot_icall_VisualShaderNodeTransformConstant_get_constant_a3fb649b(Object * ptr, GDMonoMarshal::M_Transform* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Transform(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualShaderNodeTransformConstant *>(ptr)->get_constant();
    *arg_ret = MARSHALLED_OUT(Transform, ret);
}

Object* godot_icall_VisualShaderNodeTransformConstant_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeTransformConstant")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeTransformDecompose_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeTransformDecompose")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeTransformFunc_set_function_c9eec626(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeTransformFunc *>(ptr)->set_function((VisualShaderNodeTransformFunc::Function)arg1_in);
}

int32_t godot_icall_VisualShaderNodeTransformFunc_get_function_8eefda91(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeTransformFunc *>(ptr)->get_function();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeTransformFunc_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeTransformFunc")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeTransformMult_set_operator_35492466(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeTransformMult *>(ptr)->set_operator((VisualShaderNodeTransformMult::Operator)arg1_in);
}

int32_t godot_icall_VisualShaderNodeTransformMult_get_operator_c8117151(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeTransformMult *>(ptr)->get_operator();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeTransformMult_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeTransformMult")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeTransformUniform_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeTransformUniform")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeTransformVecMult_set_operator_f4c16934(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeTransformVecMult *>(ptr)->set_operator((VisualShaderNodeTransformVecMult::Operator)arg1_in);
}

int32_t godot_icall_VisualShaderNodeTransformVecMult_get_operator_638287e7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeTransformVecMult *>(ptr)->get_operator();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeTransformVecMult_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeTransformVecMult")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeUniform_set_uniform_name_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<VisualShaderNodeUniform *>(ptr)->set_uniform_name(arg1_in);
}

MonoString* godot_icall_VisualShaderNodeUniform_get_uniform_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<VisualShaderNodeUniform *>(ptr)->get_uniform_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_VisualShaderNodeVec3Constant_set_constant_6df7471d(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    static_cast<VisualShaderNodeVec3Constant *>(ptr)->set_constant(arg1_in);
}

void godot_icall_VisualShaderNodeVec3Constant_get_constant_9b4ea24f(Object * ptr, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<VisualShaderNodeVec3Constant *>(ptr)->get_constant();
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

Object* godot_icall_VisualShaderNodeVec3Constant_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVec3Constant")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeVec3Uniform_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVec3Uniform")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeVectorClamp_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorClamp")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeVectorCompose_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorCompose")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeVectorDecompose_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorDecompose")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeVectorDerivativeFunc_set_function_508eb658(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeVectorDerivativeFunc *>(ptr)->set_function((VisualShaderNodeVectorDerivativeFunc::Function)arg1_in);
}

int32_t godot_icall_VisualShaderNodeVectorDerivativeFunc_get_function_92bdcdfb(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeVectorDerivativeFunc *>(ptr)->get_function();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeVectorDerivativeFunc_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorDerivativeFunc")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeVectorDistance_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorDistance")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeVectorFunc_set_function_defdcba7(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeVectorFunc *>(ptr)->set_function((VisualShaderNodeVectorFunc::Function)arg1_in);
}

int32_t godot_icall_VisualShaderNodeVectorFunc_get_function_5c74da02(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeVectorFunc *>(ptr)->get_function();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeVectorFunc_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorFunc")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeVectorInterp_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorInterp")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeVectorLen_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorLen")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_VisualShaderNodeVectorOp_set_operator_9f193ec(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<VisualShaderNodeVectorOp *>(ptr)->set_operator((VisualShaderNodeVectorOp::Operator)arg1_in);
}

int32_t godot_icall_VisualShaderNodeVectorOp_get_operator_892e64f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<VisualShaderNodeVectorOp *>(ptr)->get_operator();
    return (int32_t)ret;
}

Object* godot_icall_VisualShaderNodeVectorOp_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorOp")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeVectorRefract_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorRefract")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeVectorScalarMix_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorScalarMix")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeVectorScalarSmoothStep_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorScalarSmoothStep")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeVectorScalarStep_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorScalarStep")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Object* godot_icall_VisualShaderNodeVectorSmoothStep_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "VisualShaderNodeVectorSmoothStep")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoObject* godot_icall_WeakRef_get_ref_a08d6f10(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WeakRef *>(ptr)->get_ref();
    return GDMonoMarshal::variant_to_mono_object(ret);
}

Object* godot_icall_WeakRef_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "WeakRef")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_WebRTCDataChannel_poll_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<WebRTCDataChannel *>(ptr)->poll();
    return (int32_t)ret;
}

void godot_icall_WebRTCDataChannel_close_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<WebRTCDataChannel *>(ptr)->close();
}

MonoBoolean godot_icall_WebRTCDataChannel_was_string_packet_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<WebRTCDataChannel *>(ptr)->was_string_packet();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_WebRTCDataChannel_set_write_mode_9b123b57(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<WebRTCDataChannel *>(ptr)->set_write_mode((WebRTCDataChannel::WriteMode)arg1_in);
}

int32_t godot_icall_WebRTCDataChannel_get_write_mode_95aa6cf2(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<WebRTCDataChannel *>(ptr)->get_write_mode();
    return (int32_t)ret;
}

int32_t godot_icall_WebRTCDataChannel_get_ready_state_e62958d3(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<WebRTCDataChannel *>(ptr)->get_ready_state();
    return (int32_t)ret;
}

MonoString* godot_icall_WebRTCDataChannel_get_label_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WebRTCDataChannel *>(ptr)->get_label();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_WebRTCDataChannel_is_ordered_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<WebRTCDataChannel *>(ptr)->is_ordered();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_WebRTCDataChannel_get_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<WebRTCDataChannel *>(ptr)->get_id();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_WebRTCDataChannel_get_max_packet_life_time_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<WebRTCDataChannel *>(ptr)->get_max_packet_life_time();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall_WebRTCDataChannel_get_max_retransmits_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<WebRTCDataChannel *>(ptr)->get_max_retransmits();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_WebRTCDataChannel_get_protocol_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WebRTCDataChannel *>(ptr)->get_protocol();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_WebRTCDataChannel_is_negotiated_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<WebRTCDataChannel *>(ptr)->is_negotiated();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_WebRTCMultiplayer_initialize_db24ab05(Object * ptr, int32_t arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<WebRTCMultiplayer *>(ptr)->initialize(arg1_in, arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall_WebRTCMultiplayer_add_peer_63055adf(Object * ptr, Object * arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    auto ret = static_cast<WebRTCMultiplayer *>(ptr)->add_peer(AutoRef(arg1), arg2_in, arg3_in);
    return (int32_t)ret;
}

void godot_icall_WebRTCMultiplayer_remove_peer_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<WebRTCMultiplayer *>(ptr)->remove_peer(arg1_in);
}

MonoBoolean godot_icall_WebRTCMultiplayer_has_peer_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<WebRTCMultiplayer *>(ptr)->has_peer(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

Dictionary* godot_icall_WebRTCMultiplayer_get_peer_5940524d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<WebRTCMultiplayer *>(ptr)->get_peer(arg1_in);
    return memnew(Dictionary(ret));
}

Dictionary* godot_icall_WebRTCMultiplayer_get_peers_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WebRTCMultiplayer *>(ptr)->get_peers();
    return memnew(Dictionary(ret));
}

void godot_icall_WebRTCMultiplayer_close_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<WebRTCMultiplayer *>(ptr)->close();
}

Object* godot_icall_WebRTCMultiplayer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "WebRTCMultiplayer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_WebRTCPeerConnection_initialize_fe3cff26(Object * ptr, Dictionary* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<WebRTCPeerConnection *>(ptr)->initialize(*arg1);
    return (int32_t)ret;
}

MonoObject* godot_icall_WebRTCPeerConnection_create_data_channel_fbff6dff(Object * ptr, MonoString* arg1, Dictionary* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<WebRTCPeerConnection *>(ptr)->create_data_channel(arg1_in, *arg2);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_WebRTCPeerConnection_create_offer_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<WebRTCPeerConnection *>(ptr)->create_offer();
    return (int32_t)ret;
}

int32_t godot_icall_WebRTCPeerConnection_set_local_description_ce7ee84(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<WebRTCPeerConnection *>(ptr)->set_local_description(arg1_in, arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall_WebRTCPeerConnection_set_remote_description_ce7ee84(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<WebRTCPeerConnection *>(ptr)->set_remote_description(arg1_in, arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall_WebRTCPeerConnection_add_ice_candidate_5ac7cfc4(Object * ptr, MonoString* arg1, int32_t arg2, MonoString* arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    TmpString<512> arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    auto ret = static_cast<WebRTCPeerConnection *>(ptr)->add_ice_candidate(arg1_in, arg2_in, arg3_in);
    return (int32_t)ret;
}

int32_t godot_icall_WebRTCPeerConnection_poll_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<WebRTCPeerConnection *>(ptr)->poll();
    return (int32_t)ret;
}

void godot_icall_WebRTCPeerConnection_close_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<WebRTCPeerConnection *>(ptr)->close();
}

int32_t godot_icall_WebRTCPeerConnection_get_connection_state_b9c7176b(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<WebRTCPeerConnection *>(ptr)->get_connection_state();
    return (int32_t)ret;
}

Object* godot_icall_WebRTCPeerConnection_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "WebRTCPeerConnection")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_WebSocketClient_connect_to_url_b834df5c(Object * ptr, MonoString* arg1, MonoArray* arg2, MonoBoolean arg3, MonoArray* arg4) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    PoolStringArray arg2_in = GDMonoMarshal::mono_array_to_PoolStringArray(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    PoolStringArray arg4_in = GDMonoMarshal::mono_array_to_PoolStringArray(arg4);
    auto ret = static_cast<WebSocketClient *>(ptr)->connect_to_url(arg1_in, arg2_in, arg3_in, arg4_in);
    return (int32_t)ret;
}

void godot_icall_WebSocketClient_disconnect_from_host_cd663605(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<WebSocketClient *>(ptr)->disconnect_from_host(arg1_in, arg2_in);
}

MonoString* godot_icall_WebSocketClient_get_connected_host_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WebSocketClient *>(ptr)->get_connected_host();
    return GDMonoMarshal::mono_string_from_godot(String(ret));
}

uint16_t godot_icall_WebSocketClient_get_connected_port_c0943588(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint16_t());
    auto ret = static_cast<WebSocketClient *>(ptr)->get_connected_port();
    return static_cast<uint16_t>(ret);
}

void godot_icall_WebSocketClient_set_verify_ssl_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<WebSocketClient *>(ptr)->set_verify_ssl_enabled(arg1_in);
}

MonoBoolean godot_icall_WebSocketClient_is_verify_ssl_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<WebSocketClient *>(ptr)->is_verify_ssl_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_WebSocketClient_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "WebSocketClient")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_WebSocketMultiplayerPeer_set_buffers_88365f0(Object * ptr, int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    auto ret = static_cast<WebSocketMultiplayerPeer *>(ptr)->set_buffers(arg1_in, arg2_in, arg3_in, arg4_in);
    return (int32_t)ret;
}

MonoObject* godot_icall_WebSocketMultiplayerPeer_get_peer_ebe08193(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<WebSocketMultiplayerPeer *>(ptr)->get_peer(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

int32_t godot_icall_WebSocketPeer_get_write_mode_c680c0e0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<WebSocketPeer *>(ptr)->get_write_mode();
    return (int32_t)ret;
}

void godot_icall_WebSocketPeer_set_write_mode_18a1618c(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<WebSocketPeer *>(ptr)->set_write_mode((WebSocketPeer::WriteMode)arg1_in);
}

MonoBoolean godot_icall_WebSocketPeer_is_connected_to_host_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<WebSocketPeer *>(ptr)->is_connected_to_host();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall_WebSocketPeer_was_string_packet_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<WebSocketPeer *>(ptr)->was_string_packet();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall_WebSocketPeer_close_cd663605(Object * ptr, int32_t arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<WebSocketPeer *>(ptr)->close(arg1_in, arg2_in);
}

MonoString* godot_icall_WebSocketPeer_get_connected_host_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WebSocketPeer *>(ptr)->get_connected_host();
    return GDMonoMarshal::mono_string_from_godot(String(ret));
}

uint16_t godot_icall_WebSocketPeer_get_connected_port_c0943588(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint16_t());
    auto ret = static_cast<WebSocketPeer *>(ptr)->get_connected_port();
    return static_cast<uint16_t>(ret);
}

void godot_icall_WebSocketPeer_set_no_delay_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<WebSocketPeer *>(ptr)->set_no_delay(arg1_in);
}

Object* godot_icall_WebSocketPeer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "WebSocketPeer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoBoolean godot_icall_WebSocketServer_is_listening_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<WebSocketServer *>(ptr)->is_listening();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_WebSocketServer_listen_d9e26198(Object * ptr, int32_t arg1, MonoArray* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    PoolStringArray arg2_in = GDMonoMarshal::mono_array_to_PoolStringArray(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    auto ret = static_cast<WebSocketServer *>(ptr)->listen(arg1_in, arg2_in, arg3_in);
    return (int32_t)ret;
}

void godot_icall_WebSocketServer_stop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<WebSocketServer *>(ptr)->stop();
}

MonoBoolean godot_icall_WebSocketServer_has_peer_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<WebSocketServer *>(ptr)->has_peer(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_WebSocketServer_get_peer_address_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<WebSocketServer *>(ptr)->get_peer_address(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(String(ret));
}

int32_t godot_icall_WebSocketServer_get_peer_port_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<WebSocketServer *>(ptr)->get_peer_port(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall_WebSocketServer_disconnect_peer_48ed2927(Object * ptr, int32_t arg1, int32_t arg2, MonoString* arg3) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    int32_t arg2_in = static_cast<int32_t>(arg2);
    TmpString<512> arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    static_cast<WebSocketServer *>(ptr)->disconnect_peer(arg1_in, arg2_in, arg3_in);
}

MonoString* godot_icall_WebSocketServer_get_bind_ip_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WebSocketServer *>(ptr)->get_bind_ip();
    return GDMonoMarshal::mono_string_from_godot(String(ret));
}

void godot_icall_WebSocketServer_set_bind_ip_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<WebSocketServer *>(ptr)->set_bind_ip(IP_Address(arg1_in));
}

MonoObject* godot_icall_WebSocketServer_get_private_key_bd0a1107(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WebSocketServer *>(ptr)->get_private_key();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_WebSocketServer_set_private_key_e283665(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<WebSocketServer *>(ptr)->set_private_key(AutoRef(arg1));
}

MonoObject* godot_icall_WebSocketServer_get_ssl_certificate_6d75c24e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WebSocketServer *>(ptr)->get_ssl_certificate();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_WebSocketServer_set_ssl_certificate_bfdc671e(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<WebSocketServer *>(ptr)->set_ssl_certificate(AutoRef(arg1));
}

MonoObject* godot_icall_WebSocketServer_get_ca_chain_6d75c24e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WebSocketServer *>(ptr)->get_ca_chain();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_WebSocketServer_set_ca_chain_bfdc671e(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<WebSocketServer *>(ptr)->set_ca_chain(AutoRef(arg1));
}

Object* godot_icall_WebSocketServer_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "WebSocketServer")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_WindowDialog_set_title_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<WindowDialog *>(ptr)->set_title(arg1_in);
}

MonoString* godot_icall_WindowDialog_get_title_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WindowDialog *>(ptr)->get_title();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_WindowDialog_set_resizable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<WindowDialog *>(ptr)->set_resizable(arg1_in);
}

MonoBoolean godot_icall_WindowDialog_get_resizable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<WindowDialog *>(ptr)->get_resizable();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall_WindowDialog_get_close_button_d79e1b6a(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WindowDialog *>(ptr)->get_close_button();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Object* godot_icall_WindowDialog_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "WindowDialog")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

RID* godot_icall_World_get_space_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<World *>(ptr)->get_space();
    return memnew(RID(ret));
}

RID* godot_icall_World_get_scenario_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<World *>(ptr)->get_scenario();
    return memnew(RID(ret));
}

void godot_icall_World_set_environment_5a081814(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<World *>(ptr)->set_environment(AutoRef(arg1));
}

MonoObject* godot_icall_World_get_environment_8929e758(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<World *>(ptr)->get_environment();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

void godot_icall_World_set_fallback_environment_5a081814(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<World *>(ptr)->set_fallback_environment(AutoRef(arg1));
}

MonoObject* godot_icall_World_get_fallback_environment_8929e758(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<World *>(ptr)->get_fallback_environment();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall_World_get_direct_space_state_bfc60632(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<World *>(ptr)->get_direct_space_state();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Object* godot_icall_World_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "World")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

RID* godot_icall_World2D_get_canvas_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<World2D *>(ptr)->get_canvas();
    return memnew(RID(ret));
}

RID* godot_icall_World2D_get_space_6623661e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<World2D *>(ptr)->get_space();
    return memnew(RID(ret));
}

MonoObject* godot_icall_World2D_get_direct_space_state_f8934848(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<World2D *>(ptr)->get_direct_space_state();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Object* godot_icall_World2D_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "World2D")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_WorldEnvironment_set_environment_5a081814(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<WorldEnvironment *>(ptr)->set_environment(AutoRef(arg1));
}

MonoObject* godot_icall_WorldEnvironment_get_environment_8929e758(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<WorldEnvironment *>(ptr)->get_environment();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall_WorldEnvironment_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "WorldEnvironment")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_X509Certificate_save_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<X509Certificate *>(ptr)->save(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_X509Certificate_load_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<X509Certificate *>(ptr)->load(arg1_in);
    return (int32_t)ret;
}

Object* godot_icall_X509Certificate_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "X509Certificate")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall_XMLParser_read_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<XMLParser *>(ptr)->read();
    return (int32_t)ret;
}

int32_t godot_icall_XMLParser_get_node_type_622cc76d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<XMLParser *>(ptr)->get_node_type();
    return (int32_t)ret;
}

MonoString* godot_icall_XMLParser_get_node_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<XMLParser *>(ptr)->get_node_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_XMLParser_get_node_data_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<XMLParser *>(ptr)->get_node_data();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall_XMLParser_get_node_offset_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<XMLParser *>(ptr)->get_node_offset();
    *arg_ret = (uint64_t)ret;
}

int32_t godot_icall_XMLParser_get_attribute_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<XMLParser *>(ptr)->get_attribute_count();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall_XMLParser_get_attribute_name_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<XMLParser *>(ptr)->get_attribute_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_XMLParser_get_attribute_value_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<XMLParser *>(ptr)->get_attribute_value(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_XMLParser_has_attribute_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<XMLParser *>(ptr)->has_attribute(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall_XMLParser_get_named_attribute_value_98465fb(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<XMLParser *>(ptr)->get_attribute_value(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall_XMLParser_get_named_attribute_value_safe_98465fb(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<XMLParser *>(ptr)->get_attribute_value_safe(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall_XMLParser_is_empty_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<XMLParser *>(ptr)->is_empty();
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall_XMLParser_get_current_line_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<XMLParser *>(ptr)->get_current_line();
    return static_cast<int32_t>(ret);
}

void godot_icall_XMLParser_skip_section_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<XMLParser *>(ptr)->skip_section();
}

int32_t godot_icall_XMLParser_seek_c719a68b(Object * ptr, uint64_t* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int64_t arg1_in = static_cast<int64_t>(*arg1);
    auto ret = static_cast<XMLParser *>(ptr)->seek(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_XMLParser_open_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<XMLParser *>(ptr)->open(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall_XMLParser_open_buffer_4d7ce2f(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    PoolByteArray arg1_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg1);
    auto ret = static_cast<XMLParser *>(ptr)->open_buffer(arg1_in);
    return (int32_t)ret;
}

Object* godot_icall_XMLParser_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "XMLParser")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall_YSort_set_sort_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<YSort *>(ptr)->set_sort_enabled(arg1_in);
}

MonoBoolean godot_icall_YSort_is_sort_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<YSort *>(ptr)->is_sort_enabled();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall_YSort_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "YSort")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

MonoArray* godot_icall__ClassDB_get_class_list_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_ClassDB *>(ptr)->get_class_list();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

MonoArray* godot_icall__ClassDB_get_inheriters_from_class_8d6765ca(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_ClassDB *>(ptr)->get_inheriters_from_class(arg1_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

MonoString* godot_icall__ClassDB_get_parent_class_67c8521(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_ClassDB *>(ptr)->get_parent_class(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall__ClassDB_class_exists_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_ClassDB *>(ptr)->class_exists(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__ClassDB_is_parent_class_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<_ClassDB *>(ptr)->is_parent_class(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__ClassDB_can_instance_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_ClassDB *>(ptr)->can_instance(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall__ClassDB_instance_6732bfd8(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_ClassDB *>(ptr)->instance(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoBoolean godot_icall__ClassDB_class_has_signal_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<_ClassDB *>(ptr)->has_signal(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

Dictionary* godot_icall__ClassDB_class_get_signal_aa535a77(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<_ClassDB *>(ptr)->get_signal(arg1_in, arg2_in);
    return memnew(Dictionary(ret));
}

Array* godot_icall__ClassDB_class_get_signal_list_814ea100(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<_ClassDB *>(ptr)->get_signal_list(arg1_in, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall__ClassDB_class_get_property_list_814ea100(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<_ClassDB *>(ptr)->get_property_list(arg1_in, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

MonoObject* godot_icall__ClassDB_class_get_property_132a6665(Object * ptr, Object * arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<_ClassDB *>(ptr)->get_property((Object*)arg1, arg2_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

int32_t godot_icall__ClassDB_class_set_property_a1f236c0(Object * ptr, Object * arg1, MonoString* arg2, MonoObject* arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    auto ret = static_cast<_ClassDB *>(ptr)->set_property((Object*)arg1, arg2_in, arg3_in);
    return (int32_t)ret;
}

MonoBoolean godot_icall__ClassDB_class_has_method_c27952a0(Object * ptr, MonoString* arg1, MonoString* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    bool arg3_in = static_cast<bool>(arg3);
    auto ret = static_cast<_ClassDB *>(ptr)->has_method(arg1_in, arg2_in, arg3_in);
    return static_cast<MonoBoolean>(ret);
}

Array* godot_icall__ClassDB_class_get_method_list_814ea100(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<_ClassDB *>(ptr)->get_method_list(arg1_in, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

MonoArray* godot_icall__ClassDB_class_get_integer_constant_list_90e40ce(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<_ClassDB *>(ptr)->get_integer_constant_list(arg1_in, arg2_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

MonoBoolean godot_icall__ClassDB_class_has_integer_constant_db6c1197(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<_ClassDB *>(ptr)->has_integer_constant(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall__ClassDB_class_get_integer_constant_7185a084(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<_ClassDB *>(ptr)->get_integer_constant(arg1_in, arg2_in);
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall__ClassDB_class_get_category_67c8521(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_ClassDB *>(ptr)->get_category(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall__ClassDB_is_class_enabled_bee64043(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_ClassDB *>(ptr)->is_class_enabled(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall__ClassDB_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("ClassDB");
}

int32_t godot_icall__Directory_open_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_Directory *>(ptr)->open(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall__Directory_list_dir_begin_cd09fa4a(Object * ptr, MonoBoolean arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    bool arg1_in = static_cast<bool>(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<_Directory *>(ptr)->list_dir_begin(arg1_in, arg2_in);
    return (int32_t)ret;
}

MonoString* godot_icall__Directory_get_next_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Directory *>(ptr)->get_next();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall__Directory_current_is_dir_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_Directory *>(ptr)->current_is_dir();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__Directory_list_dir_end_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_Directory *>(ptr)->list_dir_end();
}

int32_t godot_icall__Directory_get_drive_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_Directory *>(ptr)->get_drive_count();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall__Directory_get_drive_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<_Directory *>(ptr)->get_drive(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall__Directory_get_current_drive_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_Directory *>(ptr)->get_current_drive();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall__Directory_change_dir_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_Directory *>(ptr)->change_dir(arg1_in);
    return (int32_t)ret;
}

MonoString* godot_icall__Directory_get_current_dir_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Directory *>(ptr)->get_current_dir();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall__Directory_make_dir_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_Directory *>(ptr)->make_dir(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall__Directory_make_dir_recursive_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_Directory *>(ptr)->make_dir_recursive(arg1_in);
    return (int32_t)ret;
}

MonoBoolean godot_icall__Directory_file_exists_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_Directory *>(ptr)->file_exists(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__Directory_dir_exists_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_Directory *>(ptr)->dir_exists(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall__Directory_get_space_left_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_Directory *>(ptr)->get_space_left();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall__Directory_copy_ce7ee84(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<_Directory *>(ptr)->copy(arg1_in, arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall__Directory_rename_ce7ee84(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<_Directory *>(ptr)->rename(arg1_in, arg2_in);
    return (int32_t)ret;
}

int32_t godot_icall__Directory_remove_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_Directory *>(ptr)->remove(arg1_in);
    return (int32_t)ret;
}

Object* godot_icall_Directory_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "_Directory")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall__Engine_set_iterations_per_second_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<_Engine *>(ptr)->set_iterations_per_second(arg1_in);
}

int32_t godot_icall__Engine_get_iterations_per_second_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_Engine *>(ptr)->get_iterations_per_second();
    return static_cast<int32_t>(ret);
}

void godot_icall__Engine_set_physics_jitter_fix_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<_Engine *>(ptr)->set_physics_jitter_fix(arg1_in);
}

void godot_icall__Engine_get_physics_jitter_fix_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_Engine *>(ptr)->get_physics_jitter_fix();
    *arg_ret = (float)ret;
}

void godot_icall__Engine_get_physics_interpolation_fraction_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_Engine *>(ptr)->get_physics_interpolation_fraction();
    *arg_ret = (float)ret;
}

void godot_icall__Engine_set_target_fps_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<_Engine *>(ptr)->set_target_fps(arg1_in);
}

int32_t godot_icall__Engine_get_target_fps_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_Engine *>(ptr)->get_target_fps();
    return static_cast<int32_t>(ret);
}

void godot_icall__Engine_set_time_scale_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<_Engine *>(ptr)->set_time_scale(arg1_in);
}

void godot_icall__Engine_get_time_scale_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_Engine *>(ptr)->get_time_scale();
    *arg_ret = (float)ret;
}

int32_t godot_icall__Engine_get_frames_drawn_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_Engine *>(ptr)->get_frames_drawn();
    return static_cast<int32_t>(ret);
}

void godot_icall__Engine_get_frames_per_second_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_Engine *>(ptr)->get_frames_per_second();
    *arg_ret = (float)ret;
}

void godot_icall__Engine_get_physics_frames_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_Engine *>(ptr)->get_physics_frames();
    *arg_ret = (uint64_t)ret;
}

void godot_icall__Engine_get_idle_frames_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_Engine *>(ptr)->get_idle_frames();
    *arg_ret = (uint64_t)ret;
}

MonoObject* godot_icall__Engine_get_main_loop_6f099ddc(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Engine *>(ptr)->get_main_loop();
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

Dictionary* godot_icall__Engine_get_version_info_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Engine *>(ptr)->get_version_info();
    return memnew(Dictionary(ret));
}

Dictionary* godot_icall__Engine_get_author_info_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Engine *>(ptr)->get_author_info();
    return memnew(Dictionary(ret));
}

Array* godot_icall__Engine_get_copyright_info_d80382d4(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Engine *>(ptr)->get_copyright_info();
    return memnew(Array(Variant::from(ret)));
}

Dictionary* godot_icall__Engine_get_donor_info_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Engine *>(ptr)->get_donor_info();
    return memnew(Dictionary(ret));
}

Dictionary* godot_icall__Engine_get_license_info_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Engine *>(ptr)->get_license_info();
    return memnew(Dictionary(ret));
}

MonoString* godot_icall__Engine_get_license_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Engine *>(ptr)->get_license_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall__Engine_is_in_physics_frame_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_Engine *>(ptr)->is_in_physics_frame();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__Engine_has_singleton_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_Engine *>(ptr)->has_singleton(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall__Engine_get_singleton_d254541d(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_Engine *>(ptr)->get_singleton_object(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret);
}

void godot_icall__Engine_set_editor_hint_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_Engine *>(ptr)->set_editor_hint(arg1_in);
}

MonoBoolean godot_icall__Engine_is_editor_hint_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_Engine *>(ptr)->is_editor_hint();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall__Engine_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("Engine");
}

int32_t godot_icall__File_open_encrypted_35d48b4b(Object * ptr, MonoString* arg1, int32_t arg2, MonoArray* arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int64_t arg2_in = (int64_t)arg2;
    auto arg3_in = GDMonoMarshal::mono_array_to_NC_VecByte(arg3);
    auto ret = static_cast<_File *>(ptr)->open_encrypted(arg1_in, (_File::ModeFlags)arg2_in, arg3_in);
    return (int32_t)ret;
}

int32_t godot_icall__File_open_encrypted_with_pass_cc2b57d9(Object * ptr, MonoString* arg1, int32_t arg2, MonoString* arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int64_t arg2_in = (int64_t)arg2;
    TmpString<512> arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    auto ret = static_cast<_File *>(ptr)->open_encrypted_pass(arg1_in, (_File::ModeFlags)arg2_in, arg3_in);
    return (int32_t)ret;
}

int32_t godot_icall__File_open_compressed_f6661a0b(Object * ptr, MonoString* arg1, int32_t arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int64_t arg2_in = (int64_t)arg2;
    int64_t arg3_in = (int64_t)arg3;
    auto ret = static_cast<_File *>(ptr)->open_compressed(arg1_in, (_File::ModeFlags)arg2_in, (_File::CompressionMode)arg3_in);
    return (int32_t)ret;
}

int32_t godot_icall__File_open_6ffc7fd9(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int64_t arg2_in = (int64_t)arg2;
    auto ret = static_cast<_File *>(ptr)->open(arg1_in, (_File::ModeFlags)arg2_in);
    return (int32_t)ret;
}

void godot_icall__File_close_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_File *>(ptr)->close();
}

MonoString* godot_icall__File_get_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_File *>(ptr)->get_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall__File_get_path_absolute_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_File *>(ptr)->get_path_absolute();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall__File_is_open_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_File *>(ptr)->is_open();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__File_seek_f9161991(Object * ptr, int64_t* arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = static_cast<int64_t>(*arg1);
    static_cast<_File *>(ptr)->seek(arg1_in);
}

void godot_icall__File_seek_end_f9161991(Object * ptr, int64_t* arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = static_cast<int64_t>(*arg1);
    static_cast<_File *>(ptr)->seek_end(arg1_in);
}

void godot_icall__File_get_position_282fe8d3(Object * ptr, int64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = int64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_File *>(ptr)->get_position();
    *arg_ret = static_cast<int64_t>(ret);
}

void godot_icall__File_get_len_282fe8d3(Object * ptr, int64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = int64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_File *>(ptr)->get_len();
    *arg_ret = static_cast<int64_t>(ret);
}

MonoBoolean godot_icall__File_eof_reached_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_File *>(ptr)->eof_reached();
    return static_cast<MonoBoolean>(ret);
}

uint8_t godot_icall__File_get_8_6236014f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint8_t());
    auto ret = static_cast<_File *>(ptr)->get_8();
    return static_cast<uint8_t>(ret);
}

uint16_t godot_icall__File_get_16_c0943588(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint16_t());
    auto ret = static_cast<_File *>(ptr)->get_16();
    return static_cast<uint16_t>(ret);
}

uint32_t godot_icall__File_get_32_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<_File *>(ptr)->get_32();
    return static_cast<uint32_t>(ret);
}

void godot_icall__File_get_64_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_File *>(ptr)->get_64();
    *arg_ret = (uint64_t)ret;
}

void godot_icall__File_get_float_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_File *>(ptr)->get_float();
    *arg_ret = (float)ret;
}

void godot_icall__File_get_double_27c6b046(Object * ptr, double* arg_ret) {
    if (ptr == nullptr) { *arg_ret = double(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_File *>(ptr)->get_double();
    *arg_ret = (double)ret;
}

void godot_icall__File_get_real_4edcd7a9(Object * ptr, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_File *>(ptr)->get_real();
    *arg_ret = (float)ret;
}

MonoArray* godot_icall__File_get_buffer_f38b97f6(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<_File *>(ptr)->get_buffer(arg1_in);
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

MonoString* godot_icall__File_get_line_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_File *>(ptr)->get_line();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoArray* godot_icall__File_get_csv_line_befa5dfb(Object * ptr, int8_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int8_t arg1_in = static_cast<int8_t>(arg1);
    auto ret = static_cast<_File *>(ptr)->get_csv_line(arg1_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

MonoString* godot_icall__File_get_as_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_File *>(ptr)->get_as_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall__File_get_md5_98465fb(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_File *>(ptr)->get_md5(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall__File_get_sha256_98465fb(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_File *>(ptr)->get_sha256(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall__File_get_endian_swap_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_File *>(ptr)->get_endian_swap();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__File_set_endian_swap_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_File *>(ptr)->set_endian_swap(arg1_in);
}

int32_t godot_icall__File_get_error_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_File *>(ptr)->get_error();
    return (int32_t)ret;
}

MonoObject* godot_icall__File_get_var_f23997c6(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<_File *>(ptr)->get_var(arg1_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

void godot_icall__File_store_8_a31c261d(Object * ptr, uint8_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint8_t arg1_in = static_cast<uint8_t>(arg1);
    static_cast<_File *>(ptr)->store_8(arg1_in);
}

void godot_icall__File_store_16_2b2eae4(Object * ptr, uint16_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint16_t arg1_in = static_cast<uint16_t>(arg1);
    static_cast<_File *>(ptr)->store_16(arg1_in);
}

void godot_icall__File_store_32_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<_File *>(ptr)->store_32(arg1_in);
}

void godot_icall__File_store_64_9d9e6424(Object * ptr, uint64_t* arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = static_cast<int64_t>(*arg1);
    static_cast<_File *>(ptr)->store_64(arg1_in);
}

void godot_icall__File_store_float_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<_File *>(ptr)->store_float(arg1_in);
}

void godot_icall__File_store_double_f96f5126(Object * ptr, double* arg1) {
    ERR_FAIL_NULL(ptr);
    double arg1_in = static_cast<double>(*arg1);
    static_cast<_File *>(ptr)->store_double(arg1_in);
}

void godot_icall__File_store_real_904508bb(Object * ptr, float* arg1) {
    ERR_FAIL_NULL(ptr);
    float arg1_in = static_cast<float>(*arg1);
    static_cast<_File *>(ptr)->store_real(arg1_in);
}

void godot_icall__File_store_buffer_da545cc0(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    PoolByteArray arg1_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg1);
    static_cast<_File *>(ptr)->store_buffer(arg1_in);
}

void godot_icall__File_store_line_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<_File *>(ptr)->store_line(arg1_in);
}

void godot_icall__File_store_csv_line_f0cd17e1(Object * ptr, MonoArray* arg1, int8_t arg2) {
    ERR_FAIL_NULL(ptr);
    PoolStringArray arg1_in = GDMonoMarshal::mono_array_to_PoolStringArray(arg1);
    int8_t arg2_in = static_cast<int8_t>(arg2);
    static_cast<_File *>(ptr)->store_csv_line(arg1_in, arg2_in);
}

void godot_icall__File_store_string_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<_File *>(ptr)->store_string(arg1_in);
}

void godot_icall__File_store_var_aff2c475(Object * ptr, MonoObject* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL(ptr);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    static_cast<_File *>(ptr)->store_var(arg1_in, arg2_in);
}

void godot_icall__File_store_pascal_string_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<_File *>(ptr)->store_pascal_string(arg1_in);
}

MonoString* godot_icall__File_get_pascal_string_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_File *>(ptr)->get_pascal_string();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall__File_file_exists_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_File *>(ptr)->file_exists(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__File_get_modified_time_c22117d4(Object * ptr, MonoString* arg1, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_File *>(ptr)->get_modified_time(arg1_in);
    *arg_ret = (uint64_t)ret;
}

Object* godot_icall_File_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "_File")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

Array* godot_icall__Geometry_build_box_planes_a8643369(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    auto ret = static_cast<_Geometry *>(ptr)->build_box_planes(arg1_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall__Geometry_build_cylinder_planes_595625c0(Object * ptr, float* arg1, float* arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    float arg1_in = static_cast<float>(*arg1);
    float arg2_in = static_cast<float>(*arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int64_t arg4_in = (int64_t)arg4;
    auto ret = static_cast<_Geometry *>(ptr)->build_cylinder_planes(arg1_in, arg2_in, arg3_in, (Vector3::Axis)arg4_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall__Geometry_build_capsule_planes_969e84c3(Object * ptr, float* arg1, float* arg2, int32_t arg3, int32_t arg4, int32_t arg5) {
    ERR_FAIL_NULL_V(ptr, NULL);
    float arg1_in = static_cast<float>(*arg1);
    float arg2_in = static_cast<float>(*arg2);
    int32_t arg3_in = static_cast<int32_t>(arg3);
    int32_t arg4_in = static_cast<int32_t>(arg4);
    int64_t arg5_in = (int64_t)arg5;
    auto ret = static_cast<_Geometry *>(ptr)->build_capsule_planes(arg1_in, arg2_in, arg3_in, arg4_in, (Vector3::Axis)arg5_in);
    return memnew(Array(Variant::from(ret)));
}

void godot_icall__Geometry_segment_intersects_circle_8275e7e7(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3, float* arg4, float* arg_ret) {
    if (ptr == nullptr) { *arg_ret = float(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    float arg4_in = static_cast<float>(*arg4);
    auto ret = static_cast<_Geometry *>(ptr)->segment_intersects_circle(arg1_in, arg2_in, arg3_in, arg4_in);
    *arg_ret = (float)ret;
}

MonoObject* godot_icall__Geometry_segment_intersects_segment_2d_ee12b892(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3, GDMonoMarshal::M_Vector2* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    Vector2 arg4_in = MARSHALLED_IN(Vector2, arg4);
    auto ret = static_cast<_Geometry *>(ptr)->segment_intersects_segment_2d(arg1_in, arg2_in, arg3_in, arg4_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoObject* godot_icall__Geometry_line_intersects_line_2d_ee12b892(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3, GDMonoMarshal::M_Vector2* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    Vector2 arg4_in = MARSHALLED_IN(Vector2, arg4);
    auto ret = static_cast<_Geometry *>(ptr)->line_intersects_line_2d(arg1_in, arg2_in, arg3_in, arg4_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoArray* godot_icall__Geometry_get_closest_points_between_segments_2d_bdafeef(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3, GDMonoMarshal::M_Vector2* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    Vector2 arg4_in = MARSHALLED_IN(Vector2, arg4);
    auto ret = static_cast<_Geometry *>(ptr)->get_closest_points_between_segments_2d(arg1_in, arg2_in, arg3_in, arg4_in);
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

MonoArray* godot_icall__Geometry_get_closest_points_between_segments_2d045432(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, GDMonoMarshal::M_Vector3* arg3, GDMonoMarshal::M_Vector3* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    Vector3 arg3_in = MARSHALLED_IN(Vector3, arg3);
    Vector3 arg4_in = MARSHALLED_IN(Vector3, arg4);
    auto ret = static_cast<_Geometry *>(ptr)->get_closest_points_between_segments(arg1_in, arg2_in, arg3_in, arg4_in);
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

void godot_icall__Geometry_get_closest_point_to_segment_2d_c19946b1(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    auto ret = static_cast<_Geometry *>(ptr)->get_closest_point_to_segment_2d(arg1_in, arg2_in, arg3_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall__Geometry_get_closest_point_to_segment_c19d6e37(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, GDMonoMarshal::M_Vector3* arg3, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    Vector3 arg3_in = MARSHALLED_IN(Vector3, arg3);
    auto ret = static_cast<_Geometry *>(ptr)->get_closest_point_to_segment(arg1_in, arg2_in, arg3_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

void godot_icall__Geometry_get_closest_point_to_segment_uncapped_2d_c19946b1(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    auto ret = static_cast<_Geometry *>(ptr)->get_closest_point_to_segment_uncapped_2d(arg1_in, arg2_in, arg3_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall__Geometry_get_closest_point_to_segment_uncapped_c19d6e37(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, GDMonoMarshal::M_Vector3* arg3, GDMonoMarshal::M_Vector3* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector3(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    Vector3 arg3_in = MARSHALLED_IN(Vector3, arg3);
    auto ret = static_cast<_Geometry *>(ptr)->get_closest_point_to_segment_uncapped(arg1_in, arg2_in, arg3_in);
    *arg_ret = MARSHALLED_OUT(Vector3, ret);
}

int32_t godot_icall__Geometry_get_uv84_normal_bit_3c0b8d04(Object * ptr, GDMonoMarshal::M_Vector3* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    auto ret = static_cast<_Geometry *>(ptr)->get_uv84_normal_bit(arg1_in);
    return static_cast<int32_t>(ret);
}

MonoObject* godot_icall__Geometry_ray_intersects_triangle_cd24de23(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, GDMonoMarshal::M_Vector3* arg3, GDMonoMarshal::M_Vector3* arg4, GDMonoMarshal::M_Vector3* arg5) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    Vector3 arg3_in = MARSHALLED_IN(Vector3, arg3);
    Vector3 arg4_in = MARSHALLED_IN(Vector3, arg4);
    Vector3 arg5_in = MARSHALLED_IN(Vector3, arg5);
    auto ret = static_cast<_Geometry *>(ptr)->ray_intersects_triangle(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoObject* godot_icall__Geometry_segment_intersects_triangle_cd24de23(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, GDMonoMarshal::M_Vector3* arg3, GDMonoMarshal::M_Vector3* arg4, GDMonoMarshal::M_Vector3* arg5) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    Vector3 arg3_in = MARSHALLED_IN(Vector3, arg3);
    Vector3 arg4_in = MARSHALLED_IN(Vector3, arg4);
    Vector3 arg5_in = MARSHALLED_IN(Vector3, arg5);
    auto ret = static_cast<_Geometry *>(ptr)->segment_intersects_triangle(arg1_in, arg2_in, arg3_in, arg4_in, arg5_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoArray* godot_icall__Geometry_segment_intersects_sphere_9e8a6e9c(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, GDMonoMarshal::M_Vector3* arg3, float* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    Vector3 arg3_in = MARSHALLED_IN(Vector3, arg3);
    float arg4_in = static_cast<float>(*arg4);
    auto ret = static_cast<_Geometry *>(ptr)->segment_intersects_sphere(arg1_in, arg2_in, arg3_in, arg4_in);
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

MonoArray* godot_icall__Geometry_segment_intersects_cylinder_62988493(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, float* arg3, float* arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    float arg3_in = static_cast<float>(*arg3);
    float arg4_in = static_cast<float>(*arg4);
    auto ret = static_cast<_Geometry *>(ptr)->segment_intersects_cylinder(arg1_in, arg2_in, arg3_in, arg4_in);
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

MonoArray* godot_icall__Geometry_segment_intersects_convex_21e13743(Object * ptr, GDMonoMarshal::M_Vector3* arg1, GDMonoMarshal::M_Vector3* arg2, Array* arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Vector3 arg1_in = MARSHALLED_IN(Vector3, arg1);
    Vector3 arg2_in = MARSHALLED_IN(Vector3, arg2);
    auto ret = static_cast<_Geometry *>(ptr)->segment_intersects_convex(arg1_in, arg2_in, Variant(*arg3).as<PoolVector<Plane>>());
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

MonoBoolean godot_icall__Geometry_point_is_inside_triangle_1cbacda9(Object * ptr, GDMonoMarshal::M_Vector2* arg1, GDMonoMarshal::M_Vector2* arg2, GDMonoMarshal::M_Vector2* arg3, GDMonoMarshal::M_Vector2* arg4) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    Vector2 arg2_in = MARSHALLED_IN(Vector2, arg2);
    Vector2 arg3_in = MARSHALLED_IN(Vector2, arg3);
    Vector2 arg4_in = MARSHALLED_IN(Vector2, arg4);
    auto ret = static_cast<_Geometry *>(ptr)->point_is_inside_triangle(arg1_in, arg2_in, arg3_in, arg4_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__Geometry_is_polygon_clockwise_3666f620(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    auto ret = static_cast<_Geometry *>(ptr)->is_polygon_clockwise(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__Geometry_is_point_in_polygon_d73c54f0(Object * ptr, GDMonoMarshal::M_Vector2* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg2);
    auto ret = static_cast<_Geometry *>(ptr)->is_point_in_polygon(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

MonoArray* godot_icall__Geometry_triangulate_polygon_2c4d204d(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Geometry *>(ptr)->triangulate_polygon(Variant(*arg1).as<Vector<Vector2>>());
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

MonoArray* godot_icall__Geometry_triangulate_delaunay_2d_2c4d204d(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Geometry *>(ptr)->triangulate_delaunay_2d(Variant(*arg1).as<Vector<Vector2>>());
    return GDMonoMarshal::PoolIntArray_to_mono_array(ret);
}

MonoArray* godot_icall__Geometry_convex_hull_2d_1dab5517(Object * ptr, Array* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Geometry *>(ptr)->convex_hull_2d(Variant(*arg1).as<Vector<Vector2>>());
    return GDMonoMarshal::PoolVector2Array_to_mono_array(ret);
}

MonoArray* godot_icall__Geometry_clip_polygon_b8c3916f(Object * ptr, Array* arg1, GDMonoMarshal::M_Plane* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Plane arg2_in = MARSHALLED_IN(Plane, arg2);
    auto ret = static_cast<_Geometry *>(ptr)->clip_polygon(Variant(*arg1).as<Vector<Vector3>>(), arg2_in);
    return GDMonoMarshal::PoolVector3Array_to_mono_array(ret);
}

Array* godot_icall__Geometry_merge_polygons_2d_c65fd09a(Object * ptr, MonoArray* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg2);
    auto ret = static_cast<_Geometry *>(ptr)->merge_polygons_2d(arg1_in, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall__Geometry_clip_polygons_2d_c65fd09a(Object * ptr, MonoArray* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg2);
    auto ret = static_cast<_Geometry *>(ptr)->clip_polygons_2d(arg1_in, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall__Geometry_intersect_polygons_2d_c65fd09a(Object * ptr, MonoArray* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg2);
    auto ret = static_cast<_Geometry *>(ptr)->intersect_polygons_2d(arg1_in, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall__Geometry_exclude_polygons_2d_c65fd09a(Object * ptr, MonoArray* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg2);
    auto ret = static_cast<_Geometry *>(ptr)->exclude_polygons_2d(arg1_in, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall__Geometry_clip_polyline_with_polygon_2d_c65fd09a(Object * ptr, MonoArray* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg2);
    auto ret = static_cast<_Geometry *>(ptr)->clip_polyline_with_polygon_2d(arg1_in, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall__Geometry_intersect_polyline_with_polygon_2d_c65fd09a(Object * ptr, MonoArray* arg1, MonoArray* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg2);
    auto ret = static_cast<_Geometry *>(ptr)->intersect_polyline_with_polygon_2d(arg1_in, arg2_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall__Geometry_offset_polygon_2d_5892e3d2(Object * ptr, MonoArray* arg1, float* arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    float arg2_in = static_cast<float>(*arg2);
    int64_t arg3_in = (int64_t)arg3;
    auto ret = static_cast<_Geometry *>(ptr)->offset_polygon_2d(arg1_in, arg2_in, (_Geometry::PolyJoinType)arg3_in);
    return memnew(Array(Variant::from(ret)));
}

Array* godot_icall__Geometry_offset_polyline_2d_987095b2(Object * ptr, MonoArray* arg1, float* arg2, int32_t arg3, int32_t arg4) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    float arg2_in = static_cast<float>(*arg2);
    int64_t arg3_in = (int64_t)arg3;
    int64_t arg4_in = (int64_t)arg4;
    auto ret = static_cast<_Geometry *>(ptr)->offset_polyline_2d(arg1_in, arg2_in, (_Geometry::PolyJoinType)arg3_in, (_Geometry::PolyEndType)arg4_in);
    return memnew(Array(Variant::from(ret)));
}

Dictionary* godot_icall__Geometry_make_atlas_e041fd57(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecVector2(arg1);
    auto ret = static_cast<_Geometry *>(ptr)->make_atlas(arg1_in);
    return memnew(Dictionary(ret));
}

Object* godot_icall__Geometry_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("Geometry");
}

void godot_icall__GodotSharp_attach_thread_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_GodotSharp *>(ptr)->attach_thread();
}

void godot_icall__GodotSharp_detach_thread_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_GodotSharp *>(ptr)->detach_thread();
}

int32_t godot_icall__GodotSharp_get_domain_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_GodotSharp *>(ptr)->get_domain_id();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall__GodotSharp_get_scripts_domain_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_GodotSharp *>(ptr)->get_scripts_domain_id();
    return static_cast<int32_t>(ret);
}

MonoBoolean godot_icall__GodotSharp_is_scripts_domain_loaded_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_GodotSharp *>(ptr)->is_scripts_domain_loaded();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__GodotSharp_is_domain_finalizing_for_unload_7f690926(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<_GodotSharp *>(ptr)->is_domain_finalizing_for_unload(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__GodotSharp_is_runtime_shutting_down_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_GodotSharp *>(ptr)->is_runtime_shutting_down();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__GodotSharp_is_runtime_initialized_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_GodotSharp *>(ptr)->is_runtime_initialized();
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall__GodotSharp_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("GodotSharp");
}

MonoString* godot_icall__JSON_print_599d1e1c(Object * ptr, MonoObject* arg1, MonoString* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    bool arg3_in = static_cast<bool>(arg3);
    auto ret = static_cast<_JSON *>(ptr)->print(arg1_in, arg2_in, arg3_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoObject* godot_icall__JSON_parse_eaebb7e9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<_JSON *>(ptr)->parse(arg1_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

Object* godot_icall__JSON_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("JSON");
}

MonoString* godot_icall__Marshalls_variant_to_base64_f57e262a(Object * ptr, MonoObject* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    Variant arg1_in = GDMonoMarshal::mono_object_to_variant(arg1);
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<_Marshalls *>(ptr)->variant_to_base64(arg1_in, arg2_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoObject* godot_icall__Marshalls_base64_to_variant_264646a7(Object * ptr, MonoString* arg1, MonoBoolean arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    bool arg2_in = static_cast<bool>(arg2);
    auto ret = static_cast<_Marshalls *>(ptr)->base64_to_variant(arg1_in, arg2_in);
    return GDMonoMarshal::variant_to_mono_object(ret);
}

MonoString* godot_icall__Marshalls_raw_to_base64_2b190946(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    PoolByteArray arg1_in = GDMonoMarshal::mono_array_to_PoolByteArray(arg1);
    auto ret = static_cast<_Marshalls *>(ptr)->raw_to_base64(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoArray* godot_icall__Marshalls_base64_to_raw_ceb3ce17(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_Marshalls *>(ptr)->base64_to_raw(arg1_in);
    return GDMonoMarshal::PoolByteArray_to_mono_array(ret);
}

MonoString* godot_icall__Marshalls_utf8_to_base64_98465fb(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_Marshalls *>(ptr)->utf8_to_base64(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall__Marshalls_base64_to_utf8_98465fb(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_Marshalls *>(ptr)->base64_to_utf8(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

Object* godot_icall__Marshalls_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("Marshalls");
}

void godot_icall__Mutex_lock_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_Mutex *>(ptr)->lock();
}

int32_t godot_icall__Mutex_try_lock_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_Mutex *>(ptr)->try_lock();
    return (int32_t)ret;
}

void godot_icall__Mutex_unlock_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_Mutex *>(ptr)->unlock();
}

Object* godot_icall_Mutex_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "_Mutex")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

void godot_icall__OS_set_clipboard_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<_OS *>(ptr)->set_clipboard(arg1_in);
}

MonoString* godot_icall__OS_get_clipboard_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_clipboard();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall__OS_global_menu_add_item_2a689c62(Object * ptr, MonoString* arg1, MonoString* arg2, MonoObject* arg3, MonoObject* arg4) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    Variant arg4_in = GDMonoMarshal::mono_object_to_variant(arg4);
    static_cast<_OS *>(ptr)->global_menu_add_item(arg1_in, arg2_in, arg3_in, arg4_in);
}

void godot_icall__OS_global_menu_add_separator_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<_OS *>(ptr)->global_menu_add_separator(arg1_in);
}

void godot_icall__OS_global_menu_remove_item_bb2d80b6(Object * ptr, MonoString* arg1, int32_t arg2) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int32_t arg2_in = static_cast<int32_t>(arg2);
    static_cast<_OS *>(ptr)->global_menu_remove_item(arg1_in, arg2_in);
}

void godot_icall__OS_global_menu_clear_2f29e819(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    StringName arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<_OS *>(ptr)->global_menu_clear(arg1_in);
}

int32_t godot_icall__OS_get_video_driver_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_OS *>(ptr)->get_video_driver_count();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall__OS_get_video_driver_name_6df8797d(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<_OS *>(ptr)->get_video_driver_name((_OS::VideoDriver)arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall__OS_get_current_video_driver_468c9b8f(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_OS *>(ptr)->get_current_video_driver();
    return (int32_t)ret;
}

int32_t godot_icall__OS_get_audio_driver_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_OS *>(ptr)->get_audio_driver_count();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall__OS_get_audio_driver_name_44fc4c5a(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<_OS *>(ptr)->get_audio_driver_name(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoArray* godot_icall__OS_get_connected_midi_inputs_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_connected_midi_inputs();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall__OS_open_midi_inputs_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_OS *>(ptr)->open_midi_inputs();
}

void godot_icall__OS_close_midi_inputs_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_OS *>(ptr)->close_midi_inputs();
}

int32_t godot_icall__OS_get_screen_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_OS *>(ptr)->get_screen_count();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall__OS_get_current_screen_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_OS *>(ptr)->get_current_screen();
    return static_cast<int32_t>(ret);
}

void godot_icall__OS_set_current_screen_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<_OS *>(ptr)->set_current_screen(arg1_in);
}

void godot_icall__OS_get_screen_position_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<_OS *>(ptr)->get_screen_position(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall__OS_get_screen_size_23728632(Object * ptr, int32_t arg1, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<_OS *>(ptr)->get_screen_size(arg1_in);
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

int32_t godot_icall__OS_get_screen_dpi_b835dea5(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<_OS *>(ptr)->get_screen_dpi(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall__OS_get_window_position_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_window_position();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall__OS_set_window_position_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<_OS *>(ptr)->set_window_position(arg1_in);
}

void godot_icall__OS_get_window_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_window_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall__OS_get_max_window_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_max_window_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall__OS_get_min_window_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_min_window_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall__OS_set_max_window_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<_OS *>(ptr)->set_max_window_size(arg1_in);
}

void godot_icall__OS_set_min_window_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<_OS *>(ptr)->set_min_window_size(arg1_in);
}

void godot_icall__OS_set_window_size_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<_OS *>(ptr)->set_window_size(arg1_in);
}

void godot_icall__OS_get_window_safe_area_6344c073(Object * ptr, GDMonoMarshal::M_Rect2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Rect2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_window_safe_area();
    *arg_ret = MARSHALLED_OUT(Rect2, ret);
}

void godot_icall__OS_set_window_fullscreen_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_window_fullscreen(arg1_in);
}

MonoBoolean godot_icall__OS_is_window_fullscreen_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_window_fullscreen();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_set_window_resizable_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_window_resizable(arg1_in);
}

MonoBoolean godot_icall__OS_is_window_resizable_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_window_resizable();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_set_window_minimized_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_window_minimized(arg1_in);
}

MonoBoolean godot_icall__OS_is_window_minimized_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_window_minimized();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_set_window_maximized_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_window_maximized(arg1_in);
}

MonoBoolean godot_icall__OS_is_window_maximized_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_window_maximized();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_set_window_always_on_top_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_window_always_on_top(arg1_in);
}

MonoBoolean godot_icall__OS_is_window_always_on_top_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_window_always_on_top();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__OS_is_window_focused_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_window_focused();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_request_attention_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_OS *>(ptr)->request_attention();
}

void godot_icall__OS_get_real_window_size_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_real_window_size();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

void godot_icall__OS_center_window_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_OS *>(ptr)->center_window();
}

void godot_icall__OS_move_window_to_foreground_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_OS *>(ptr)->move_window_to_foreground();
}

void godot_icall__OS_set_borderless_window_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_borderless_window(arg1_in);
}

MonoBoolean godot_icall__OS_get_borderless_window_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->get_borderless_window();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__OS_get_window_per_pixel_transparency_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->get_window_per_pixel_transparency_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_set_window_per_pixel_transparency_enabled_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_window_per_pixel_transparency_enabled(arg1_in);
}

void godot_icall__OS_set_ime_active_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_ime_active(arg1_in);
}

void godot_icall__OS_set_ime_position_6df7471e(Object * ptr, GDMonoMarshal::M_Vector2* arg1) {
    ERR_FAIL_NULL(ptr);
    Vector2 arg1_in = MARSHALLED_IN(Vector2, arg1);
    static_cast<_OS *>(ptr)->set_ime_position(arg1_in);
}

void godot_icall__OS_get_ime_selection_9b4ea24e(Object * ptr, GDMonoMarshal::M_Vector2* arg_ret) {
    if (ptr == nullptr) { *arg_ret = GDMonoMarshal::M_Vector2(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_ime_selection();
    *arg_ret = MARSHALLED_OUT(Vector2, ret);
}

MonoString* godot_icall__OS_get_ime_text_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_ime_text();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

void godot_icall__OS_set_screen_orientation_22364936(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int64_t arg1_in = (int64_t)arg1;
    static_cast<_OS *>(ptr)->set_screen_orientation((_OS::ScreenOrientation)arg1_in);
}

int32_t godot_icall__OS_get_screen_orientation_fcb46861(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_OS *>(ptr)->get_screen_orientation();
    return (int32_t)ret;
}

void godot_icall__OS_set_keep_screen_on_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_keep_screen_on(arg1_in);
}

MonoBoolean godot_icall__OS_is_keep_screen_on_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_keep_screen_on();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__OS_has_touchscreen_ui_hint_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->has_touchscreen_ui_hint();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_set_window_title_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<_OS *>(ptr)->set_window_title(arg1_in);
}

void godot_icall__OS_set_low_processor_usage_mode_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_low_processor_usage_mode(arg1_in);
}

MonoBoolean godot_icall__OS_is_in_low_processor_usage_mode_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_in_low_processor_usage_mode();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_set_low_processor_usage_mode_sleep_usec_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<_OS *>(ptr)->set_low_processor_usage_mode_sleep_usec(arg1_in);
}

int32_t godot_icall__OS_get_low_processor_usage_mode_sleep_usec_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_OS *>(ptr)->get_low_processor_usage_mode_sleep_usec();
    return static_cast<int32_t>(ret);
}

int32_t godot_icall__OS_get_processor_count_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_OS *>(ptr)->get_processor_count();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall__OS_get_executable_path_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_executable_path();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

int32_t godot_icall__OS_execute_eacacb26(Object * ptr, MonoString* arg1, MonoArray* arg2, MonoBoolean arg3, Array* arg4, MonoBoolean arg5) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto arg2_in = GDMonoMarshal::mono_array_to_NC_VecString(arg2);
    bool arg3_in = static_cast<bool>(arg3);
    bool arg5_in = static_cast<bool>(arg5);
    auto ret = static_cast<_OS *>(ptr)->execute(arg1_in, arg2_in, arg3_in, *arg4, arg5_in);
    return static_cast<int32_t>(ret);
}

int32_t godot_icall__OS_kill_fb68f113(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    int32_t arg1_in = static_cast<int32_t>(arg1);
    auto ret = static_cast<_OS *>(ptr)->kill(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall__OS_shell_open_73262d91(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<_OS *>(ptr)->shell_open(arg1_in);
    return (int32_t)ret;
}

int32_t godot_icall__OS_get_process_id_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_OS *>(ptr)->get_process_id();
    return static_cast<int32_t>(ret);
}

MonoString* godot_icall__OS_get_environment_dcc9abdc(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<_OS *>(ptr)->get_environment(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall__OS_has_environment_e7336ea4(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    auto ret = static_cast<_OS *>(ptr)->has_environment(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoString* godot_icall__OS_get_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoArray* godot_icall__OS_get_cmdline_args_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_cmdline_args();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

Dictionary* godot_icall__OS_get_datetime_e7de63e4(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<_OS *>(ptr)->get_datetime(arg1_in);
    return memnew(Dictionary(ret));
}

Dictionary* godot_icall__OS_get_date_e7de63e4(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<_OS *>(ptr)->get_date(arg1_in);
    return memnew(Dictionary(ret));
}

Dictionary* godot_icall__OS_get_time_e7de63e4(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    bool arg1_in = static_cast<bool>(arg1);
    auto ret = static_cast<_OS *>(ptr)->get_time(arg1_in);
    return memnew(Dictionary(ret));
}

Dictionary* godot_icall__OS_get_time_zone_info_22d47c9d(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_time_zone_info();
    return memnew(Dictionary(ret));
}

void godot_icall__OS_get_unix_time_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_unix_time();
    *arg_ret = (uint64_t)ret;
}

Dictionary* godot_icall__OS_get_datetime_from_unix_time_a6efd46e(Object * ptr, int64_t* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = static_cast<int64_t>(*arg1);
    auto ret = static_cast<_OS *>(ptr)->get_datetime_from_unix_time(arg1_in);
    return memnew(Dictionary(ret));
}

void godot_icall__OS_get_unix_time_from_datetime_ff3dcd99(Object * ptr, Dictionary* arg1, int64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = int64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_unix_time_from_datetime(*arg1);
    *arg_ret = static_cast<int64_t>(ret);
}

void godot_icall__OS_get_system_time_secs_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_system_time_secs();
    *arg_ret = (uint64_t)ret;
}

void godot_icall__OS_get_system_time_msecs_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_system_time_msecs();
    *arg_ret = (uint64_t)ret;
}

void godot_icall__OS_set_native_icon_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<_OS *>(ptr)->set_native_icon(arg1_in);
}

void godot_icall__OS_set_icon_e2900e18(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL(ptr);
    static_cast<_OS *>(ptr)->set_icon(AutoRef(arg1));
}

int32_t godot_icall__OS_get_exit_code_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_OS *>(ptr)->get_exit_code();
    return static_cast<int32_t>(ret);
}

void godot_icall__OS_set_exit_code_e1ae93bc(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL(ptr);
    int32_t arg1_in = static_cast<int32_t>(arg1);
    static_cast<_OS *>(ptr)->set_exit_code(arg1_in);
}

void godot_icall__OS_delay_usec_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<_OS *>(ptr)->delay_usec(arg1_in);
}

void godot_icall__OS_delay_msec_966aab97(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL(ptr);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    static_cast<_OS *>(ptr)->delay_msec(arg1_in);
}

uint32_t godot_icall__OS_get_ticks_msec_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<_OS *>(ptr)->get_ticks_msec();
    return static_cast<uint32_t>(ret);
}

void godot_icall__OS_get_ticks_usec_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_ticks_usec();
    *arg_ret = (uint64_t)ret;
}

uint32_t godot_icall__OS_get_splash_tick_msec_54cc76d5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, uint32_t());
    auto ret = static_cast<_OS *>(ptr)->get_splash_tick_msec();
    return static_cast<uint32_t>(ret);
}

MonoString* godot_icall__OS_get_locale_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_locale();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall__OS_get_latin_keyboard_variant_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_latin_keyboard_variant();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall__OS_get_model_name_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_model_name();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall__OS_can_draw_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->can_draw();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__OS_is_userfs_persistent_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_userfs_persistent();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__OS_is_stdout_verbose_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_stdout_verbose();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__OS_can_use_threads_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->can_use_threads();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__OS_is_debug_build_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_debug_build();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_dump_memory_to_file_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<_OS *>(ptr)->dump_memory_to_file(arg1_in);
}

void godot_icall__OS_dump_resources_to_file_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<_OS *>(ptr)->dump_resources_to_file(arg1_in);
}

MonoBoolean godot_icall__OS_has_virtual_keyboard_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->has_virtual_keyboard();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_show_virtual_keyboard_6964ff3e(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    String arg1_in = GDMonoMarshal::mono_string_to_godot(arg1);
    static_cast<_OS *>(ptr)->show_virtual_keyboard(arg1_in);
}

void godot_icall__OS_hide_virtual_keyboard_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_OS *>(ptr)->hide_virtual_keyboard();
}

int32_t godot_icall__OS_get_virtual_keyboard_height_1f886eb0(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_OS *>(ptr)->get_virtual_keyboard_height();
    return static_cast<int32_t>(ret);
}

void godot_icall__OS_print_resources_in_use_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->print_resources_in_use(arg1_in);
}

void godot_icall__OS_print_all_resources_3ca14953(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    static_cast<_OS *>(ptr)->print_all_resources(arg1_in);
}

void godot_icall__OS_get_static_memory_usage_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_static_memory_usage();
    *arg_ret = (uint64_t)ret;
}

void godot_icall__OS_get_static_memory_peak_usage_4bb7c348(Object * ptr, uint64_t* arg_ret) {
    if (ptr == nullptr) { *arg_ret = uint64_t(); ERR_FAIL_MSG("Parameter ' arg_ret ' is null."); }
    auto ret = static_cast<_OS *>(ptr)->get_static_memory_peak_usage();
    *arg_ret = (uint64_t)ret;
}

MonoString* godot_icall__OS_get_user_data_dir_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_user_data_dir();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall__OS_get_system_dir_cafb1d6e(Object * ptr, int32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    int64_t arg1_in = (int64_t)arg1;
    auto ret = static_cast<_OS *>(ptr)->get_system_dir((_OS::SystemDir)arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoString* godot_icall__OS_get_unique_id_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_unique_id();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall__OS_is_ok_left_and_cancel_right_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_ok_left_and_cancel_right();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_print_all_textures_by_size_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_OS *>(ptr)->print_all_textures_by_size();
}

void godot_icall__OS_print_resources_by_type_a4cdc50a(Object * ptr, MonoArray* arg1) {
    ERR_FAIL_NULL(ptr);
    auto arg1_in = GDMonoMarshal::mono_array_to_NC_VecString(arg1);
    static_cast<_OS *>(ptr)->print_resources_by_type(arg1_in);
}

int32_t godot_icall__OS_native_video_play_221902a(Object * ptr, MonoString* arg1, float* arg2, MonoString* arg3, MonoString* arg4) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    float arg2_in = static_cast<float>(*arg2);
    TmpString<512> arg3_in(GDMonoMarshal::mono_string_to_godot(arg3));
    TmpString<512> arg4_in(GDMonoMarshal::mono_string_to_godot(arg4));
    auto ret = static_cast<_OS *>(ptr)->native_video_play(arg1_in, arg2_in, arg3_in, arg4_in);
    return (int32_t)ret;
}

MonoBoolean godot_icall__OS_native_video_is_playing_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->native_video_is_playing();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_native_video_stop_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_OS *>(ptr)->native_video_stop();
}

void godot_icall__OS_native_video_pause_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_OS *>(ptr)->native_video_pause();
}

void godot_icall__OS_native_video_unpause_c8e54a7b(Object * ptr) {
    ERR_FAIL_NULL(ptr);
    static_cast<_OS *>(ptr)->native_video_unpause();
}

MonoString* godot_icall__OS_get_scancode_string_9f3844b7(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    auto ret = static_cast<_OS *>(ptr)->get_scancode_string(arg1_in);
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall__OS_is_scancode_unicode_242501fd(Object * ptr, uint32_t arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    uint32_t arg1_in = static_cast<uint32_t>(arg1);
    auto ret = static_cast<_OS *>(ptr)->is_scancode_unicode(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

int32_t godot_icall__OS_find_scancode_from_string_6d3db7c6(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_OS *>(ptr)->find_scancode_from_string(arg1_in);
    return static_cast<int32_t>(ret);
}

void godot_icall__OS_set_use_file_access_save_and_swap_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_use_file_access_save_and_swap(arg1_in);
}

void godot_icall__OS_alert_fc93f18d(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<_OS *>(ptr)->alert(arg1_in, arg2_in);
}

int32_t godot_icall__OS_set_thread_name_2660dbb2(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_OS *>(ptr)->set_thread_name(arg1_in);
    return (int32_t)ret;
}

void godot_icall__OS_set_use_vsync_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_use_vsync(arg1_in);
}

MonoBoolean godot_icall__OS_is_vsync_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_vsync_enabled();
    return static_cast<MonoBoolean>(ret);
}

void godot_icall__OS_set_vsync_via_compositor_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_OS *>(ptr)->set_vsync_via_compositor(arg1_in);
}

MonoBoolean godot_icall__OS_is_vsync_via_compositor_enabled_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->is_vsync_via_compositor_enabled();
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__OS_has_feature_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_OS *>(ptr)->has_feature(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__OS_request_permission_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_OS *>(ptr)->request_permission(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__OS_request_permissions_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_OS *>(ptr)->request_permissions();
    return static_cast<MonoBoolean>(ret);
}

MonoArray* godot_icall__OS_get_granted_permissions_4cc8f2a7(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_OS *>(ptr)->get_granted_permissions();
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

Object* godot_icall__OS_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("OS");
}

MonoObject* godot_icall__ResourceLoader_load_interactive_ef466547(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<_ResourceLoader *>(ptr)->load_interactive(arg1_in, arg2_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoObject* godot_icall__ResourceLoader_load_632b28d2(Object * ptr, MonoString* arg1, MonoString* arg2, MonoBoolean arg3) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    bool arg3_in = static_cast<bool>(arg3);
    auto ret = static_cast<_ResourceLoader *>(ptr)->load(arg1_in, arg2_in, arg3_in);
    return GDMonoUtils::unmanaged_get_managed((Object *)ret.get());
}

MonoArray* godot_icall__ResourceLoader_get_recognized_extensions_for_type_82ee0a94(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_ResourceLoader *>(ptr)->get_recognized_extensions_for_type(arg1_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

void godot_icall__ResourceLoader_set_abort_on_missing_resources_ba24800b(Object * ptr, MonoBoolean arg1) {
    ERR_FAIL_NULL(ptr);
    bool arg1_in = static_cast<bool>(arg1);
    static_cast<_ResourceLoader *>(ptr)->set_abort_on_missing_resources(arg1_in);
}

MonoArray* godot_icall__ResourceLoader_get_dependencies_82ee0a94(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_ResourceLoader *>(ptr)->get_dependencies(arg1_in);
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

MonoBoolean godot_icall__ResourceLoader_has_cached_8a7120b9(Object * ptr, MonoString* arg1) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    auto ret = static_cast<_ResourceLoader *>(ptr)->has_cached(arg1_in);
    return static_cast<MonoBoolean>(ret);
}

MonoBoolean godot_icall__ResourceLoader_exists_cdeda881(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    auto ret = static_cast<_ResourceLoader *>(ptr)->exists(arg1_in, arg2_in);
    return static_cast<MonoBoolean>(ret);
}

Object* godot_icall__ResourceLoader_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("ResourceLoader");
}

int32_t godot_icall__ResourceSaver_save_7666d7ab(Object * ptr, MonoString* arg1, Object * arg2, int32_t arg3) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    int64_t arg3_in = (int64_t)arg3;
    auto ret = static_cast<_ResourceSaver *>(ptr)->save(arg1_in, AutoRef(arg2), (_ResourceSaver::SaverFlags)arg3_in);
    return (int32_t)ret;
}

MonoArray* godot_icall__ResourceSaver_get_recognized_extensions_e5c6fc3c(Object * ptr, Object * arg1) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_ResourceSaver *>(ptr)->get_recognized_extensions(AutoRef(arg1));
    return GDMonoMarshal::PoolStringArray_to_mono_array(ret);
}

Object* godot_icall__ResourceSaver_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("ResourceSaver");
}

int32_t godot_icall__Semaphore_wait_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_Semaphore *>(ptr)->wait();
    return (int32_t)ret;
}

int32_t godot_icall__Semaphore_post_f04570f5(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    auto ret = static_cast<_Semaphore *>(ptr)->post();
    return (int32_t)ret;
}

Object* godot_icall_Semaphore_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "_Semaphore")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

int32_t godot_icall__Thread_start_70aab363(Object * ptr, Object * arg1, MonoString* arg2, MonoObject* arg3, int32_t arg4) {
    ERR_FAIL_NULL_V(ptr, int32_t());
    StringName arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    Variant arg3_in = GDMonoMarshal::mono_object_to_variant(arg3);
    int64_t arg4_in = (int64_t)arg4;
    auto ret = static_cast<_Thread *>(ptr)->start((Object*)arg1, arg2_in, arg3_in, (_Thread::Priority)arg4_in);
    return (int32_t)ret;
}

MonoString* godot_icall__Thread_get_id_97be4a2e(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Thread *>(ptr)->get_id();
    return GDMonoMarshal::mono_string_from_godot(ret);
}

MonoBoolean godot_icall__Thread_is_active_68fe5f59(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, MonoBoolean());
    auto ret = static_cast<_Thread *>(ptr)->is_active();
    return static_cast<MonoBoolean>(ret);
}

MonoObject* godot_icall__Thread_wait_to_finish_a08d6f10(Object * ptr) {
    ERR_FAIL_NULL_V(ptr, NULL);
    auto ret = static_cast<_Thread *>(ptr)->wait_to_finish();
    return GDMonoMarshal::variant_to_mono_object(ret);
}

Object* godot_icall_Thread_Ctor(MonoObject* obj) {
    GODOTSHARP_INSTANCE_OBJECT(instance, "_Thread")
    GDMonoInternals::tie_managed_to_unmanaged(obj, instance);
    return instance;
}

#ifdef TOOLS_ENABLED
void godot_icall__VisualScriptEditor_add_custom_node_3135d8d9(Object * ptr, MonoString* arg1, MonoString* arg2, Object * arg3) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<_VisualScriptEditor *>(ptr)->add_custom_node(arg1_in, arg2_in, AutoRef(arg3));
}

#endif // TOOLS_ENABLED
#ifdef TOOLS_ENABLED
void godot_icall__VisualScriptEditor_remove_custom_node_fc93f18d(Object * ptr, MonoString* arg1, MonoString* arg2) {
    ERR_FAIL_NULL(ptr);
    TmpString<512> arg1_in(GDMonoMarshal::mono_string_to_godot(arg1));
    TmpString<512> arg2_in(GDMonoMarshal::mono_string_to_godot(arg2));
    static_cast<_VisualScriptEditor *>(ptr)->remove_custom_node(arg1_in, arg2_in);
}

#endif // TOOLS_ENABLED
Object* godot_icall__VisualScriptEditor_get_singleton() {
    return Engine::get_singleton()->get_singleton_object("VisualScriptEditor");
}

namespace GodotSharpBindings
{

uint64_t get_core_api_hash() { return 14795385792687354923U; }
#ifdef TOOLS_ENABLED
uint64_t get_editor_api_hash() { return 4719693846311282490U; }
#endif // TOOLS_ENABLED
uint32_t get_bindings_version() { return 11; }
uint32_t get_cs_glue_version() { return 1709203273; }
namespace {
 // anonymous namespace
struct FuncReg { const char *name; const void *ptr; };
static const FuncReg functions[]={
    {"Godot.NativeCalls::godot_icall_ARVRAnchor_Ctor", (void*)godot_icall_ARVRAnchor_Ctor},
	{"Godot.NativeCalls::godot_icall_ARVRCamera_Ctor", (void*)godot_icall_ARVRCamera_Ctor},
	{"Godot.NativeCalls::godot_icall_ARVRController_Ctor", (void*)godot_icall_ARVRController_Ctor},
	{"Godot.NativeCalls::godot_icall_ARVROrigin_Ctor", (void*)godot_icall_ARVROrigin_Ctor},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_Ctor", (void*)godot_icall_ARVRPositionalTracker_Ctor},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_singleton", (void*)godot_icall_ARVRServer_get_singleton},
	{"Godot.NativeCalls::godot_icall_AStar_Ctor", (void*)godot_icall_AStar_Ctor},
	{"Godot.NativeCalls::godot_icall_AStar2D_Ctor", (void*)godot_icall_AStar2D_Ctor},
	{"Godot.NativeCalls::godot_icall_AcceptDialog_Ctor", (void*)godot_icall_AcceptDialog_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_Ctor", (void*)godot_icall_AnimatedSprite_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite3D_Ctor", (void*)godot_icall_AnimatedSprite3D_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimatedTexture_Ctor", (void*)godot_icall_AnimatedTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_Animation_Ctor", (void*)godot_icall_Animation_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNode_Ctor", (void*)godot_icall_AnimationNode_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeAdd2_Ctor", (void*)godot_icall_AnimationNodeAdd2_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeAdd3_Ctor", (void*)godot_icall_AnimationNodeAdd3_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeAnimation_Ctor", (void*)godot_icall_AnimationNodeAnimation_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlend2_Ctor", (void*)godot_icall_AnimationNodeBlend2_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlend3_Ctor", (void*)godot_icall_AnimationNodeBlend3_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_Ctor", (void*)godot_icall_AnimationNodeBlendSpace1D_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_Ctor", (void*)godot_icall_AnimationNodeBlendSpace2D_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendTree_Ctor", (void*)godot_icall_AnimationNodeBlendTree_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_Ctor", (void*)godot_icall_AnimationNodeOneShot_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOutput_Ctor", (void*)godot_icall_AnimationNodeOutput_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_Ctor", (void*)godot_icall_AnimationNodeStateMachine_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachinePlayback_Ctor", (void*)godot_icall_AnimationNodeStateMachinePlayback_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_Ctor", (void*)godot_icall_AnimationNodeStateMachineTransition_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeTimeScale_Ctor", (void*)godot_icall_AnimationNodeTimeScale_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeTimeSeek_Ctor", (void*)godot_icall_AnimationNodeTimeSeek_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationNodeTransition_Ctor", (void*)godot_icall_AnimationNodeTransition_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_Ctor", (void*)godot_icall_AnimationPlayer_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationRootNode_Ctor", (void*)godot_icall_AnimationRootNode_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationTree_Ctor", (void*)godot_icall_AnimationTree_Ctor},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_Ctor", (void*)godot_icall_AnimationTreePlayer_Ctor},
	{"Godot.NativeCalls::godot_icall_Area_Ctor", (void*)godot_icall_Area_Ctor},
	{"Godot.NativeCalls::godot_icall_Area2D_Ctor", (void*)godot_icall_Area2D_Ctor},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_Ctor", (void*)godot_icall_ArrayMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_AtlasTexture_Ctor", (void*)godot_icall_AtlasTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioBusLayout_Ctor", (void*)godot_icall_AudioBusLayout_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectAmplify_Ctor", (void*)godot_icall_AudioEffectAmplify_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectBandLimitFilter_Ctor", (void*)godot_icall_AudioEffectBandLimitFilter_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectBandPassFilter_Ctor", (void*)godot_icall_AudioEffectBandPassFilter_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_Ctor", (void*)godot_icall_AudioEffectChorus_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_Ctor", (void*)godot_icall_AudioEffectCompressor_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_Ctor", (void*)godot_icall_AudioEffectDelay_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectDistortion_Ctor", (void*)godot_icall_AudioEffectDistortion_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectEQ_Ctor", (void*)godot_icall_AudioEffectEQ_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectEQ10_Ctor", (void*)godot_icall_AudioEffectEQ10_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectEQ21_Ctor", (void*)godot_icall_AudioEffectEQ21_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectEQ6_Ctor", (void*)godot_icall_AudioEffectEQ6_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectFilter_Ctor", (void*)godot_icall_AudioEffectFilter_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectHighPassFilter_Ctor", (void*)godot_icall_AudioEffectHighPassFilter_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectHighShelfFilter_Ctor", (void*)godot_icall_AudioEffectHighShelfFilter_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectLimiter_Ctor", (void*)godot_icall_AudioEffectLimiter_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectLowPassFilter_Ctor", (void*)godot_icall_AudioEffectLowPassFilter_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectLowShelfFilter_Ctor", (void*)godot_icall_AudioEffectLowShelfFilter_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectNotchFilter_Ctor", (void*)godot_icall_AudioEffectNotchFilter_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectPanner_Ctor", (void*)godot_icall_AudioEffectPanner_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectPhaser_Ctor", (void*)godot_icall_AudioEffectPhaser_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectPitchShift_Ctor", (void*)godot_icall_AudioEffectPitchShift_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectRecord_Ctor", (void*)godot_icall_AudioEffectRecord_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_Ctor", (void*)godot_icall_AudioEffectReverb_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectSpectrumAnalyzer_Ctor", (void*)godot_icall_AudioEffectSpectrumAnalyzer_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioEffectStereoEnhance_Ctor", (void*)godot_icall_AudioEffectStereoEnhance_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_singleton", (void*)godot_icall_AudioServer_get_singleton},
	{"Godot.NativeCalls::godot_icall_AudioStreamGenerator_Ctor", (void*)godot_icall_AudioStreamGenerator_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioStreamMicrophone_Ctor", (void*)godot_icall_AudioStreamMicrophone_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioStreamOGGVorbis_Ctor", (void*)godot_icall_AudioStreamOGGVorbis_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_Ctor", (void*)godot_icall_AudioStreamPlayer_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_Ctor", (void*)godot_icall_AudioStreamPlayer2D_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_Ctor", (void*)godot_icall_AudioStreamPlayer3D_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioStreamRandomPitch_Ctor", (void*)godot_icall_AudioStreamRandomPitch_Ctor},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_Ctor", (void*)godot_icall_AudioStreamSample_Ctor},
	{"Godot.NativeCalls::godot_icall_BackBufferCopy_Ctor", (void*)godot_icall_BackBufferCopy_Ctor},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_Ctor", (void*)godot_icall_BakedLightmap_Ctor},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_Ctor", (void*)godot_icall_BakedLightmapData_Ctor},
	{"Godot.NativeCalls::godot_icall_BitMap_Ctor", (void*)godot_icall_BitMap_Ctor},
	{"Godot.NativeCalls::godot_icall_BitmapFont_Ctor", (void*)godot_icall_BitmapFont_Ctor},
	{"Godot.NativeCalls::godot_icall_Bone2D_Ctor", (void*)godot_icall_Bone2D_Ctor},
	{"Godot.NativeCalls::godot_icall_BoneAttachment_Ctor", (void*)godot_icall_BoneAttachment_Ctor},
	{"Godot.NativeCalls::godot_icall_BoxShape_Ctor", (void*)godot_icall_BoxShape_Ctor},
	{"Godot.NativeCalls::godot_icall_Button_Ctor", (void*)godot_icall_Button_Ctor},
	{"Godot.NativeCalls::godot_icall_ButtonGroup_Ctor", (void*)godot_icall_ButtonGroup_Ctor},
	{"Godot.NativeCalls::godot_icall_CPUParticles_Ctor", (void*)godot_icall_CPUParticles_Ctor},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_Ctor", (void*)godot_icall_CPUParticles2D_Ctor},
	{"Godot.NativeCalls::godot_icall_CSGBox_Ctor", (void*)godot_icall_CSGBox_Ctor},
	{"Godot.NativeCalls::godot_icall_CSGCombiner_Ctor", (void*)godot_icall_CSGCombiner_Ctor},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_Ctor", (void*)godot_icall_CSGCylinder_Ctor},
	{"Godot.NativeCalls::godot_icall_CSGMesh_Ctor", (void*)godot_icall_CSGMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_Ctor", (void*)godot_icall_CSGPolygon_Ctor},
	{"Godot.NativeCalls::godot_icall_CSGSphere_Ctor", (void*)godot_icall_CSGSphere_Ctor},
	{"Godot.NativeCalls::godot_icall_CSGTorus_Ctor", (void*)godot_icall_CSGTorus_Ctor},
	{"Godot.NativeCalls::godot_icall_CSharpScript_Ctor", (void*)godot_icall_CSharpScript_Ctor},
	{"Godot.NativeCalls::godot_icall_Camera_Ctor", (void*)godot_icall_Camera_Ctor},
	{"Godot.NativeCalls::godot_icall_Camera2D_Ctor", (void*)godot_icall_Camera2D_Ctor},
	{"Godot.NativeCalls::godot_icall_CameraFeed_Ctor", (void*)godot_icall_CameraFeed_Ctor},
	{"Godot.NativeCalls::godot_icall_CameraServer_get_singleton", (void*)godot_icall_CameraServer_get_singleton},
	{"Godot.NativeCalls::godot_icall_CameraTexture_Ctor", (void*)godot_icall_CameraTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_Ctor", (void*)godot_icall_CanvasItemMaterial_Ctor},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_Ctor", (void*)godot_icall_CanvasLayer_Ctor},
	{"Godot.NativeCalls::godot_icall_CanvasModulate_Ctor", (void*)godot_icall_CanvasModulate_Ctor},
	{"Godot.NativeCalls::godot_icall_CapsuleMesh_Ctor", (void*)godot_icall_CapsuleMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_CapsuleShape_Ctor", (void*)godot_icall_CapsuleShape_Ctor},
	{"Godot.NativeCalls::godot_icall_CapsuleShape2D_Ctor", (void*)godot_icall_CapsuleShape2D_Ctor},
	{"Godot.NativeCalls::godot_icall_CenterContainer_Ctor", (void*)godot_icall_CenterContainer_Ctor},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_Ctor", (void*)godot_icall_CharFXTransform_Ctor},
	{"Godot.NativeCalls::godot_icall_CheckBox_Ctor", (void*)godot_icall_CheckBox_Ctor},
	{"Godot.NativeCalls::godot_icall_CheckButton_Ctor", (void*)godot_icall_CheckButton_Ctor},
	{"Godot.NativeCalls::godot_icall_CircleShape2D_Ctor", (void*)godot_icall_CircleShape2D_Ctor},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_Ctor", (void*)godot_icall_ClippedCamera_Ctor},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon_Ctor", (void*)godot_icall_CollisionPolygon_Ctor},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon2D_Ctor", (void*)godot_icall_CollisionPolygon2D_Ctor},
	{"Godot.NativeCalls::godot_icall_CollisionShape_Ctor", (void*)godot_icall_CollisionShape_Ctor},
	{"Godot.NativeCalls::godot_icall_CollisionShape2D_Ctor", (void*)godot_icall_CollisionShape2D_Ctor},
	{"Godot.NativeCalls::godot_icall_ColorPicker_Ctor", (void*)godot_icall_ColorPicker_Ctor},
	{"Godot.NativeCalls::godot_icall_ColorPickerButton_Ctor", (void*)godot_icall_ColorPickerButton_Ctor},
	{"Godot.NativeCalls::godot_icall_ColorRect_Ctor", (void*)godot_icall_ColorRect_Ctor},
	{"Godot.NativeCalls::godot_icall_ConcavePolygonShape_Ctor", (void*)godot_icall_ConcavePolygonShape_Ctor},
	{"Godot.NativeCalls::godot_icall_ConcavePolygonShape2D_Ctor", (void*)godot_icall_ConcavePolygonShape2D_Ctor},
	{"Godot.NativeCalls::godot_icall_ConeTwistJoint_Ctor", (void*)godot_icall_ConeTwistJoint_Ctor},
	{"Godot.NativeCalls::godot_icall_ConfigFile_Ctor", (void*)godot_icall_ConfigFile_Ctor},
	{"Godot.NativeCalls::godot_icall_ConfirmationDialog_Ctor", (void*)godot_icall_ConfirmationDialog_Ctor},
	{"Godot.NativeCalls::godot_icall_Container_Ctor", (void*)godot_icall_Container_Ctor},
	{"Godot.NativeCalls::godot_icall_Control_Ctor", (void*)godot_icall_Control_Ctor},
	{"Godot.NativeCalls::godot_icall_ConvexPolygonShape_Ctor", (void*)godot_icall_ConvexPolygonShape_Ctor},
	{"Godot.NativeCalls::godot_icall_ConvexPolygonShape2D_Ctor", (void*)godot_icall_ConvexPolygonShape2D_Ctor},
	{"Godot.NativeCalls::godot_icall_Crypto_Ctor", (void*)godot_icall_Crypto_Ctor},
	{"Godot.NativeCalls::godot_icall_CryptoKey_Ctor", (void*)godot_icall_CryptoKey_Ctor},
	{"Godot.NativeCalls::godot_icall_CubeMap_Ctor", (void*)godot_icall_CubeMap_Ctor},
	{"Godot.NativeCalls::godot_icall_CubeMesh_Ctor", (void*)godot_icall_CubeMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_Curve_Ctor", (void*)godot_icall_Curve_Ctor},
	{"Godot.NativeCalls::godot_icall_Curve2D_Ctor", (void*)godot_icall_Curve2D_Ctor},
	{"Godot.NativeCalls::godot_icall_Curve3D_Ctor", (void*)godot_icall_Curve3D_Ctor},
	{"Godot.NativeCalls::godot_icall_CurveTexture_Ctor", (void*)godot_icall_CurveTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_CylinderMesh_Ctor", (void*)godot_icall_CylinderMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_CylinderShape_Ctor", (void*)godot_icall_CylinderShape_Ctor},
	{"Godot.NativeCalls::godot_icall_DampedSpringJoint2D_Ctor", (void*)godot_icall_DampedSpringJoint2D_Ctor},
	{"Godot.NativeCalls::godot_icall_DirectionalLight_Ctor", (void*)godot_icall_DirectionalLight_Ctor},
	{"Godot.NativeCalls::godot_icall_DynamicFont_Ctor", (void*)godot_icall_DynamicFont_Ctor},
	{"Godot.NativeCalls::godot_icall_DynamicFontData_Ctor", (void*)godot_icall_DynamicFontData_Ctor},
	{"Godot.NativeCalls::godot_icall_EncodedObjectAsID_Ctor", (void*)godot_icall_EncodedObjectAsID_Ctor},
	{"Godot.NativeCalls::godot_icall_Environment_Ctor", (void*)godot_icall_Environment_Ctor},
	{"Godot.NativeCalls::godot_icall_Expression_Ctor", (void*)godot_icall_Expression_Ctor},
	{"Godot.NativeCalls::godot_icall_FileDialog_Ctor", (void*)godot_icall_FileDialog_Ctor},
	{"Godot.NativeCalls::godot_icall_FuncRef_Ctor", (void*)godot_icall_FuncRef_Ctor},
	{"Godot.NativeCalls::godot_icall_GDScript_Ctor", (void*)godot_icall_GDScript_Ctor},
	{"Godot.NativeCalls::godot_icall_GIProbe_Ctor", (void*)godot_icall_GIProbe_Ctor},
	{"Godot.NativeCalls::godot_icall_GIProbeData_Ctor", (void*)godot_icall_GIProbeData_Ctor},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_Ctor", (void*)godot_icall_Generic6DOFJoint_Ctor},
	{"Godot.NativeCalls::godot_icall_Gradient_Ctor", (void*)godot_icall_Gradient_Ctor},
	{"Godot.NativeCalls::godot_icall_GradientTexture_Ctor", (void*)godot_icall_GradientTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_GraphEdit_Ctor", (void*)godot_icall_GraphEdit_Ctor},
	{"Godot.NativeCalls::godot_icall_GraphNode_Ctor", (void*)godot_icall_GraphNode_Ctor},
	{"Godot.NativeCalls::godot_icall_GridContainer_Ctor", (void*)godot_icall_GridContainer_Ctor},
	{"Godot.NativeCalls::godot_icall_GridMap_Ctor", (void*)godot_icall_GridMap_Ctor},
	{"Godot.NativeCalls::godot_icall_GrooveJoint2D_Ctor", (void*)godot_icall_GrooveJoint2D_Ctor},
	{"Godot.NativeCalls::godot_icall_HBoxContainer_Ctor", (void*)godot_icall_HBoxContainer_Ctor},
	{"Godot.NativeCalls::godot_icall_HScrollBar_Ctor", (void*)godot_icall_HScrollBar_Ctor},
	{"Godot.NativeCalls::godot_icall_HSeparator_Ctor", (void*)godot_icall_HSeparator_Ctor},
	{"Godot.NativeCalls::godot_icall_HSlider_Ctor", (void*)godot_icall_HSlider_Ctor},
	{"Godot.NativeCalls::godot_icall_HSplitContainer_Ctor", (void*)godot_icall_HSplitContainer_Ctor},
	{"Godot.NativeCalls::godot_icall_HTTPClient_Ctor", (void*)godot_icall_HTTPClient_Ctor},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_Ctor", (void*)godot_icall_HTTPRequest_Ctor},
	{"Godot.NativeCalls::godot_icall_HashingContext_Ctor", (void*)godot_icall_HashingContext_Ctor},
	{"Godot.NativeCalls::godot_icall_HeightMapShape_Ctor", (void*)godot_icall_HeightMapShape_Ctor},
	{"Godot.NativeCalls::godot_icall_HingeJoint_Ctor", (void*)godot_icall_HingeJoint_Ctor},
	{"Godot.NativeCalls::godot_icall_IP_get_singleton", (void*)godot_icall_IP_get_singleton},
	{"Godot.NativeCalls::godot_icall_Image_Ctor", (void*)godot_icall_Image_Ctor},
	{"Godot.NativeCalls::godot_icall_ImageTexture_Ctor", (void*)godot_icall_ImageTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_ImmediateGeometry_Ctor", (void*)godot_icall_ImmediateGeometry_Ctor},
	{"Godot.NativeCalls::godot_icall_Input_get_singleton", (void*)godot_icall_Input_get_singleton},
	{"Godot.NativeCalls::godot_icall_InputEventAction_Ctor", (void*)godot_icall_InputEventAction_Ctor},
	{"Godot.NativeCalls::godot_icall_InputEventJoypadButton_Ctor", (void*)godot_icall_InputEventJoypadButton_Ctor},
	{"Godot.NativeCalls::godot_icall_InputEventJoypadMotion_Ctor", (void*)godot_icall_InputEventJoypadMotion_Ctor},
	{"Godot.NativeCalls::godot_icall_InputEventKey_Ctor", (void*)godot_icall_InputEventKey_Ctor},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_Ctor", (void*)godot_icall_InputEventMIDI_Ctor},
	{"Godot.NativeCalls::godot_icall_InputEventMagnifyGesture_Ctor", (void*)godot_icall_InputEventMagnifyGesture_Ctor},
	{"Godot.NativeCalls::godot_icall_InputEventMouseButton_Ctor", (void*)godot_icall_InputEventMouseButton_Ctor},
	{"Godot.NativeCalls::godot_icall_InputEventMouseMotion_Ctor", (void*)godot_icall_InputEventMouseMotion_Ctor},
	{"Godot.NativeCalls::godot_icall_InputEventPanGesture_Ctor", (void*)godot_icall_InputEventPanGesture_Ctor},
	{"Godot.NativeCalls::godot_icall_InputEventScreenDrag_Ctor", (void*)godot_icall_InputEventScreenDrag_Ctor},
	{"Godot.NativeCalls::godot_icall_InputEventScreenTouch_Ctor", (void*)godot_icall_InputEventScreenTouch_Ctor},
	{"Godot.NativeCalls::godot_icall_InputMap_get_singleton", (void*)godot_icall_InputMap_get_singleton},
	{"Godot.NativeCalls::godot_icall_InterpolatedCamera_Ctor", (void*)godot_icall_InterpolatedCamera_Ctor},
	{"Godot.NativeCalls::godot_icall_ItemList_Ctor", (void*)godot_icall_ItemList_Ctor},
	{"Godot.NativeCalls::godot_icall_JSONParseResult_Ctor", (void*)godot_icall_JSONParseResult_Ctor},
	{"Godot.NativeCalls::godot_icall_JSONRPC_Ctor", (void*)godot_icall_JSONRPC_Ctor},
	{"Godot.NativeCalls::godot_icall_KinematicBody_Ctor", (void*)godot_icall_KinematicBody_Ctor},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_Ctor", (void*)godot_icall_KinematicBody2D_Ctor},
	{"Godot.NativeCalls::godot_icall_KinematicCollision_Ctor", (void*)godot_icall_KinematicCollision_Ctor},
	{"Godot.NativeCalls::godot_icall_KinematicCollision2D_Ctor", (void*)godot_icall_KinematicCollision2D_Ctor},
	{"Godot.NativeCalls::godot_icall_Label_Ctor", (void*)godot_icall_Label_Ctor},
	{"Godot.NativeCalls::godot_icall_LargeTexture_Ctor", (void*)godot_icall_LargeTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_Light2D_Ctor", (void*)godot_icall_Light2D_Ctor},
	{"Godot.NativeCalls::godot_icall_LightOccluder2D_Ctor", (void*)godot_icall_LightOccluder2D_Ctor},
	{"Godot.NativeCalls::godot_icall_Line2D_Ctor", (void*)godot_icall_Line2D_Ctor},
	{"Godot.NativeCalls::godot_icall_LineEdit_Ctor", (void*)godot_icall_LineEdit_Ctor},
	{"Godot.NativeCalls::godot_icall_LineShape2D_Ctor", (void*)godot_icall_LineShape2D_Ctor},
	{"Godot.NativeCalls::godot_icall_LinkButton_Ctor", (void*)godot_icall_LinkButton_Ctor},
	{"Godot.NativeCalls::godot_icall_Listener_Ctor", (void*)godot_icall_Listener_Ctor},
	{"Godot.NativeCalls::godot_icall_MainLoop_Ctor", (void*)godot_icall_MainLoop_Ctor},
	{"Godot.NativeCalls::godot_icall_MarginContainer_Ctor", (void*)godot_icall_MarginContainer_Ctor},
	{"Godot.NativeCalls::godot_icall_MenuButton_Ctor", (void*)godot_icall_MenuButton_Ctor},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_Ctor", (void*)godot_icall_MeshDataTool_Ctor},
	{"Godot.NativeCalls::godot_icall_MeshInstance_Ctor", (void*)godot_icall_MeshInstance_Ctor},
	{"Godot.NativeCalls::godot_icall_MeshInstance2D_Ctor", (void*)godot_icall_MeshInstance2D_Ctor},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_Ctor", (void*)godot_icall_MeshLibrary_Ctor},
	{"Godot.NativeCalls::godot_icall_MeshTexture_Ctor", (void*)godot_icall_MeshTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_MultiMesh_Ctor", (void*)godot_icall_MultiMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_MultiMeshInstance_Ctor", (void*)godot_icall_MultiMeshInstance_Ctor},
	{"Godot.NativeCalls::godot_icall_MultiMeshInstance2D_Ctor", (void*)godot_icall_MultiMeshInstance2D_Ctor},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_Ctor", (void*)godot_icall_MultiplayerAPI_Ctor},
	{"Godot.NativeCalls::godot_icall_Navigation_Ctor", (void*)godot_icall_Navigation_Ctor},
	{"Godot.NativeCalls::godot_icall_Navigation2D_Ctor", (void*)godot_icall_Navigation2D_Ctor},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_Ctor", (void*)godot_icall_NavigationAgent_Ctor},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_Ctor", (void*)godot_icall_NavigationAgent2D_Ctor},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_Ctor", (void*)godot_icall_NavigationMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_NavigationMeshGenerator_get_singleton", (void*)godot_icall_NavigationMeshGenerator_get_singleton},
	{"Godot.NativeCalls::godot_icall_NavigationMeshInstance_Ctor", (void*)godot_icall_NavigationMeshInstance_Ctor},
	{"Godot.NativeCalls::godot_icall_NavigationObstacle_Ctor", (void*)godot_icall_NavigationObstacle_Ctor},
	{"Godot.NativeCalls::godot_icall_NavigationObstacle2D_Ctor", (void*)godot_icall_NavigationObstacle2D_Ctor},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_Ctor", (void*)godot_icall_NavigationPolygon_Ctor},
	{"Godot.NativeCalls::godot_icall_NavigationPolygonInstance_Ctor", (void*)godot_icall_NavigationPolygonInstance_Ctor},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_Ctor", (void*)godot_icall_NetworkedMultiplayerENet_Ctor},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_Ctor", (void*)godot_icall_NinePatchRect_Ctor},
	{"Godot.NativeCalls::godot_icall_Node_Ctor", (void*)godot_icall_Node_Ctor},
	{"Godot.NativeCalls::godot_icall_Node2D_Ctor", (void*)godot_icall_Node2D_Ctor},
	{"Godot.NativeCalls::godot_icall_NoiseTexture_Ctor", (void*)godot_icall_NoiseTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_OccluderPolygon2D_Ctor", (void*)godot_icall_OccluderPolygon2D_Ctor},
	{"Godot.NativeCalls::godot_icall_OmniLight_Ctor", (void*)godot_icall_OmniLight_Ctor},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_Ctor", (void*)godot_icall_OpenSimplexNoise_Ctor},
	{"Godot.NativeCalls::godot_icall_OptionButton_Ctor", (void*)godot_icall_OptionButton_Ctor},
	{"Godot.NativeCalls::godot_icall_PCKPacker_Ctor", (void*)godot_icall_PCKPacker_Ctor},
	{"Godot.NativeCalls::godot_icall_PHashTranslation_Ctor", (void*)godot_icall_PHashTranslation_Ctor},
	{"Godot.NativeCalls::godot_icall_PackedDataContainer_Ctor", (void*)godot_icall_PackedDataContainer_Ctor},
	{"Godot.NativeCalls::godot_icall_PackedScene_Ctor", (void*)godot_icall_PackedScene_Ctor},
	{"Godot.NativeCalls::godot_icall_PacketPeerStream_Ctor", (void*)godot_icall_PacketPeerStream_Ctor},
	{"Godot.NativeCalls::godot_icall_PacketPeerUDP_Ctor", (void*)godot_icall_PacketPeerUDP_Ctor},
	{"Godot.NativeCalls::godot_icall_Panel_Ctor", (void*)godot_icall_Panel_Ctor},
	{"Godot.NativeCalls::godot_icall_PanelContainer_Ctor", (void*)godot_icall_PanelContainer_Ctor},
	{"Godot.NativeCalls::godot_icall_PanoramaSky_Ctor", (void*)godot_icall_PanoramaSky_Ctor},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_Ctor", (void*)godot_icall_ParallaxBackground_Ctor},
	{"Godot.NativeCalls::godot_icall_ParallaxLayer_Ctor", (void*)godot_icall_ParallaxLayer_Ctor},
	{"Godot.NativeCalls::godot_icall_Particles_Ctor", (void*)godot_icall_Particles_Ctor},
	{"Godot.NativeCalls::godot_icall_Particles2D_Ctor", (void*)godot_icall_Particles2D_Ctor},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_Ctor", (void*)godot_icall_ParticlesMaterial_Ctor},
	{"Godot.NativeCalls::godot_icall_Path_Ctor", (void*)godot_icall_Path_Ctor},
	{"Godot.NativeCalls::godot_icall_Path2D_Ctor", (void*)godot_icall_Path2D_Ctor},
	{"Godot.NativeCalls::godot_icall_PathFollow_Ctor", (void*)godot_icall_PathFollow_Ctor},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_Ctor", (void*)godot_icall_PathFollow2D_Ctor},
	{"Godot.NativeCalls::godot_icall_Performance_get_singleton", (void*)godot_icall_Performance_get_singleton},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_Ctor", (void*)godot_icall_PhysicalBone_Ctor},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_get_singleton", (void*)godot_icall_Physics2DServer_get_singleton},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_Ctor", (void*)godot_icall_Physics2DShapeQueryParameters_Ctor},
	{"Godot.NativeCalls::godot_icall_Physics2DTestMotionResult_Ctor", (void*)godot_icall_Physics2DTestMotionResult_Ctor},
	{"Godot.NativeCalls::godot_icall_PhysicsMaterial_Ctor", (void*)godot_icall_PhysicsMaterial_Ctor},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_get_singleton", (void*)godot_icall_PhysicsServer_get_singleton},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_Ctor", (void*)godot_icall_PhysicsShapeQueryParameters_Ctor},
	{"Godot.NativeCalls::godot_icall_PinJoint_Ctor", (void*)godot_icall_PinJoint_Ctor},
	{"Godot.NativeCalls::godot_icall_PinJoint2D_Ctor", (void*)godot_icall_PinJoint2D_Ctor},
	{"Godot.NativeCalls::godot_icall_PlaneMesh_Ctor", (void*)godot_icall_PlaneMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_PlaneShape_Ctor", (void*)godot_icall_PlaneShape_Ctor},
	{"Godot.NativeCalls::godot_icall_PointMesh_Ctor", (void*)godot_icall_PointMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_Polygon2D_Ctor", (void*)godot_icall_Polygon2D_Ctor},
	{"Godot.NativeCalls::godot_icall_PolygonPathFinder_Ctor", (void*)godot_icall_PolygonPathFinder_Ctor},
	{"Godot.NativeCalls::godot_icall_Popup_Ctor", (void*)godot_icall_Popup_Ctor},
	{"Godot.NativeCalls::godot_icall_PopupDialog_Ctor", (void*)godot_icall_PopupDialog_Ctor},
	{"Godot.NativeCalls::godot_icall_PopupMenu_Ctor", (void*)godot_icall_PopupMenu_Ctor},
	{"Godot.NativeCalls::godot_icall_PopupPanel_Ctor", (void*)godot_icall_PopupPanel_Ctor},
	{"Godot.NativeCalls::godot_icall_Position2D_Ctor", (void*)godot_icall_Position2D_Ctor},
	{"Godot.NativeCalls::godot_icall_Position3D_Ctor", (void*)godot_icall_Position3D_Ctor},
	{"Godot.NativeCalls::godot_icall_PrismMesh_Ctor", (void*)godot_icall_PrismMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_Ctor", (void*)godot_icall_ProceduralSky_Ctor},
	{"Godot.NativeCalls::godot_icall_ProgressBar_Ctor", (void*)godot_icall_ProgressBar_Ctor},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_get_singleton", (void*)godot_icall_ProjectSettings_get_singleton},
	{"Godot.NativeCalls::godot_icall_ProximityGroup_Ctor", (void*)godot_icall_ProximityGroup_Ctor},
	{"Godot.NativeCalls::godot_icall_ProxyTexture_Ctor", (void*)godot_icall_ProxyTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_QuadMesh_Ctor", (void*)godot_icall_QuadMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_RandomNumberGenerator_Ctor", (void*)godot_icall_RandomNumberGenerator_Ctor},
	{"Godot.NativeCalls::godot_icall_RayCast_Ctor", (void*)godot_icall_RayCast_Ctor},
	{"Godot.NativeCalls::godot_icall_RayCast2D_Ctor", (void*)godot_icall_RayCast2D_Ctor},
	{"Godot.NativeCalls::godot_icall_RayShape_Ctor", (void*)godot_icall_RayShape_Ctor},
	{"Godot.NativeCalls::godot_icall_RayShape2D_Ctor", (void*)godot_icall_RayShape2D_Ctor},
	{"Godot.NativeCalls::godot_icall_RectangleShape2D_Ctor", (void*)godot_icall_RectangleShape2D_Ctor},
	{"Godot.NativeCalls::godot_icall_RefCounted_Ctor", (void*)godot_icall_RefCounted_Ctor},
	{"Godot.NativeCalls::godot_icall_ReferenceRect_Ctor", (void*)godot_icall_ReferenceRect_Ctor},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_Ctor", (void*)godot_icall_ReflectionProbe_Ctor},
	{"Godot.NativeCalls::godot_icall_RegEx_Ctor", (void*)godot_icall_RegEx_Ctor},
	{"Godot.NativeCalls::godot_icall_RegExMatch_Ctor", (void*)godot_icall_RegExMatch_Ctor},
	{"Godot.NativeCalls::godot_icall_RemoteTransform_Ctor", (void*)godot_icall_RemoteTransform_Ctor},
	{"Godot.NativeCalls::godot_icall_RemoteTransform2D_Ctor", (void*)godot_icall_RemoteTransform2D_Ctor},
	{"Godot.NativeCalls::godot_icall_Resource_Ctor", (void*)godot_icall_Resource_Ctor},
	{"Godot.NativeCalls::godot_icall_ResourceFormatLoader_Ctor", (void*)godot_icall_ResourceFormatLoader_Ctor},
	{"Godot.NativeCalls::godot_icall_ResourceFormatSaver_Ctor", (void*)godot_icall_ResourceFormatSaver_Ctor},
	{"Godot.NativeCalls::godot_icall_ResourcePreloader_Ctor", (void*)godot_icall_ResourcePreloader_Ctor},
	{"Godot.NativeCalls::godot_icall_RichTextEffect_Ctor", (void*)godot_icall_RichTextEffect_Ctor},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_Ctor", (void*)godot_icall_RichTextLabel_Ctor},
	{"Godot.NativeCalls::godot_icall_RigidBody_Ctor", (void*)godot_icall_RigidBody_Ctor},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_Ctor", (void*)godot_icall_RigidBody2D_Ctor},
	{"Godot.NativeCalls::godot_icall_SceneTree_Ctor", (void*)godot_icall_SceneTree_Ctor},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_Ctor", (void*)godot_icall_ScrollContainer_Ctor},
	{"Godot.NativeCalls::godot_icall_SegmentShape2D_Ctor", (void*)godot_icall_SegmentShape2D_Ctor},
	{"Godot.NativeCalls::godot_icall_Shader_Ctor", (void*)godot_icall_Shader_Ctor},
	{"Godot.NativeCalls::godot_icall_ShaderMaterial_Ctor", (void*)godot_icall_ShaderMaterial_Ctor},
	{"Godot.NativeCalls::godot_icall_ShortCut_Ctor", (void*)godot_icall_ShortCut_Ctor},
	{"Godot.NativeCalls::godot_icall_Skeleton_Ctor", (void*)godot_icall_Skeleton_Ctor},
	{"Godot.NativeCalls::godot_icall_Skeleton2D_Ctor", (void*)godot_icall_Skeleton2D_Ctor},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_Ctor", (void*)godot_icall_SkeletonIK_Ctor},
	{"Godot.NativeCalls::godot_icall_Skin_Ctor", (void*)godot_icall_Skin_Ctor},
	{"Godot.NativeCalls::godot_icall_SliderJoint_Ctor", (void*)godot_icall_SliderJoint_Ctor},
	{"Godot.NativeCalls::godot_icall_SoftBody_Ctor", (void*)godot_icall_SoftBody_Ctor},
	{"Godot.NativeCalls::godot_icall_Spatial_Ctor", (void*)godot_icall_Spatial_Ctor},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_Ctor", (void*)godot_icall_SpatialMaterial_Ctor},
	{"Godot.NativeCalls::godot_icall_SpatialVelocityTracker_Ctor", (void*)godot_icall_SpatialVelocityTracker_Ctor},
	{"Godot.NativeCalls::godot_icall_SphereMesh_Ctor", (void*)godot_icall_SphereMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_SphereShape_Ctor", (void*)godot_icall_SphereShape_Ctor},
	{"Godot.NativeCalls::godot_icall_SpinBox_Ctor", (void*)godot_icall_SpinBox_Ctor},
	{"Godot.NativeCalls::godot_icall_SpotLight_Ctor", (void*)godot_icall_SpotLight_Ctor},
	{"Godot.NativeCalls::godot_icall_SpringArm_Ctor", (void*)godot_icall_SpringArm_Ctor},
	{"Godot.NativeCalls::godot_icall_Sprite_Ctor", (void*)godot_icall_Sprite_Ctor},
	{"Godot.NativeCalls::godot_icall_Sprite3D_Ctor", (void*)godot_icall_Sprite3D_Ctor},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_Ctor", (void*)godot_icall_SpriteFrames_Ctor},
	{"Godot.NativeCalls::godot_icall_StaticBody_Ctor", (void*)godot_icall_StaticBody_Ctor},
	{"Godot.NativeCalls::godot_icall_StaticBody2D_Ctor", (void*)godot_icall_StaticBody2D_Ctor},
	{"Godot.NativeCalls::godot_icall_StreamPeerBuffer_Ctor", (void*)godot_icall_StreamPeerBuffer_Ctor},
	{"Godot.NativeCalls::godot_icall_StreamPeerSSL_Ctor", (void*)godot_icall_StreamPeerSSL_Ctor},
	{"Godot.NativeCalls::godot_icall_StreamPeerTCP_Ctor", (void*)godot_icall_StreamPeerTCP_Ctor},
	{"Godot.NativeCalls::godot_icall_StreamTexture_Ctor", (void*)godot_icall_StreamTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_StyleBoxEmpty_Ctor", (void*)godot_icall_StyleBoxEmpty_Ctor},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_Ctor", (void*)godot_icall_StyleBoxFlat_Ctor},
	{"Godot.NativeCalls::godot_icall_StyleBoxLine_Ctor", (void*)godot_icall_StyleBoxLine_Ctor},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_Ctor", (void*)godot_icall_StyleBoxTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_Ctor", (void*)godot_icall_SurfaceTool_Ctor},
	{"Godot.NativeCalls::godot_icall_TCP_Server_Ctor", (void*)godot_icall_TCP_Server_Ctor},
	{"Godot.NativeCalls::godot_icall_TabContainer_Ctor", (void*)godot_icall_TabContainer_Ctor},
	{"Godot.NativeCalls::godot_icall_Tabs_Ctor", (void*)godot_icall_Tabs_Ctor},
	{"Godot.NativeCalls::godot_icall_TextEdit_Ctor", (void*)godot_icall_TextEdit_Ctor},
	{"Godot.NativeCalls::godot_icall_TextFile_Ctor", (void*)godot_icall_TextFile_Ctor},
	{"Godot.NativeCalls::godot_icall_Texture3D_Ctor", (void*)godot_icall_Texture3D_Ctor},
	{"Godot.NativeCalls::godot_icall_TextureArray_Ctor", (void*)godot_icall_TextureArray_Ctor},
	{"Godot.NativeCalls::godot_icall_TextureButton_Ctor", (void*)godot_icall_TextureButton_Ctor},
	{"Godot.NativeCalls::godot_icall_TextureProgress_Ctor", (void*)godot_icall_TextureProgress_Ctor},
	{"Godot.NativeCalls::godot_icall_TextureRect_Ctor", (void*)godot_icall_TextureRect_Ctor},
	{"Godot.NativeCalls::godot_icall_Theme_Ctor", (void*)godot_icall_Theme_Ctor},
	{"Godot.NativeCalls::godot_icall_TileMap_Ctor", (void*)godot_icall_TileMap_Ctor},
	{"Godot.NativeCalls::godot_icall_TileSet_Ctor", (void*)godot_icall_TileSet_Ctor},
	{"Godot.NativeCalls::godot_icall_Timer_Ctor", (void*)godot_icall_Timer_Ctor},
	{"Godot.NativeCalls::godot_icall_ToolButton_Ctor", (void*)godot_icall_ToolButton_Ctor},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_Ctor", (void*)godot_icall_TouchScreenButton_Ctor},
	{"Godot.NativeCalls::godot_icall_Translation_Ctor", (void*)godot_icall_Translation_Ctor},
	{"Godot.NativeCalls::godot_icall_TranslationServer_get_singleton", (void*)godot_icall_TranslationServer_get_singleton},
	{"Godot.NativeCalls::godot_icall_Tree_Ctor", (void*)godot_icall_Tree_Ctor},
	{"Godot.NativeCalls::godot_icall_TriangleMesh_Ctor", (void*)godot_icall_TriangleMesh_Ctor},
	{"Godot.NativeCalls::godot_icall_Tween_Ctor", (void*)godot_icall_Tween_Ctor},
	{"Godot.NativeCalls::godot_icall_UPNP_Ctor", (void*)godot_icall_UPNP_Ctor},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_Ctor", (void*)godot_icall_UPNPDevice_Ctor},
	{"Godot.NativeCalls::godot_icall_UndoRedo_Ctor", (void*)godot_icall_UndoRedo_Ctor},
	{"Godot.NativeCalls::godot_icall_VBoxContainer_Ctor", (void*)godot_icall_VBoxContainer_Ctor},
	{"Godot.NativeCalls::godot_icall_VScrollBar_Ctor", (void*)godot_icall_VScrollBar_Ctor},
	{"Godot.NativeCalls::godot_icall_VSeparator_Ctor", (void*)godot_icall_VSeparator_Ctor},
	{"Godot.NativeCalls::godot_icall_VSlider_Ctor", (void*)godot_icall_VSlider_Ctor},
	{"Godot.NativeCalls::godot_icall_VSplitContainer_Ctor", (void*)godot_icall_VSplitContainer_Ctor},
	{"Godot.NativeCalls::godot_icall_VehicleBody_Ctor", (void*)godot_icall_VehicleBody_Ctor},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_Ctor", (void*)godot_icall_VehicleWheel_Ctor},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_Ctor", (void*)godot_icall_VideoPlayer_Ctor},
	{"Godot.NativeCalls::godot_icall_Viewport_Ctor", (void*)godot_icall_Viewport_Ctor},
	{"Godot.NativeCalls::godot_icall_ViewportContainer_Ctor", (void*)godot_icall_ViewportContainer_Ctor},
	{"Godot.NativeCalls::godot_icall_ViewportTexture_Ctor", (void*)godot_icall_ViewportTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_VisibilityEnabler_Ctor", (void*)godot_icall_VisibilityEnabler_Ctor},
	{"Godot.NativeCalls::godot_icall_VisibilityEnabler2D_Ctor", (void*)godot_icall_VisibilityEnabler2D_Ctor},
	{"Godot.NativeCalls::godot_icall_VisibilityNotifier_Ctor", (void*)godot_icall_VisibilityNotifier_Ctor},
	{"Godot.NativeCalls::godot_icall_VisibilityNotifier2D_Ctor", (void*)godot_icall_VisibilityNotifier2D_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScript_Ctor", (void*)godot_icall_VisualScript_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptBasicTypeConstant_Ctor", (void*)godot_icall_VisualScriptBasicTypeConstant_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptBuiltinFunc_Ctor", (void*)godot_icall_VisualScriptBuiltinFunc_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptClassConstant_Ctor", (void*)godot_icall_VisualScriptClassConstant_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptComment_Ctor", (void*)godot_icall_VisualScriptComment_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptComposeArray_Ctor", (void*)godot_icall_VisualScriptComposeArray_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptCondition_Ctor", (void*)godot_icall_VisualScriptCondition_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptConstant_Ctor", (void*)godot_icall_VisualScriptConstant_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptConstructor_Ctor", (void*)godot_icall_VisualScriptConstructor_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptCustomNode_Ctor", (void*)godot_icall_VisualScriptCustomNode_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptDeconstruct_Ctor", (void*)godot_icall_VisualScriptDeconstruct_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptEmitSignal_Ctor", (void*)godot_icall_VisualScriptEmitSignal_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptEngineSingleton_Ctor", (void*)godot_icall_VisualScriptEngineSingleton_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptExpression_Ctor", (void*)godot_icall_VisualScriptExpression_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunction_Ctor", (void*)godot_icall_VisualScriptFunction_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_Ctor", (void*)godot_icall_VisualScriptFunctionCall_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionState_Ctor", (void*)godot_icall_VisualScriptFunctionState_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptGlobalConstant_Ctor", (void*)godot_icall_VisualScriptGlobalConstant_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptIndexGet_Ctor", (void*)godot_icall_VisualScriptIndexGet_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptIndexSet_Ctor", (void*)godot_icall_VisualScriptIndexSet_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptInputAction_Ctor", (void*)godot_icall_VisualScriptInputAction_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptIterator_Ctor", (void*)godot_icall_VisualScriptIterator_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptLocalVar_Ctor", (void*)godot_icall_VisualScriptLocalVar_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptLocalVarSet_Ctor", (void*)godot_icall_VisualScriptLocalVarSet_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptMathConstant_Ctor", (void*)godot_icall_VisualScriptMathConstant_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptOperator_Ctor", (void*)godot_icall_VisualScriptOperator_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptPreload_Ctor", (void*)godot_icall_VisualScriptPreload_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_Ctor", (void*)godot_icall_VisualScriptPropertyGet_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_Ctor", (void*)godot_icall_VisualScriptPropertySet_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptResourcePath_Ctor", (void*)godot_icall_VisualScriptResourcePath_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptReturn_Ctor", (void*)godot_icall_VisualScriptReturn_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptSceneNode_Ctor", (void*)godot_icall_VisualScriptSceneNode_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptSceneTree_Ctor", (void*)godot_icall_VisualScriptSceneTree_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptSelect_Ctor", (void*)godot_icall_VisualScriptSelect_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptSelf_Ctor", (void*)godot_icall_VisualScriptSelf_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptSequence_Ctor", (void*)godot_icall_VisualScriptSequence_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptSubCall_Ctor", (void*)godot_icall_VisualScriptSubCall_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptSwitch_Ctor", (void*)godot_icall_VisualScriptSwitch_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptTypeCast_Ctor", (void*)godot_icall_VisualScriptTypeCast_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptVariableGet_Ctor", (void*)godot_icall_VisualScriptVariableGet_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptVariableSet_Ctor", (void*)godot_icall_VisualScriptVariableSet_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptWhile_Ctor", (void*)godot_icall_VisualScriptWhile_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptYield_Ctor", (void*)godot_icall_VisualScriptYield_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualScriptYieldSignal_Ctor", (void*)godot_icall_VisualScriptYieldSignal_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualServer_get_singleton", (void*)godot_icall_VisualServer_get_singleton},
	{"Godot.NativeCalls::godot_icall_VisualShader_Ctor", (void*)godot_icall_VisualShader_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeBooleanConstant_Ctor", (void*)godot_icall_VisualShaderNodeBooleanConstant_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeBooleanUniform_Ctor", (void*)godot_icall_VisualShaderNodeBooleanUniform_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeColorConstant_Ctor", (void*)godot_icall_VisualShaderNodeColorConstant_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeColorFunc_Ctor", (void*)godot_icall_VisualShaderNodeColorFunc_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeColorOp_Ctor", (void*)godot_icall_VisualShaderNodeColorOp_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeColorUniform_Ctor", (void*)godot_icall_VisualShaderNodeColorUniform_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCompare_Ctor", (void*)godot_icall_VisualShaderNodeCompare_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCubeMap_Ctor", (void*)godot_icall_VisualShaderNodeCubeMap_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCubeMapUniform_Ctor", (void*)godot_icall_VisualShaderNodeCubeMapUniform_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCustom_Ctor", (void*)godot_icall_VisualShaderNodeCustom_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeDeterminant_Ctor", (void*)godot_icall_VisualShaderNodeDeterminant_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeDotProduct_Ctor", (void*)godot_icall_VisualShaderNodeDotProduct_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeExpression_Ctor", (void*)godot_icall_VisualShaderNodeExpression_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeFaceForward_Ctor", (void*)godot_icall_VisualShaderNodeFaceForward_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeFresnel_Ctor", (void*)godot_icall_VisualShaderNodeFresnel_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGlobalExpression_Ctor", (void*)godot_icall_VisualShaderNodeGlobalExpression_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_Ctor", (void*)godot_icall_VisualShaderNodeGroupBase_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeIf_Ctor", (void*)godot_icall_VisualShaderNodeIf_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeInput_Ctor", (void*)godot_icall_VisualShaderNodeInput_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeIs_Ctor", (void*)godot_icall_VisualShaderNodeIs_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeOuterProduct_Ctor", (void*)godot_icall_VisualShaderNodeOuterProduct_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarClamp_Ctor", (void*)godot_icall_VisualShaderNodeScalarClamp_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarConstant_Ctor", (void*)godot_icall_VisualShaderNodeScalarConstant_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarDerivativeFunc_Ctor", (void*)godot_icall_VisualShaderNodeScalarDerivativeFunc_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarFunc_Ctor", (void*)godot_icall_VisualShaderNodeScalarFunc_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarInterp_Ctor", (void*)godot_icall_VisualShaderNodeScalarInterp_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarOp_Ctor", (void*)godot_icall_VisualShaderNodeScalarOp_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarSmoothStep_Ctor", (void*)godot_icall_VisualShaderNodeScalarSmoothStep_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarSwitch_Ctor", (void*)godot_icall_VisualShaderNodeScalarSwitch_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarUniform_Ctor", (void*)godot_icall_VisualShaderNodeScalarUniform_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeSwitch_Ctor", (void*)godot_icall_VisualShaderNodeSwitch_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTexture_Ctor", (void*)godot_icall_VisualShaderNodeTexture_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTextureUniform_Ctor", (void*)godot_icall_VisualShaderNodeTextureUniform_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTextureUniformTriplanar_Ctor", (void*)godot_icall_VisualShaderNodeTextureUniformTriplanar_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformCompose_Ctor", (void*)godot_icall_VisualShaderNodeTransformCompose_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformConstant_Ctor", (void*)godot_icall_VisualShaderNodeTransformConstant_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformDecompose_Ctor", (void*)godot_icall_VisualShaderNodeTransformDecompose_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformFunc_Ctor", (void*)godot_icall_VisualShaderNodeTransformFunc_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformMult_Ctor", (void*)godot_icall_VisualShaderNodeTransformMult_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformUniform_Ctor", (void*)godot_icall_VisualShaderNodeTransformUniform_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformVecMult_Ctor", (void*)godot_icall_VisualShaderNodeTransformVecMult_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVec3Constant_Ctor", (void*)godot_icall_VisualShaderNodeVec3Constant_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVec3Uniform_Ctor", (void*)godot_icall_VisualShaderNodeVec3Uniform_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorClamp_Ctor", (void*)godot_icall_VisualShaderNodeVectorClamp_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorCompose_Ctor", (void*)godot_icall_VisualShaderNodeVectorCompose_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorDecompose_Ctor", (void*)godot_icall_VisualShaderNodeVectorDecompose_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorDerivativeFunc_Ctor", (void*)godot_icall_VisualShaderNodeVectorDerivativeFunc_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorDistance_Ctor", (void*)godot_icall_VisualShaderNodeVectorDistance_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorFunc_Ctor", (void*)godot_icall_VisualShaderNodeVectorFunc_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorInterp_Ctor", (void*)godot_icall_VisualShaderNodeVectorInterp_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorLen_Ctor", (void*)godot_icall_VisualShaderNodeVectorLen_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorOp_Ctor", (void*)godot_icall_VisualShaderNodeVectorOp_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorRefract_Ctor", (void*)godot_icall_VisualShaderNodeVectorRefract_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorScalarMix_Ctor", (void*)godot_icall_VisualShaderNodeVectorScalarMix_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorScalarSmoothStep_Ctor", (void*)godot_icall_VisualShaderNodeVectorScalarSmoothStep_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorScalarStep_Ctor", (void*)godot_icall_VisualShaderNodeVectorScalarStep_Ctor},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorSmoothStep_Ctor", (void*)godot_icall_VisualShaderNodeVectorSmoothStep_Ctor},
	{"Godot.NativeCalls::godot_icall_WeakRef_Ctor", (void*)godot_icall_WeakRef_Ctor},
	{"Godot.NativeCalls::godot_icall_WebRTCMultiplayer_Ctor", (void*)godot_icall_WebRTCMultiplayer_Ctor},
	{"Godot.NativeCalls::godot_icall_WebRTCPeerConnection_Ctor", (void*)godot_icall_WebRTCPeerConnection_Ctor},
	{"Godot.NativeCalls::godot_icall_WebSocketClient_Ctor", (void*)godot_icall_WebSocketClient_Ctor},
	{"Godot.NativeCalls::godot_icall_WebSocketPeer_Ctor", (void*)godot_icall_WebSocketPeer_Ctor},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_Ctor", (void*)godot_icall_WebSocketServer_Ctor},
	{"Godot.NativeCalls::godot_icall_WindowDialog_Ctor", (void*)godot_icall_WindowDialog_Ctor},
	{"Godot.NativeCalls::godot_icall_World_Ctor", (void*)godot_icall_World_Ctor},
	{"Godot.NativeCalls::godot_icall_World2D_Ctor", (void*)godot_icall_World2D_Ctor},
	{"Godot.NativeCalls::godot_icall_WorldEnvironment_Ctor", (void*)godot_icall_WorldEnvironment_Ctor},
	{"Godot.NativeCalls::godot_icall_X509Certificate_Ctor", (void*)godot_icall_X509Certificate_Ctor},
	{"Godot.NativeCalls::godot_icall_XMLParser_Ctor", (void*)godot_icall_XMLParser_Ctor},
	{"Godot.NativeCalls::godot_icall_YSort_Ctor", (void*)godot_icall_YSort_Ctor},
	{"Godot.NativeCalls::godot_icall__ClassDB_get_singleton", (void*)godot_icall__ClassDB_get_singleton},
	{"Godot.NativeCalls::godot_icall_Directory_Ctor", (void*)godot_icall_Directory_Ctor},
	{"Godot.NativeCalls::godot_icall__Engine_get_singleton", (void*)godot_icall__Engine_get_singleton},
	{"Godot.NativeCalls::godot_icall_File_Ctor", (void*)godot_icall_File_Ctor},
	{"Godot.NativeCalls::godot_icall__Geometry_get_singleton", (void*)godot_icall__Geometry_get_singleton},
	{"Godot.NativeCalls::godot_icall__GodotSharp_get_singleton", (void*)godot_icall__GodotSharp_get_singleton},
	{"Godot.NativeCalls::godot_icall__JSON_get_singleton", (void*)godot_icall__JSON_get_singleton},
	{"Godot.NativeCalls::godot_icall__Marshalls_get_singleton", (void*)godot_icall__Marshalls_get_singleton},
	{"Godot.NativeCalls::godot_icall_Mutex_Ctor", (void*)godot_icall_Mutex_Ctor},
	{"Godot.NativeCalls::godot_icall__OS_get_singleton", (void*)godot_icall__OS_get_singleton},
	{"Godot.NativeCalls::godot_icall__ResourceLoader_get_singleton", (void*)godot_icall__ResourceLoader_get_singleton},
	{"Godot.NativeCalls::godot_icall__ResourceSaver_get_singleton", (void*)godot_icall__ResourceSaver_get_singleton},
	{"Godot.NativeCalls::godot_icall_Semaphore_Ctor", (void*)godot_icall_Semaphore_Ctor},
	{"Godot.NativeCalls::godot_icall_Thread_Ctor", (void*)godot_icall_Thread_Ctor},
#ifdef TOOLS_ENABLED
	{"Godot.EditorNativeCalls::godot_icall_AnimationTrackEditPlugin_Ctor", (void*)godot_icall_AnimationTrackEditPlugin_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorExportPlugin_Ctor", (void*)godot_icall_EditorExportPlugin_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorFeatureProfile_Ctor", (void*)godot_icall_EditorFeatureProfile_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_Ctor", (void*)godot_icall_EditorFileDialog_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_Ctor", (void*)godot_icall_EditorFileSystemDirectory_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorImportPlugin_Ctor", (void*)godot_icall_EditorImportPlugin_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorInspector_Ctor", (void*)godot_icall_EditorInspector_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorInspectorPlugin_Ctor", (void*)godot_icall_EditorInspectorPlugin_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_Ctor", (void*)godot_icall_EditorPlugin_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_Ctor", (void*)godot_icall_EditorProperty_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorResourceConversionPlugin_Ctor", (void*)godot_icall_EditorResourceConversionPlugin_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorResourcePreviewGenerator_Ctor", (void*)godot_icall_EditorResourcePreviewGenerator_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorSceneImporter_Ctor", (void*)godot_icall_EditorSceneImporter_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorScenePostImport_Ctor", (void*)godot_icall_EditorScenePostImport_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorScript_Ctor", (void*)godot_icall_EditorScript_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorSelection_Ctor", (void*)godot_icall_EditorSelection_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmo_Ctor", (void*)godot_icall_EditorSpatialGizmo_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmoPlugin_Ctor", (void*)godot_icall_EditorSpatialGizmoPlugin_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpinSlider_Ctor", (void*)godot_icall_EditorSpinSlider_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_EditorVCSInterface_Ctor", (void*)godot_icall_EditorVCSInterface_Ctor},
	{"Godot.EditorNativeCalls::godot_icall_ScriptCreateDialog_Ctor", (void*)godot_icall_ScriptCreateDialog_Ctor},
	{"Godot.EditorNativeCalls::godot_icall__VisualScriptEditor_get_singleton", (void*)godot_icall__VisualScriptEditor_get_singleton},
#endif // TOOLS_ENABLED
	{"Godot.NativeCalls::godot_icall_ARVRAnchor_set_anchor_id_e1ae93bc", (void*)godot_icall_ARVRAnchor_set_anchor_id_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ARVRAnchor_get_anchor_id_1f886eb0", (void*)godot_icall_ARVRAnchor_get_anchor_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ARVRAnchor_get_anchor_name_97be4a2e", (void*)godot_icall_ARVRAnchor_get_anchor_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_ARVRAnchor_get_is_active_68fe5f59", (void*)godot_icall_ARVRAnchor_get_is_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ARVRAnchor_get_size_9b4ea24f", (void*)godot_icall_ARVRAnchor_get_size_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_ARVRAnchor_get_plane_8702117d", (void*)godot_icall_ARVRAnchor_get_plane_8702117d},
	{"Godot.NativeCalls::godot_icall_ARVRAnchor_get_mesh_1372d766", (void*)godot_icall_ARVRAnchor_get_mesh_1372d766},
	{"Godot.NativeCalls::godot_icall_ARVRController_set_controller_id_e1ae93bc", (void*)godot_icall_ARVRController_set_controller_id_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ARVRController_get_controller_id_1f886eb0", (void*)godot_icall_ARVRController_get_controller_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ARVRController_get_controller_name_97be4a2e", (void*)godot_icall_ARVRController_get_controller_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_ARVRController_get_joystick_id_1f886eb0", (void*)godot_icall_ARVRController_get_joystick_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ARVRController_is_button_pressed_b835dea5", (void*)godot_icall_ARVRController_is_button_pressed_b835dea5},
	{"Godot.NativeCalls::godot_icall_ARVRController_get_joystick_axis_c671df3a", (void*)godot_icall_ARVRController_get_joystick_axis_c671df3a},
	{"Godot.NativeCalls::godot_icall_ARVRController_get_is_active_68fe5f59", (void*)godot_icall_ARVRController_get_is_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ARVRController_get_hand_d5e4e3f7", (void*)godot_icall_ARVRController_get_hand_d5e4e3f7},
	{"Godot.NativeCalls::godot_icall_ARVRController_get_rumble_4edcd7a9", (void*)godot_icall_ARVRController_get_rumble_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ARVRController_set_rumble_904508bb", (void*)godot_icall_ARVRController_set_rumble_904508bb},
	{"Godot.NativeCalls::godot_icall_ARVRController_get_mesh_1372d766", (void*)godot_icall_ARVRController_get_mesh_1372d766},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_get_name_97be4a2e", (void*)godot_icall_ARVRInterface_get_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_get_capabilities_1f886eb0", (void*)godot_icall_ARVRInterface_get_capabilities_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_is_primary_68fe5f59", (void*)godot_icall_ARVRInterface_is_primary_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_set_is_primary_ba24800b", (void*)godot_icall_ARVRInterface_set_is_primary_ba24800b},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_is_initialized_68fe5f59", (void*)godot_icall_ARVRInterface_is_initialized_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_set_is_initialized_ba24800b", (void*)godot_icall_ARVRInterface_set_is_initialized_ba24800b},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_initialize_68fe5f59", (void*)godot_icall_ARVRInterface_initialize_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_uninitialize_c8e54a7b", (void*)godot_icall_ARVRInterface_uninitialize_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_get_tracking_status_f6a5f17b", (void*)godot_icall_ARVRInterface_get_tracking_status_f6a5f17b},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_get_render_targetsize_9b4ea24e", (void*)godot_icall_ARVRInterface_get_render_targetsize_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_is_stereo_68fe5f59", (void*)godot_icall_ARVRInterface_is_stereo_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_get_anchor_detection_is_enabled_68fe5f59", (void*)godot_icall_ARVRInterface_get_anchor_detection_is_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_set_anchor_detection_is_enabled_ba24800b", (void*)godot_icall_ARVRInterface_set_anchor_detection_is_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_ARVRInterface_get_camera_feed_id_1f886eb0", (void*)godot_icall_ARVRInterface_get_camera_feed_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ARVROrigin_set_world_scale_904508bb", (void*)godot_icall_ARVROrigin_set_world_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_ARVROrigin_get_world_scale_4edcd7a9", (void*)godot_icall_ARVROrigin_get_world_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_get_type_3def433", (void*)godot_icall_ARVRPositionalTracker_get_type_3def433},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_get_name_97be4a2e", (void*)godot_icall_ARVRPositionalTracker_get_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_get_joy_id_1f886eb0", (void*)godot_icall_ARVRPositionalTracker_get_joy_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_get_tracks_orientation_68fe5f59", (void*)godot_icall_ARVRPositionalTracker_get_tracks_orientation_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_get_orientation_4746c0fd", (void*)godot_icall_ARVRPositionalTracker_get_orientation_4746c0fd},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_get_tracks_position_68fe5f59", (void*)godot_icall_ARVRPositionalTracker_get_tracks_position_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_get_position_9b4ea24f", (void*)godot_icall_ARVRPositionalTracker_get_position_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_get_hand_d5e4e3f7", (void*)godot_icall_ARVRPositionalTracker_get_hand_d5e4e3f7},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_get_transform_8cf6bc63", (void*)godot_icall_ARVRPositionalTracker_get_transform_8cf6bc63},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_get_mesh_1372d766", (void*)godot_icall_ARVRPositionalTracker_get_mesh_1372d766},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_get_rumble_4edcd7a9", (void*)godot_icall_ARVRPositionalTracker_get_rumble_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ARVRPositionalTracker_set_rumble_904508bb", (void*)godot_icall_ARVRPositionalTracker_set_rumble_904508bb},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_world_scale_4edcd7a9", (void*)godot_icall_ARVRServer_get_world_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ARVRServer_set_world_scale_904508bb", (void*)godot_icall_ARVRServer_set_world_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_reference_frame_a3fb649b", (void*)godot_icall_ARVRServer_get_reference_frame_a3fb649b},
	{"Godot.NativeCalls::godot_icall_ARVRServer_center_on_hmd_cc7f5ed8", (void*)godot_icall_ARVRServer_center_on_hmd_cc7f5ed8},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_hmd_transform_a3fb649b", (void*)godot_icall_ARVRServer_get_hmd_transform_a3fb649b},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_interface_count_1f886eb0", (void*)godot_icall_ARVRServer_get_interface_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_interface_7b663ebe", (void*)godot_icall_ARVRServer_get_interface_7b663ebe},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_interfaces_d80382d4", (void*)godot_icall_ARVRServer_get_interfaces_d80382d4},
	{"Godot.NativeCalls::godot_icall_ARVRServer_find_interface_39e1471b", (void*)godot_icall_ARVRServer_find_interface_39e1471b},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_tracker_count_1f886eb0", (void*)godot_icall_ARVRServer_get_tracker_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_tracker_f630cd43", (void*)godot_icall_ARVRServer_get_tracker_f630cd43},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_primary_interface_884d6079", (void*)godot_icall_ARVRServer_get_primary_interface_884d6079},
	{"Godot.NativeCalls::godot_icall_ARVRServer_set_primary_interface_5af581eb", (void*)godot_icall_ARVRServer_set_primary_interface_5af581eb},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_last_process_usec_4bb7c348", (void*)godot_icall_ARVRServer_get_last_process_usec_4bb7c348},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_last_commit_usec_4bb7c348", (void*)godot_icall_ARVRServer_get_last_commit_usec_4bb7c348},
	{"Godot.NativeCalls::godot_icall_ARVRServer_get_last_frame_usec_4bb7c348", (void*)godot_icall_ARVRServer_get_last_frame_usec_4bb7c348},
	{"Godot.NativeCalls::godot_icall_AStar_get_available_point_id_1f886eb0", (void*)godot_icall_AStar_get_available_point_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AStar_add_point_36094f7f", (void*)godot_icall_AStar_add_point_36094f7f},
	{"Godot.NativeCalls::godot_icall_AStar_get_point_position_237286f3", (void*)godot_icall_AStar_get_point_position_237286f3},
	{"Godot.NativeCalls::godot_icall_AStar_set_point_position_3c383c4b", (void*)godot_icall_AStar_set_point_position_3c383c4b},
	{"Godot.NativeCalls::godot_icall_AStar_get_point_weight_scale_c671df3a", (void*)godot_icall_AStar_get_point_weight_scale_c671df3a},
	{"Godot.NativeCalls::godot_icall_AStar_set_point_weight_scale_708a76ed", (void*)godot_icall_AStar_set_point_weight_scale_708a76ed},
	{"Godot.NativeCalls::godot_icall_AStar_remove_point_e1ae93bc", (void*)godot_icall_AStar_remove_point_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AStar_has_point_7f690926", (void*)godot_icall_AStar_has_point_7f690926},
	{"Godot.NativeCalls::godot_icall_AStar_get_point_connections_67f65c91", (void*)godot_icall_AStar_get_point_connections_67f65c91},
	{"Godot.NativeCalls::godot_icall_AStar_get_points_d80382d4", (void*)godot_icall_AStar_get_points_d80382d4},
	{"Godot.NativeCalls::godot_icall_AStar_set_point_disabled_4ae8febd", (void*)godot_icall_AStar_set_point_disabled_4ae8febd},
	{"Godot.NativeCalls::godot_icall_AStar_is_point_disabled_7f690926", (void*)godot_icall_AStar_is_point_disabled_7f690926},
	{"Godot.NativeCalls::godot_icall_AStar_connect_points_c76f61ef", (void*)godot_icall_AStar_connect_points_c76f61ef},
	{"Godot.NativeCalls::godot_icall_AStar_disconnect_points_c76f61ef", (void*)godot_icall_AStar_disconnect_points_c76f61ef},
	{"Godot.NativeCalls::godot_icall_AStar_are_points_connected_ae770043", (void*)godot_icall_AStar_are_points_connected_ae770043},
	{"Godot.NativeCalls::godot_icall_AStar_get_point_count_1f886eb0", (void*)godot_icall_AStar_get_point_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AStar_get_point_capacity_1f886eb0", (void*)godot_icall_AStar_get_point_capacity_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AStar_reserve_space_e1ae93bc", (void*)godot_icall_AStar_reserve_space_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AStar_clear_c8e54a7b", (void*)godot_icall_AStar_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AStar_get_closest_point_25107057", (void*)godot_icall_AStar_get_closest_point_25107057},
	{"Godot.NativeCalls::godot_icall_AStar_get_closest_position_in_segment_af4cfa14", (void*)godot_icall_AStar_get_closest_position_in_segment_af4cfa14},
	{"Godot.NativeCalls::godot_icall_AStar_get_point_path_4de928b5", (void*)godot_icall_AStar_get_point_path_4de928b5},
	{"Godot.NativeCalls::godot_icall_AStar_get_id_path_b2a2ff5c", (void*)godot_icall_AStar_get_id_path_b2a2ff5c},
	{"Godot.NativeCalls::godot_icall_AStar2D_get_available_point_id_1f886eb0", (void*)godot_icall_AStar2D_get_available_point_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AStar2D_add_point_36094ebe", (void*)godot_icall_AStar2D_add_point_36094ebe},
	{"Godot.NativeCalls::godot_icall_AStar2D_get_point_position_23728632", (void*)godot_icall_AStar2D_get_point_position_23728632},
	{"Godot.NativeCalls::godot_icall_AStar2D_set_point_position_3c383c4a", (void*)godot_icall_AStar2D_set_point_position_3c383c4a},
	{"Godot.NativeCalls::godot_icall_AStar2D_get_point_weight_scale_c671df3a", (void*)godot_icall_AStar2D_get_point_weight_scale_c671df3a},
	{"Godot.NativeCalls::godot_icall_AStar2D_set_point_weight_scale_708a76ed", (void*)godot_icall_AStar2D_set_point_weight_scale_708a76ed},
	{"Godot.NativeCalls::godot_icall_AStar2D_remove_point_e1ae93bc", (void*)godot_icall_AStar2D_remove_point_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AStar2D_has_point_7f690926", (void*)godot_icall_AStar2D_has_point_7f690926},
	{"Godot.NativeCalls::godot_icall_AStar2D_get_point_connections_67f65c91", (void*)godot_icall_AStar2D_get_point_connections_67f65c91},
	{"Godot.NativeCalls::godot_icall_AStar2D_get_points_d80382d4", (void*)godot_icall_AStar2D_get_points_d80382d4},
	{"Godot.NativeCalls::godot_icall_AStar2D_set_point_disabled_4ae8febd", (void*)godot_icall_AStar2D_set_point_disabled_4ae8febd},
	{"Godot.NativeCalls::godot_icall_AStar2D_is_point_disabled_7f690926", (void*)godot_icall_AStar2D_is_point_disabled_7f690926},
	{"Godot.NativeCalls::godot_icall_AStar2D_connect_points_c76f61ef", (void*)godot_icall_AStar2D_connect_points_c76f61ef},
	{"Godot.NativeCalls::godot_icall_AStar2D_disconnect_points_807eefe4", (void*)godot_icall_AStar2D_disconnect_points_807eefe4},
	{"Godot.NativeCalls::godot_icall_AStar2D_are_points_connected_c8b57d14", (void*)godot_icall_AStar2D_are_points_connected_c8b57d14},
	{"Godot.NativeCalls::godot_icall_AStar2D_get_point_count_1f886eb0", (void*)godot_icall_AStar2D_get_point_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AStar2D_get_point_capacity_1f886eb0", (void*)godot_icall_AStar2D_get_point_capacity_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AStar2D_reserve_space_e1ae93bc", (void*)godot_icall_AStar2D_reserve_space_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AStar2D_clear_c8e54a7b", (void*)godot_icall_AStar2D_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AStar2D_get_closest_point_25107011", (void*)godot_icall_AStar2D_get_closest_point_25107011},
	{"Godot.NativeCalls::godot_icall_AStar2D_get_closest_position_in_segment_af4cfa54", (void*)godot_icall_AStar2D_get_closest_position_in_segment_af4cfa54},
	{"Godot.NativeCalls::godot_icall_AStar2D_get_point_path_927c2e4c", (void*)godot_icall_AStar2D_get_point_path_927c2e4c},
	{"Godot.NativeCalls::godot_icall_AStar2D_get_id_path_b2a2ff5c", (void*)godot_icall_AStar2D_get_id_path_b2a2ff5c},
	{"Godot.NativeCalls::godot_icall_AcceptDialog_get_ok_e2789eb5", (void*)godot_icall_AcceptDialog_get_ok_e2789eb5},
	{"Godot.NativeCalls::godot_icall_AcceptDialog_get_label_61b2c65d", (void*)godot_icall_AcceptDialog_get_label_61b2c65d},
	{"Godot.NativeCalls::godot_icall_AcceptDialog_set_hide_on_ok_ba24800b", (void*)godot_icall_AcceptDialog_set_hide_on_ok_ba24800b},
	{"Godot.NativeCalls::godot_icall_AcceptDialog_get_hide_on_ok_68fe5f59", (void*)godot_icall_AcceptDialog_get_hide_on_ok_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AcceptDialog_add_button_bb9add4", (void*)godot_icall_AcceptDialog_add_button_bb9add4},
	{"Godot.NativeCalls::godot_icall_AcceptDialog_add_cancel_b17e1b44", (void*)godot_icall_AcceptDialog_add_cancel_b17e1b44},
	{"Godot.NativeCalls::godot_icall_AcceptDialog_register_text_enter_598860a7", (void*)godot_icall_AcceptDialog_register_text_enter_598860a7},
	{"Godot.NativeCalls::godot_icall_AcceptDialog_set_text_2f29e819", (void*)godot_icall_AcceptDialog_set_text_2f29e819},
	{"Godot.NativeCalls::godot_icall_AcceptDialog_get_text_97be4a2e", (void*)godot_icall_AcceptDialog_get_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AcceptDialog_set_autowrap_ba24800b", (void*)godot_icall_AcceptDialog_set_autowrap_ba24800b},
	{"Godot.NativeCalls::godot_icall_AcceptDialog_has_autowrap_68fe5f59", (void*)godot_icall_AcceptDialog_has_autowrap_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_set_sprite_frames_abe58830", (void*)godot_icall_AnimatedSprite_set_sprite_frames_abe58830},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_get_sprite_frames_593d5734", (void*)godot_icall_AnimatedSprite_get_sprite_frames_593d5734},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_set_animation_2f29e819", (void*)godot_icall_AnimatedSprite_set_animation_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_get_animation_97be4a2e", (void*)godot_icall_AnimatedSprite_get_animation_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite__set_playing_ba24800b", (void*)godot_icall_AnimatedSprite__set_playing_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite__is_playing_68fe5f59", (void*)godot_icall_AnimatedSprite__is_playing_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_play_f253b141", (void*)godot_icall_AnimatedSprite_play_f253b141},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_stop_c8e54a7b", (void*)godot_icall_AnimatedSprite_stop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_is_playing_68fe5f59", (void*)godot_icall_AnimatedSprite_is_playing_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_set_centered_ba24800b", (void*)godot_icall_AnimatedSprite_set_centered_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_is_centered_68fe5f59", (void*)godot_icall_AnimatedSprite_is_centered_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_set_offset_6df7471e", (void*)godot_icall_AnimatedSprite_set_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_get_offset_9b4ea24e", (void*)godot_icall_AnimatedSprite_get_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_set_flip_h_ba24800b", (void*)godot_icall_AnimatedSprite_set_flip_h_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_is_flipped_h_68fe5f59", (void*)godot_icall_AnimatedSprite_is_flipped_h_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_set_flip_v_ba24800b", (void*)godot_icall_AnimatedSprite_set_flip_v_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_is_flipped_v_68fe5f59", (void*)godot_icall_AnimatedSprite_is_flipped_v_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_set_frame_e1ae93bc", (void*)godot_icall_AnimatedSprite_set_frame_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_get_frame_1f886eb0", (void*)godot_icall_AnimatedSprite_get_frame_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_set_speed_scale_904508bb", (void*)godot_icall_AnimatedSprite_set_speed_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite_get_speed_scale_4edcd7a9", (void*)godot_icall_AnimatedSprite_get_speed_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite3D_set_sprite_frames_abe58830", (void*)godot_icall_AnimatedSprite3D_set_sprite_frames_abe58830},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite3D_get_sprite_frames_593d5734", (void*)godot_icall_AnimatedSprite3D_get_sprite_frames_593d5734},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite3D_set_animation_2f29e819", (void*)godot_icall_AnimatedSprite3D_set_animation_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite3D_get_animation_97be4a2e", (void*)godot_icall_AnimatedSprite3D_get_animation_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite3D__set_playing_ba24800b", (void*)godot_icall_AnimatedSprite3D__set_playing_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite3D__is_playing_68fe5f59", (void*)godot_icall_AnimatedSprite3D__is_playing_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite3D_play_2f29e819", (void*)godot_icall_AnimatedSprite3D_play_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite3D_stop_c8e54a7b", (void*)godot_icall_AnimatedSprite3D_stop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite3D_is_playing_68fe5f59", (void*)godot_icall_AnimatedSprite3D_is_playing_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite3D_set_frame_e1ae93bc", (void*)godot_icall_AnimatedSprite3D_set_frame_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AnimatedSprite3D_get_frame_1f886eb0", (void*)godot_icall_AnimatedSprite3D_get_frame_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AnimatedTexture_set_frames_e1ae93bc", (void*)godot_icall_AnimatedTexture_set_frames_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AnimatedTexture_get_frames_1f886eb0", (void*)godot_icall_AnimatedTexture_get_frames_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AnimatedTexture_set_fps_904508bb", (void*)godot_icall_AnimatedTexture_set_fps_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimatedTexture_get_fps_4edcd7a9", (void*)godot_icall_AnimatedTexture_get_fps_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimatedTexture_set_frame_texture_f20a84e", (void*)godot_icall_AnimatedTexture_set_frame_texture_f20a84e},
	{"Godot.NativeCalls::godot_icall_AnimatedTexture_get_frame_texture_561b2831", (void*)godot_icall_AnimatedTexture_get_frame_texture_561b2831},
	{"Godot.NativeCalls::godot_icall_AnimatedTexture_set_frame_delay_708a76ed", (void*)godot_icall_AnimatedTexture_set_frame_delay_708a76ed},
	{"Godot.NativeCalls::godot_icall_AnimatedTexture_get_frame_delay_c671df3a", (void*)godot_icall_AnimatedTexture_get_frame_delay_c671df3a},
	{"Godot.NativeCalls::godot_icall_Animation_add_track_cbc2cf56", (void*)godot_icall_Animation_add_track_cbc2cf56},
	{"Godot.NativeCalls::godot_icall_Animation_remove_track_e1ae93bc", (void*)godot_icall_Animation_remove_track_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Animation_get_track_count_1f886eb0", (void*)godot_icall_Animation_get_track_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Animation_track_get_type_bb8cc7be", (void*)godot_icall_Animation_track_get_type_bb8cc7be},
	{"Godot.NativeCalls::godot_icall_Animation_track_get_path_1640f2b", (void*)godot_icall_Animation_track_get_path_1640f2b},
	{"Godot.NativeCalls::godot_icall_Animation_track_set_path_e024f6ac", (void*)godot_icall_Animation_track_set_path_e024f6ac},
	{"Godot.NativeCalls::godot_icall_Animation_find_track_58fff67d", (void*)godot_icall_Animation_find_track_58fff67d},
	{"Godot.NativeCalls::godot_icall_Animation_track_move_up_e1ae93bc", (void*)godot_icall_Animation_track_move_up_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Animation_track_move_down_e1ae93bc", (void*)godot_icall_Animation_track_move_down_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Animation_track_move_to_807eefe4", (void*)godot_icall_Animation_track_move_to_807eefe4},
	{"Godot.NativeCalls::godot_icall_Animation_track_swap_807eefe4", (void*)godot_icall_Animation_track_swap_807eefe4},
	{"Godot.NativeCalls::godot_icall_Animation_track_set_imported_4ae8febd", (void*)godot_icall_Animation_track_set_imported_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Animation_track_is_imported_7f690926", (void*)godot_icall_Animation_track_is_imported_7f690926},
	{"Godot.NativeCalls::godot_icall_Animation_track_set_enabled_4ae8febd", (void*)godot_icall_Animation_track_set_enabled_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Animation_track_is_enabled_7f690926", (void*)godot_icall_Animation_track_is_enabled_7f690926},
	{"Godot.NativeCalls::godot_icall_Animation_transform_track_insert_key_8357667f", (void*)godot_icall_Animation_transform_track_insert_key_8357667f},
	{"Godot.NativeCalls::godot_icall_Animation_track_insert_key_392ade45", (void*)godot_icall_Animation_track_insert_key_392ade45},
	{"Godot.NativeCalls::godot_icall_Animation_track_remove_key_807eefe4", (void*)godot_icall_Animation_track_remove_key_807eefe4},
	{"Godot.NativeCalls::godot_icall_Animation_track_remove_key_at_position_708a76ed", (void*)godot_icall_Animation_track_remove_key_at_position_708a76ed},
	{"Godot.NativeCalls::godot_icall_Animation_track_set_key_value_fede7226", (void*)godot_icall_Animation_track_set_key_value_fede7226},
	{"Godot.NativeCalls::godot_icall_Animation_track_set_key_transition_ac8ee9bf", (void*)godot_icall_Animation_track_set_key_transition_ac8ee9bf},
	{"Godot.NativeCalls::godot_icall_Animation_track_set_key_time_ac8ee9bf", (void*)godot_icall_Animation_track_set_key_time_ac8ee9bf},
	{"Godot.NativeCalls::godot_icall_Animation_track_get_key_transition_4da5f18d", (void*)godot_icall_Animation_track_get_key_transition_4da5f18d},
	{"Godot.NativeCalls::godot_icall_Animation_track_get_key_count_b835dea5", (void*)godot_icall_Animation_track_get_key_count_b835dea5},
	{"Godot.NativeCalls::godot_icall_Animation_track_get_key_value_fd743645", (void*)godot_icall_Animation_track_get_key_value_fd743645},
	{"Godot.NativeCalls::godot_icall_Animation_track_get_key_time_4da5f18d", (void*)godot_icall_Animation_track_get_key_time_4da5f18d},
	{"Godot.NativeCalls::godot_icall_Animation_track_find_key_c6209323", (void*)godot_icall_Animation_track_find_key_c6209323},
	{"Godot.NativeCalls::godot_icall_Animation_track_set_interpolation_type_7e4973f5", (void*)godot_icall_Animation_track_set_interpolation_type_7e4973f5},
	{"Godot.NativeCalls::godot_icall_Animation_track_get_interpolation_type_608357f0", (void*)godot_icall_Animation_track_get_interpolation_type_608357f0},
	{"Godot.NativeCalls::godot_icall_Animation_track_set_interpolation_loop_wrap_4ae8febd", (void*)godot_icall_Animation_track_set_interpolation_loop_wrap_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Animation_track_get_interpolation_loop_wrap_7f690926", (void*)godot_icall_Animation_track_get_interpolation_loop_wrap_7f690926},
	{"Godot.NativeCalls::godot_icall_Animation_transform_track_interpolate_c5ebfde", (void*)godot_icall_Animation_transform_track_interpolate_c5ebfde},
	{"Godot.NativeCalls::godot_icall_Animation_value_track_set_update_mode_54480b3f", (void*)godot_icall_Animation_value_track_set_update_mode_54480b3f},
	{"Godot.NativeCalls::godot_icall_Animation_value_track_get_update_mode_b1d4cb04", (void*)godot_icall_Animation_value_track_get_update_mode_b1d4cb04},
	{"Godot.NativeCalls::godot_icall_Animation_value_track_get_key_indices_be9f6b60", (void*)godot_icall_Animation_value_track_get_key_indices_be9f6b60},
	{"Godot.NativeCalls::godot_icall_Animation_method_track_get_key_indices_be9f6b60", (void*)godot_icall_Animation_method_track_get_key_indices_be9f6b60},
	{"Godot.NativeCalls::godot_icall_Animation_method_track_get_name_4aee5da5", (void*)godot_icall_Animation_method_track_get_name_4aee5da5},
	{"Godot.NativeCalls::godot_icall_Animation_method_track_get_params_dd0526d1", (void*)godot_icall_Animation_method_track_get_params_dd0526d1},
	{"Godot.NativeCalls::godot_icall_Animation_bezier_track_insert_key_3c0d4033", (void*)godot_icall_Animation_bezier_track_insert_key_3c0d4033},
	{"Godot.NativeCalls::godot_icall_Animation_bezier_track_set_key_value_ac8ee9bf", (void*)godot_icall_Animation_bezier_track_set_key_value_ac8ee9bf},
	{"Godot.NativeCalls::godot_icall_Animation_bezier_track_set_key_in_handle_f91f3ee4", (void*)godot_icall_Animation_bezier_track_set_key_in_handle_f91f3ee4},
	{"Godot.NativeCalls::godot_icall_Animation_bezier_track_set_key_out_handle_f91f3ee4", (void*)godot_icall_Animation_bezier_track_set_key_out_handle_f91f3ee4},
	{"Godot.NativeCalls::godot_icall_Animation_bezier_track_get_key_value_4da5f18d", (void*)godot_icall_Animation_bezier_track_get_key_value_4da5f18d},
	{"Godot.NativeCalls::godot_icall_Animation_bezier_track_get_key_in_handle_804c9047", (void*)godot_icall_Animation_bezier_track_get_key_in_handle_804c9047},
	{"Godot.NativeCalls::godot_icall_Animation_bezier_track_get_key_out_handle_804c9047", (void*)godot_icall_Animation_bezier_track_get_key_out_handle_804c9047},
	{"Godot.NativeCalls::godot_icall_Animation_bezier_track_interpolate_7d59488a", (void*)godot_icall_Animation_bezier_track_interpolate_7d59488a},
	{"Godot.NativeCalls::godot_icall_Animation_audio_track_insert_key_2ba73f6b", (void*)godot_icall_Animation_audio_track_insert_key_2ba73f6b},
	{"Godot.NativeCalls::godot_icall_Animation_audio_track_set_key_stream_230432cf", (void*)godot_icall_Animation_audio_track_set_key_stream_230432cf},
	{"Godot.NativeCalls::godot_icall_Animation_audio_track_set_key_start_offset_ac8ee9bf", (void*)godot_icall_Animation_audio_track_set_key_start_offset_ac8ee9bf},
	{"Godot.NativeCalls::godot_icall_Animation_audio_track_set_key_end_offset_ac8ee9bf", (void*)godot_icall_Animation_audio_track_set_key_end_offset_ac8ee9bf},
	{"Godot.NativeCalls::godot_icall_Animation_audio_track_get_key_stream_75ed72c6", (void*)godot_icall_Animation_audio_track_get_key_stream_75ed72c6},
	{"Godot.NativeCalls::godot_icall_Animation_audio_track_get_key_start_offset_4da5f18d", (void*)godot_icall_Animation_audio_track_get_key_start_offset_4da5f18d},
	{"Godot.NativeCalls::godot_icall_Animation_audio_track_get_key_end_offset_4da5f18d", (void*)godot_icall_Animation_audio_track_get_key_end_offset_4da5f18d},
	{"Godot.NativeCalls::godot_icall_Animation_animation_track_insert_key_5b3bbb51", (void*)godot_icall_Animation_animation_track_insert_key_5b3bbb51},
	{"Godot.NativeCalls::godot_icall_Animation_animation_track_set_key_animation_3c628a19", (void*)godot_icall_Animation_animation_track_set_key_animation_3c628a19},
	{"Godot.NativeCalls::godot_icall_Animation_animation_track_get_key_animation_4aee5da5", (void*)godot_icall_Animation_animation_track_get_key_animation_4aee5da5},
	{"Godot.NativeCalls::godot_icall_Animation_set_length_904508bb", (void*)godot_icall_Animation_set_length_904508bb},
	{"Godot.NativeCalls::godot_icall_Animation_get_length_4edcd7a9", (void*)godot_icall_Animation_get_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Animation_set_loop_ba24800b", (void*)godot_icall_Animation_set_loop_ba24800b},
	{"Godot.NativeCalls::godot_icall_Animation_has_loop_68fe5f59", (void*)godot_icall_Animation_has_loop_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Animation_set_step_904508bb", (void*)godot_icall_Animation_set_step_904508bb},
	{"Godot.NativeCalls::godot_icall_Animation_get_step_4edcd7a9", (void*)godot_icall_Animation_get_step_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Animation_clear_c8e54a7b", (void*)godot_icall_Animation_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Animation_copy_track_30d41189", (void*)godot_icall_Animation_copy_track_30d41189},
	{"Godot.NativeCalls::godot_icall_AnimationNode_get_input_count_1f886eb0", (void*)godot_icall_AnimationNode_get_input_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AnimationNode_get_input_name_44fc4c5a", (void*)godot_icall_AnimationNode_get_input_name_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_AnimationNode_add_input_6964ff3e", (void*)godot_icall_AnimationNode_add_input_6964ff3e},
	{"Godot.NativeCalls::godot_icall_AnimationNode_remove_input_e1ae93bc", (void*)godot_icall_AnimationNode_remove_input_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AnimationNode_set_filter_path_7e2f7417", (void*)godot_icall_AnimationNode_set_filter_path_7e2f7417},
	{"Godot.NativeCalls::godot_icall_AnimationNode_is_path_filtered_dfaf606e", (void*)godot_icall_AnimationNode_is_path_filtered_dfaf606e},
	{"Godot.NativeCalls::godot_icall_AnimationNode_set_filter_enabled_ba24800b", (void*)godot_icall_AnimationNode_set_filter_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationNode_is_filter_enabled_68fe5f59", (void*)godot_icall_AnimationNode_is_filter_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationNode__set_filters_2923a790", (void*)godot_icall_AnimationNode__set_filters_2923a790},
	{"Godot.NativeCalls::godot_icall_AnimationNode__get_filters_d80382d4", (void*)godot_icall_AnimationNode__get_filters_d80382d4},
	{"Godot.NativeCalls::godot_icall_AnimationNode_blend_animation_dab76a1f", (void*)godot_icall_AnimationNode_blend_animation_dab76a1f},
	{"Godot.NativeCalls::godot_icall_AnimationNode_blend_node_add2e684", (void*)godot_icall_AnimationNode_blend_node_add2e684},
	{"Godot.NativeCalls::godot_icall_AnimationNode_blend_input_9e42561b", (void*)godot_icall_AnimationNode_blend_input_9e42561b},
	{"Godot.NativeCalls::godot_icall_AnimationNode_set_parameter_3a208116", (void*)godot_icall_AnimationNode_set_parameter_3a208116},
	{"Godot.NativeCalls::godot_icall_AnimationNode_get_parameter_6732bfd8", (void*)godot_icall_AnimationNode_get_parameter_6732bfd8},
	{"Godot.NativeCalls::godot_icall_AnimationNodeAdd2_set_use_sync_ba24800b", (void*)godot_icall_AnimationNodeAdd2_set_use_sync_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationNodeAdd2_is_using_sync_68fe5f59", (void*)godot_icall_AnimationNodeAdd2_is_using_sync_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationNodeAdd3_set_use_sync_ba24800b", (void*)godot_icall_AnimationNodeAdd3_set_use_sync_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationNodeAdd3_is_using_sync_68fe5f59", (void*)godot_icall_AnimationNodeAdd3_is_using_sync_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationNodeAnimation_set_animation_2f29e819", (void*)godot_icall_AnimationNodeAnimation_set_animation_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationNodeAnimation_get_animation_97be4a2e", (void*)godot_icall_AnimationNodeAnimation_get_animation_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlend2_set_use_sync_ba24800b", (void*)godot_icall_AnimationNodeBlend2_set_use_sync_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlend2_is_using_sync_68fe5f59", (void*)godot_icall_AnimationNodeBlend2_is_using_sync_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlend3_set_use_sync_ba24800b", (void*)godot_icall_AnimationNodeBlend3_set_use_sync_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlend3_is_using_sync_68fe5f59", (void*)godot_icall_AnimationNodeBlend3_is_using_sync_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_add_blend_point_3a3e0496", (void*)godot_icall_AnimationNodeBlendSpace1D_add_blend_point_3a3e0496},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_set_blend_point_position_708a76ed", (void*)godot_icall_AnimationNodeBlendSpace1D_set_blend_point_position_708a76ed},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_get_blend_point_position_c671df3a", (void*)godot_icall_AnimationNodeBlendSpace1D_get_blend_point_position_c671df3a},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_set_blend_point_node_3c4e944d", (void*)godot_icall_AnimationNodeBlendSpace1D_set_blend_point_node_3c4e944d},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_get_blend_point_node_51338372", (void*)godot_icall_AnimationNodeBlendSpace1D_get_blend_point_node_51338372},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_remove_blend_point_e1ae93bc", (void*)godot_icall_AnimationNodeBlendSpace1D_remove_blend_point_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_get_blend_point_count_1f886eb0", (void*)godot_icall_AnimationNodeBlendSpace1D_get_blend_point_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_set_min_space_904508bb", (void*)godot_icall_AnimationNodeBlendSpace1D_set_min_space_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_get_min_space_4edcd7a9", (void*)godot_icall_AnimationNodeBlendSpace1D_get_min_space_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_set_max_space_904508bb", (void*)godot_icall_AnimationNodeBlendSpace1D_set_max_space_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_get_max_space_4edcd7a9", (void*)godot_icall_AnimationNodeBlendSpace1D_get_max_space_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_set_snap_904508bb", (void*)godot_icall_AnimationNodeBlendSpace1D_set_snap_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_get_snap_4edcd7a9", (void*)godot_icall_AnimationNodeBlendSpace1D_get_snap_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_set_value_label_3ca14953", (void*)godot_icall_AnimationNodeBlendSpace1D_set_value_label_3ca14953},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D_get_value_label_97be4a2e", (void*)godot_icall_AnimationNodeBlendSpace1D_get_value_label_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace1D__add_blend_point_3c4e944d", (void*)godot_icall_AnimationNodeBlendSpace1D__add_blend_point_3c4e944d},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_add_blend_point_9edf5fd8", (void*)godot_icall_AnimationNodeBlendSpace2D_add_blend_point_9edf5fd8},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_set_blend_point_position_3c383c4a", (void*)godot_icall_AnimationNodeBlendSpace2D_set_blend_point_position_3c383c4a},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_get_blend_point_position_23728632", (void*)godot_icall_AnimationNodeBlendSpace2D_get_blend_point_position_23728632},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_set_blend_point_node_3c4e944d", (void*)godot_icall_AnimationNodeBlendSpace2D_set_blend_point_node_3c4e944d},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_get_blend_point_node_51338372", (void*)godot_icall_AnimationNodeBlendSpace2D_get_blend_point_node_51338372},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_remove_blend_point_e1ae93bc", (void*)godot_icall_AnimationNodeBlendSpace2D_remove_blend_point_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_get_blend_point_count_1f886eb0", (void*)godot_icall_AnimationNodeBlendSpace2D_get_blend_point_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_add_triangle_2b70940c", (void*)godot_icall_AnimationNodeBlendSpace2D_add_triangle_2b70940c},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_get_triangle_point_4170d7f7", (void*)godot_icall_AnimationNodeBlendSpace2D_get_triangle_point_4170d7f7},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_remove_triangle_e1ae93bc", (void*)godot_icall_AnimationNodeBlendSpace2D_remove_triangle_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_get_triangle_count_1f886eb0", (void*)godot_icall_AnimationNodeBlendSpace2D_get_triangle_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_set_min_space_6df7471e", (void*)godot_icall_AnimationNodeBlendSpace2D_set_min_space_6df7471e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_get_min_space_9b4ea24e", (void*)godot_icall_AnimationNodeBlendSpace2D_get_min_space_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_set_max_space_6df7471e", (void*)godot_icall_AnimationNodeBlendSpace2D_set_max_space_6df7471e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_get_max_space_9b4ea24e", (void*)godot_icall_AnimationNodeBlendSpace2D_get_max_space_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_set_snap_6df7471e", (void*)godot_icall_AnimationNodeBlendSpace2D_set_snap_6df7471e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_get_snap_9b4ea24e", (void*)godot_icall_AnimationNodeBlendSpace2D_get_snap_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_set_x_label_3ca14953", (void*)godot_icall_AnimationNodeBlendSpace2D_set_x_label_3ca14953},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_get_x_label_97be4a2e", (void*)godot_icall_AnimationNodeBlendSpace2D_get_x_label_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_set_y_label_3ca14953", (void*)godot_icall_AnimationNodeBlendSpace2D_set_y_label_3ca14953},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_get_y_label_97be4a2e", (void*)godot_icall_AnimationNodeBlendSpace2D_get_y_label_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D__add_blend_point_3c4e944d", (void*)godot_icall_AnimationNodeBlendSpace2D__add_blend_point_3c4e944d},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D__set_triangles_6b64efb8", (void*)godot_icall_AnimationNodeBlendSpace2D__set_triangles_6b64efb8},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D__get_triangles_2a166acd", (void*)godot_icall_AnimationNodeBlendSpace2D__get_triangles_2a166acd},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_set_auto_triangles_ba24800b", (void*)godot_icall_AnimationNodeBlendSpace2D_set_auto_triangles_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_get_auto_triangles_68fe5f59", (void*)godot_icall_AnimationNodeBlendSpace2D_get_auto_triangles_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_set_blend_mode_d5986668", (void*)godot_icall_AnimationNodeBlendSpace2D_set_blend_mode_d5986668},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendSpace2D_get_blend_mode_b446b64b", (void*)godot_icall_AnimationNodeBlendSpace2D_get_blend_mode_b446b64b},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendTree_add_node_282761f1", (void*)godot_icall_AnimationNodeBlendTree_add_node_282761f1},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendTree_get_node_10519192", (void*)godot_icall_AnimationNodeBlendTree_get_node_10519192},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendTree_remove_node_2f29e819", (void*)godot_icall_AnimationNodeBlendTree_remove_node_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendTree_rename_node_7dacd953", (void*)godot_icall_AnimationNodeBlendTree_rename_node_7dacd953},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendTree_has_node_bee64043", (void*)godot_icall_AnimationNodeBlendTree_has_node_bee64043},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendTree_connect_node_cd41be07", (void*)godot_icall_AnimationNodeBlendTree_connect_node_cd41be07},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendTree_disconnect_node_bb2d80b6", (void*)godot_icall_AnimationNodeBlendTree_disconnect_node_bb2d80b6},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendTree_set_node_position_20e37454", (void*)godot_icall_AnimationNodeBlendTree_set_node_position_20e37454},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendTree_get_node_position_edf24f59", (void*)godot_icall_AnimationNodeBlendTree_get_node_position_edf24f59},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendTree_set_graph_offset_6df7471e", (void*)godot_icall_AnimationNodeBlendTree_set_graph_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeBlendTree_get_graph_offset_9b4ea24e", (void*)godot_icall_AnimationNodeBlendTree_get_graph_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_set_fadein_time_904508bb", (void*)godot_icall_AnimationNodeOneShot_set_fadein_time_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_get_fadein_time_4edcd7a9", (void*)godot_icall_AnimationNodeOneShot_get_fadein_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_set_fadeout_time_904508bb", (void*)godot_icall_AnimationNodeOneShot_set_fadeout_time_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_get_fadeout_time_4edcd7a9", (void*)godot_icall_AnimationNodeOneShot_get_fadeout_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_set_autorestart_ba24800b", (void*)godot_icall_AnimationNodeOneShot_set_autorestart_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_has_autorestart_68fe5f59", (void*)godot_icall_AnimationNodeOneShot_has_autorestart_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_set_autorestart_delay_904508bb", (void*)godot_icall_AnimationNodeOneShot_set_autorestart_delay_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_get_autorestart_delay_4edcd7a9", (void*)godot_icall_AnimationNodeOneShot_get_autorestart_delay_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_set_autorestart_random_delay_904508bb", (void*)godot_icall_AnimationNodeOneShot_set_autorestart_random_delay_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_get_autorestart_random_delay_4edcd7a9", (void*)godot_icall_AnimationNodeOneShot_get_autorestart_random_delay_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_set_mix_mode_27e6dc0e", (void*)godot_icall_AnimationNodeOneShot_set_mix_mode_27e6dc0e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_get_mix_mode_e5402b5e", (void*)godot_icall_AnimationNodeOneShot_get_mix_mode_e5402b5e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_set_use_sync_ba24800b", (void*)godot_icall_AnimationNodeOneShot_set_use_sync_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationNodeOneShot_is_using_sync_68fe5f59", (void*)godot_icall_AnimationNodeOneShot_is_using_sync_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_add_node_282761f1", (void*)godot_icall_AnimationNodeStateMachine_add_node_282761f1},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_get_node_10519192", (void*)godot_icall_AnimationNodeStateMachine_get_node_10519192},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_remove_node_2f29e819", (void*)godot_icall_AnimationNodeStateMachine_remove_node_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_rename_node_7dacd953", (void*)godot_icall_AnimationNodeStateMachine_rename_node_7dacd953},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_has_node_bee64043", (void*)godot_icall_AnimationNodeStateMachine_has_node_bee64043},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_get_node_name_d8e2f69f", (void*)godot_icall_AnimationNodeStateMachine_get_node_name_d8e2f69f},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_set_node_position_20e37454", (void*)godot_icall_AnimationNodeStateMachine_set_node_position_20e37454},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_get_node_position_edf24f59", (void*)godot_icall_AnimationNodeStateMachine_get_node_position_edf24f59},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_has_transition_db6c1197", (void*)godot_icall_AnimationNodeStateMachine_has_transition_db6c1197},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_add_transition_44de9378", (void*)godot_icall_AnimationNodeStateMachine_add_transition_44de9378},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_get_transition_f8aed41e", (void*)godot_icall_AnimationNodeStateMachine_get_transition_f8aed41e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_get_transition_from_44fc4c5a", (void*)godot_icall_AnimationNodeStateMachine_get_transition_from_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_get_transition_to_44fc4c5a", (void*)godot_icall_AnimationNodeStateMachine_get_transition_to_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_get_transition_count_1f886eb0", (void*)godot_icall_AnimationNodeStateMachine_get_transition_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_remove_transition_by_index_e1ae93bc", (void*)godot_icall_AnimationNodeStateMachine_remove_transition_by_index_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_remove_transition_7dacd953", (void*)godot_icall_AnimationNodeStateMachine_remove_transition_7dacd953},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_set_start_node_2f29e819", (void*)godot_icall_AnimationNodeStateMachine_set_start_node_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_get_start_node_97be4a2e", (void*)godot_icall_AnimationNodeStateMachine_get_start_node_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_set_end_node_2f29e819", (void*)godot_icall_AnimationNodeStateMachine_set_end_node_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_get_end_node_97be4a2e", (void*)godot_icall_AnimationNodeStateMachine_get_end_node_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_set_graph_offset_6df7471e", (void*)godot_icall_AnimationNodeStateMachine_set_graph_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachine_get_graph_offset_9b4ea24e", (void*)godot_icall_AnimationNodeStateMachine_get_graph_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachinePlayback_travel_2f29e819", (void*)godot_icall_AnimationNodeStateMachinePlayback_travel_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachinePlayback_start_2f29e819", (void*)godot_icall_AnimationNodeStateMachinePlayback_start_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachinePlayback_stop_c8e54a7b", (void*)godot_icall_AnimationNodeStateMachinePlayback_stop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachinePlayback_is_playing_68fe5f59", (void*)godot_icall_AnimationNodeStateMachinePlayback_is_playing_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachinePlayback_get_current_node_97be4a2e", (void*)godot_icall_AnimationNodeStateMachinePlayback_get_current_node_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachinePlayback_get_travel_path_4cc8f2a7", (void*)godot_icall_AnimationNodeStateMachinePlayback_get_travel_path_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_set_switch_mode_e40baecb", (void*)godot_icall_AnimationNodeStateMachineTransition_set_switch_mode_e40baecb},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_get_switch_mode_ab638406", (void*)godot_icall_AnimationNodeStateMachineTransition_get_switch_mode_ab638406},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_set_auto_advance_ba24800b", (void*)godot_icall_AnimationNodeStateMachineTransition_set_auto_advance_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_has_auto_advance_68fe5f59", (void*)godot_icall_AnimationNodeStateMachineTransition_has_auto_advance_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_set_advance_condition_2f29e819", (void*)godot_icall_AnimationNodeStateMachineTransition_set_advance_condition_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_get_advance_condition_97be4a2e", (void*)godot_icall_AnimationNodeStateMachineTransition_get_advance_condition_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_set_xfade_time_904508bb", (void*)godot_icall_AnimationNodeStateMachineTransition_set_xfade_time_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_get_xfade_time_4edcd7a9", (void*)godot_icall_AnimationNodeStateMachineTransition_get_xfade_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_set_disabled_ba24800b", (void*)godot_icall_AnimationNodeStateMachineTransition_set_disabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_is_disabled_68fe5f59", (void*)godot_icall_AnimationNodeStateMachineTransition_is_disabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_set_priority_e1ae93bc", (void*)godot_icall_AnimationNodeStateMachineTransition_set_priority_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AnimationNodeStateMachineTransition_get_priority_1f886eb0", (void*)godot_icall_AnimationNodeStateMachineTransition_get_priority_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AnimationNodeTransition_set_enabled_inputs_e1ae93bc", (void*)godot_icall_AnimationNodeTransition_set_enabled_inputs_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AnimationNodeTransition_get_enabled_inputs_1f886eb0", (void*)godot_icall_AnimationNodeTransition_get_enabled_inputs_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AnimationNodeTransition_set_input_as_auto_advance_4ae8febd", (void*)godot_icall_AnimationNodeTransition_set_input_as_auto_advance_4ae8febd},
	{"Godot.NativeCalls::godot_icall_AnimationNodeTransition_is_input_set_as_auto_advance_7f690926", (void*)godot_icall_AnimationNodeTransition_is_input_set_as_auto_advance_7f690926},
	{"Godot.NativeCalls::godot_icall_AnimationNodeTransition_set_input_caption_cd663605", (void*)godot_icall_AnimationNodeTransition_set_input_caption_cd663605},
	{"Godot.NativeCalls::godot_icall_AnimationNodeTransition_get_input_caption_44fc4c5a", (void*)godot_icall_AnimationNodeTransition_get_input_caption_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_AnimationNodeTransition_set_cross_fade_time_904508bb", (void*)godot_icall_AnimationNodeTransition_set_cross_fade_time_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationNodeTransition_get_cross_fade_time_4edcd7a9", (void*)godot_icall_AnimationNodeTransition_get_cross_fade_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_add_animation_8f586397", (void*)godot_icall_AnimationPlayer_add_animation_8f586397},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_remove_animation_2f29e819", (void*)godot_icall_AnimationPlayer_remove_animation_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_rename_animation_7dacd953", (void*)godot_icall_AnimationPlayer_rename_animation_7dacd953},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_has_animation_bee64043", (void*)godot_icall_AnimationPlayer_has_animation_bee64043},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_animation_e39805ea", (void*)godot_icall_AnimationPlayer_get_animation_e39805ea},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_animation_list_4cc8f2a7", (void*)godot_icall_AnimationPlayer_get_animation_list_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_animation_set_next_7dacd953", (void*)godot_icall_AnimationPlayer_animation_set_next_7dacd953},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_animation_get_next_67c8521", (void*)godot_icall_AnimationPlayer_animation_get_next_67c8521},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_set_blend_time_a190525", (void*)godot_icall_AnimationPlayer_set_blend_time_a190525},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_blend_time_f30f92e2", (void*)godot_icall_AnimationPlayer_get_blend_time_f30f92e2},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_set_default_blend_time_904508bb", (void*)godot_icall_AnimationPlayer_set_default_blend_time_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_default_blend_time_4edcd7a9", (void*)godot_icall_AnimationPlayer_get_default_blend_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_play_9cc8e3fe", (void*)godot_icall_AnimationPlayer_play_9cc8e3fe},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_play_backwards_ec7139b1", (void*)godot_icall_AnimationPlayer_play_backwards_ec7139b1},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_stop_ba24800b", (void*)godot_icall_AnimationPlayer_stop_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_is_playing_68fe5f59", (void*)godot_icall_AnimationPlayer_is_playing_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_set_current_animation_2f29e819", (void*)godot_icall_AnimationPlayer_set_current_animation_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_current_animation_97be4a2e", (void*)godot_icall_AnimationPlayer_get_current_animation_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_set_assigned_animation_2f29e819", (void*)godot_icall_AnimationPlayer_set_assigned_animation_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_assigned_animation_97be4a2e", (void*)godot_icall_AnimationPlayer_get_assigned_animation_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_queue_2f29e819", (void*)godot_icall_AnimationPlayer_queue_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_queue_4cc8f2a7", (void*)godot_icall_AnimationPlayer_get_queue_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_clear_queue_c8e54a7b", (void*)godot_icall_AnimationPlayer_clear_queue_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_set_active_ba24800b", (void*)godot_icall_AnimationPlayer_set_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_is_active_68fe5f59", (void*)godot_icall_AnimationPlayer_is_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_set_speed_scale_904508bb", (void*)godot_icall_AnimationPlayer_set_speed_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_speed_scale_4edcd7a9", (void*)godot_icall_AnimationPlayer_get_speed_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_playing_speed_4edcd7a9", (void*)godot_icall_AnimationPlayer_get_playing_speed_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_set_autoplay_3ca14953", (void*)godot_icall_AnimationPlayer_set_autoplay_3ca14953},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_autoplay_97be4a2e", (void*)godot_icall_AnimationPlayer_get_autoplay_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_set_root_1e08804", (void*)godot_icall_AnimationPlayer_set_root_1e08804},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_root_bf425768", (void*)godot_icall_AnimationPlayer_get_root_bf425768},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_find_animation_d552467f", (void*)godot_icall_AnimationPlayer_find_animation_d552467f},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_clear_caches_c8e54a7b", (void*)godot_icall_AnimationPlayer_clear_caches_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_set_animation_process_mode_4a40838", (void*)godot_icall_AnimationPlayer_set_animation_process_mode_4a40838},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_animation_process_mode_c27dd72c", (void*)godot_icall_AnimationPlayer_get_animation_process_mode_c27dd72c},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_set_method_call_mode_2b481378", (void*)godot_icall_AnimationPlayer_set_method_call_mode_2b481378},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_method_call_mode_d9e9edec", (void*)godot_icall_AnimationPlayer_get_method_call_mode_d9e9edec},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_current_animation_position_4edcd7a9", (void*)godot_icall_AnimationPlayer_get_current_animation_position_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_get_current_animation_length_4edcd7a9", (void*)godot_icall_AnimationPlayer_get_current_animation_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_seek_accc42bb", (void*)godot_icall_AnimationPlayer_seek_accc42bb},
	{"Godot.NativeCalls::godot_icall_AnimationPlayer_advance_904508bb", (void*)godot_icall_AnimationPlayer_advance_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationTree_set_active_ba24800b", (void*)godot_icall_AnimationTree_set_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationTree_is_active_68fe5f59", (void*)godot_icall_AnimationTree_is_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationTree_set_tree_root_6d83da7f", (void*)godot_icall_AnimationTree_set_tree_root_6d83da7f},
	{"Godot.NativeCalls::godot_icall_AnimationTree_get_tree_root_9ba324ed", (void*)godot_icall_AnimationTree_get_tree_root_9ba324ed},
	{"Godot.NativeCalls::godot_icall_AnimationTree_set_process_mode_a3bcacdf", (void*)godot_icall_AnimationTree_set_process_mode_a3bcacdf},
	{"Godot.NativeCalls::godot_icall_AnimationTree_get_process_mode_61967b8d", (void*)godot_icall_AnimationTree_get_process_mode_61967b8d},
	{"Godot.NativeCalls::godot_icall_AnimationTree_set_animation_player_1e08804", (void*)godot_icall_AnimationTree_set_animation_player_1e08804},
	{"Godot.NativeCalls::godot_icall_AnimationTree_get_animation_player_bf425768", (void*)godot_icall_AnimationTree_get_animation_player_bf425768},
	{"Godot.NativeCalls::godot_icall_AnimationTree_set_root_motion_track_1e08804", (void*)godot_icall_AnimationTree_set_root_motion_track_1e08804},
	{"Godot.NativeCalls::godot_icall_AnimationTree_get_root_motion_track_bf425768", (void*)godot_icall_AnimationTree_get_root_motion_track_bf425768},
	{"Godot.NativeCalls::godot_icall_AnimationTree_get_root_motion_transform_a3fb649b", (void*)godot_icall_AnimationTree_get_root_motion_transform_a3fb649b},
	{"Godot.NativeCalls::godot_icall_AnimationTree_rename_parameter_fc93f18d", (void*)godot_icall_AnimationTree_rename_parameter_fc93f18d},
	{"Godot.NativeCalls::godot_icall_AnimationTree_advance_904508bb", (void*)godot_icall_AnimationTree_advance_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_add_node_f7ea0eb3", (void*)godot_icall_AnimationTreePlayer_add_node_f7ea0eb3},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_node_exists_bee64043", (void*)godot_icall_AnimationTreePlayer_node_exists_bee64043},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_node_rename_3c6126d5", (void*)godot_icall_AnimationTreePlayer_node_rename_3c6126d5},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_node_get_type_a1db4784", (void*)godot_icall_AnimationTreePlayer_node_get_type_a1db4784},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_node_get_input_count_79b61600", (void*)godot_icall_AnimationTreePlayer_node_get_input_count_79b61600},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_node_get_input_source_58fcd4d0", (void*)godot_icall_AnimationTreePlayer_node_get_input_source_58fcd4d0},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_animation_node_set_animation_2c878695", (void*)godot_icall_AnimationTreePlayer_animation_node_set_animation_2c878695},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_animation_node_get_animation_e39805ea", (void*)godot_icall_AnimationTreePlayer_animation_node_get_animation_e39805ea},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_animation_node_set_master_animation_71d57a09", (void*)godot_icall_AnimationTreePlayer_animation_node_set_master_animation_71d57a09},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_animation_node_get_master_animation_67c8521", (void*)godot_icall_AnimationTreePlayer_animation_node_get_master_animation_67c8521},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_animation_node_get_position_9f10687", (void*)godot_icall_AnimationTreePlayer_animation_node_get_position_9f10687},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_animation_node_set_filter_path_28dd9f8f", (void*)godot_icall_AnimationTreePlayer_animation_node_set_filter_path_28dd9f8f},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_set_fadein_time_ec7139b1", (void*)godot_icall_AnimationTreePlayer_oneshot_node_set_fadein_time_ec7139b1},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_get_fadein_time_9f10687", (void*)godot_icall_AnimationTreePlayer_oneshot_node_get_fadein_time_9f10687},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_set_fadeout_time_ec7139b1", (void*)godot_icall_AnimationTreePlayer_oneshot_node_set_fadeout_time_ec7139b1},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_get_fadeout_time_9f10687", (void*)godot_icall_AnimationTreePlayer_oneshot_node_get_fadeout_time_9f10687},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_set_autorestart_f253b141", (void*)godot_icall_AnimationTreePlayer_oneshot_node_set_autorestart_f253b141},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_set_autorestart_delay_ec7139b1", (void*)godot_icall_AnimationTreePlayer_oneshot_node_set_autorestart_delay_ec7139b1},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_set_autorestart_random_delay_ec7139b1", (void*)godot_icall_AnimationTreePlayer_oneshot_node_set_autorestart_random_delay_ec7139b1},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_has_autorestart_bee64043", (void*)godot_icall_AnimationTreePlayer_oneshot_node_has_autorestart_bee64043},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_get_autorestart_delay_9f10687", (void*)godot_icall_AnimationTreePlayer_oneshot_node_get_autorestart_delay_9f10687},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_get_autorestart_random_delay_9f10687", (void*)godot_icall_AnimationTreePlayer_oneshot_node_get_autorestart_random_delay_9f10687},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_start_2f29e819", (void*)godot_icall_AnimationTreePlayer_oneshot_node_start_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_stop_2f29e819", (void*)godot_icall_AnimationTreePlayer_oneshot_node_stop_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_is_active_bee64043", (void*)godot_icall_AnimationTreePlayer_oneshot_node_is_active_bee64043},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_oneshot_node_set_filter_path_28dd9f8f", (void*)godot_icall_AnimationTreePlayer_oneshot_node_set_filter_path_28dd9f8f},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_mix_node_set_amount_ec7139b1", (void*)godot_icall_AnimationTreePlayer_mix_node_set_amount_ec7139b1},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_mix_node_get_amount_9f10687", (void*)godot_icall_AnimationTreePlayer_mix_node_get_amount_9f10687},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_blend2_node_set_amount_ec7139b1", (void*)godot_icall_AnimationTreePlayer_blend2_node_set_amount_ec7139b1},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_blend2_node_get_amount_9f10687", (void*)godot_icall_AnimationTreePlayer_blend2_node_get_amount_9f10687},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_blend2_node_set_filter_path_28dd9f8f", (void*)godot_icall_AnimationTreePlayer_blend2_node_set_filter_path_28dd9f8f},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_blend3_node_set_amount_ec7139b1", (void*)godot_icall_AnimationTreePlayer_blend3_node_set_amount_ec7139b1},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_blend3_node_get_amount_9f10687", (void*)godot_icall_AnimationTreePlayer_blend3_node_get_amount_9f10687},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_blend4_node_set_amount_20e37454", (void*)godot_icall_AnimationTreePlayer_blend4_node_set_amount_20e37454},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_blend4_node_get_amount_edf24f59", (void*)godot_icall_AnimationTreePlayer_blend4_node_get_amount_edf24f59},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_timescale_node_set_scale_ec7139b1", (void*)godot_icall_AnimationTreePlayer_timescale_node_set_scale_ec7139b1},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_timescale_node_get_scale_9f10687", (void*)godot_icall_AnimationTreePlayer_timescale_node_get_scale_9f10687},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_timeseek_node_seek_ec7139b1", (void*)godot_icall_AnimationTreePlayer_timeseek_node_seek_ec7139b1},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_transition_node_set_input_count_bb2d80b6", (void*)godot_icall_AnimationTreePlayer_transition_node_set_input_count_bb2d80b6},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_transition_node_get_input_count_79b61600", (void*)godot_icall_AnimationTreePlayer_transition_node_get_input_count_79b61600},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_transition_node_delete_input_bb2d80b6", (void*)godot_icall_AnimationTreePlayer_transition_node_delete_input_bb2d80b6},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_transition_node_set_input_auto_advance_ba4ce609", (void*)godot_icall_AnimationTreePlayer_transition_node_set_input_auto_advance_ba4ce609},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_transition_node_has_input_auto_advance_19efc97a", (void*)godot_icall_AnimationTreePlayer_transition_node_has_input_auto_advance_19efc97a},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_transition_node_set_xfade_time_ec7139b1", (void*)godot_icall_AnimationTreePlayer_transition_node_set_xfade_time_ec7139b1},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_transition_node_get_xfade_time_9f10687", (void*)godot_icall_AnimationTreePlayer_transition_node_get_xfade_time_9f10687},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_transition_node_set_current_bb2d80b6", (void*)godot_icall_AnimationTreePlayer_transition_node_set_current_bb2d80b6},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_transition_node_get_current_79b61600", (void*)godot_icall_AnimationTreePlayer_transition_node_get_current_79b61600},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_node_set_position_20e37454", (void*)godot_icall_AnimationTreePlayer_node_set_position_20e37454},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_node_get_position_edf24f59", (void*)godot_icall_AnimationTreePlayer_node_get_position_edf24f59},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_remove_node_2f29e819", (void*)godot_icall_AnimationTreePlayer_remove_node_2f29e819},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_connect_nodes_d940c18b", (void*)godot_icall_AnimationTreePlayer_connect_nodes_d940c18b},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_are_nodes_connected_14f34319", (void*)godot_icall_AnimationTreePlayer_are_nodes_connected_14f34319},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_disconnect_nodes_bb2d80b6", (void*)godot_icall_AnimationTreePlayer_disconnect_nodes_bb2d80b6},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_set_active_ba24800b", (void*)godot_icall_AnimationTreePlayer_set_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_is_active_68fe5f59", (void*)godot_icall_AnimationTreePlayer_is_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_set_base_path_1e08804", (void*)godot_icall_AnimationTreePlayer_set_base_path_1e08804},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_get_base_path_bf425768", (void*)godot_icall_AnimationTreePlayer_get_base_path_bf425768},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_set_master_player_1e08804", (void*)godot_icall_AnimationTreePlayer_set_master_player_1e08804},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_get_master_player_bf425768", (void*)godot_icall_AnimationTreePlayer_get_master_player_bf425768},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_get_node_vector_4cc8f2a7", (void*)godot_icall_AnimationTreePlayer_get_node_vector_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_set_animation_process_mode_ee6d703c", (void*)godot_icall_AnimationTreePlayer_set_animation_process_mode_ee6d703c},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_get_animation_process_mode_1cc4cf30", (void*)godot_icall_AnimationTreePlayer_get_animation_process_mode_1cc4cf30},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_advance_904508bb", (void*)godot_icall_AnimationTreePlayer_advance_904508bb},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_reset_c8e54a7b", (void*)godot_icall_AnimationTreePlayer_reset_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AnimationTreePlayer_recompute_caches_c8e54a7b", (void*)godot_icall_AnimationTreePlayer_recompute_caches_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Area_set_space_override_mode_f76f65b6", (void*)godot_icall_Area_set_space_override_mode_f76f65b6},
	{"Godot.NativeCalls::godot_icall_Area_get_space_override_mode_56d1dce1", (void*)godot_icall_Area_get_space_override_mode_56d1dce1},
	{"Godot.NativeCalls::godot_icall_Area_set_gravity_is_point_ba24800b", (void*)godot_icall_Area_set_gravity_is_point_ba24800b},
	{"Godot.NativeCalls::godot_icall_Area_is_gravity_a_point_68fe5f59", (void*)godot_icall_Area_is_gravity_a_point_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Area_set_gravity_distance_scale_904508bb", (void*)godot_icall_Area_set_gravity_distance_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_Area_get_gravity_distance_scale_4edcd7a9", (void*)godot_icall_Area_get_gravity_distance_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Area_set_gravity_vector_6df7471d", (void*)godot_icall_Area_set_gravity_vector_6df7471d},
	{"Godot.NativeCalls::godot_icall_Area_get_gravity_vector_9b4ea24f", (void*)godot_icall_Area_get_gravity_vector_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Area_set_gravity_904508bb", (void*)godot_icall_Area_set_gravity_904508bb},
	{"Godot.NativeCalls::godot_icall_Area_get_gravity_4edcd7a9", (void*)godot_icall_Area_get_gravity_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Area_set_angular_damp_904508bb", (void*)godot_icall_Area_set_angular_damp_904508bb},
	{"Godot.NativeCalls::godot_icall_Area_get_angular_damp_4edcd7a9", (void*)godot_icall_Area_get_angular_damp_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Area_set_linear_damp_904508bb", (void*)godot_icall_Area_set_linear_damp_904508bb},
	{"Godot.NativeCalls::godot_icall_Area_get_linear_damp_4edcd7a9", (void*)godot_icall_Area_get_linear_damp_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Area_set_priority_904508bb", (void*)godot_icall_Area_set_priority_904508bb},
	{"Godot.NativeCalls::godot_icall_Area_get_priority_4edcd7a9", (void*)godot_icall_Area_get_priority_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Area_set_collision_mask_966aab97", (void*)godot_icall_Area_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_Area_get_collision_mask_54cc76d5", (void*)godot_icall_Area_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_Area_set_collision_layer_966aab97", (void*)godot_icall_Area_set_collision_layer_966aab97},
	{"Godot.NativeCalls::godot_icall_Area_get_collision_layer_54cc76d5", (void*)godot_icall_Area_get_collision_layer_54cc76d5},
	{"Godot.NativeCalls::godot_icall_Area_set_collision_mask_bit_4ae8febd", (void*)godot_icall_Area_set_collision_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Area_get_collision_mask_bit_7f690926", (void*)godot_icall_Area_get_collision_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_Area_set_collision_layer_bit_4ae8febd", (void*)godot_icall_Area_set_collision_layer_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Area_get_collision_layer_bit_7f690926", (void*)godot_icall_Area_get_collision_layer_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_Area_set_monitorable_ba24800b", (void*)godot_icall_Area_set_monitorable_ba24800b},
	{"Godot.NativeCalls::godot_icall_Area_is_monitorable_68fe5f59", (void*)godot_icall_Area_is_monitorable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Area_set_monitoring_ba24800b", (void*)godot_icall_Area_set_monitoring_ba24800b},
	{"Godot.NativeCalls::godot_icall_Area_is_monitoring_68fe5f59", (void*)godot_icall_Area_is_monitoring_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Area_get_overlapping_bodies_d80382d4", (void*)godot_icall_Area_get_overlapping_bodies_d80382d4},
	{"Godot.NativeCalls::godot_icall_Area_get_overlapping_areas_d80382d4", (void*)godot_icall_Area_get_overlapping_areas_d80382d4},
	{"Godot.NativeCalls::godot_icall_Area_overlaps_body_1746f8cd", (void*)godot_icall_Area_overlaps_body_1746f8cd},
	{"Godot.NativeCalls::godot_icall_Area_overlaps_area_1746f8cd", (void*)godot_icall_Area_overlaps_area_1746f8cd},
	{"Godot.NativeCalls::godot_icall_Area_set_audio_bus_override_ba24800b", (void*)godot_icall_Area_set_audio_bus_override_ba24800b},
	{"Godot.NativeCalls::godot_icall_Area_is_overriding_audio_bus_68fe5f59", (void*)godot_icall_Area_is_overriding_audio_bus_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Area_set_audio_bus_2f29e819", (void*)godot_icall_Area_set_audio_bus_2f29e819},
	{"Godot.NativeCalls::godot_icall_Area_get_audio_bus_97be4a2e", (void*)godot_icall_Area_get_audio_bus_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Area_set_use_reverb_bus_ba24800b", (void*)godot_icall_Area_set_use_reverb_bus_ba24800b},
	{"Godot.NativeCalls::godot_icall_Area_is_using_reverb_bus_68fe5f59", (void*)godot_icall_Area_is_using_reverb_bus_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Area_set_reverb_bus_2f29e819", (void*)godot_icall_Area_set_reverb_bus_2f29e819},
	{"Godot.NativeCalls::godot_icall_Area_get_reverb_bus_97be4a2e", (void*)godot_icall_Area_get_reverb_bus_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Area_set_reverb_amount_904508bb", (void*)godot_icall_Area_set_reverb_amount_904508bb},
	{"Godot.NativeCalls::godot_icall_Area_get_reverb_amount_4edcd7a9", (void*)godot_icall_Area_get_reverb_amount_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Area_set_reverb_uniformity_904508bb", (void*)godot_icall_Area_set_reverb_uniformity_904508bb},
	{"Godot.NativeCalls::godot_icall_Area_get_reverb_uniformity_4edcd7a9", (void*)godot_icall_Area_get_reverb_uniformity_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Area2D_set_space_override_mode_aebe927c", (void*)godot_icall_Area2D_set_space_override_mode_aebe927c},
	{"Godot.NativeCalls::godot_icall_Area2D_get_space_override_mode_22ce4d5f", (void*)godot_icall_Area2D_get_space_override_mode_22ce4d5f},
	{"Godot.NativeCalls::godot_icall_Area2D_set_gravity_is_point_ba24800b", (void*)godot_icall_Area2D_set_gravity_is_point_ba24800b},
	{"Godot.NativeCalls::godot_icall_Area2D_is_gravity_a_point_68fe5f59", (void*)godot_icall_Area2D_is_gravity_a_point_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Area2D_set_gravity_distance_scale_904508bb", (void*)godot_icall_Area2D_set_gravity_distance_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_Area2D_get_gravity_distance_scale_4edcd7a9", (void*)godot_icall_Area2D_get_gravity_distance_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Area2D_set_gravity_vector_6df7471e", (void*)godot_icall_Area2D_set_gravity_vector_6df7471e},
	{"Godot.NativeCalls::godot_icall_Area2D_get_gravity_vector_9b4ea24e", (void*)godot_icall_Area2D_get_gravity_vector_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Area2D_set_gravity_904508bb", (void*)godot_icall_Area2D_set_gravity_904508bb},
	{"Godot.NativeCalls::godot_icall_Area2D_get_gravity_4edcd7a9", (void*)godot_icall_Area2D_get_gravity_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Area2D_set_linear_damp_904508bb", (void*)godot_icall_Area2D_set_linear_damp_904508bb},
	{"Godot.NativeCalls::godot_icall_Area2D_get_linear_damp_4edcd7a9", (void*)godot_icall_Area2D_get_linear_damp_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Area2D_set_angular_damp_904508bb", (void*)godot_icall_Area2D_set_angular_damp_904508bb},
	{"Godot.NativeCalls::godot_icall_Area2D_get_angular_damp_4edcd7a9", (void*)godot_icall_Area2D_get_angular_damp_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Area2D_set_priority_904508bb", (void*)godot_icall_Area2D_set_priority_904508bb},
	{"Godot.NativeCalls::godot_icall_Area2D_get_priority_4edcd7a9", (void*)godot_icall_Area2D_get_priority_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Area2D_set_collision_mask_966aab97", (void*)godot_icall_Area2D_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_Area2D_get_collision_mask_54cc76d5", (void*)godot_icall_Area2D_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_Area2D_set_collision_layer_966aab97", (void*)godot_icall_Area2D_set_collision_layer_966aab97},
	{"Godot.NativeCalls::godot_icall_Area2D_get_collision_layer_54cc76d5", (void*)godot_icall_Area2D_get_collision_layer_54cc76d5},
	{"Godot.NativeCalls::godot_icall_Area2D_set_collision_mask_bit_4ae8febd", (void*)godot_icall_Area2D_set_collision_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Area2D_get_collision_mask_bit_7f690926", (void*)godot_icall_Area2D_get_collision_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_Area2D_set_collision_layer_bit_4ae8febd", (void*)godot_icall_Area2D_set_collision_layer_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Area2D_get_collision_layer_bit_7f690926", (void*)godot_icall_Area2D_get_collision_layer_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_Area2D_set_monitoring_ba24800b", (void*)godot_icall_Area2D_set_monitoring_ba24800b},
	{"Godot.NativeCalls::godot_icall_Area2D_is_monitoring_68fe5f59", (void*)godot_icall_Area2D_is_monitoring_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Area2D_set_monitorable_ba24800b", (void*)godot_icall_Area2D_set_monitorable_ba24800b},
	{"Godot.NativeCalls::godot_icall_Area2D_is_monitorable_68fe5f59", (void*)godot_icall_Area2D_is_monitorable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Area2D_get_overlapping_bodies_d80382d4", (void*)godot_icall_Area2D_get_overlapping_bodies_d80382d4},
	{"Godot.NativeCalls::godot_icall_Area2D_get_overlapping_areas_d80382d4", (void*)godot_icall_Area2D_get_overlapping_areas_d80382d4},
	{"Godot.NativeCalls::godot_icall_Area2D_overlaps_body_1746f8cd", (void*)godot_icall_Area2D_overlaps_body_1746f8cd},
	{"Godot.NativeCalls::godot_icall_Area2D_overlaps_area_1746f8cd", (void*)godot_icall_Area2D_overlaps_area_1746f8cd},
	{"Godot.NativeCalls::godot_icall_Area2D_set_audio_bus_name_2f29e819", (void*)godot_icall_Area2D_set_audio_bus_name_2f29e819},
	{"Godot.NativeCalls::godot_icall_Area2D_get_audio_bus_name_97be4a2e", (void*)godot_icall_Area2D_get_audio_bus_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Area2D_set_audio_bus_override_ba24800b", (void*)godot_icall_Area2D_set_audio_bus_override_ba24800b},
	{"Godot.NativeCalls::godot_icall_Area2D_is_overriding_audio_bus_68fe5f59", (void*)godot_icall_Area2D_is_overriding_audio_bus_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_add_blend_shape_2f29e819", (void*)godot_icall_ArrayMesh_add_blend_shape_2f29e819},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_get_blend_shape_count_1f886eb0", (void*)godot_icall_ArrayMesh_get_blend_shape_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_get_blend_shape_name_44fc4c5a", (void*)godot_icall_ArrayMesh_get_blend_shape_name_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_clear_blend_shapes_c8e54a7b", (void*)godot_icall_ArrayMesh_clear_blend_shapes_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_set_blend_shape_mode_688c4423", (void*)godot_icall_ArrayMesh_set_blend_shape_mode_688c4423},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_get_blend_shape_mode_96a5a341", (void*)godot_icall_ArrayMesh_get_blend_shape_mode_96a5a341},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_add_surface_from_arrays_11c236d3", (void*)godot_icall_ArrayMesh_add_surface_from_arrays_11c236d3},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_surface_remove_e1ae93bc", (void*)godot_icall_ArrayMesh_surface_remove_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_surface_update_region_677e35b2", (void*)godot_icall_ArrayMesh_surface_update_region_677e35b2},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_surface_get_array_len_b835dea5", (void*)godot_icall_ArrayMesh_surface_get_array_len_b835dea5},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_surface_get_array_index_len_b835dea5", (void*)godot_icall_ArrayMesh_surface_get_array_index_len_b835dea5},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_surface_get_format_52dccd8b", (void*)godot_icall_ArrayMesh_surface_get_format_52dccd8b},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_surface_get_primitive_type_e7759a5", (void*)godot_icall_ArrayMesh_surface_get_primitive_type_e7759a5},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_surface_find_by_name_7be523", (void*)godot_icall_ArrayMesh_surface_find_by_name_7be523},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_surface_set_name_cd663605", (void*)godot_icall_ArrayMesh_surface_set_name_cd663605},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_surface_get_name_44fc4c5a", (void*)godot_icall_ArrayMesh_surface_get_name_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_regen_normalmaps_c8e54a7b", (void*)godot_icall_ArrayMesh_regen_normalmaps_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_lightmap_unwrap_79aa5b0f", (void*)godot_icall_ArrayMesh_lightmap_unwrap_79aa5b0f},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_set_custom_aabb_ff67b409", (void*)godot_icall_ArrayMesh_set_custom_aabb_ff67b409},
	{"Godot.NativeCalls::godot_icall_ArrayMesh_get_custom_aabb_2dbf935b", (void*)godot_icall_ArrayMesh_get_custom_aabb_2dbf935b},
	{"Godot.NativeCalls::godot_icall_AtlasTexture_set_atlas_7eecd31a", (void*)godot_icall_AtlasTexture_set_atlas_7eecd31a},
	{"Godot.NativeCalls::godot_icall_AtlasTexture_get_atlas_ac462e4a", (void*)godot_icall_AtlasTexture_get_atlas_ac462e4a},
	{"Godot.NativeCalls::godot_icall_AtlasTexture_set_region_a5ed61f1", (void*)godot_icall_AtlasTexture_set_region_a5ed61f1},
	{"Godot.NativeCalls::godot_icall_AtlasTexture_get_region_6344c073", (void*)godot_icall_AtlasTexture_get_region_6344c073},
	{"Godot.NativeCalls::godot_icall_AtlasTexture_set_margin_a5ed61f1", (void*)godot_icall_AtlasTexture_set_margin_a5ed61f1},
	{"Godot.NativeCalls::godot_icall_AtlasTexture_get_margin_6344c073", (void*)godot_icall_AtlasTexture_get_margin_6344c073},
	{"Godot.NativeCalls::godot_icall_AtlasTexture_set_filter_clip_ba24800b", (void*)godot_icall_AtlasTexture_set_filter_clip_ba24800b},
	{"Godot.NativeCalls::godot_icall_AtlasTexture_has_filter_clip_68fe5f59", (void*)godot_icall_AtlasTexture_has_filter_clip_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioEffectAmplify_set_volume_db_904508bb", (void*)godot_icall_AudioEffectAmplify_set_volume_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectAmplify_get_volume_db_4edcd7a9", (void*)godot_icall_AudioEffectAmplify_get_volume_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_set_voice_count_e1ae93bc", (void*)godot_icall_AudioEffectChorus_set_voice_count_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_get_voice_count_1f886eb0", (void*)godot_icall_AudioEffectChorus_get_voice_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_set_voice_delay_ms_708a76ed", (void*)godot_icall_AudioEffectChorus_set_voice_delay_ms_708a76ed},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_get_voice_delay_ms_c671df3a", (void*)godot_icall_AudioEffectChorus_get_voice_delay_ms_c671df3a},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_set_voice_rate_hz_708a76ed", (void*)godot_icall_AudioEffectChorus_set_voice_rate_hz_708a76ed},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_get_voice_rate_hz_c671df3a", (void*)godot_icall_AudioEffectChorus_get_voice_rate_hz_c671df3a},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_set_voice_depth_ms_708a76ed", (void*)godot_icall_AudioEffectChorus_set_voice_depth_ms_708a76ed},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_get_voice_depth_ms_c671df3a", (void*)godot_icall_AudioEffectChorus_get_voice_depth_ms_c671df3a},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_set_voice_level_db_708a76ed", (void*)godot_icall_AudioEffectChorus_set_voice_level_db_708a76ed},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_get_voice_level_db_c671df3a", (void*)godot_icall_AudioEffectChorus_get_voice_level_db_c671df3a},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_set_voice_cutoff_hz_708a76ed", (void*)godot_icall_AudioEffectChorus_set_voice_cutoff_hz_708a76ed},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_get_voice_cutoff_hz_c671df3a", (void*)godot_icall_AudioEffectChorus_get_voice_cutoff_hz_c671df3a},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_set_voice_pan_708a76ed", (void*)godot_icall_AudioEffectChorus_set_voice_pan_708a76ed},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_get_voice_pan_c671df3a", (void*)godot_icall_AudioEffectChorus_get_voice_pan_c671df3a},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_set_wet_904508bb", (void*)godot_icall_AudioEffectChorus_set_wet_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_get_wet_4edcd7a9", (void*)godot_icall_AudioEffectChorus_get_wet_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_set_dry_904508bb", (void*)godot_icall_AudioEffectChorus_set_dry_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectChorus_get_dry_4edcd7a9", (void*)godot_icall_AudioEffectChorus_get_dry_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_set_threshold_904508bb", (void*)godot_icall_AudioEffectCompressor_set_threshold_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_get_threshold_4edcd7a9", (void*)godot_icall_AudioEffectCompressor_get_threshold_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_set_ratio_904508bb", (void*)godot_icall_AudioEffectCompressor_set_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_get_ratio_4edcd7a9", (void*)godot_icall_AudioEffectCompressor_get_ratio_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_set_gain_904508bb", (void*)godot_icall_AudioEffectCompressor_set_gain_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_get_gain_4edcd7a9", (void*)godot_icall_AudioEffectCompressor_get_gain_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_set_attack_us_904508bb", (void*)godot_icall_AudioEffectCompressor_set_attack_us_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_get_attack_us_4edcd7a9", (void*)godot_icall_AudioEffectCompressor_get_attack_us_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_set_release_ms_904508bb", (void*)godot_icall_AudioEffectCompressor_set_release_ms_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_get_release_ms_4edcd7a9", (void*)godot_icall_AudioEffectCompressor_get_release_ms_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_set_mix_904508bb", (void*)godot_icall_AudioEffectCompressor_set_mix_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_get_mix_4edcd7a9", (void*)godot_icall_AudioEffectCompressor_get_mix_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_set_sidechain_2f29e819", (void*)godot_icall_AudioEffectCompressor_set_sidechain_2f29e819},
	{"Godot.NativeCalls::godot_icall_AudioEffectCompressor_get_sidechain_97be4a2e", (void*)godot_icall_AudioEffectCompressor_get_sidechain_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_dry_904508bb", (void*)godot_icall_AudioEffectDelay_set_dry_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_get_dry_4edcd7a9", (void*)godot_icall_AudioEffectDelay_get_dry_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_tap1_active_ba24800b", (void*)godot_icall_AudioEffectDelay_set_tap1_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_is_tap1_active_68fe5f59", (void*)godot_icall_AudioEffectDelay_is_tap1_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_tap1_delay_ms_904508bb", (void*)godot_icall_AudioEffectDelay_set_tap1_delay_ms_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_get_tap1_delay_ms_4edcd7a9", (void*)godot_icall_AudioEffectDelay_get_tap1_delay_ms_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_tap1_level_db_904508bb", (void*)godot_icall_AudioEffectDelay_set_tap1_level_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_get_tap1_level_db_4edcd7a9", (void*)godot_icall_AudioEffectDelay_get_tap1_level_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_tap1_pan_904508bb", (void*)godot_icall_AudioEffectDelay_set_tap1_pan_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_get_tap1_pan_4edcd7a9", (void*)godot_icall_AudioEffectDelay_get_tap1_pan_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_tap2_active_ba24800b", (void*)godot_icall_AudioEffectDelay_set_tap2_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_is_tap2_active_68fe5f59", (void*)godot_icall_AudioEffectDelay_is_tap2_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_tap2_delay_ms_904508bb", (void*)godot_icall_AudioEffectDelay_set_tap2_delay_ms_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_get_tap2_delay_ms_4edcd7a9", (void*)godot_icall_AudioEffectDelay_get_tap2_delay_ms_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_tap2_level_db_904508bb", (void*)godot_icall_AudioEffectDelay_set_tap2_level_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_get_tap2_level_db_4edcd7a9", (void*)godot_icall_AudioEffectDelay_get_tap2_level_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_tap2_pan_904508bb", (void*)godot_icall_AudioEffectDelay_set_tap2_pan_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_get_tap2_pan_4edcd7a9", (void*)godot_icall_AudioEffectDelay_get_tap2_pan_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_feedback_active_ba24800b", (void*)godot_icall_AudioEffectDelay_set_feedback_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_is_feedback_active_68fe5f59", (void*)godot_icall_AudioEffectDelay_is_feedback_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_feedback_delay_ms_904508bb", (void*)godot_icall_AudioEffectDelay_set_feedback_delay_ms_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_get_feedback_delay_ms_4edcd7a9", (void*)godot_icall_AudioEffectDelay_get_feedback_delay_ms_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_feedback_level_db_904508bb", (void*)godot_icall_AudioEffectDelay_set_feedback_level_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_get_feedback_level_db_4edcd7a9", (void*)godot_icall_AudioEffectDelay_get_feedback_level_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_set_feedback_lowpass_904508bb", (void*)godot_icall_AudioEffectDelay_set_feedback_lowpass_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDelay_get_feedback_lowpass_4edcd7a9", (void*)godot_icall_AudioEffectDelay_get_feedback_lowpass_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDistortion_set_mode_93254fee", (void*)godot_icall_AudioEffectDistortion_set_mode_93254fee},
	{"Godot.NativeCalls::godot_icall_AudioEffectDistortion_get_mode_20e05fe9", (void*)godot_icall_AudioEffectDistortion_get_mode_20e05fe9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDistortion_set_pre_gain_904508bb", (void*)godot_icall_AudioEffectDistortion_set_pre_gain_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDistortion_get_pre_gain_4edcd7a9", (void*)godot_icall_AudioEffectDistortion_get_pre_gain_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDistortion_set_keep_hf_hz_904508bb", (void*)godot_icall_AudioEffectDistortion_set_keep_hf_hz_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDistortion_get_keep_hf_hz_4edcd7a9", (void*)godot_icall_AudioEffectDistortion_get_keep_hf_hz_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDistortion_set_drive_904508bb", (void*)godot_icall_AudioEffectDistortion_set_drive_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDistortion_get_drive_4edcd7a9", (void*)godot_icall_AudioEffectDistortion_get_drive_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectDistortion_set_post_gain_904508bb", (void*)godot_icall_AudioEffectDistortion_set_post_gain_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectDistortion_get_post_gain_4edcd7a9", (void*)godot_icall_AudioEffectDistortion_get_post_gain_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectEQ_set_band_gain_db_708a76ed", (void*)godot_icall_AudioEffectEQ_set_band_gain_db_708a76ed},
	{"Godot.NativeCalls::godot_icall_AudioEffectEQ_get_band_gain_db_c671df3a", (void*)godot_icall_AudioEffectEQ_get_band_gain_db_c671df3a},
	{"Godot.NativeCalls::godot_icall_AudioEffectEQ_get_band_count_1f886eb0", (void*)godot_icall_AudioEffectEQ_get_band_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AudioEffectFilter_set_cutoff_904508bb", (void*)godot_icall_AudioEffectFilter_set_cutoff_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectFilter_get_cutoff_4edcd7a9", (void*)godot_icall_AudioEffectFilter_get_cutoff_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectFilter_set_resonance_904508bb", (void*)godot_icall_AudioEffectFilter_set_resonance_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectFilter_get_resonance_4edcd7a9", (void*)godot_icall_AudioEffectFilter_get_resonance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectFilter_set_gain_904508bb", (void*)godot_icall_AudioEffectFilter_set_gain_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectFilter_get_gain_4edcd7a9", (void*)godot_icall_AudioEffectFilter_get_gain_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectFilter_set_db_9ca4c4fa", (void*)godot_icall_AudioEffectFilter_set_db_9ca4c4fa},
	{"Godot.NativeCalls::godot_icall_AudioEffectFilter_get_db_4a7e236a", (void*)godot_icall_AudioEffectFilter_get_db_4a7e236a},
	{"Godot.NativeCalls::godot_icall_AudioEffectLimiter_set_ceiling_db_904508bb", (void*)godot_icall_AudioEffectLimiter_set_ceiling_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectLimiter_get_ceiling_db_4edcd7a9", (void*)godot_icall_AudioEffectLimiter_get_ceiling_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectLimiter_set_threshold_db_904508bb", (void*)godot_icall_AudioEffectLimiter_set_threshold_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectLimiter_get_threshold_db_4edcd7a9", (void*)godot_icall_AudioEffectLimiter_get_threshold_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectLimiter_set_soft_clip_db_904508bb", (void*)godot_icall_AudioEffectLimiter_set_soft_clip_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectLimiter_get_soft_clip_db_4edcd7a9", (void*)godot_icall_AudioEffectLimiter_get_soft_clip_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectLimiter_set_soft_clip_ratio_904508bb", (void*)godot_icall_AudioEffectLimiter_set_soft_clip_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectLimiter_get_soft_clip_ratio_4edcd7a9", (void*)godot_icall_AudioEffectLimiter_get_soft_clip_ratio_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectPanner_set_pan_904508bb", (void*)godot_icall_AudioEffectPanner_set_pan_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectPanner_get_pan_4edcd7a9", (void*)godot_icall_AudioEffectPanner_get_pan_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectPhaser_set_range_min_hz_904508bb", (void*)godot_icall_AudioEffectPhaser_set_range_min_hz_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectPhaser_get_range_min_hz_4edcd7a9", (void*)godot_icall_AudioEffectPhaser_get_range_min_hz_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectPhaser_set_range_max_hz_904508bb", (void*)godot_icall_AudioEffectPhaser_set_range_max_hz_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectPhaser_get_range_max_hz_4edcd7a9", (void*)godot_icall_AudioEffectPhaser_get_range_max_hz_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectPhaser_set_rate_hz_904508bb", (void*)godot_icall_AudioEffectPhaser_set_rate_hz_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectPhaser_get_rate_hz_4edcd7a9", (void*)godot_icall_AudioEffectPhaser_get_rate_hz_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectPhaser_set_feedback_904508bb", (void*)godot_icall_AudioEffectPhaser_set_feedback_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectPhaser_get_feedback_4edcd7a9", (void*)godot_icall_AudioEffectPhaser_get_feedback_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectPhaser_set_depth_904508bb", (void*)godot_icall_AudioEffectPhaser_set_depth_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectPhaser_get_depth_4edcd7a9", (void*)godot_icall_AudioEffectPhaser_get_depth_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectPitchShift_set_pitch_scale_904508bb", (void*)godot_icall_AudioEffectPitchShift_set_pitch_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectPitchShift_get_pitch_scale_4edcd7a9", (void*)godot_icall_AudioEffectPitchShift_get_pitch_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectPitchShift_set_oversampling_e1ae93bc", (void*)godot_icall_AudioEffectPitchShift_set_oversampling_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AudioEffectPitchShift_get_oversampling_1f886eb0", (void*)godot_icall_AudioEffectPitchShift_get_oversampling_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AudioEffectPitchShift_set_fft_size_5bab9b66", (void*)godot_icall_AudioEffectPitchShift_set_fft_size_5bab9b66},
	{"Godot.NativeCalls::godot_icall_AudioEffectPitchShift_get_fft_size_898b6606", (void*)godot_icall_AudioEffectPitchShift_get_fft_size_898b6606},
	{"Godot.NativeCalls::godot_icall_AudioEffectRecord_set_recording_active_ba24800b", (void*)godot_icall_AudioEffectRecord_set_recording_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioEffectRecord_is_recording_active_68fe5f59", (void*)godot_icall_AudioEffectRecord_is_recording_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioEffectRecord_set_format_3546ab06", (void*)godot_icall_AudioEffectRecord_set_format_3546ab06},
	{"Godot.NativeCalls::godot_icall_AudioEffectRecord_get_format_b2e2f671", (void*)godot_icall_AudioEffectRecord_get_format_b2e2f671},
	{"Godot.NativeCalls::godot_icall_AudioEffectRecord_get_recording_e109af33", (void*)godot_icall_AudioEffectRecord_get_recording_e109af33},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_set_predelay_msec_904508bb", (void*)godot_icall_AudioEffectReverb_set_predelay_msec_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_get_predelay_msec_4edcd7a9", (void*)godot_icall_AudioEffectReverb_get_predelay_msec_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_set_predelay_feedback_904508bb", (void*)godot_icall_AudioEffectReverb_set_predelay_feedback_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_get_predelay_feedback_4edcd7a9", (void*)godot_icall_AudioEffectReverb_get_predelay_feedback_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_set_room_size_904508bb", (void*)godot_icall_AudioEffectReverb_set_room_size_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_get_room_size_4edcd7a9", (void*)godot_icall_AudioEffectReverb_get_room_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_set_damping_904508bb", (void*)godot_icall_AudioEffectReverb_set_damping_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_get_damping_4edcd7a9", (void*)godot_icall_AudioEffectReverb_get_damping_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_set_spread_904508bb", (void*)godot_icall_AudioEffectReverb_set_spread_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_get_spread_4edcd7a9", (void*)godot_icall_AudioEffectReverb_get_spread_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_set_dry_904508bb", (void*)godot_icall_AudioEffectReverb_set_dry_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_get_dry_4edcd7a9", (void*)godot_icall_AudioEffectReverb_get_dry_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_set_wet_904508bb", (void*)godot_icall_AudioEffectReverb_set_wet_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_get_wet_4edcd7a9", (void*)godot_icall_AudioEffectReverb_get_wet_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_set_hpf_904508bb", (void*)godot_icall_AudioEffectReverb_set_hpf_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectReverb_get_hpf_4edcd7a9", (void*)godot_icall_AudioEffectReverb_get_hpf_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectSpectrumAnalyzer_set_buffer_length_904508bb", (void*)godot_icall_AudioEffectSpectrumAnalyzer_set_buffer_length_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectSpectrumAnalyzer_get_buffer_length_4edcd7a9", (void*)godot_icall_AudioEffectSpectrumAnalyzer_get_buffer_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectSpectrumAnalyzer_set_tap_back_pos_904508bb", (void*)godot_icall_AudioEffectSpectrumAnalyzer_set_tap_back_pos_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectSpectrumAnalyzer_get_tap_back_pos_4edcd7a9", (void*)godot_icall_AudioEffectSpectrumAnalyzer_get_tap_back_pos_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectSpectrumAnalyzer_set_fft_size_6979952f", (void*)godot_icall_AudioEffectSpectrumAnalyzer_set_fft_size_6979952f},
	{"Godot.NativeCalls::godot_icall_AudioEffectSpectrumAnalyzer_get_fft_size_97d9743d", (void*)godot_icall_AudioEffectSpectrumAnalyzer_get_fft_size_97d9743d},
	{"Godot.NativeCalls::godot_icall_AudioEffectSpectrumAnalyzerInstance_get_magnitude_for_frequency_range_daad5017", (void*)godot_icall_AudioEffectSpectrumAnalyzerInstance_get_magnitude_for_frequency_range_daad5017},
	{"Godot.NativeCalls::godot_icall_AudioEffectStereoEnhance_set_pan_pullout_904508bb", (void*)godot_icall_AudioEffectStereoEnhance_set_pan_pullout_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectStereoEnhance_get_pan_pullout_4edcd7a9", (void*)godot_icall_AudioEffectStereoEnhance_get_pan_pullout_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectStereoEnhance_set_time_pullout_904508bb", (void*)godot_icall_AudioEffectStereoEnhance_set_time_pullout_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectStereoEnhance_get_time_pullout_4edcd7a9", (void*)godot_icall_AudioEffectStereoEnhance_get_time_pullout_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioEffectStereoEnhance_set_surround_904508bb", (void*)godot_icall_AudioEffectStereoEnhance_set_surround_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioEffectStereoEnhance_get_surround_4edcd7a9", (void*)godot_icall_AudioEffectStereoEnhance_get_surround_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioServer_set_bus_count_e1ae93bc", (void*)godot_icall_AudioServer_set_bus_count_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_bus_count_1f886eb0", (void*)godot_icall_AudioServer_get_bus_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AudioServer_remove_bus_e1ae93bc", (void*)godot_icall_AudioServer_remove_bus_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AudioServer_add_bus_e1ae93bc", (void*)godot_icall_AudioServer_add_bus_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AudioServer_move_bus_807eefe4", (void*)godot_icall_AudioServer_move_bus_807eefe4},
	{"Godot.NativeCalls::godot_icall_AudioServer_set_bus_name_c1ffd74f", (void*)godot_icall_AudioServer_set_bus_name_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_bus_name_44fc4c5a", (void*)godot_icall_AudioServer_get_bus_name_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_bus_index_79b61600", (void*)godot_icall_AudioServer_get_bus_index_79b61600},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_bus_channels_b835dea5", (void*)godot_icall_AudioServer_get_bus_channels_b835dea5},
	{"Godot.NativeCalls::godot_icall_AudioServer_set_bus_volume_db_708a76ed", (void*)godot_icall_AudioServer_set_bus_volume_db_708a76ed},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_bus_volume_db_c671df3a", (void*)godot_icall_AudioServer_get_bus_volume_db_c671df3a},
	{"Godot.NativeCalls::godot_icall_AudioServer_set_bus_send_c1ffd74f", (void*)godot_icall_AudioServer_set_bus_send_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_bus_send_44fc4c5a", (void*)godot_icall_AudioServer_get_bus_send_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_AudioServer_set_bus_solo_4ae8febd", (void*)godot_icall_AudioServer_set_bus_solo_4ae8febd},
	{"Godot.NativeCalls::godot_icall_AudioServer_is_bus_solo_7f690926", (void*)godot_icall_AudioServer_is_bus_solo_7f690926},
	{"Godot.NativeCalls::godot_icall_AudioServer_set_bus_mute_4ae8febd", (void*)godot_icall_AudioServer_set_bus_mute_4ae8febd},
	{"Godot.NativeCalls::godot_icall_AudioServer_is_bus_mute_7f690926", (void*)godot_icall_AudioServer_is_bus_mute_7f690926},
	{"Godot.NativeCalls::godot_icall_AudioServer_set_bus_bypass_effects_4ae8febd", (void*)godot_icall_AudioServer_set_bus_bypass_effects_4ae8febd},
	{"Godot.NativeCalls::godot_icall_AudioServer_is_bus_bypassing_effects_7f690926", (void*)godot_icall_AudioServer_is_bus_bypassing_effects_7f690926},
	{"Godot.NativeCalls::godot_icall_AudioServer_add_bus_effect_540e2d5a", (void*)godot_icall_AudioServer_add_bus_effect_540e2d5a},
	{"Godot.NativeCalls::godot_icall_AudioServer_remove_bus_effect_807eefe4", (void*)godot_icall_AudioServer_remove_bus_effect_807eefe4},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_bus_effect_count_b835dea5", (void*)godot_icall_AudioServer_get_bus_effect_count_b835dea5},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_bus_effect_d45a0ee2", (void*)godot_icall_AudioServer_get_bus_effect_d45a0ee2},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_bus_effect_instance_b0e6ba58", (void*)godot_icall_AudioServer_get_bus_effect_instance_b0e6ba58},
	{"Godot.NativeCalls::godot_icall_AudioServer_swap_bus_effects_7de57286", (void*)godot_icall_AudioServer_swap_bus_effects_7de57286},
	{"Godot.NativeCalls::godot_icall_AudioServer_set_bus_effect_enabled_c76f61ef", (void*)godot_icall_AudioServer_set_bus_effect_enabled_c76f61ef},
	{"Godot.NativeCalls::godot_icall_AudioServer_is_bus_effect_enabled_c8b57d14", (void*)godot_icall_AudioServer_is_bus_effect_enabled_c8b57d14},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_bus_peak_volume_left_db_4da5f18d", (void*)godot_icall_AudioServer_get_bus_peak_volume_left_db_4da5f18d},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_bus_peak_volume_right_db_4da5f18d", (void*)godot_icall_AudioServer_get_bus_peak_volume_right_db_4da5f18d},
	{"Godot.NativeCalls::godot_icall_AudioServer_set_global_rate_scale_904508bb", (void*)godot_icall_AudioServer_set_global_rate_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_global_rate_scale_4edcd7a9", (void*)godot_icall_AudioServer_get_global_rate_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioServer_lock_c8e54a7b", (void*)godot_icall_AudioServer_lock_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AudioServer_unlock_c8e54a7b", (void*)godot_icall_AudioServer_unlock_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_speaker_mode_3ef5979c", (void*)godot_icall_AudioServer_get_speaker_mode_3ef5979c},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_mix_rate_4edcd7a9", (void*)godot_icall_AudioServer_get_mix_rate_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_device_list_d80382d4", (void*)godot_icall_AudioServer_get_device_list_d80382d4},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_device_97be4a2e", (void*)godot_icall_AudioServer_get_device_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AudioServer_set_device_3ca14953", (void*)godot_icall_AudioServer_set_device_3ca14953},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_time_to_next_mix_27c6b046", (void*)godot_icall_AudioServer_get_time_to_next_mix_27c6b046},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_time_since_last_mix_27c6b046", (void*)godot_icall_AudioServer_get_time_since_last_mix_27c6b046},
	{"Godot.NativeCalls::godot_icall_AudioServer_get_output_latency_27c6b046", (void*)godot_icall_AudioServer_get_output_latency_27c6b046},
	{"Godot.NativeCalls::godot_icall_AudioServer_capture_get_device_list_d80382d4", (void*)godot_icall_AudioServer_capture_get_device_list_d80382d4},
	{"Godot.NativeCalls::godot_icall_AudioServer_capture_get_device_97be4a2e", (void*)godot_icall_AudioServer_capture_get_device_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AudioServer_capture_set_device_3ca14953", (void*)godot_icall_AudioServer_capture_set_device_3ca14953},
	{"Godot.NativeCalls::godot_icall_AudioServer_set_bus_layout_b0d80c79", (void*)godot_icall_AudioServer_set_bus_layout_b0d80c79},
	{"Godot.NativeCalls::godot_icall_AudioServer_generate_bus_layout_6e79daeb", (void*)godot_icall_AudioServer_generate_bus_layout_6e79daeb},
	{"Godot.NativeCalls::godot_icall_AudioStream_get_length_4edcd7a9", (void*)godot_icall_AudioStream_get_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamGenerator_set_mix_rate_904508bb", (void*)godot_icall_AudioStreamGenerator_set_mix_rate_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamGenerator_get_mix_rate_4edcd7a9", (void*)godot_icall_AudioStreamGenerator_get_mix_rate_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamGenerator_set_buffer_length_904508bb", (void*)godot_icall_AudioStreamGenerator_set_buffer_length_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamGenerator_get_buffer_length_4edcd7a9", (void*)godot_icall_AudioStreamGenerator_get_buffer_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamGeneratorPlayback_push_frame_fba3d544", (void*)godot_icall_AudioStreamGeneratorPlayback_push_frame_fba3d544},
	{"Godot.NativeCalls::godot_icall_AudioStreamGeneratorPlayback_can_push_buffer_7f690926", (void*)godot_icall_AudioStreamGeneratorPlayback_can_push_buffer_7f690926},
	{"Godot.NativeCalls::godot_icall_AudioStreamGeneratorPlayback_push_buffer_89e18627", (void*)godot_icall_AudioStreamGeneratorPlayback_push_buffer_89e18627},
	{"Godot.NativeCalls::godot_icall_AudioStreamGeneratorPlayback_get_frames_available_1f886eb0", (void*)godot_icall_AudioStreamGeneratorPlayback_get_frames_available_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AudioStreamGeneratorPlayback_get_skips_1f886eb0", (void*)godot_icall_AudioStreamGeneratorPlayback_get_skips_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AudioStreamGeneratorPlayback_clear_buffer_c8e54a7b", (void*)godot_icall_AudioStreamGeneratorPlayback_clear_buffer_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AudioStreamOGGVorbis_set_data_da545cc0", (void*)godot_icall_AudioStreamOGGVorbis_set_data_da545cc0},
	{"Godot.NativeCalls::godot_icall_AudioStreamOGGVorbis_get_data_8edaba4", (void*)godot_icall_AudioStreamOGGVorbis_get_data_8edaba4},
	{"Godot.NativeCalls::godot_icall_AudioStreamOGGVorbis_set_loop_ba24800b", (void*)godot_icall_AudioStreamOGGVorbis_set_loop_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioStreamOGGVorbis_has_loop_68fe5f59", (void*)godot_icall_AudioStreamOGGVorbis_has_loop_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioStreamOGGVorbis_set_loop_offset_904508bb", (void*)godot_icall_AudioStreamOGGVorbis_set_loop_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamOGGVorbis_get_loop_offset_4edcd7a9", (void*)godot_icall_AudioStreamOGGVorbis_get_loop_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_set_stream_2cfa5de3", (void*)godot_icall_AudioStreamPlayer_set_stream_2cfa5de3},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_get_stream_da5bac81", (void*)godot_icall_AudioStreamPlayer_get_stream_da5bac81},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_set_volume_db_904508bb", (void*)godot_icall_AudioStreamPlayer_set_volume_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_get_volume_db_4edcd7a9", (void*)godot_icall_AudioStreamPlayer_get_volume_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_set_pitch_scale_904508bb", (void*)godot_icall_AudioStreamPlayer_set_pitch_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_get_pitch_scale_4edcd7a9", (void*)godot_icall_AudioStreamPlayer_get_pitch_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_play_904508bb", (void*)godot_icall_AudioStreamPlayer_play_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_seek_904508bb", (void*)godot_icall_AudioStreamPlayer_seek_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_stop_c8e54a7b", (void*)godot_icall_AudioStreamPlayer_stop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_is_playing_68fe5f59", (void*)godot_icall_AudioStreamPlayer_is_playing_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_get_playback_position_4edcd7a9", (void*)godot_icall_AudioStreamPlayer_get_playback_position_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_set_bus_2f29e819", (void*)godot_icall_AudioStreamPlayer_set_bus_2f29e819},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_get_bus_97be4a2e", (void*)godot_icall_AudioStreamPlayer_get_bus_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_set_autoplay_ba24800b", (void*)godot_icall_AudioStreamPlayer_set_autoplay_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_is_autoplay_enabled_68fe5f59", (void*)godot_icall_AudioStreamPlayer_is_autoplay_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_set_mix_target_d64a92ab", (void*)godot_icall_AudioStreamPlayer_set_mix_target_d64a92ab},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_get_mix_target_dd824166", (void*)godot_icall_AudioStreamPlayer_get_mix_target_dd824166},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer__set_playing_ba24800b", (void*)godot_icall_AudioStreamPlayer__set_playing_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_set_stream_paused_ba24800b", (void*)godot_icall_AudioStreamPlayer_set_stream_paused_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_get_stream_paused_68fe5f59", (void*)godot_icall_AudioStreamPlayer_get_stream_paused_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer_get_stream_playback_adb77a2", (void*)godot_icall_AudioStreamPlayer_get_stream_playback_adb77a2},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_set_stream_2cfa5de3", (void*)godot_icall_AudioStreamPlayer2D_set_stream_2cfa5de3},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_get_stream_da5bac81", (void*)godot_icall_AudioStreamPlayer2D_get_stream_da5bac81},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_set_volume_db_904508bb", (void*)godot_icall_AudioStreamPlayer2D_set_volume_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_get_volume_db_4edcd7a9", (void*)godot_icall_AudioStreamPlayer2D_get_volume_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_set_pitch_scale_904508bb", (void*)godot_icall_AudioStreamPlayer2D_set_pitch_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_get_pitch_scale_4edcd7a9", (void*)godot_icall_AudioStreamPlayer2D_get_pitch_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_play_904508bb", (void*)godot_icall_AudioStreamPlayer2D_play_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_seek_904508bb", (void*)godot_icall_AudioStreamPlayer2D_seek_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_stop_c8e54a7b", (void*)godot_icall_AudioStreamPlayer2D_stop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_is_playing_68fe5f59", (void*)godot_icall_AudioStreamPlayer2D_is_playing_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_get_playback_position_4edcd7a9", (void*)godot_icall_AudioStreamPlayer2D_get_playback_position_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_set_bus_2f29e819", (void*)godot_icall_AudioStreamPlayer2D_set_bus_2f29e819},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_get_bus_97be4a2e", (void*)godot_icall_AudioStreamPlayer2D_get_bus_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_set_autoplay_ba24800b", (void*)godot_icall_AudioStreamPlayer2D_set_autoplay_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_is_autoplay_enabled_68fe5f59", (void*)godot_icall_AudioStreamPlayer2D_is_autoplay_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D__set_playing_ba24800b", (void*)godot_icall_AudioStreamPlayer2D__set_playing_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_set_max_distance_904508bb", (void*)godot_icall_AudioStreamPlayer2D_set_max_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_get_max_distance_4edcd7a9", (void*)godot_icall_AudioStreamPlayer2D_get_max_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_set_attenuation_904508bb", (void*)godot_icall_AudioStreamPlayer2D_set_attenuation_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_get_attenuation_4edcd7a9", (void*)godot_icall_AudioStreamPlayer2D_get_attenuation_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_set_area_mask_966aab97", (void*)godot_icall_AudioStreamPlayer2D_set_area_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_get_area_mask_54cc76d5", (void*)godot_icall_AudioStreamPlayer2D_get_area_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_set_stream_paused_ba24800b", (void*)godot_icall_AudioStreamPlayer2D_set_stream_paused_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_get_stream_paused_68fe5f59", (void*)godot_icall_AudioStreamPlayer2D_get_stream_paused_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer2D_get_stream_playback_adb77a2", (void*)godot_icall_AudioStreamPlayer2D_get_stream_playback_adb77a2},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_stream_2cfa5de3", (void*)godot_icall_AudioStreamPlayer3D_set_stream_2cfa5de3},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_stream_da5bac81", (void*)godot_icall_AudioStreamPlayer3D_get_stream_da5bac81},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_unit_db_904508bb", (void*)godot_icall_AudioStreamPlayer3D_set_unit_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_unit_db_4edcd7a9", (void*)godot_icall_AudioStreamPlayer3D_get_unit_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_unit_size_904508bb", (void*)godot_icall_AudioStreamPlayer3D_set_unit_size_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_unit_size_4edcd7a9", (void*)godot_icall_AudioStreamPlayer3D_get_unit_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_max_db_904508bb", (void*)godot_icall_AudioStreamPlayer3D_set_max_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_max_db_4edcd7a9", (void*)godot_icall_AudioStreamPlayer3D_get_max_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_pitch_scale_904508bb", (void*)godot_icall_AudioStreamPlayer3D_set_pitch_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_pitch_scale_4edcd7a9", (void*)godot_icall_AudioStreamPlayer3D_get_pitch_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_play_904508bb", (void*)godot_icall_AudioStreamPlayer3D_play_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_seek_904508bb", (void*)godot_icall_AudioStreamPlayer3D_seek_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_stop_c8e54a7b", (void*)godot_icall_AudioStreamPlayer3D_stop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_is_playing_68fe5f59", (void*)godot_icall_AudioStreamPlayer3D_is_playing_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_playback_position_4edcd7a9", (void*)godot_icall_AudioStreamPlayer3D_get_playback_position_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_bus_2f29e819", (void*)godot_icall_AudioStreamPlayer3D_set_bus_2f29e819},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_bus_97be4a2e", (void*)godot_icall_AudioStreamPlayer3D_get_bus_97be4a2e},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_autoplay_ba24800b", (void*)godot_icall_AudioStreamPlayer3D_set_autoplay_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_is_autoplay_enabled_68fe5f59", (void*)godot_icall_AudioStreamPlayer3D_is_autoplay_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D__set_playing_ba24800b", (void*)godot_icall_AudioStreamPlayer3D__set_playing_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_max_distance_904508bb", (void*)godot_icall_AudioStreamPlayer3D_set_max_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_max_distance_4edcd7a9", (void*)godot_icall_AudioStreamPlayer3D_get_max_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_area_mask_966aab97", (void*)godot_icall_AudioStreamPlayer3D_set_area_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_area_mask_54cc76d5", (void*)godot_icall_AudioStreamPlayer3D_get_area_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_emission_angle_904508bb", (void*)godot_icall_AudioStreamPlayer3D_set_emission_angle_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_emission_angle_4edcd7a9", (void*)godot_icall_AudioStreamPlayer3D_get_emission_angle_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_emission_angle_enabled_ba24800b", (void*)godot_icall_AudioStreamPlayer3D_set_emission_angle_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_is_emission_angle_enabled_68fe5f59", (void*)godot_icall_AudioStreamPlayer3D_is_emission_angle_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_emission_angle_filter_attenuation_db_904508bb", (void*)godot_icall_AudioStreamPlayer3D_set_emission_angle_filter_attenuation_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_emission_angle_filter_attenuation_db_4edcd7a9", (void*)godot_icall_AudioStreamPlayer3D_get_emission_angle_filter_attenuation_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_attenuation_filter_cutoff_hz_904508bb", (void*)godot_icall_AudioStreamPlayer3D_set_attenuation_filter_cutoff_hz_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_attenuation_filter_cutoff_hz_4edcd7a9", (void*)godot_icall_AudioStreamPlayer3D_get_attenuation_filter_cutoff_hz_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_attenuation_filter_db_904508bb", (void*)godot_icall_AudioStreamPlayer3D_set_attenuation_filter_db_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_attenuation_filter_db_4edcd7a9", (void*)godot_icall_AudioStreamPlayer3D_get_attenuation_filter_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_attenuation_model_f86b3544", (void*)godot_icall_AudioStreamPlayer3D_set_attenuation_model_f86b3544},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_attenuation_model_8519a477", (void*)godot_icall_AudioStreamPlayer3D_get_attenuation_model_8519a477},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_out_of_range_mode_4e1cae68", (void*)godot_icall_AudioStreamPlayer3D_set_out_of_range_mode_4e1cae68},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_out_of_range_mode_6d6ee4b", (void*)godot_icall_AudioStreamPlayer3D_get_out_of_range_mode_6d6ee4b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_doppler_tracking_b2527ea", (void*)godot_icall_AudioStreamPlayer3D_set_doppler_tracking_b2527ea},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_doppler_tracking_2769fc25", (void*)godot_icall_AudioStreamPlayer3D_get_doppler_tracking_2769fc25},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_set_stream_paused_ba24800b", (void*)godot_icall_AudioStreamPlayer3D_set_stream_paused_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_stream_paused_68fe5f59", (void*)godot_icall_AudioStreamPlayer3D_get_stream_paused_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioStreamPlayer3D_get_stream_playback_adb77a2", (void*)godot_icall_AudioStreamPlayer3D_get_stream_playback_adb77a2},
	{"Godot.NativeCalls::godot_icall_AudioStreamRandomPitch_set_audio_stream_2cfa5de3", (void*)godot_icall_AudioStreamRandomPitch_set_audio_stream_2cfa5de3},
	{"Godot.NativeCalls::godot_icall_AudioStreamRandomPitch_get_audio_stream_da5bac81", (void*)godot_icall_AudioStreamRandomPitch_get_audio_stream_da5bac81},
	{"Godot.NativeCalls::godot_icall_AudioStreamRandomPitch_set_random_pitch_904508bb", (void*)godot_icall_AudioStreamRandomPitch_set_random_pitch_904508bb},
	{"Godot.NativeCalls::godot_icall_AudioStreamRandomPitch_get_random_pitch_4edcd7a9", (void*)godot_icall_AudioStreamRandomPitch_get_random_pitch_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_set_data_627085c1", (void*)godot_icall_AudioStreamSample_set_data_627085c1},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_get_data_8edaba4", (void*)godot_icall_AudioStreamSample_get_data_8edaba4},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_set_format_3546ab06", (void*)godot_icall_AudioStreamSample_set_format_3546ab06},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_get_format_b2e2f671", (void*)godot_icall_AudioStreamSample_get_format_b2e2f671},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_set_loop_mode_65756368", (void*)godot_icall_AudioStreamSample_set_loop_mode_65756368},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_get_loop_mode_6dcc834b", (void*)godot_icall_AudioStreamSample_get_loop_mode_6dcc834b},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_set_loop_begin_e1ae93bc", (void*)godot_icall_AudioStreamSample_set_loop_begin_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_get_loop_begin_1f886eb0", (void*)godot_icall_AudioStreamSample_get_loop_begin_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_set_loop_end_e1ae93bc", (void*)godot_icall_AudioStreamSample_set_loop_end_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_get_loop_end_1f886eb0", (void*)godot_icall_AudioStreamSample_get_loop_end_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_set_mix_rate_e1ae93bc", (void*)godot_icall_AudioStreamSample_set_mix_rate_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_get_mix_rate_1f886eb0", (void*)godot_icall_AudioStreamSample_get_mix_rate_1f886eb0},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_set_stereo_ba24800b", (void*)godot_icall_AudioStreamSample_set_stereo_ba24800b},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_is_stereo_68fe5f59", (void*)godot_icall_AudioStreamSample_is_stereo_68fe5f59},
	{"Godot.NativeCalls::godot_icall_AudioStreamSample_save_to_wav_2660dbb2", (void*)godot_icall_AudioStreamSample_save_to_wav_2660dbb2},
	{"Godot.NativeCalls::godot_icall_BackBufferCopy_set_rect_a5ed61f1", (void*)godot_icall_BackBufferCopy_set_rect_a5ed61f1},
	{"Godot.NativeCalls::godot_icall_BackBufferCopy_get_rect_6344c073", (void*)godot_icall_BackBufferCopy_get_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_BackBufferCopy_set_copy_mode_e241b099", (void*)godot_icall_BackBufferCopy_set_copy_mode_e241b099},
	{"Godot.NativeCalls::godot_icall_BackBufferCopy_get_copy_mode_dfd96c34", (void*)godot_icall_BackBufferCopy_get_copy_mode_dfd96c34},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_set_light_data_4f60b80c", (void*)godot_icall_BakedLightmap_set_light_data_4f60b80c},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_get_light_data_7dc28760", (void*)godot_icall_BakedLightmap_get_light_data_7dc28760},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_set_bake_cell_size_904508bb", (void*)godot_icall_BakedLightmap_set_bake_cell_size_904508bb},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_get_bake_cell_size_4edcd7a9", (void*)godot_icall_BakedLightmap_get_bake_cell_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_set_capture_cell_size_904508bb", (void*)godot_icall_BakedLightmap_set_capture_cell_size_904508bb},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_get_capture_cell_size_4edcd7a9", (void*)godot_icall_BakedLightmap_get_capture_cell_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_set_bake_quality_a7280410", (void*)godot_icall_BakedLightmap_set_bake_quality_a7280410},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_get_bake_quality_cb066063", (void*)godot_icall_BakedLightmap_get_bake_quality_cb066063},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_set_bake_mode_e2d9693c", (void*)godot_icall_BakedLightmap_set_bake_mode_e2d9693c},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_get_bake_mode_3853b39f", (void*)godot_icall_BakedLightmap_get_bake_mode_3853b39f},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_set_extents_6df7471d", (void*)godot_icall_BakedLightmap_set_extents_6df7471d},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_get_extents_9b4ea24f", (void*)godot_icall_BakedLightmap_get_extents_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_set_bake_default_texels_per_unit_904508bb", (void*)godot_icall_BakedLightmap_set_bake_default_texels_per_unit_904508bb},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_get_bake_default_texels_per_unit_4edcd7a9", (void*)godot_icall_BakedLightmap_get_bake_default_texels_per_unit_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_set_propagation_904508bb", (void*)godot_icall_BakedLightmap_set_propagation_904508bb},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_get_propagation_4edcd7a9", (void*)godot_icall_BakedLightmap_get_propagation_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_set_energy_904508bb", (void*)godot_icall_BakedLightmap_set_energy_904508bb},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_get_energy_4edcd7a9", (void*)godot_icall_BakedLightmap_get_energy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_set_hdr_ba24800b", (void*)godot_icall_BakedLightmap_set_hdr_ba24800b},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_is_hdr_68fe5f59", (void*)godot_icall_BakedLightmap_is_hdr_68fe5f59},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_set_image_path_3ca14953", (void*)godot_icall_BakedLightmap_set_image_path_3ca14953},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_get_image_path_97be4a2e", (void*)godot_icall_BakedLightmap_get_image_path_97be4a2e},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_bake_82641f9a", (void*)godot_icall_BakedLightmap_bake_82641f9a},
	{"Godot.NativeCalls::godot_icall_BakedLightmap_debug_bake_c8e54a7b", (void*)godot_icall_BakedLightmap_debug_bake_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData__set_user_data_2923a790", (void*)godot_icall_BakedLightmapData__set_user_data_2923a790},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData__get_user_data_d80382d4", (void*)godot_icall_BakedLightmapData__get_user_data_d80382d4},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_set_bounds_ff67b409", (void*)godot_icall_BakedLightmapData_set_bounds_ff67b409},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_get_bounds_2dbf935b", (void*)godot_icall_BakedLightmapData_get_bounds_2dbf935b},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_set_cell_space_transform_655b85c9", (void*)godot_icall_BakedLightmapData_set_cell_space_transform_655b85c9},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_get_cell_space_transform_a3fb649b", (void*)godot_icall_BakedLightmapData_get_cell_space_transform_a3fb649b},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_set_cell_subdiv_e1ae93bc", (void*)godot_icall_BakedLightmapData_set_cell_subdiv_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_get_cell_subdiv_1f886eb0", (void*)godot_icall_BakedLightmapData_get_cell_subdiv_1f886eb0},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_set_octree_da545cc0", (void*)godot_icall_BakedLightmapData_set_octree_da545cc0},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_get_octree_8edaba4", (void*)godot_icall_BakedLightmapData_get_octree_8edaba4},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_set_energy_904508bb", (void*)godot_icall_BakedLightmapData_set_energy_904508bb},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_get_energy_4edcd7a9", (void*)godot_icall_BakedLightmapData_get_energy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_add_user_6eb93a29", (void*)godot_icall_BakedLightmapData_add_user_6eb93a29},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_get_user_count_1f886eb0", (void*)godot_icall_BakedLightmapData_get_user_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_get_user_path_1640f2b", (void*)godot_icall_BakedLightmapData_get_user_path_1640f2b},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_get_user_lightmap_561b2831", (void*)godot_icall_BakedLightmapData_get_user_lightmap_561b2831},
	{"Godot.NativeCalls::godot_icall_BakedLightmapData_clear_users_c8e54a7b", (void*)godot_icall_BakedLightmapData_clear_users_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_BaseButton_set_pressed_ba24800b", (void*)godot_icall_BaseButton_set_pressed_ba24800b},
	{"Godot.NativeCalls::godot_icall_BaseButton_is_pressed_68fe5f59", (void*)godot_icall_BaseButton_is_pressed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_BaseButton_is_hovered_68fe5f59", (void*)godot_icall_BaseButton_is_hovered_68fe5f59},
	{"Godot.NativeCalls::godot_icall_BaseButton_set_toggle_mode_ba24800b", (void*)godot_icall_BaseButton_set_toggle_mode_ba24800b},
	{"Godot.NativeCalls::godot_icall_BaseButton_is_toggle_mode_68fe5f59", (void*)godot_icall_BaseButton_is_toggle_mode_68fe5f59},
	{"Godot.NativeCalls::godot_icall_BaseButton_set_shortcut_in_tooltip_ba24800b", (void*)godot_icall_BaseButton_set_shortcut_in_tooltip_ba24800b},
	{"Godot.NativeCalls::godot_icall_BaseButton_is_shortcut_in_tooltip_enabled_68fe5f59", (void*)godot_icall_BaseButton_is_shortcut_in_tooltip_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_BaseButton_set_disabled_ba24800b", (void*)godot_icall_BaseButton_set_disabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_BaseButton_is_disabled_68fe5f59", (void*)godot_icall_BaseButton_is_disabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_BaseButton_set_action_mode_115a4545", (void*)godot_icall_BaseButton_set_action_mode_115a4545},
	{"Godot.NativeCalls::godot_icall_BaseButton_get_action_mode_77d6ae80", (void*)godot_icall_BaseButton_get_action_mode_77d6ae80},
	{"Godot.NativeCalls::godot_icall_BaseButton_set_button_mask_e1ae93bc", (void*)godot_icall_BaseButton_set_button_mask_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_BaseButton_get_button_mask_1f886eb0", (void*)godot_icall_BaseButton_get_button_mask_1f886eb0},
	{"Godot.NativeCalls::godot_icall_BaseButton_get_draw_mode_8c3a3bf7", (void*)godot_icall_BaseButton_get_draw_mode_8c3a3bf7},
	{"Godot.NativeCalls::godot_icall_BaseButton_set_enabled_focus_mode_ec5f3255", (void*)godot_icall_BaseButton_set_enabled_focus_mode_ec5f3255},
	{"Godot.NativeCalls::godot_icall_BaseButton_get_enabled_focus_mode_2e93c450", (void*)godot_icall_BaseButton_get_enabled_focus_mode_2e93c450},
	{"Godot.NativeCalls::godot_icall_BaseButton_set_keep_pressed_outside_ba24800b", (void*)godot_icall_BaseButton_set_keep_pressed_outside_ba24800b},
	{"Godot.NativeCalls::godot_icall_BaseButton_is_keep_pressed_outside_68fe5f59", (void*)godot_icall_BaseButton_is_keep_pressed_outside_68fe5f59},
	{"Godot.NativeCalls::godot_icall_BaseButton_set_shortcut_4a8acc0d", (void*)godot_icall_BaseButton_set_shortcut_4a8acc0d},
	{"Godot.NativeCalls::godot_icall_BaseButton_get_shortcut_78ac1b5f", (void*)godot_icall_BaseButton_get_shortcut_78ac1b5f},
	{"Godot.NativeCalls::godot_icall_BaseButton_set_button_group_cf618eb2", (void*)godot_icall_BaseButton_set_button_group_cf618eb2},
	{"Godot.NativeCalls::godot_icall_BaseButton_get_button_group_fdc159b2", (void*)godot_icall_BaseButton_get_button_group_fdc159b2},
	{"Godot.NativeCalls::godot_icall_BitMap_create_6df7471e", (void*)godot_icall_BitMap_create_6df7471e},
	{"Godot.NativeCalls::godot_icall_BitMap_create_from_image_alpha_2b2bd4f0", (void*)godot_icall_BitMap_create_from_image_alpha_2b2bd4f0},
	{"Godot.NativeCalls::godot_icall_BitMap_set_bit_cd723547", (void*)godot_icall_BitMap_set_bit_cd723547},
	{"Godot.NativeCalls::godot_icall_BitMap_get_bit_fba3d544", (void*)godot_icall_BitMap_get_bit_fba3d544},
	{"Godot.NativeCalls::godot_icall_BitMap_set_bit_rect_9e4cc3f", (void*)godot_icall_BitMap_set_bit_rect_9e4cc3f},
	{"Godot.NativeCalls::godot_icall_BitMap_get_true_bit_count_1f886eb0", (void*)godot_icall_BitMap_get_true_bit_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_BitMap_get_size_9b4ea24e", (void*)godot_icall_BitMap_get_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_BitMap__set_data_e472adcf", (void*)godot_icall_BitMap__set_data_e472adcf},
	{"Godot.NativeCalls::godot_icall_BitMap__get_data_22d47c9d", (void*)godot_icall_BitMap__get_data_22d47c9d},
	{"Godot.NativeCalls::godot_icall_BitMap_grow_mask_44225da7", (void*)godot_icall_BitMap_grow_mask_44225da7},
	{"Godot.NativeCalls::godot_icall_BitMap_opaque_to_polygons_dce17cda", (void*)godot_icall_BitMap_opaque_to_polygons_dce17cda},
	{"Godot.NativeCalls::godot_icall_BitmapFont_create_from_fnt_2660dbb2", (void*)godot_icall_BitmapFont_create_from_fnt_2660dbb2},
	{"Godot.NativeCalls::godot_icall_BitmapFont_set_height_904508bb", (void*)godot_icall_BitmapFont_set_height_904508bb},
	{"Godot.NativeCalls::godot_icall_BitmapFont_set_ascent_904508bb", (void*)godot_icall_BitmapFont_set_ascent_904508bb},
	{"Godot.NativeCalls::godot_icall_BitmapFont_add_kerning_pair_6f53a9ee", (void*)godot_icall_BitmapFont_add_kerning_pair_6f53a9ee},
	{"Godot.NativeCalls::godot_icall_BitmapFont_get_kerning_pair_13a314c5", (void*)godot_icall_BitmapFont_get_kerning_pair_13a314c5},
	{"Godot.NativeCalls::godot_icall_BitmapFont_add_texture_7eecd31a", (void*)godot_icall_BitmapFont_add_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_BitmapFont_add_char_e4f36219", (void*)godot_icall_BitmapFont_add_char_e4f36219},
	{"Godot.NativeCalls::godot_icall_BitmapFont_get_texture_count_1f886eb0", (void*)godot_icall_BitmapFont_get_texture_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_BitmapFont_get_texture_561b2831", (void*)godot_icall_BitmapFont_get_texture_561b2831},
	{"Godot.NativeCalls::godot_icall_BitmapFont_get_char_size_d3a9011d", (void*)godot_icall_BitmapFont_get_char_size_d3a9011d},
	{"Godot.NativeCalls::godot_icall_BitmapFont_set_distance_field_hint_ba24800b", (void*)godot_icall_BitmapFont_set_distance_field_hint_ba24800b},
	{"Godot.NativeCalls::godot_icall_BitmapFont_clear_c8e54a7b", (void*)godot_icall_BitmapFont_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_BitmapFont__set_chars_fb3c9f9f", (void*)godot_icall_BitmapFont__set_chars_fb3c9f9f},
	{"Godot.NativeCalls::godot_icall_BitmapFont__get_chars_2a166acd", (void*)godot_icall_BitmapFont__get_chars_2a166acd},
	{"Godot.NativeCalls::godot_icall_BitmapFont__set_kernings_fb3c9f9f", (void*)godot_icall_BitmapFont__set_kernings_fb3c9f9f},
	{"Godot.NativeCalls::godot_icall_BitmapFont__get_kernings_2a166acd", (void*)godot_icall_BitmapFont__get_kernings_2a166acd},
	{"Godot.NativeCalls::godot_icall_BitmapFont__set_textures_2923a790", (void*)godot_icall_BitmapFont__set_textures_2923a790},
	{"Godot.NativeCalls::godot_icall_BitmapFont__get_textures_d80382d4", (void*)godot_icall_BitmapFont__get_textures_d80382d4},
	{"Godot.NativeCalls::godot_icall_BitmapFont_set_fallback_2e442cf9", (void*)godot_icall_BitmapFont_set_fallback_2e442cf9},
	{"Godot.NativeCalls::godot_icall_BitmapFont_get_fallback_dcddfb6b", (void*)godot_icall_BitmapFont_get_fallback_dcddfb6b},
	{"Godot.NativeCalls::godot_icall_Bone2D_set_rest_dfe2915f", (void*)godot_icall_Bone2D_set_rest_dfe2915f},
	{"Godot.NativeCalls::godot_icall_Bone2D_get_rest_d44700d", (void*)godot_icall_Bone2D_get_rest_d44700d},
	{"Godot.NativeCalls::godot_icall_Bone2D_apply_rest_c8e54a7b", (void*)godot_icall_Bone2D_apply_rest_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Bone2D_get_skeleton_rest_d44700d", (void*)godot_icall_Bone2D_get_skeleton_rest_d44700d},
	{"Godot.NativeCalls::godot_icall_Bone2D_get_index_in_skeleton_1f886eb0", (void*)godot_icall_Bone2D_get_index_in_skeleton_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Bone2D_set_default_length_904508bb", (void*)godot_icall_Bone2D_set_default_length_904508bb},
	{"Godot.NativeCalls::godot_icall_Bone2D_get_default_length_4edcd7a9", (void*)godot_icall_Bone2D_get_default_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_BoneAttachment_set_bone_name_6964ff3e", (void*)godot_icall_BoneAttachment_set_bone_name_6964ff3e},
	{"Godot.NativeCalls::godot_icall_BoneAttachment_get_bone_name_97be4a2e", (void*)godot_icall_BoneAttachment_get_bone_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_BoxContainer_add_spacer_ba24800b", (void*)godot_icall_BoxContainer_add_spacer_ba24800b},
	{"Godot.NativeCalls::godot_icall_BoxContainer_get_alignment_3db3ff71", (void*)godot_icall_BoxContainer_get_alignment_3db3ff71},
	{"Godot.NativeCalls::godot_icall_BoxContainer_set_alignment_8f9220f3", (void*)godot_icall_BoxContainer_set_alignment_8f9220f3},
	{"Godot.NativeCalls::godot_icall_BoxShape_set_extents_6df7471d", (void*)godot_icall_BoxShape_set_extents_6df7471d},
	{"Godot.NativeCalls::godot_icall_BoxShape_get_extents_9b4ea24f", (void*)godot_icall_BoxShape_get_extents_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Button_set_text_2f29e819", (void*)godot_icall_Button_set_text_2f29e819},
	{"Godot.NativeCalls::godot_icall_Button_get_text_97be4a2e", (void*)godot_icall_Button_get_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Button_set_button_icon_7eecd31a", (void*)godot_icall_Button_set_button_icon_7eecd31a},
	{"Godot.NativeCalls::godot_icall_Button_get_button_icon_ac462e4a", (void*)godot_icall_Button_get_button_icon_ac462e4a},
	{"Godot.NativeCalls::godot_icall_Button_set_expand_icon_ba24800b", (void*)godot_icall_Button_set_expand_icon_ba24800b},
	{"Godot.NativeCalls::godot_icall_Button_is_expand_icon_68fe5f59", (void*)godot_icall_Button_is_expand_icon_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Button_set_flat_ba24800b", (void*)godot_icall_Button_set_flat_ba24800b},
	{"Godot.NativeCalls::godot_icall_Button_set_clip_text_ba24800b", (void*)godot_icall_Button_set_clip_text_ba24800b},
	{"Godot.NativeCalls::godot_icall_Button_get_clip_text_68fe5f59", (void*)godot_icall_Button_get_clip_text_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Button_set_text_align_5526e9c9", (void*)godot_icall_Button_set_text_align_5526e9c9},
	{"Godot.NativeCalls::godot_icall_Button_get_text_align_9400389b", (void*)godot_icall_Button_get_text_align_9400389b},
	{"Godot.NativeCalls::godot_icall_Button_is_flat_68fe5f59", (void*)godot_icall_Button_is_flat_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ButtonGroup_get_pressed_button_6f36e66e", (void*)godot_icall_ButtonGroup_get_pressed_button_6f36e66e},
	{"Godot.NativeCalls::godot_icall_ButtonGroup_get_buttons_d80382d4", (void*)godot_icall_ButtonGroup_get_buttons_d80382d4},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_emitting_ba24800b", (void*)godot_icall_CPUParticles_set_emitting_ba24800b},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_amount_e1ae93bc", (void*)godot_icall_CPUParticles_set_amount_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_lifetime_904508bb", (void*)godot_icall_CPUParticles_set_lifetime_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_one_shot_ba24800b", (void*)godot_icall_CPUParticles_set_one_shot_ba24800b},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_pre_process_time_904508bb", (void*)godot_icall_CPUParticles_set_pre_process_time_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_explosiveness_ratio_904508bb", (void*)godot_icall_CPUParticles_set_explosiveness_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_randomness_ratio_904508bb", (void*)godot_icall_CPUParticles_set_randomness_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_lifetime_randomness_904508bb", (void*)godot_icall_CPUParticles_set_lifetime_randomness_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_use_local_coordinates_ba24800b", (void*)godot_icall_CPUParticles_set_use_local_coordinates_ba24800b},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_fixed_fps_e1ae93bc", (void*)godot_icall_CPUParticles_set_fixed_fps_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_fractional_delta_ba24800b", (void*)godot_icall_CPUParticles_set_fractional_delta_ba24800b},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_speed_scale_904508bb", (void*)godot_icall_CPUParticles_set_speed_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles_is_emitting_68fe5f59", (void*)godot_icall_CPUParticles_is_emitting_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_amount_1f886eb0", (void*)godot_icall_CPUParticles_get_amount_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_lifetime_4edcd7a9", (void*)godot_icall_CPUParticles_get_lifetime_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_one_shot_68fe5f59", (void*)godot_icall_CPUParticles_get_one_shot_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_pre_process_time_4edcd7a9", (void*)godot_icall_CPUParticles_get_pre_process_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_explosiveness_ratio_4edcd7a9", (void*)godot_icall_CPUParticles_get_explosiveness_ratio_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_randomness_ratio_4edcd7a9", (void*)godot_icall_CPUParticles_get_randomness_ratio_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_lifetime_randomness_4edcd7a9", (void*)godot_icall_CPUParticles_get_lifetime_randomness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_use_local_coordinates_68fe5f59", (void*)godot_icall_CPUParticles_get_use_local_coordinates_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_fixed_fps_1f886eb0", (void*)godot_icall_CPUParticles_get_fixed_fps_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_fractional_delta_68fe5f59", (void*)godot_icall_CPUParticles_get_fractional_delta_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_speed_scale_4edcd7a9", (void*)godot_icall_CPUParticles_get_speed_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_draw_order_2112a4ca", (void*)godot_icall_CPUParticles_set_draw_order_2112a4ca},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_draw_order_57695d85", (void*)godot_icall_CPUParticles_get_draw_order_57695d85},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_mesh_d5d30806", (void*)godot_icall_CPUParticles_set_mesh_d5d30806},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_mesh_1372d766", (void*)godot_icall_CPUParticles_get_mesh_1372d766},
	{"Godot.NativeCalls::godot_icall_CPUParticles_restart_c8e54a7b", (void*)godot_icall_CPUParticles_restart_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_direction_6df7471d", (void*)godot_icall_CPUParticles_set_direction_6df7471d},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_direction_9b4ea24f", (void*)godot_icall_CPUParticles_get_direction_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_spread_904508bb", (void*)godot_icall_CPUParticles_set_spread_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_spread_4edcd7a9", (void*)godot_icall_CPUParticles_get_spread_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_flatness_904508bb", (void*)godot_icall_CPUParticles_set_flatness_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_flatness_4edcd7a9", (void*)godot_icall_CPUParticles_get_flatness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_param_a810fa37", (void*)godot_icall_CPUParticles_set_param_a810fa37},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_param_6b4f30f5", (void*)godot_icall_CPUParticles_get_param_6b4f30f5},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_param_randomness_a810fa37", (void*)godot_icall_CPUParticles_set_param_randomness_a810fa37},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_param_randomness_6b4f30f5", (void*)godot_icall_CPUParticles_get_param_randomness_6b4f30f5},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_param_curve_6fa1bca6", (void*)godot_icall_CPUParticles_set_param_curve_6fa1bca6},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_param_curve_c99d09e2", (void*)godot_icall_CPUParticles_get_param_curve_c99d09e2},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_color_f2e3b5aa", (void*)godot_icall_CPUParticles_set_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_color_304394ba", (void*)godot_icall_CPUParticles_get_color_304394ba},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_color_ramp_487c5873", (void*)godot_icall_CPUParticles_set_color_ramp_487c5873},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_color_ramp_76d5a6f1", (void*)godot_icall_CPUParticles_get_color_ramp_76d5a6f1},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_particle_flag_440013aa", (void*)godot_icall_CPUParticles_set_particle_flag_440013aa},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_particle_flag_8b445db5", (void*)godot_icall_CPUParticles_get_particle_flag_8b445db5},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_emission_shape_1801db0", (void*)godot_icall_CPUParticles_set_emission_shape_1801db0},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_emission_shape_12316583", (void*)godot_icall_CPUParticles_get_emission_shape_12316583},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_emission_sphere_radius_904508bb", (void*)godot_icall_CPUParticles_set_emission_sphere_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_emission_sphere_radius_4edcd7a9", (void*)godot_icall_CPUParticles_get_emission_sphere_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_emission_box_extents_6df7471d", (void*)godot_icall_CPUParticles_set_emission_box_extents_6df7471d},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_emission_box_extents_9b4ea24f", (void*)godot_icall_CPUParticles_get_emission_box_extents_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_emission_points_88c6a314", (void*)godot_icall_CPUParticles_set_emission_points_88c6a314},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_emission_points_36607e58", (void*)godot_icall_CPUParticles_get_emission_points_36607e58},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_emission_normals_88c6a314", (void*)godot_icall_CPUParticles_set_emission_normals_88c6a314},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_emission_normals_36607e58", (void*)godot_icall_CPUParticles_get_emission_normals_36607e58},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_emission_colors_22e90985", (void*)godot_icall_CPUParticles_set_emission_colors_22e90985},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_emission_colors_e048d8e7", (void*)godot_icall_CPUParticles_get_emission_colors_e048d8e7},
	{"Godot.NativeCalls::godot_icall_CPUParticles_get_gravity_9b4ea24f", (void*)godot_icall_CPUParticles_get_gravity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_CPUParticles_set_gravity_6df7471d", (void*)godot_icall_CPUParticles_set_gravity_6df7471d},
	{"Godot.NativeCalls::godot_icall_CPUParticles_convert_from_particles_598860a7", (void*)godot_icall_CPUParticles_convert_from_particles_598860a7},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_emitting_ba24800b", (void*)godot_icall_CPUParticles2D_set_emitting_ba24800b},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_amount_e1ae93bc", (void*)godot_icall_CPUParticles2D_set_amount_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_lifetime_904508bb", (void*)godot_icall_CPUParticles2D_set_lifetime_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_one_shot_ba24800b", (void*)godot_icall_CPUParticles2D_set_one_shot_ba24800b},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_pre_process_time_904508bb", (void*)godot_icall_CPUParticles2D_set_pre_process_time_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_explosiveness_ratio_904508bb", (void*)godot_icall_CPUParticles2D_set_explosiveness_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_randomness_ratio_904508bb", (void*)godot_icall_CPUParticles2D_set_randomness_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_lifetime_randomness_904508bb", (void*)godot_icall_CPUParticles2D_set_lifetime_randomness_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_use_local_coordinates_ba24800b", (void*)godot_icall_CPUParticles2D_set_use_local_coordinates_ba24800b},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_fixed_fps_e1ae93bc", (void*)godot_icall_CPUParticles2D_set_fixed_fps_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_fractional_delta_ba24800b", (void*)godot_icall_CPUParticles2D_set_fractional_delta_ba24800b},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_speed_scale_904508bb", (void*)godot_icall_CPUParticles2D_set_speed_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_is_emitting_68fe5f59", (void*)godot_icall_CPUParticles2D_is_emitting_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_amount_1f886eb0", (void*)godot_icall_CPUParticles2D_get_amount_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_lifetime_4edcd7a9", (void*)godot_icall_CPUParticles2D_get_lifetime_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_one_shot_68fe5f59", (void*)godot_icall_CPUParticles2D_get_one_shot_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_pre_process_time_4edcd7a9", (void*)godot_icall_CPUParticles2D_get_pre_process_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_explosiveness_ratio_4edcd7a9", (void*)godot_icall_CPUParticles2D_get_explosiveness_ratio_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_randomness_ratio_4edcd7a9", (void*)godot_icall_CPUParticles2D_get_randomness_ratio_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_lifetime_randomness_4edcd7a9", (void*)godot_icall_CPUParticles2D_get_lifetime_randomness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_use_local_coordinates_68fe5f59", (void*)godot_icall_CPUParticles2D_get_use_local_coordinates_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_fixed_fps_1f886eb0", (void*)godot_icall_CPUParticles2D_get_fixed_fps_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_fractional_delta_68fe5f59", (void*)godot_icall_CPUParticles2D_get_fractional_delta_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_speed_scale_4edcd7a9", (void*)godot_icall_CPUParticles2D_get_speed_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_draw_order_955be194", (void*)godot_icall_CPUParticles2D_set_draw_order_955be194},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_draw_order_61478e47", (void*)godot_icall_CPUParticles2D_get_draw_order_61478e47},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_texture_7eecd31a", (void*)godot_icall_CPUParticles2D_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_texture_ac462e4a", (void*)godot_icall_CPUParticles2D_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_normalmap_7eecd31a", (void*)godot_icall_CPUParticles2D_set_normalmap_7eecd31a},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_normalmap_ac462e4a", (void*)godot_icall_CPUParticles2D_get_normalmap_ac462e4a},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_restart_c8e54a7b", (void*)godot_icall_CPUParticles2D_restart_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_direction_6df7471e", (void*)godot_icall_CPUParticles2D_set_direction_6df7471e},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_direction_9b4ea24e", (void*)godot_icall_CPUParticles2D_get_direction_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_spread_904508bb", (void*)godot_icall_CPUParticles2D_set_spread_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_spread_4edcd7a9", (void*)godot_icall_CPUParticles2D_get_spread_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_param_2433341d", (void*)godot_icall_CPUParticles2D_set_param_2433341d},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_param_29f23ad7", (void*)godot_icall_CPUParticles2D_get_param_29f23ad7},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_param_randomness_2433341d", (void*)godot_icall_CPUParticles2D_set_param_randomness_2433341d},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_param_randomness_29f23ad7", (void*)godot_icall_CPUParticles2D_get_param_randomness_29f23ad7},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_param_curve_6ae3f28c", (void*)godot_icall_CPUParticles2D_set_param_curve_6ae3f28c},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_param_curve_8200600", (void*)godot_icall_CPUParticles2D_get_param_curve_8200600},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_color_f2e3b5aa", (void*)godot_icall_CPUParticles2D_set_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_color_304394ba", (void*)godot_icall_CPUParticles2D_get_color_304394ba},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_color_ramp_487c5873", (void*)godot_icall_CPUParticles2D_set_color_ramp_487c5873},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_color_ramp_76d5a6f1", (void*)godot_icall_CPUParticles2D_get_color_ramp_76d5a6f1},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_particle_flag_57f31e35", (void*)godot_icall_CPUParticles2D_set_particle_flag_57f31e35},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_particle_flag_32bc0553", (void*)godot_icall_CPUParticles2D_get_particle_flag_32bc0553},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_emission_shape_9e23388a", (void*)godot_icall_CPUParticles2D_set_emission_shape_9e23388a},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_emission_shape_10c78dc5", (void*)godot_icall_CPUParticles2D_get_emission_shape_10c78dc5},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_emission_sphere_radius_904508bb", (void*)godot_icall_CPUParticles2D_set_emission_sphere_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_emission_sphere_radius_4edcd7a9", (void*)godot_icall_CPUParticles2D_get_emission_sphere_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_emission_rect_extents_6df7471e", (void*)godot_icall_CPUParticles2D_set_emission_rect_extents_6df7471e},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_emission_rect_extents_9b4ea24e", (void*)godot_icall_CPUParticles2D_get_emission_rect_extents_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_emission_points_3a3116bd", (void*)godot_icall_CPUParticles2D_set_emission_points_3a3116bd},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_emission_points_e910f1af", (void*)godot_icall_CPUParticles2D_get_emission_points_e910f1af},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_emission_normals_3a3116bd", (void*)godot_icall_CPUParticles2D_set_emission_normals_3a3116bd},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_emission_normals_e910f1af", (void*)godot_icall_CPUParticles2D_get_emission_normals_e910f1af},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_emission_colors_22e90985", (void*)godot_icall_CPUParticles2D_set_emission_colors_22e90985},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_emission_colors_e048d8e7", (void*)godot_icall_CPUParticles2D_get_emission_colors_e048d8e7},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_get_gravity_9b4ea24e", (void*)godot_icall_CPUParticles2D_get_gravity_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_set_gravity_6df7471e", (void*)godot_icall_CPUParticles2D_set_gravity_6df7471e},
	{"Godot.NativeCalls::godot_icall_CPUParticles2D_convert_from_particles_598860a7", (void*)godot_icall_CPUParticles2D_convert_from_particles_598860a7},
	{"Godot.NativeCalls::godot_icall_CSGBox_set_width_904508bb", (void*)godot_icall_CSGBox_set_width_904508bb},
	{"Godot.NativeCalls::godot_icall_CSGBox_get_width_4edcd7a9", (void*)godot_icall_CSGBox_get_width_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CSGBox_set_height_904508bb", (void*)godot_icall_CSGBox_set_height_904508bb},
	{"Godot.NativeCalls::godot_icall_CSGBox_get_height_4edcd7a9", (void*)godot_icall_CSGBox_get_height_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CSGBox_set_depth_904508bb", (void*)godot_icall_CSGBox_set_depth_904508bb},
	{"Godot.NativeCalls::godot_icall_CSGBox_get_depth_4edcd7a9", (void*)godot_icall_CSGBox_get_depth_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CSGBox_set_material_be2d0ec2", (void*)godot_icall_CSGBox_set_material_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_CSGBox_get_material_6d04d9a2", (void*)godot_icall_CSGBox_get_material_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_set_radius_904508bb", (void*)godot_icall_CSGCylinder_set_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_get_radius_4edcd7a9", (void*)godot_icall_CSGCylinder_get_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_set_height_904508bb", (void*)godot_icall_CSGCylinder_set_height_904508bb},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_get_height_4edcd7a9", (void*)godot_icall_CSGCylinder_get_height_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_set_sides_e1ae93bc", (void*)godot_icall_CSGCylinder_set_sides_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_get_sides_1f886eb0", (void*)godot_icall_CSGCylinder_get_sides_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_set_cone_ba24800b", (void*)godot_icall_CSGCylinder_set_cone_ba24800b},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_is_cone_68fe5f59", (void*)godot_icall_CSGCylinder_is_cone_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_set_material_be2d0ec2", (void*)godot_icall_CSGCylinder_set_material_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_get_material_6d04d9a2", (void*)godot_icall_CSGCylinder_get_material_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_set_smooth_faces_ba24800b", (void*)godot_icall_CSGCylinder_set_smooth_faces_ba24800b},
	{"Godot.NativeCalls::godot_icall_CSGCylinder_get_smooth_faces_68fe5f59", (void*)godot_icall_CSGCylinder_get_smooth_faces_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CSGMesh_set_mesh_d5d30806", (void*)godot_icall_CSGMesh_set_mesh_d5d30806},
	{"Godot.NativeCalls::godot_icall_CSGMesh_get_mesh_1372d766", (void*)godot_icall_CSGMesh_get_mesh_1372d766},
	{"Godot.NativeCalls::godot_icall_CSGMesh_set_material_be2d0ec2", (void*)godot_icall_CSGMesh_set_material_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_CSGMesh_get_material_6d04d9a2", (void*)godot_icall_CSGMesh_get_material_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_polygon_b8a866ba", (void*)godot_icall_CSGPolygon_set_polygon_b8a866ba},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_get_polygon_e910f1af", (void*)godot_icall_CSGPolygon_get_polygon_e910f1af},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_mode_5d42f9e1", (void*)godot_icall_CSGPolygon_set_mode_5d42f9e1},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_get_mode_26446cac", (void*)godot_icall_CSGPolygon_get_mode_26446cac},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_depth_904508bb", (void*)godot_icall_CSGPolygon_set_depth_904508bb},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_get_depth_4edcd7a9", (void*)godot_icall_CSGPolygon_get_depth_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_spin_degrees_904508bb", (void*)godot_icall_CSGPolygon_set_spin_degrees_904508bb},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_get_spin_degrees_4edcd7a9", (void*)godot_icall_CSGPolygon_get_spin_degrees_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_spin_sides_e1ae93bc", (void*)godot_icall_CSGPolygon_set_spin_sides_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_get_spin_sides_1f886eb0", (void*)godot_icall_CSGPolygon_get_spin_sides_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_path_node_1e08804", (void*)godot_icall_CSGPolygon_set_path_node_1e08804},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_get_path_node_bf425768", (void*)godot_icall_CSGPolygon_get_path_node_bf425768},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_path_interval_904508bb", (void*)godot_icall_CSGPolygon_set_path_interval_904508bb},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_get_path_interval_4edcd7a9", (void*)godot_icall_CSGPolygon_get_path_interval_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_path_rotation_545b4963", (void*)godot_icall_CSGPolygon_set_path_rotation_545b4963},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_get_path_rotation_3cc3a1ae", (void*)godot_icall_CSGPolygon_get_path_rotation_3cc3a1ae},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_path_local_ba24800b", (void*)godot_icall_CSGPolygon_set_path_local_ba24800b},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_is_path_local_68fe5f59", (void*)godot_icall_CSGPolygon_is_path_local_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_path_continuous_u_ba24800b", (void*)godot_icall_CSGPolygon_set_path_continuous_u_ba24800b},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_is_path_continuous_u_68fe5f59", (void*)godot_icall_CSGPolygon_is_path_continuous_u_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_path_joined_ba24800b", (void*)godot_icall_CSGPolygon_set_path_joined_ba24800b},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_is_path_joined_68fe5f59", (void*)godot_icall_CSGPolygon_is_path_joined_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_material_be2d0ec2", (void*)godot_icall_CSGPolygon_set_material_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_get_material_6d04d9a2", (void*)godot_icall_CSGPolygon_get_material_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_set_smooth_faces_ba24800b", (void*)godot_icall_CSGPolygon_set_smooth_faces_ba24800b},
	{"Godot.NativeCalls::godot_icall_CSGPolygon_get_smooth_faces_68fe5f59", (void*)godot_icall_CSGPolygon_get_smooth_faces_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CSGPrimitive_set_invert_faces_ba24800b", (void*)godot_icall_CSGPrimitive_set_invert_faces_ba24800b},
	{"Godot.NativeCalls::godot_icall_CSGPrimitive_is_inverting_faces_68fe5f59", (void*)godot_icall_CSGPrimitive_is_inverting_faces_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CSGShape_is_root_shape_68fe5f59", (void*)godot_icall_CSGShape_is_root_shape_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CSGShape_set_operation_cd5dbaf8", (void*)godot_icall_CSGShape_set_operation_cd5dbaf8},
	{"Godot.NativeCalls::godot_icall_CSGShape_get_operation_f9764c1b", (void*)godot_icall_CSGShape_get_operation_f9764c1b},
	{"Godot.NativeCalls::godot_icall_CSGShape_set_snap_904508bb", (void*)godot_icall_CSGShape_set_snap_904508bb},
	{"Godot.NativeCalls::godot_icall_CSGShape_get_snap_4edcd7a9", (void*)godot_icall_CSGShape_get_snap_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CSGShape_set_use_collision_ba24800b", (void*)godot_icall_CSGShape_set_use_collision_ba24800b},
	{"Godot.NativeCalls::godot_icall_CSGShape_is_using_collision_68fe5f59", (void*)godot_icall_CSGShape_is_using_collision_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CSGShape_set_collision_layer_966aab97", (void*)godot_icall_CSGShape_set_collision_layer_966aab97},
	{"Godot.NativeCalls::godot_icall_CSGShape_get_collision_layer_54cc76d5", (void*)godot_icall_CSGShape_get_collision_layer_54cc76d5},
	{"Godot.NativeCalls::godot_icall_CSGShape_set_collision_mask_966aab97", (void*)godot_icall_CSGShape_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_CSGShape_get_collision_mask_54cc76d5", (void*)godot_icall_CSGShape_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_CSGShape_set_collision_mask_bit_4ae8febd", (void*)godot_icall_CSGShape_set_collision_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_CSGShape_get_collision_mask_bit_7f690926", (void*)godot_icall_CSGShape_get_collision_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_CSGShape_set_collision_layer_bit_4ae8febd", (void*)godot_icall_CSGShape_set_collision_layer_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_CSGShape_get_collision_layer_bit_7f690926", (void*)godot_icall_CSGShape_get_collision_layer_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_CSGShape_set_calculate_tangents_ba24800b", (void*)godot_icall_CSGShape_set_calculate_tangents_ba24800b},
	{"Godot.NativeCalls::godot_icall_CSGShape_is_calculating_tangents_68fe5f59", (void*)godot_icall_CSGShape_is_calculating_tangents_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CSGShape_get_meshes_d80382d4", (void*)godot_icall_CSGShape_get_meshes_d80382d4},
	{"Godot.NativeCalls::godot_icall_CSGSphere_set_radius_904508bb", (void*)godot_icall_CSGSphere_set_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CSGSphere_get_radius_4edcd7a9", (void*)godot_icall_CSGSphere_get_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CSGSphere_set_radial_segments_e1ae93bc", (void*)godot_icall_CSGSphere_set_radial_segments_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CSGSphere_get_radial_segments_1f886eb0", (void*)godot_icall_CSGSphere_get_radial_segments_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CSGSphere_set_rings_e1ae93bc", (void*)godot_icall_CSGSphere_set_rings_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CSGSphere_get_rings_1f886eb0", (void*)godot_icall_CSGSphere_get_rings_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CSGSphere_set_smooth_faces_ba24800b", (void*)godot_icall_CSGSphere_set_smooth_faces_ba24800b},
	{"Godot.NativeCalls::godot_icall_CSGSphere_get_smooth_faces_68fe5f59", (void*)godot_icall_CSGSphere_get_smooth_faces_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CSGSphere_set_material_be2d0ec2", (void*)godot_icall_CSGSphere_set_material_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_CSGSphere_get_material_6d04d9a2", (void*)godot_icall_CSGSphere_get_material_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_CSGTorus_set_inner_radius_904508bb", (void*)godot_icall_CSGTorus_set_inner_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CSGTorus_get_inner_radius_4edcd7a9", (void*)godot_icall_CSGTorus_get_inner_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CSGTorus_set_outer_radius_904508bb", (void*)godot_icall_CSGTorus_set_outer_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CSGTorus_get_outer_radius_4edcd7a9", (void*)godot_icall_CSGTorus_get_outer_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CSGTorus_set_sides_e1ae93bc", (void*)godot_icall_CSGTorus_set_sides_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CSGTorus_get_sides_1f886eb0", (void*)godot_icall_CSGTorus_get_sides_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CSGTorus_set_ring_sides_e1ae93bc", (void*)godot_icall_CSGTorus_set_ring_sides_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CSGTorus_get_ring_sides_1f886eb0", (void*)godot_icall_CSGTorus_get_ring_sides_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CSGTorus_set_material_be2d0ec2", (void*)godot_icall_CSGTorus_set_material_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_CSGTorus_get_material_6d04d9a2", (void*)godot_icall_CSGTorus_get_material_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_CSGTorus_set_smooth_faces_ba24800b", (void*)godot_icall_CSGTorus_set_smooth_faces_ba24800b},
	{"Godot.NativeCalls::godot_icall_CSGTorus_get_smooth_faces_68fe5f59", (void*)godot_icall_CSGTorus_get_smooth_faces_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CSharpScript_new_e5975f9d", (void*)godot_icall_CSharpScript_new_e5975f9d},
	{"Godot.NativeCalls::godot_icall_Camera_project_ray_normal_af4cfa15", (void*)godot_icall_Camera_project_ray_normal_af4cfa15},
	{"Godot.NativeCalls::godot_icall_Camera_project_local_ray_normal_af4cfa15", (void*)godot_icall_Camera_project_local_ray_normal_af4cfa15},
	{"Godot.NativeCalls::godot_icall_Camera_project_ray_origin_af4cfa15", (void*)godot_icall_Camera_project_ray_origin_af4cfa15},
	{"Godot.NativeCalls::godot_icall_Camera_unproject_position_af4cfa55", (void*)godot_icall_Camera_unproject_position_af4cfa55},
	{"Godot.NativeCalls::godot_icall_Camera_is_position_behind_fba3d547", (void*)godot_icall_Camera_is_position_behind_fba3d547},
	{"Godot.NativeCalls::godot_icall_Camera_project_position_436aef32", (void*)godot_icall_Camera_project_position_436aef32},
	{"Godot.NativeCalls::godot_icall_Camera_set_perspective_106d7437", (void*)godot_icall_Camera_set_perspective_106d7437},
	{"Godot.NativeCalls::godot_icall_Camera_set_orthogonal_106d7437", (void*)godot_icall_Camera_set_orthogonal_106d7437},
	{"Godot.NativeCalls::godot_icall_Camera_set_frustum_6524c12b", (void*)godot_icall_Camera_set_frustum_6524c12b},
	{"Godot.NativeCalls::godot_icall_Camera_make_current_c8e54a7b", (void*)godot_icall_Camera_make_current_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Camera_clear_current_ba24800b", (void*)godot_icall_Camera_clear_current_ba24800b},
	{"Godot.NativeCalls::godot_icall_Camera_set_current_ba24800b", (void*)godot_icall_Camera_set_current_ba24800b},
	{"Godot.NativeCalls::godot_icall_Camera_is_current_68fe5f59", (void*)godot_icall_Camera_is_current_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Camera_get_camera_transform_a3fb649b", (void*)godot_icall_Camera_get_camera_transform_a3fb649b},
	{"Godot.NativeCalls::godot_icall_Camera_get_fov_4edcd7a9", (void*)godot_icall_Camera_get_fov_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Camera_get_frustum_offset_9b4ea24e", (void*)godot_icall_Camera_get_frustum_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Camera_get_size_4edcd7a9", (void*)godot_icall_Camera_get_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Camera_get_zfar_4edcd7a9", (void*)godot_icall_Camera_get_zfar_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Camera_get_znear_4edcd7a9", (void*)godot_icall_Camera_get_znear_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Camera_set_fov_904508bb", (void*)godot_icall_Camera_set_fov_904508bb},
	{"Godot.NativeCalls::godot_icall_Camera_set_frustum_offset_6df7471e", (void*)godot_icall_Camera_set_frustum_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_Camera_set_size_904508bb", (void*)godot_icall_Camera_set_size_904508bb},
	{"Godot.NativeCalls::godot_icall_Camera_set_zfar_904508bb", (void*)godot_icall_Camera_set_zfar_904508bb},
	{"Godot.NativeCalls::godot_icall_Camera_set_znear_904508bb", (void*)godot_icall_Camera_set_znear_904508bb},
	{"Godot.NativeCalls::godot_icall_Camera_get_projection_88fcd902", (void*)godot_icall_Camera_get_projection_88fcd902},
	{"Godot.NativeCalls::godot_icall_Camera_set_projection_a16bdaa7", (void*)godot_icall_Camera_set_projection_a16bdaa7},
	{"Godot.NativeCalls::godot_icall_Camera_set_h_offset_904508bb", (void*)godot_icall_Camera_set_h_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_Camera_get_h_offset_4edcd7a9", (void*)godot_icall_Camera_get_h_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Camera_set_v_offset_904508bb", (void*)godot_icall_Camera_set_v_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_Camera_get_v_offset_4edcd7a9", (void*)godot_icall_Camera_get_v_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Camera_set_cull_mask_966aab97", (void*)godot_icall_Camera_set_cull_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_Camera_get_cull_mask_54cc76d5", (void*)godot_icall_Camera_get_cull_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_Camera_set_environment_5a081814", (void*)godot_icall_Camera_set_environment_5a081814},
	{"Godot.NativeCalls::godot_icall_Camera_get_environment_8929e758", (void*)godot_icall_Camera_get_environment_8929e758},
	{"Godot.NativeCalls::godot_icall_Camera_set_keep_aspect_mode_5ba4721b", (void*)godot_icall_Camera_set_keep_aspect_mode_5ba4721b},
	{"Godot.NativeCalls::godot_icall_Camera_get_keep_aspect_mode_fa75fc56", (void*)godot_icall_Camera_get_keep_aspect_mode_fa75fc56},
	{"Godot.NativeCalls::godot_icall_Camera_set_doppler_tracking_5f2987cf", (void*)godot_icall_Camera_set_doppler_tracking_5f2987cf},
	{"Godot.NativeCalls::godot_icall_Camera_get_doppler_tracking_60c0809a", (void*)godot_icall_Camera_get_doppler_tracking_60c0809a},
	{"Godot.NativeCalls::godot_icall_Camera_get_frustum_d80382d4", (void*)godot_icall_Camera_get_frustum_d80382d4},
	{"Godot.NativeCalls::godot_icall_Camera_get_camera_rid_6623661e", (void*)godot_icall_Camera_get_camera_rid_6623661e},
	{"Godot.NativeCalls::godot_icall_Camera_set_cull_mask_bit_4ae8febd", (void*)godot_icall_Camera_set_cull_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Camera_get_cull_mask_bit_7f690926", (void*)godot_icall_Camera_get_cull_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_offset_6df7471e", (void*)godot_icall_Camera2D_set_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_Camera2D_get_offset_9b4ea24e", (void*)godot_icall_Camera2D_get_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_anchor_mode_bba4ca92", (void*)godot_icall_Camera2D_set_anchor_mode_bba4ca92},
	{"Godot.NativeCalls::godot_icall_Camera2D_get_anchor_mode_c519117d", (void*)godot_icall_Camera2D_get_anchor_mode_c519117d},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_rotating_ba24800b", (void*)godot_icall_Camera2D_set_rotating_ba24800b},
	{"Godot.NativeCalls::godot_icall_Camera2D_is_rotating_68fe5f59", (void*)godot_icall_Camera2D_is_rotating_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Camera2D_make_current_c8e54a7b", (void*)godot_icall_Camera2D_make_current_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Camera2D_clear_current_c8e54a7b", (void*)godot_icall_Camera2D_clear_current_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_process_mode_e082b8b5", (void*)godot_icall_Camera2D_set_process_mode_e082b8b5},
	{"Godot.NativeCalls::godot_icall_Camera2D_get_process_mode_1ea487b7", (void*)godot_icall_Camera2D_get_process_mode_1ea487b7},
	{"Godot.NativeCalls::godot_icall_Camera2D__set_current_ba24800b", (void*)godot_icall_Camera2D__set_current_ba24800b},
	{"Godot.NativeCalls::godot_icall_Camera2D_is_current_68fe5f59", (void*)godot_icall_Camera2D_is_current_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_limit_d167c784", (void*)godot_icall_Camera2D_set_limit_d167c784},
	{"Godot.NativeCalls::godot_icall_Camera2D_get_limit_bbd2c228", (void*)godot_icall_Camera2D_get_limit_bbd2c228},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_limit_smoothing_enabled_ba24800b", (void*)godot_icall_Camera2D_set_limit_smoothing_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Camera2D_is_limit_smoothing_enabled_68fe5f59", (void*)godot_icall_Camera2D_is_limit_smoothing_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_v_drag_enabled_ba24800b", (void*)godot_icall_Camera2D_set_v_drag_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Camera2D_is_v_drag_enabled_68fe5f59", (void*)godot_icall_Camera2D_is_v_drag_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_h_drag_enabled_ba24800b", (void*)godot_icall_Camera2D_set_h_drag_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Camera2D_is_h_drag_enabled_68fe5f59", (void*)godot_icall_Camera2D_is_h_drag_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_v_offset_904508bb", (void*)godot_icall_Camera2D_set_v_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_Camera2D_get_v_offset_4edcd7a9", (void*)godot_icall_Camera2D_get_v_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_h_offset_904508bb", (void*)godot_icall_Camera2D_set_h_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_Camera2D_get_h_offset_4edcd7a9", (void*)godot_icall_Camera2D_get_h_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_drag_margin_86b3589f", (void*)godot_icall_Camera2D_set_drag_margin_86b3589f},
	{"Godot.NativeCalls::godot_icall_Camera2D_get_drag_margin_cb96d2bf", (void*)godot_icall_Camera2D_get_drag_margin_cb96d2bf},
	{"Godot.NativeCalls::godot_icall_Camera2D_get_camera_position_9b4ea24e", (void*)godot_icall_Camera2D_get_camera_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Camera2D_get_camera_screen_center_9b4ea24e", (void*)godot_icall_Camera2D_get_camera_screen_center_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_zoom_6df7471e", (void*)godot_icall_Camera2D_set_zoom_6df7471e},
	{"Godot.NativeCalls::godot_icall_Camera2D_get_zoom_9b4ea24e", (void*)godot_icall_Camera2D_get_zoom_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_custom_viewport_598860a7", (void*)godot_icall_Camera2D_set_custom_viewport_598860a7},
	{"Godot.NativeCalls::godot_icall_Camera2D_get_custom_viewport_87a9bfc5", (void*)godot_icall_Camera2D_get_custom_viewport_87a9bfc5},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_follow_smoothing_904508bb", (void*)godot_icall_Camera2D_set_follow_smoothing_904508bb},
	{"Godot.NativeCalls::godot_icall_Camera2D_get_follow_smoothing_4edcd7a9", (void*)godot_icall_Camera2D_get_follow_smoothing_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_enable_follow_smoothing_ba24800b", (void*)godot_icall_Camera2D_set_enable_follow_smoothing_ba24800b},
	{"Godot.NativeCalls::godot_icall_Camera2D_is_follow_smoothing_enabled_68fe5f59", (void*)godot_icall_Camera2D_is_follow_smoothing_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Camera2D_force_update_scroll_c8e54a7b", (void*)godot_icall_Camera2D_force_update_scroll_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Camera2D_reset_smoothing_c8e54a7b", (void*)godot_icall_Camera2D_reset_smoothing_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Camera2D_align_c8e54a7b", (void*)godot_icall_Camera2D_align_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_screen_drawing_enabled_ba24800b", (void*)godot_icall_Camera2D_set_screen_drawing_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Camera2D_is_screen_drawing_enabled_68fe5f59", (void*)godot_icall_Camera2D_is_screen_drawing_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_limit_drawing_enabled_ba24800b", (void*)godot_icall_Camera2D_set_limit_drawing_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Camera2D_is_limit_drawing_enabled_68fe5f59", (void*)godot_icall_Camera2D_is_limit_drawing_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Camera2D_set_margin_drawing_enabled_ba24800b", (void*)godot_icall_Camera2D_set_margin_drawing_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Camera2D_is_margin_drawing_enabled_68fe5f59", (void*)godot_icall_Camera2D_is_margin_drawing_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CameraFeed_get_id_1f886eb0", (void*)godot_icall_CameraFeed_get_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CameraFeed_get_name_97be4a2e", (void*)godot_icall_CameraFeed_get_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_CameraFeed_is_active_68fe5f59", (void*)godot_icall_CameraFeed_is_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CameraFeed_set_active_ba24800b", (void*)godot_icall_CameraFeed_set_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_CameraFeed_get_position_ea1c3c3", (void*)godot_icall_CameraFeed_get_position_ea1c3c3},
	{"Godot.NativeCalls::godot_icall_CameraFeed_get_transform_d44700d", (void*)godot_icall_CameraFeed_get_transform_d44700d},
	{"Godot.NativeCalls::godot_icall_CameraFeed_set_transform_dfe2915f", (void*)godot_icall_CameraFeed_set_transform_dfe2915f},
	{"Godot.NativeCalls::godot_icall_CameraServer_get_feed_10f953fe", (void*)godot_icall_CameraServer_get_feed_10f953fe},
	{"Godot.NativeCalls::godot_icall_CameraServer_get_feed_count_1f886eb0", (void*)godot_icall_CameraServer_get_feed_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CameraServer_get_feeds_d80382d4", (void*)godot_icall_CameraServer_get_feeds_d80382d4},
	{"Godot.NativeCalls::godot_icall_CameraServer_add_feed_587b6a20", (void*)godot_icall_CameraServer_add_feed_587b6a20},
	{"Godot.NativeCalls::godot_icall_CameraServer_remove_feed_587b6a20", (void*)godot_icall_CameraServer_remove_feed_587b6a20},
	{"Godot.NativeCalls::godot_icall_CameraTexture_set_camera_feed_id_e1ae93bc", (void*)godot_icall_CameraTexture_set_camera_feed_id_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CameraTexture_get_camera_feed_id_1f886eb0", (void*)godot_icall_CameraTexture_get_camera_feed_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CameraTexture_set_which_feed_53fa9ccc", (void*)godot_icall_CameraTexture_set_which_feed_53fa9ccc},
	{"Godot.NativeCalls::godot_icall_CameraTexture_get_which_feed_915c6ba0", (void*)godot_icall_CameraTexture_get_which_feed_915c6ba0},
	{"Godot.NativeCalls::godot_icall_CameraTexture_set_camera_active_ba24800b", (void*)godot_icall_CameraTexture_set_camera_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_CameraTexture_get_camera_active_68fe5f59", (void*)godot_icall_CameraTexture_get_camera_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_canvas_item_6623661e", (void*)godot_icall_CanvasItem_get_canvas_item_6623661e},
	{"Godot.NativeCalls::godot_icall_CanvasItem_set_visible_ba24800b", (void*)godot_icall_CanvasItem_set_visible_ba24800b},
	{"Godot.NativeCalls::godot_icall_CanvasItem_is_visible_68fe5f59", (void*)godot_icall_CanvasItem_is_visible_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CanvasItem_is_visible_in_tree_68fe5f59", (void*)godot_icall_CanvasItem_is_visible_in_tree_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CanvasItem_show_c8e54a7b", (void*)godot_icall_CanvasItem_show_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_CanvasItem_hide_c8e54a7b", (void*)godot_icall_CanvasItem_hide_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_CanvasItem_update_c8e54a7b", (void*)godot_icall_CanvasItem_update_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_CanvasItem_set_as_toplevel_ba24800b", (void*)godot_icall_CanvasItem_set_as_toplevel_ba24800b},
	{"Godot.NativeCalls::godot_icall_CanvasItem_is_set_as_toplevel_68fe5f59", (void*)godot_icall_CanvasItem_is_set_as_toplevel_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CanvasItem_set_light_mask_e1ae93bc", (void*)godot_icall_CanvasItem_set_light_mask_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_light_mask_1f886eb0", (void*)godot_icall_CanvasItem_get_light_mask_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CanvasItem_set_modulate_f2e3b5aa", (void*)godot_icall_CanvasItem_set_modulate_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_modulate_304394ba", (void*)godot_icall_CanvasItem_get_modulate_304394ba},
	{"Godot.NativeCalls::godot_icall_CanvasItem_set_self_modulate_f2e3b5aa", (void*)godot_icall_CanvasItem_set_self_modulate_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_self_modulate_304394ba", (void*)godot_icall_CanvasItem_get_self_modulate_304394ba},
	{"Godot.NativeCalls::godot_icall_CanvasItem_set_draw_behind_parent_ba24800b", (void*)godot_icall_CanvasItem_set_draw_behind_parent_ba24800b},
	{"Godot.NativeCalls::godot_icall_CanvasItem_is_draw_behind_parent_enabled_68fe5f59", (void*)godot_icall_CanvasItem_is_draw_behind_parent_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CanvasItem__set_on_top_ba24800b", (void*)godot_icall_CanvasItem__set_on_top_ba24800b},
	{"Godot.NativeCalls::godot_icall_CanvasItem__is_on_top_68fe5f59", (void*)godot_icall_CanvasItem__is_on_top_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_line_771a9ffa", (void*)godot_icall_CanvasItem_draw_line_771a9ffa},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_polyline_1827a6ed", (void*)godot_icall_CanvasItem_draw_polyline_1827a6ed},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_polyline_colors_23432b86", (void*)godot_icall_CanvasItem_draw_polyline_colors_23432b86},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_arc_cadffc3d", (void*)godot_icall_CanvasItem_draw_arc_cadffc3d},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_multiline_1827a6ed", (void*)godot_icall_CanvasItem_draw_multiline_1827a6ed},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_multiline_colors_23432b86", (void*)godot_icall_CanvasItem_draw_multiline_colors_23432b86},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_rect_36dc5966", (void*)godot_icall_CanvasItem_draw_rect_36dc5966},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_circle_51f0a17", (void*)godot_icall_CanvasItem_draw_circle_51f0a17},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_texture_309be515", (void*)godot_icall_CanvasItem_draw_texture_309be515},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_texture_rect_9417c5c7", (void*)godot_icall_CanvasItem_draw_texture_rect_9417c5c7},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_texture_rect_region_11d263fb", (void*)godot_icall_CanvasItem_draw_texture_rect_region_11d263fb},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_style_box_bb7e1d49", (void*)godot_icall_CanvasItem_draw_style_box_bb7e1d49},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_primitive_79ff6de2", (void*)godot_icall_CanvasItem_draw_primitive_79ff6de2},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_polygon_7e2c1116", (void*)godot_icall_CanvasItem_draw_polygon_7e2c1116},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_colored_polygon_e53fc01c", (void*)godot_icall_CanvasItem_draw_colored_polygon_e53fc01c},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_string_fc035fd4", (void*)godot_icall_CanvasItem_draw_string_fc035fd4},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_char_85ef288e", (void*)godot_icall_CanvasItem_draw_char_85ef288e},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_mesh_93491e15", (void*)godot_icall_CanvasItem_draw_mesh_93491e15},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_multimesh_11e9bc6a", (void*)godot_icall_CanvasItem_draw_multimesh_11e9bc6a},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_set_transform_b2021883", (void*)godot_icall_CanvasItem_draw_set_transform_b2021883},
	{"Godot.NativeCalls::godot_icall_CanvasItem_draw_set_transform_matrix_dfe2915f", (void*)godot_icall_CanvasItem_draw_set_transform_matrix_dfe2915f},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_transform_d44700d", (void*)godot_icall_CanvasItem_get_transform_d44700d},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_global_transform_d44700d", (void*)godot_icall_CanvasItem_get_global_transform_d44700d},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_global_transform_with_canvas_d44700d", (void*)godot_icall_CanvasItem_get_global_transform_with_canvas_d44700d},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_viewport_transform_d44700d", (void*)godot_icall_CanvasItem_get_viewport_transform_d44700d},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_viewport_rect_6344c073", (void*)godot_icall_CanvasItem_get_viewport_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_canvas_transform_d44700d", (void*)godot_icall_CanvasItem_get_canvas_transform_d44700d},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_local_mouse_position_9b4ea24e", (void*)godot_icall_CanvasItem_get_local_mouse_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_global_mouse_position_9b4ea24e", (void*)godot_icall_CanvasItem_get_global_mouse_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_canvas_6623661e", (void*)godot_icall_CanvasItem_get_canvas_6623661e},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_world_2d_84187b39", (void*)godot_icall_CanvasItem_get_world_2d_84187b39},
	{"Godot.NativeCalls::godot_icall_CanvasItem_set_material_be2d0ec2", (void*)godot_icall_CanvasItem_set_material_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_material_6d04d9a2", (void*)godot_icall_CanvasItem_get_material_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_CanvasItem_set_use_parent_material_ba24800b", (void*)godot_icall_CanvasItem_set_use_parent_material_ba24800b},
	{"Godot.NativeCalls::godot_icall_CanvasItem_get_use_parent_material_68fe5f59", (void*)godot_icall_CanvasItem_get_use_parent_material_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CanvasItem_set_notify_local_transform_ba24800b", (void*)godot_icall_CanvasItem_set_notify_local_transform_ba24800b},
	{"Godot.NativeCalls::godot_icall_CanvasItem_is_local_transform_notification_enabled_68fe5f59", (void*)godot_icall_CanvasItem_is_local_transform_notification_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CanvasItem_set_notify_transform_ba24800b", (void*)godot_icall_CanvasItem_set_notify_transform_ba24800b},
	{"Godot.NativeCalls::godot_icall_CanvasItem_is_transform_notification_enabled_68fe5f59", (void*)godot_icall_CanvasItem_is_transform_notification_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CanvasItem_force_update_transform_c8e54a7b", (void*)godot_icall_CanvasItem_force_update_transform_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_CanvasItem_make_canvas_position_local_af4cfa54", (void*)godot_icall_CanvasItem_make_canvas_position_local_af4cfa54},
	{"Godot.NativeCalls::godot_icall_CanvasItem_make_input_local_20195f48", (void*)godot_icall_CanvasItem_make_input_local_20195f48},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_set_blend_mode_a00da937", (void*)godot_icall_CanvasItemMaterial_set_blend_mode_a00da937},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_get_blend_mode_d0caa552", (void*)godot_icall_CanvasItemMaterial_get_blend_mode_d0caa552},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_set_light_mode_758f5f38", (void*)godot_icall_CanvasItemMaterial_set_light_mode_758f5f38},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_get_light_mode_2327c2db", (void*)godot_icall_CanvasItemMaterial_get_light_mode_2327c2db},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_set_particles_animation_ba24800b", (void*)godot_icall_CanvasItemMaterial_set_particles_animation_ba24800b},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_get_particles_animation_68fe5f59", (void*)godot_icall_CanvasItemMaterial_get_particles_animation_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_set_particles_anim_h_frames_e1ae93bc", (void*)godot_icall_CanvasItemMaterial_set_particles_anim_h_frames_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_get_particles_anim_h_frames_1f886eb0", (void*)godot_icall_CanvasItemMaterial_get_particles_anim_h_frames_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_set_particles_anim_v_frames_e1ae93bc", (void*)godot_icall_CanvasItemMaterial_set_particles_anim_v_frames_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_get_particles_anim_v_frames_1f886eb0", (void*)godot_icall_CanvasItemMaterial_get_particles_anim_v_frames_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_set_particles_anim_loop_ba24800b", (void*)godot_icall_CanvasItemMaterial_set_particles_anim_loop_ba24800b},
	{"Godot.NativeCalls::godot_icall_CanvasItemMaterial_get_particles_anim_loop_68fe5f59", (void*)godot_icall_CanvasItemMaterial_get_particles_anim_loop_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_set_layer_e1ae93bc", (void*)godot_icall_CanvasLayer_set_layer_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_get_layer_1f886eb0", (void*)godot_icall_CanvasLayer_get_layer_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_set_transform_dfe2915f", (void*)godot_icall_CanvasLayer_set_transform_dfe2915f},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_get_transform_d44700d", (void*)godot_icall_CanvasLayer_get_transform_d44700d},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_set_offset_6df7471e", (void*)godot_icall_CanvasLayer_set_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_get_offset_9b4ea24e", (void*)godot_icall_CanvasLayer_get_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_set_rotation_904508bb", (void*)godot_icall_CanvasLayer_set_rotation_904508bb},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_get_rotation_4edcd7a9", (void*)godot_icall_CanvasLayer_get_rotation_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_set_rotation_degrees_904508bb", (void*)godot_icall_CanvasLayer_set_rotation_degrees_904508bb},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_get_rotation_degrees_4edcd7a9", (void*)godot_icall_CanvasLayer_get_rotation_degrees_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_set_scale_6df7471e", (void*)godot_icall_CanvasLayer_set_scale_6df7471e},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_get_scale_9b4ea24e", (void*)godot_icall_CanvasLayer_get_scale_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_set_follow_viewport_ba24800b", (void*)godot_icall_CanvasLayer_set_follow_viewport_ba24800b},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_is_following_viewport_68fe5f59", (void*)godot_icall_CanvasLayer_is_following_viewport_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_set_follow_viewport_scale_904508bb", (void*)godot_icall_CanvasLayer_set_follow_viewport_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_get_follow_viewport_scale_4edcd7a9", (void*)godot_icall_CanvasLayer_get_follow_viewport_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_set_custom_viewport_598860a7", (void*)godot_icall_CanvasLayer_set_custom_viewport_598860a7},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_get_custom_viewport_87a9bfc5", (void*)godot_icall_CanvasLayer_get_custom_viewport_87a9bfc5},
	{"Godot.NativeCalls::godot_icall_CanvasLayer_get_canvas_6623661e", (void*)godot_icall_CanvasLayer_get_canvas_6623661e},
	{"Godot.NativeCalls::godot_icall_CanvasModulate_set_color_f2e3b5aa", (void*)godot_icall_CanvasModulate_set_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_CanvasModulate_get_color_304394ba", (void*)godot_icall_CanvasModulate_get_color_304394ba},
	{"Godot.NativeCalls::godot_icall_CapsuleMesh_set_radius_904508bb", (void*)godot_icall_CapsuleMesh_set_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CapsuleMesh_get_radius_4edcd7a9", (void*)godot_icall_CapsuleMesh_get_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CapsuleMesh_set_mid_height_904508bb", (void*)godot_icall_CapsuleMesh_set_mid_height_904508bb},
	{"Godot.NativeCalls::godot_icall_CapsuleMesh_get_mid_height_4edcd7a9", (void*)godot_icall_CapsuleMesh_get_mid_height_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CapsuleMesh_set_radial_segments_e1ae93bc", (void*)godot_icall_CapsuleMesh_set_radial_segments_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CapsuleMesh_get_radial_segments_1f886eb0", (void*)godot_icall_CapsuleMesh_get_radial_segments_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CapsuleMesh_set_rings_e1ae93bc", (void*)godot_icall_CapsuleMesh_set_rings_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CapsuleMesh_get_rings_1f886eb0", (void*)godot_icall_CapsuleMesh_get_rings_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CapsuleShape_set_radius_904508bb", (void*)godot_icall_CapsuleShape_set_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CapsuleShape_get_radius_4edcd7a9", (void*)godot_icall_CapsuleShape_get_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CapsuleShape_set_height_904508bb", (void*)godot_icall_CapsuleShape_set_height_904508bb},
	{"Godot.NativeCalls::godot_icall_CapsuleShape_get_height_4edcd7a9", (void*)godot_icall_CapsuleShape_get_height_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CapsuleShape2D_set_radius_904508bb", (void*)godot_icall_CapsuleShape2D_set_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CapsuleShape2D_get_radius_4edcd7a9", (void*)godot_icall_CapsuleShape2D_get_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CapsuleShape2D_set_height_904508bb", (void*)godot_icall_CapsuleShape2D_set_height_904508bb},
	{"Godot.NativeCalls::godot_icall_CapsuleShape2D_get_height_4edcd7a9", (void*)godot_icall_CapsuleShape2D_get_height_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CenterContainer_set_use_top_left_ba24800b", (void*)godot_icall_CenterContainer_set_use_top_left_ba24800b},
	{"Godot.NativeCalls::godot_icall_CenterContainer_is_using_top_left_68fe5f59", (void*)godot_icall_CenterContainer_is_using_top_left_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_get_relative_index_4bb7c348", (void*)godot_icall_CharFXTransform_get_relative_index_4bb7c348},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_set_relative_index_9d9e6424", (void*)godot_icall_CharFXTransform_set_relative_index_9d9e6424},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_get_absolute_index_4bb7c348", (void*)godot_icall_CharFXTransform_get_absolute_index_4bb7c348},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_set_absolute_index_9d9e6424", (void*)godot_icall_CharFXTransform_set_absolute_index_9d9e6424},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_get_elapsed_time_4edcd7a9", (void*)godot_icall_CharFXTransform_get_elapsed_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_set_elapsed_time_904508bb", (void*)godot_icall_CharFXTransform_set_elapsed_time_904508bb},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_is_visible_68fe5f59", (void*)godot_icall_CharFXTransform_is_visible_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_set_visibility_ba24800b", (void*)godot_icall_CharFXTransform_set_visibility_ba24800b},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_get_offset_9b4ea24e", (void*)godot_icall_CharFXTransform_get_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_set_offset_6df7471e", (void*)godot_icall_CharFXTransform_set_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_get_color_304394ba", (void*)godot_icall_CharFXTransform_get_color_304394ba},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_set_color_f2e3b5aa", (void*)godot_icall_CharFXTransform_set_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_get_environment_22d47c9d", (void*)godot_icall_CharFXTransform_get_environment_22d47c9d},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_set_environment_e472adcf", (void*)godot_icall_CharFXTransform_set_environment_e472adcf},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_get_character_1f886eb0", (void*)godot_icall_CharFXTransform_get_character_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CharFXTransform_set_character_e1ae93bc", (void*)godot_icall_CharFXTransform_set_character_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CircleShape2D_set_radius_904508bb", (void*)godot_icall_CircleShape2D_set_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CircleShape2D_get_radius_4edcd7a9", (void*)godot_icall_CircleShape2D_get_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_set_margin_904508bb", (void*)godot_icall_ClippedCamera_set_margin_904508bb},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_get_margin_4edcd7a9", (void*)godot_icall_ClippedCamera_get_margin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_set_process_mode_2429f099", (void*)godot_icall_ClippedCamera_set_process_mode_2429f099},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_get_process_mode_8cbd2c34", (void*)godot_icall_ClippedCamera_get_process_mode_8cbd2c34},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_set_collision_mask_966aab97", (void*)godot_icall_ClippedCamera_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_get_collision_mask_54cc76d5", (void*)godot_icall_ClippedCamera_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_set_collision_mask_bit_4ae8febd", (void*)godot_icall_ClippedCamera_set_collision_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_get_collision_mask_bit_7f690926", (void*)godot_icall_ClippedCamera_get_collision_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_add_exception_rid_a7039b4e", (void*)godot_icall_ClippedCamera_add_exception_rid_a7039b4e},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_add_exception_ad798950", (void*)godot_icall_ClippedCamera_add_exception_ad798950},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_remove_exception_rid_a7039b4e", (void*)godot_icall_ClippedCamera_remove_exception_rid_a7039b4e},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_remove_exception_ad798950", (void*)godot_icall_ClippedCamera_remove_exception_ad798950},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_set_clip_to_areas_ba24800b", (void*)godot_icall_ClippedCamera_set_clip_to_areas_ba24800b},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_is_clip_to_areas_enabled_68fe5f59", (void*)godot_icall_ClippedCamera_is_clip_to_areas_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_get_clip_offset_4edcd7a9", (void*)godot_icall_ClippedCamera_get_clip_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_set_clip_to_bodies_ba24800b", (void*)godot_icall_ClippedCamera_set_clip_to_bodies_ba24800b},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_is_clip_to_bodies_enabled_68fe5f59", (void*)godot_icall_ClippedCamera_is_clip_to_bodies_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ClippedCamera_clear_exceptions_c8e54a7b", (void*)godot_icall_ClippedCamera_clear_exceptions_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_CollisionObject_set_ray_pickable_ba24800b", (void*)godot_icall_CollisionObject_set_ray_pickable_ba24800b},
	{"Godot.NativeCalls::godot_icall_CollisionObject_is_ray_pickable_68fe5f59", (void*)godot_icall_CollisionObject_is_ray_pickable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CollisionObject_set_capture_input_on_drag_ba24800b", (void*)godot_icall_CollisionObject_set_capture_input_on_drag_ba24800b},
	{"Godot.NativeCalls::godot_icall_CollisionObject_get_capture_input_on_drag_68fe5f59", (void*)godot_icall_CollisionObject_get_capture_input_on_drag_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CollisionObject_get_rid_6623661e", (void*)godot_icall_CollisionObject_get_rid_6623661e},
	{"Godot.NativeCalls::godot_icall_CollisionObject_create_shape_owner_16add217", (void*)godot_icall_CollisionObject_create_shape_owner_16add217},
	{"Godot.NativeCalls::godot_icall_CollisionObject_remove_shape_owner_966aab97", (void*)godot_icall_CollisionObject_remove_shape_owner_966aab97},
	{"Godot.NativeCalls::godot_icall_CollisionObject_get_shape_owners_d80382d4", (void*)godot_icall_CollisionObject_get_shape_owners_d80382d4},
	{"Godot.NativeCalls::godot_icall_CollisionObject_shape_owner_set_transform_9412c56e", (void*)godot_icall_CollisionObject_shape_owner_set_transform_9412c56e},
	{"Godot.NativeCalls::godot_icall_CollisionObject_shape_owner_get_transform_b92094ef", (void*)godot_icall_CollisionObject_shape_owner_get_transform_b92094ef},
	{"Godot.NativeCalls::godot_icall_CollisionObject_shape_owner_get_owner_5b891387", (void*)godot_icall_CollisionObject_shape_owner_get_owner_5b891387},
	{"Godot.NativeCalls::godot_icall_CollisionObject_shape_owner_set_disabled_5111c220", (void*)godot_icall_CollisionObject_shape_owner_set_disabled_5111c220},
	{"Godot.NativeCalls::godot_icall_CollisionObject_is_shape_owner_disabled_242501fd", (void*)godot_icall_CollisionObject_is_shape_owner_disabled_242501fd},
	{"Godot.NativeCalls::godot_icall_CollisionObject_shape_owner_add_shape_4d99221", (void*)godot_icall_CollisionObject_shape_owner_add_shape_4d99221},
	{"Godot.NativeCalls::godot_icall_CollisionObject_shape_owner_get_shape_count_c289d68a", (void*)godot_icall_CollisionObject_shape_owner_get_shape_count_c289d68a},
	{"Godot.NativeCalls::godot_icall_CollisionObject_shape_owner_get_shape_ea16b84", (void*)godot_icall_CollisionObject_shape_owner_get_shape_ea16b84},
	{"Godot.NativeCalls::godot_icall_CollisionObject_shape_owner_get_shape_index_5251d601", (void*)godot_icall_CollisionObject_shape_owner_get_shape_index_5251d601},
	{"Godot.NativeCalls::godot_icall_CollisionObject_shape_owner_remove_shape_e86fd299", (void*)godot_icall_CollisionObject_shape_owner_remove_shape_e86fd299},
	{"Godot.NativeCalls::godot_icall_CollisionObject_shape_owner_clear_shapes_966aab97", (void*)godot_icall_CollisionObject_shape_owner_clear_shapes_966aab97},
	{"Godot.NativeCalls::godot_icall_CollisionObject_shape_find_owner_52dccd8b", (void*)godot_icall_CollisionObject_shape_find_owner_52dccd8b},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_get_rid_6623661e", (void*)godot_icall_CollisionObject2D_get_rid_6623661e},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_set_pickable_ba24800b", (void*)godot_icall_CollisionObject2D_set_pickable_ba24800b},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_is_pickable_68fe5f59", (void*)godot_icall_CollisionObject2D_is_pickable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_create_shape_owner_16add217", (void*)godot_icall_CollisionObject2D_create_shape_owner_16add217},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_remove_shape_owner_966aab97", (void*)godot_icall_CollisionObject2D_remove_shape_owner_966aab97},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_get_shape_owners_d80382d4", (void*)godot_icall_CollisionObject2D_get_shape_owners_d80382d4},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_owner_set_transform_fdabd1fc", (void*)godot_icall_CollisionObject2D_shape_owner_set_transform_fdabd1fc},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_owner_get_transform_4a357fdc", (void*)godot_icall_CollisionObject2D_shape_owner_get_transform_4a357fdc},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_owner_get_owner_5b891387", (void*)godot_icall_CollisionObject2D_shape_owner_get_owner_5b891387},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_owner_set_disabled_5111c220", (void*)godot_icall_CollisionObject2D_shape_owner_set_disabled_5111c220},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_is_shape_owner_disabled_242501fd", (void*)godot_icall_CollisionObject2D_is_shape_owner_disabled_242501fd},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_owner_set_one_way_collision_5111c220", (void*)godot_icall_CollisionObject2D_shape_owner_set_one_way_collision_5111c220},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_is_shape_owner_one_way_collision_enabled_242501fd", (void*)godot_icall_CollisionObject2D_is_shape_owner_one_way_collision_enabled_242501fd},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_owner_set_one_way_collision_margin_3b334990", (void*)godot_icall_CollisionObject2D_shape_owner_set_one_way_collision_margin_3b334990},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_get_shape_owner_one_way_collision_margin_f32dc711", (void*)godot_icall_CollisionObject2D_get_shape_owner_one_way_collision_margin_f32dc711},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_owner_add_shape_ad9c187f", (void*)godot_icall_CollisionObject2D_shape_owner_add_shape_ad9c187f},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_owner_get_shape_count_c289d68a", (void*)godot_icall_CollisionObject2D_shape_owner_get_shape_count_c289d68a},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_owner_get_shape_15c778dd", (void*)godot_icall_CollisionObject2D_shape_owner_get_shape_15c778dd},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_owner_get_shape_index_5251d601", (void*)godot_icall_CollisionObject2D_shape_owner_get_shape_index_5251d601},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_owner_remove_shape_e86fd299", (void*)godot_icall_CollisionObject2D_shape_owner_remove_shape_e86fd299},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_owner_clear_shapes_966aab97", (void*)godot_icall_CollisionObject2D_shape_owner_clear_shapes_966aab97},
	{"Godot.NativeCalls::godot_icall_CollisionObject2D_shape_find_owner_52dccd8b", (void*)godot_icall_CollisionObject2D_shape_find_owner_52dccd8b},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon_set_depth_904508bb", (void*)godot_icall_CollisionPolygon_set_depth_904508bb},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon_get_depth_4edcd7a9", (void*)godot_icall_CollisionPolygon_get_depth_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon_set_polygon_b8a866ba", (void*)godot_icall_CollisionPolygon_set_polygon_b8a866ba},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon_get_polygon_e910f1af", (void*)godot_icall_CollisionPolygon_get_polygon_e910f1af},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon_set_disabled_ba24800b", (void*)godot_icall_CollisionPolygon_set_disabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon_is_disabled_68fe5f59", (void*)godot_icall_CollisionPolygon_is_disabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon2D_set_polygon_b8a866ba", (void*)godot_icall_CollisionPolygon2D_set_polygon_b8a866ba},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon2D_get_polygon_e910f1af", (void*)godot_icall_CollisionPolygon2D_get_polygon_e910f1af},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon2D_set_build_mode_feac42ae", (void*)godot_icall_CollisionPolygon2D_set_build_mode_feac42ae},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon2D_get_build_mode_df5c6729", (void*)godot_icall_CollisionPolygon2D_get_build_mode_df5c6729},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon2D_set_disabled_ba24800b", (void*)godot_icall_CollisionPolygon2D_set_disabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon2D_is_disabled_68fe5f59", (void*)godot_icall_CollisionPolygon2D_is_disabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon2D_set_one_way_collision_ba24800b", (void*)godot_icall_CollisionPolygon2D_set_one_way_collision_ba24800b},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon2D_is_one_way_collision_enabled_68fe5f59", (void*)godot_icall_CollisionPolygon2D_is_one_way_collision_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon2D_set_one_way_collision_margin_904508bb", (void*)godot_icall_CollisionPolygon2D_set_one_way_collision_margin_904508bb},
	{"Godot.NativeCalls::godot_icall_CollisionPolygon2D_get_one_way_collision_margin_4edcd7a9", (void*)godot_icall_CollisionPolygon2D_get_one_way_collision_margin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CollisionShape_resource_changed_7ce53eb", (void*)godot_icall_CollisionShape_resource_changed_7ce53eb},
	{"Godot.NativeCalls::godot_icall_CollisionShape_set_shape_f51cd014", (void*)godot_icall_CollisionShape_set_shape_f51cd014},
	{"Godot.NativeCalls::godot_icall_CollisionShape_get_shape_34362f58", (void*)godot_icall_CollisionShape_get_shape_34362f58},
	{"Godot.NativeCalls::godot_icall_CollisionShape_set_disabled_ba24800b", (void*)godot_icall_CollisionShape_set_disabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_CollisionShape_is_disabled_68fe5f59", (void*)godot_icall_CollisionShape_is_disabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CollisionShape_make_convex_from_brothers_c8e54a7b", (void*)godot_icall_CollisionShape_make_convex_from_brothers_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_CollisionShape2D_set_shape_2fd85eda", (void*)godot_icall_CollisionShape2D_set_shape_2fd85eda},
	{"Godot.NativeCalls::godot_icall_CollisionShape2D_get_shape_dd79a98a", (void*)godot_icall_CollisionShape2D_get_shape_dd79a98a},
	{"Godot.NativeCalls::godot_icall_CollisionShape2D_set_disabled_ba24800b", (void*)godot_icall_CollisionShape2D_set_disabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_CollisionShape2D_is_disabled_68fe5f59", (void*)godot_icall_CollisionShape2D_is_disabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CollisionShape2D_set_one_way_collision_ba24800b", (void*)godot_icall_CollisionShape2D_set_one_way_collision_ba24800b},
	{"Godot.NativeCalls::godot_icall_CollisionShape2D_is_one_way_collision_enabled_68fe5f59", (void*)godot_icall_CollisionShape2D_is_one_way_collision_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_CollisionShape2D_set_one_way_collision_margin_904508bb", (void*)godot_icall_CollisionShape2D_set_one_way_collision_margin_904508bb},
	{"Godot.NativeCalls::godot_icall_CollisionShape2D_get_one_way_collision_margin_4edcd7a9", (void*)godot_icall_CollisionShape2D_get_one_way_collision_margin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ColorPicker_set_pick_color_f2e3b5aa", (void*)godot_icall_ColorPicker_set_pick_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ColorPicker_get_pick_color_304394ba", (void*)godot_icall_ColorPicker_get_pick_color_304394ba},
	{"Godot.NativeCalls::godot_icall_ColorPicker_set_hsv_mode_ba24800b", (void*)godot_icall_ColorPicker_set_hsv_mode_ba24800b},
	{"Godot.NativeCalls::godot_icall_ColorPicker_is_hsv_mode_68fe5f59", (void*)godot_icall_ColorPicker_is_hsv_mode_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ColorPicker_set_raw_mode_ba24800b", (void*)godot_icall_ColorPicker_set_raw_mode_ba24800b},
	{"Godot.NativeCalls::godot_icall_ColorPicker_is_raw_mode_68fe5f59", (void*)godot_icall_ColorPicker_is_raw_mode_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ColorPicker_set_deferred_mode_ba24800b", (void*)godot_icall_ColorPicker_set_deferred_mode_ba24800b},
	{"Godot.NativeCalls::godot_icall_ColorPicker_is_deferred_mode_68fe5f59", (void*)godot_icall_ColorPicker_is_deferred_mode_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ColorPicker_set_edit_alpha_ba24800b", (void*)godot_icall_ColorPicker_set_edit_alpha_ba24800b},
	{"Godot.NativeCalls::godot_icall_ColorPicker_is_editing_alpha_68fe5f59", (void*)godot_icall_ColorPicker_is_editing_alpha_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ColorPicker_set_presets_enabled_ba24800b", (void*)godot_icall_ColorPicker_set_presets_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_ColorPicker_are_presets_enabled_68fe5f59", (void*)godot_icall_ColorPicker_are_presets_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ColorPicker_set_presets_visible_ba24800b", (void*)godot_icall_ColorPicker_set_presets_visible_ba24800b},
	{"Godot.NativeCalls::godot_icall_ColorPicker_are_presets_visible_68fe5f59", (void*)godot_icall_ColorPicker_are_presets_visible_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ColorPicker_add_preset_f2e3b5aa", (void*)godot_icall_ColorPicker_add_preset_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ColorPicker_erase_preset_f2e3b5aa", (void*)godot_icall_ColorPicker_erase_preset_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ColorPicker_get_presets_e048d8e7", (void*)godot_icall_ColorPicker_get_presets_e048d8e7},
	{"Godot.NativeCalls::godot_icall_ColorPickerButton_set_pick_color_f2e3b5aa", (void*)godot_icall_ColorPickerButton_set_pick_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ColorPickerButton_get_pick_color_304394ba", (void*)godot_icall_ColorPickerButton_get_pick_color_304394ba},
	{"Godot.NativeCalls::godot_icall_ColorPickerButton_get_picker_14ab49ac", (void*)godot_icall_ColorPickerButton_get_picker_14ab49ac},
	{"Godot.NativeCalls::godot_icall_ColorPickerButton_get_popup_3384f56d", (void*)godot_icall_ColorPickerButton_get_popup_3384f56d},
	{"Godot.NativeCalls::godot_icall_ColorPickerButton_set_edit_alpha_ba24800b", (void*)godot_icall_ColorPickerButton_set_edit_alpha_ba24800b},
	{"Godot.NativeCalls::godot_icall_ColorPickerButton_is_editing_alpha_68fe5f59", (void*)godot_icall_ColorPickerButton_is_editing_alpha_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ColorRect_set_frame_color_f2e3b5aa", (void*)godot_icall_ColorRect_set_frame_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ColorRect_get_frame_color_304394ba", (void*)godot_icall_ColorRect_get_frame_color_304394ba},
	{"Godot.NativeCalls::godot_icall_ConcavePolygonShape_set_faces_88c6a314", (void*)godot_icall_ConcavePolygonShape_set_faces_88c6a314},
	{"Godot.NativeCalls::godot_icall_ConcavePolygonShape_get_faces_36607e58", (void*)godot_icall_ConcavePolygonShape_get_faces_36607e58},
	{"Godot.NativeCalls::godot_icall_ConcavePolygonShape2D_set_segments_3a3116bd", (void*)godot_icall_ConcavePolygonShape2D_set_segments_3a3116bd},
	{"Godot.NativeCalls::godot_icall_ConcavePolygonShape2D_get_segments_e910f1af", (void*)godot_icall_ConcavePolygonShape2D_get_segments_e910f1af},
	{"Godot.NativeCalls::godot_icall_ConeTwistJoint_set_param_6f26d559", (void*)godot_icall_ConeTwistJoint_set_param_6f26d559},
	{"Godot.NativeCalls::godot_icall_ConeTwistJoint_get_param_63b80b0", (void*)godot_icall_ConeTwistJoint_get_param_63b80b0},
	{"Godot.NativeCalls::godot_icall_ConeTwistJoint__set_swing_span_904508bb", (void*)godot_icall_ConeTwistJoint__set_swing_span_904508bb},
	{"Godot.NativeCalls::godot_icall_ConeTwistJoint__get_swing_span_4edcd7a9", (void*)godot_icall_ConeTwistJoint__get_swing_span_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ConeTwistJoint__set_twist_span_904508bb", (void*)godot_icall_ConeTwistJoint__set_twist_span_904508bb},
	{"Godot.NativeCalls::godot_icall_ConeTwistJoint__get_twist_span_4edcd7a9", (void*)godot_icall_ConeTwistJoint__get_twist_span_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ConfigFile_set_value_5e75b9e1", (void*)godot_icall_ConfigFile_set_value_5e75b9e1},
	{"Godot.NativeCalls::godot_icall_ConfigFile_get_value_373d864b", (void*)godot_icall_ConfigFile_get_value_373d864b},
	{"Godot.NativeCalls::godot_icall_ConfigFile_has_section_8a7120b9", (void*)godot_icall_ConfigFile_has_section_8a7120b9},
	{"Godot.NativeCalls::godot_icall_ConfigFile_has_section_key_cdeda881", (void*)godot_icall_ConfigFile_has_section_key_cdeda881},
	{"Godot.NativeCalls::godot_icall_ConfigFile_get_sections_4cc8f2a7", (void*)godot_icall_ConfigFile_get_sections_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_ConfigFile_get_section_keys_82ee0a94", (void*)godot_icall_ConfigFile_get_section_keys_82ee0a94},
	{"Godot.NativeCalls::godot_icall_ConfigFile_erase_section_3ca14953", (void*)godot_icall_ConfigFile_erase_section_3ca14953},
	{"Godot.NativeCalls::godot_icall_ConfigFile_erase_section_key_fc93f18d", (void*)godot_icall_ConfigFile_erase_section_key_fc93f18d},
	{"Godot.NativeCalls::godot_icall_ConfigFile_load_2660dbb2", (void*)godot_icall_ConfigFile_load_2660dbb2},
	{"Godot.NativeCalls::godot_icall_ConfigFile_parse_73262d91", (void*)godot_icall_ConfigFile_parse_73262d91},
	{"Godot.NativeCalls::godot_icall_ConfigFile_save_2660dbb2", (void*)godot_icall_ConfigFile_save_2660dbb2},
	{"Godot.NativeCalls::godot_icall_ConfigFile_load_encrypted_c6b9da7a", (void*)godot_icall_ConfigFile_load_encrypted_c6b9da7a},
	{"Godot.NativeCalls::godot_icall_ConfigFile_load_encrypted_pass_ce7ee84", (void*)godot_icall_ConfigFile_load_encrypted_pass_ce7ee84},
	{"Godot.NativeCalls::godot_icall_ConfigFile_save_encrypted_c6b9da7a", (void*)godot_icall_ConfigFile_save_encrypted_c6b9da7a},
	{"Godot.NativeCalls::godot_icall_ConfigFile_save_encrypted_pass_ce7ee84", (void*)godot_icall_ConfigFile_save_encrypted_pass_ce7ee84},
	{"Godot.NativeCalls::godot_icall_ConfirmationDialog_get_cancel_e2789eb5", (void*)godot_icall_ConfirmationDialog_get_cancel_e2789eb5},
	{"Godot.NativeCalls::godot_icall_Container_queue_sort_c8e54a7b", (void*)godot_icall_Container_queue_sort_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Container_fit_child_in_rect_b5b9762f", (void*)godot_icall_Container_fit_child_in_rect_b5b9762f},
	{"Godot.NativeCalls::godot_icall_Control_accept_event_c8e54a7b", (void*)godot_icall_Control_accept_event_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Control_get_minimum_size_9b4ea24e", (void*)godot_icall_Control_get_minimum_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Control_get_combined_minimum_size_9b4ea24e", (void*)godot_icall_Control_get_combined_minimum_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Control_set_anchors_preset_ee03d5ab", (void*)godot_icall_Control_set_anchors_preset_ee03d5ab},
	{"Godot.NativeCalls::godot_icall_Control_set_margins_preset_585d3f2b", (void*)godot_icall_Control_set_margins_preset_585d3f2b},
	{"Godot.NativeCalls::godot_icall_Control_set_anchors_and_margins_preset_585d3f2b", (void*)godot_icall_Control_set_anchors_and_margins_preset_585d3f2b},
	{"Godot.NativeCalls::godot_icall_Control__set_anchor_86b3589f", (void*)godot_icall_Control__set_anchor_86b3589f},
	{"Godot.NativeCalls::godot_icall_Control_set_anchor_8dd7d84d", (void*)godot_icall_Control_set_anchor_8dd7d84d},
	{"Godot.NativeCalls::godot_icall_Control_get_anchor_cb96d2bf", (void*)godot_icall_Control_get_anchor_cb96d2bf},
	{"Godot.NativeCalls::godot_icall_Control_set_margin_86b3589f", (void*)godot_icall_Control_set_margin_86b3589f},
	{"Godot.NativeCalls::godot_icall_Control_set_anchor_and_margin_62a0c351", (void*)godot_icall_Control_set_anchor_and_margin_62a0c351},
	{"Godot.NativeCalls::godot_icall_Control_set_begin_6df7471e", (void*)godot_icall_Control_set_begin_6df7471e},
	{"Godot.NativeCalls::godot_icall_Control_set_end_6df7471e", (void*)godot_icall_Control_set_end_6df7471e},
	{"Godot.NativeCalls::godot_icall_Control_set_position_cd723547", (void*)godot_icall_Control_set_position_cd723547},
	{"Godot.NativeCalls::godot_icall_Control__set_position_6df7471e", (void*)godot_icall_Control__set_position_6df7471e},
	{"Godot.NativeCalls::godot_icall_Control_set_size_cd723547", (void*)godot_icall_Control_set_size_cd723547},
	{"Godot.NativeCalls::godot_icall_Control__set_size_6df7471e", (void*)godot_icall_Control__set_size_6df7471e},
	{"Godot.NativeCalls::godot_icall_Control_set_custom_minimum_size_6df7471e", (void*)godot_icall_Control_set_custom_minimum_size_6df7471e},
	{"Godot.NativeCalls::godot_icall_Control_set_global_position_cd723547", (void*)godot_icall_Control_set_global_position_cd723547},
	{"Godot.NativeCalls::godot_icall_Control__set_global_position_6df7471e", (void*)godot_icall_Control__set_global_position_6df7471e},
	{"Godot.NativeCalls::godot_icall_Control_set_rotation_904508bb", (void*)godot_icall_Control_set_rotation_904508bb},
	{"Godot.NativeCalls::godot_icall_Control_set_rotation_degrees_904508bb", (void*)godot_icall_Control_set_rotation_degrees_904508bb},
	{"Godot.NativeCalls::godot_icall_Control_set_scale_6df7471e", (void*)godot_icall_Control_set_scale_6df7471e},
	{"Godot.NativeCalls::godot_icall_Control_set_pivot_offset_6df7471e", (void*)godot_icall_Control_set_pivot_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_Control_get_margin_cb96d2bf", (void*)godot_icall_Control_get_margin_cb96d2bf},
	{"Godot.NativeCalls::godot_icall_Control_get_begin_9b4ea24e", (void*)godot_icall_Control_get_begin_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Control_get_end_9b4ea24e", (void*)godot_icall_Control_get_end_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Control_get_position_9b4ea24e", (void*)godot_icall_Control_get_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Control_get_size_9b4ea24e", (void*)godot_icall_Control_get_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Control_get_rotation_4edcd7a9", (void*)godot_icall_Control_get_rotation_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Control_get_rotation_degrees_4edcd7a9", (void*)godot_icall_Control_get_rotation_degrees_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Control_get_scale_9b4ea24e", (void*)godot_icall_Control_get_scale_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Control_get_pivot_offset_9b4ea24e", (void*)godot_icall_Control_get_pivot_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Control_get_custom_minimum_size_9b4ea24e", (void*)godot_icall_Control_get_custom_minimum_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Control_get_parent_area_size_9b4ea24e", (void*)godot_icall_Control_get_parent_area_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Control_get_global_position_9b4ea24e", (void*)godot_icall_Control_get_global_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Control_get_rect_6344c073", (void*)godot_icall_Control_get_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_Control_get_global_rect_6344c073", (void*)godot_icall_Control_get_global_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_Control_show_modal_ba24800b", (void*)godot_icall_Control_show_modal_ba24800b},
	{"Godot.NativeCalls::godot_icall_Control_set_focus_mode_ec5f3255", (void*)godot_icall_Control_set_focus_mode_ec5f3255},
	{"Godot.NativeCalls::godot_icall_Control_get_focus_mode_2e93c450", (void*)godot_icall_Control_get_focus_mode_2e93c450},
	{"Godot.NativeCalls::godot_icall_Control_has_focus_68fe5f59", (void*)godot_icall_Control_has_focus_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Control_grab_focus_c8e54a7b", (void*)godot_icall_Control_grab_focus_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Control_release_focus_c8e54a7b", (void*)godot_icall_Control_release_focus_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Control_get_focus_owner_eb752350", (void*)godot_icall_Control_get_focus_owner_eb752350},
	{"Godot.NativeCalls::godot_icall_Control_set_h_size_flags_e1ae93bc", (void*)godot_icall_Control_set_h_size_flags_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Control_get_h_size_flags_1f886eb0", (void*)godot_icall_Control_get_h_size_flags_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Control_set_stretch_ratio_904508bb", (void*)godot_icall_Control_set_stretch_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_Control_get_stretch_ratio_4edcd7a9", (void*)godot_icall_Control_get_stretch_ratio_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Control_set_v_size_flags_e1ae93bc", (void*)godot_icall_Control_set_v_size_flags_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Control_get_v_size_flags_1f886eb0", (void*)godot_icall_Control_get_v_size_flags_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Control_set_theme_77a4d7dc", (void*)godot_icall_Control_set_theme_77a4d7dc},
	{"Godot.NativeCalls::godot_icall_Control_get_theme_b57e3290", (void*)godot_icall_Control_get_theme_b57e3290},
	{"Godot.NativeCalls::godot_icall_Control_add_icon_override_febc050", (void*)godot_icall_Control_add_icon_override_febc050},
	{"Godot.NativeCalls::godot_icall_Control_add_shader_override_e2cfa364", (void*)godot_icall_Control_add_shader_override_e2cfa364},
	{"Godot.NativeCalls::godot_icall_Control_add_style_override_3f949d2b", (void*)godot_icall_Control_add_style_override_3f949d2b},
	{"Godot.NativeCalls::godot_icall_Control_add_font_override_a21a4b98", (void*)godot_icall_Control_add_font_override_a21a4b98},
	{"Godot.NativeCalls::godot_icall_Control_add_color_override_8b9666a0", (void*)godot_icall_Control_add_color_override_8b9666a0},
	{"Godot.NativeCalls::godot_icall_Control_add_constant_override_bb2d80b6", (void*)godot_icall_Control_add_constant_override_bb2d80b6},
	{"Godot.NativeCalls::godot_icall_Control_get_icon_bcfbe107", (void*)godot_icall_Control_get_icon_bcfbe107},
	{"Godot.NativeCalls::godot_icall_Control_get_stylebox_ac08e40f", (void*)godot_icall_Control_get_stylebox_ac08e40f},
	{"Godot.NativeCalls::godot_icall_Control_get_font_4abe4d7b", (void*)godot_icall_Control_get_font_4abe4d7b},
	{"Godot.NativeCalls::godot_icall_Control_get_color_aa87570e", (void*)godot_icall_Control_get_color_aa87570e},
	{"Godot.NativeCalls::godot_icall_Control_get_constant_7185a084", (void*)godot_icall_Control_get_constant_7185a084},
	{"Godot.NativeCalls::godot_icall_Control_has_icon_override_bee64043", (void*)godot_icall_Control_has_icon_override_bee64043},
	{"Godot.NativeCalls::godot_icall_Control_has_shader_override_bee64043", (void*)godot_icall_Control_has_shader_override_bee64043},
	{"Godot.NativeCalls::godot_icall_Control_has_stylebox_override_bee64043", (void*)godot_icall_Control_has_stylebox_override_bee64043},
	{"Godot.NativeCalls::godot_icall_Control_has_font_override_bee64043", (void*)godot_icall_Control_has_font_override_bee64043},
	{"Godot.NativeCalls::godot_icall_Control_has_color_override_bee64043", (void*)godot_icall_Control_has_color_override_bee64043},
	{"Godot.NativeCalls::godot_icall_Control_has_constant_override_bee64043", (void*)godot_icall_Control_has_constant_override_bee64043},
	{"Godot.NativeCalls::godot_icall_Control_has_icon_db6c1197", (void*)godot_icall_Control_has_icon_db6c1197},
	{"Godot.NativeCalls::godot_icall_Control_has_stylebox_db6c1197", (void*)godot_icall_Control_has_stylebox_db6c1197},
	{"Godot.NativeCalls::godot_icall_Control_has_font_db6c1197", (void*)godot_icall_Control_has_font_db6c1197},
	{"Godot.NativeCalls::godot_icall_Control_has_color_db6c1197", (void*)godot_icall_Control_has_color_db6c1197},
	{"Godot.NativeCalls::godot_icall_Control_has_constant_db6c1197", (void*)godot_icall_Control_has_constant_db6c1197},
	{"Godot.NativeCalls::godot_icall_Control_get_parent_control_eb752350", (void*)godot_icall_Control_get_parent_control_eb752350},
	{"Godot.NativeCalls::godot_icall_Control_set_h_grow_direction_6d106a0e", (void*)godot_icall_Control_set_h_grow_direction_6d106a0e},
	{"Godot.NativeCalls::godot_icall_Control_get_h_grow_direction_9c31b55e", (void*)godot_icall_Control_get_h_grow_direction_9c31b55e},
	{"Godot.NativeCalls::godot_icall_Control_set_v_grow_direction_6d106a0e", (void*)godot_icall_Control_set_v_grow_direction_6d106a0e},
	{"Godot.NativeCalls::godot_icall_Control_get_v_grow_direction_9c31b55e", (void*)godot_icall_Control_get_v_grow_direction_9c31b55e},
	{"Godot.NativeCalls::godot_icall_Control_set_tooltip_2f29e819", (void*)godot_icall_Control_set_tooltip_2f29e819},
	{"Godot.NativeCalls::godot_icall_Control_get_tooltip_d8b6703c", (void*)godot_icall_Control_get_tooltip_d8b6703c},
	{"Godot.NativeCalls::godot_icall_Control__get_tooltip_97be4a2e", (void*)godot_icall_Control__get_tooltip_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Control_set_default_cursor_shape_7756431d", (void*)godot_icall_Control_set_default_cursor_shape_7756431d},
	{"Godot.NativeCalls::godot_icall_Control_get_default_cursor_shape_b5ef9e4f", (void*)godot_icall_Control_get_default_cursor_shape_b5ef9e4f},
	{"Godot.NativeCalls::godot_icall_Control_get_cursor_shape_57060915", (void*)godot_icall_Control_get_cursor_shape_57060915},
	{"Godot.NativeCalls::godot_icall_Control_set_focus_neighbour_3129d85c", (void*)godot_icall_Control_set_focus_neighbour_3129d85c},
	{"Godot.NativeCalls::godot_icall_Control_get_focus_neighbour_58103ae", (void*)godot_icall_Control_get_focus_neighbour_58103ae},
	{"Godot.NativeCalls::godot_icall_Control_set_focus_next_1e08804", (void*)godot_icall_Control_set_focus_next_1e08804},
	{"Godot.NativeCalls::godot_icall_Control_get_focus_next_bf425768", (void*)godot_icall_Control_get_focus_next_bf425768},
	{"Godot.NativeCalls::godot_icall_Control_set_focus_previous_1e08804", (void*)godot_icall_Control_set_focus_previous_1e08804},
	{"Godot.NativeCalls::godot_icall_Control_get_focus_previous_bf425768", (void*)godot_icall_Control_get_focus_previous_bf425768},
	{"Godot.NativeCalls::godot_icall_Control_force_drag_2d0b887c", (void*)godot_icall_Control_force_drag_2d0b887c},
	{"Godot.NativeCalls::godot_icall_Control_set_mouse_filter_42135d0b", (void*)godot_icall_Control_set_mouse_filter_42135d0b},
	{"Godot.NativeCalls::godot_icall_Control_get_mouse_filter_5a76cac6", (void*)godot_icall_Control_get_mouse_filter_5a76cac6},
	{"Godot.NativeCalls::godot_icall_Control_set_clip_contents_ba24800b", (void*)godot_icall_Control_set_clip_contents_ba24800b},
	{"Godot.NativeCalls::godot_icall_Control_is_clipping_contents_68fe5f59", (void*)godot_icall_Control_is_clipping_contents_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Control_grab_click_focus_c8e54a7b", (void*)godot_icall_Control_grab_click_focus_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Control_set_drag_forwarding_3dddc41c", (void*)godot_icall_Control_set_drag_forwarding_3dddc41c},
	{"Godot.NativeCalls::godot_icall_Control_set_drag_preview_3dddc41c", (void*)godot_icall_Control_set_drag_preview_3dddc41c},
	{"Godot.NativeCalls::godot_icall_Control_warp_mouse_6df7471e", (void*)godot_icall_Control_warp_mouse_6df7471e},
	{"Godot.NativeCalls::godot_icall_Control_minimum_size_changed_c8e54a7b", (void*)godot_icall_Control_minimum_size_changed_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_ConvexPolygonShape_set_points_b8a866b9", (void*)godot_icall_ConvexPolygonShape_set_points_b8a866b9},
	{"Godot.NativeCalls::godot_icall_ConvexPolygonShape_get_points_36607e58", (void*)godot_icall_ConvexPolygonShape_get_points_36607e58},
	{"Godot.NativeCalls::godot_icall_ConvexPolygonShape2D_set_point_cloud_2923a790", (void*)godot_icall_ConvexPolygonShape2D_set_point_cloud_2923a790},
	{"Godot.NativeCalls::godot_icall_ConvexPolygonShape2D_set_points_2923a790", (void*)godot_icall_ConvexPolygonShape2D_set_points_2923a790},
	{"Godot.NativeCalls::godot_icall_ConvexPolygonShape2D_get_points_d80382d4", (void*)godot_icall_ConvexPolygonShape2D_get_points_d80382d4},
	{"Godot.NativeCalls::godot_icall_Crypto_generate_random_bytes_f38b97f6", (void*)godot_icall_Crypto_generate_random_bytes_f38b97f6},
	{"Godot.NativeCalls::godot_icall_Crypto_generate_rsa_928cbf6d", (void*)godot_icall_Crypto_generate_rsa_928cbf6d},
	{"Godot.NativeCalls::godot_icall_Crypto_generate_self_signed_certificate_e5785379", (void*)godot_icall_Crypto_generate_self_signed_certificate_e5785379},
	{"Godot.NativeCalls::godot_icall_CryptoKey_save_2660dbb2", (void*)godot_icall_CryptoKey_save_2660dbb2},
	{"Godot.NativeCalls::godot_icall_CryptoKey_load_2660dbb2", (void*)godot_icall_CryptoKey_load_2660dbb2},
	{"Godot.NativeCalls::godot_icall_CubeMap_get_width_1f886eb0", (void*)godot_icall_CubeMap_get_width_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CubeMap_get_height_1f886eb0", (void*)godot_icall_CubeMap_get_height_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CubeMap_set_flags_966aab97", (void*)godot_icall_CubeMap_set_flags_966aab97},
	{"Godot.NativeCalls::godot_icall_CubeMap_get_flags_54cc76d5", (void*)godot_icall_CubeMap_get_flags_54cc76d5},
	{"Godot.NativeCalls::godot_icall_CubeMap_set_side_f872ec8f", (void*)godot_icall_CubeMap_set_side_f872ec8f},
	{"Godot.NativeCalls::godot_icall_CubeMap_get_side_447e116f", (void*)godot_icall_CubeMap_get_side_447e116f},
	{"Godot.NativeCalls::godot_icall_CubeMap_set_storage_971a4fd3", (void*)godot_icall_CubeMap_set_storage_971a4fd3},
	{"Godot.NativeCalls::godot_icall_CubeMap_get_storage_563b9a91", (void*)godot_icall_CubeMap_get_storage_563b9a91},
	{"Godot.NativeCalls::godot_icall_CubeMap_set_lossy_storage_quality_904508bb", (void*)godot_icall_CubeMap_set_lossy_storage_quality_904508bb},
	{"Godot.NativeCalls::godot_icall_CubeMap_get_lossy_storage_quality_4edcd7a9", (void*)godot_icall_CubeMap_get_lossy_storage_quality_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CubeMesh_set_size_6df7471d", (void*)godot_icall_CubeMesh_set_size_6df7471d},
	{"Godot.NativeCalls::godot_icall_CubeMesh_get_size_9b4ea24f", (void*)godot_icall_CubeMesh_get_size_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_CubeMesh_set_subdivide_width_e1ae93bc", (void*)godot_icall_CubeMesh_set_subdivide_width_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CubeMesh_get_subdivide_width_1f886eb0", (void*)godot_icall_CubeMesh_get_subdivide_width_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CubeMesh_set_subdivide_height_e1ae93bc", (void*)godot_icall_CubeMesh_set_subdivide_height_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CubeMesh_get_subdivide_height_1f886eb0", (void*)godot_icall_CubeMesh_get_subdivide_height_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CubeMesh_set_subdivide_depth_e1ae93bc", (void*)godot_icall_CubeMesh_set_subdivide_depth_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CubeMesh_get_subdivide_depth_1f886eb0", (void*)godot_icall_CubeMesh_get_subdivide_depth_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Curve_get_point_count_1f886eb0", (void*)godot_icall_Curve_get_point_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Curve_add_point_5c6a6967", (void*)godot_icall_Curve_add_point_5c6a6967},
	{"Godot.NativeCalls::godot_icall_Curve_remove_point_e1ae93bc", (void*)godot_icall_Curve_remove_point_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Curve_clear_points_c8e54a7b", (void*)godot_icall_Curve_clear_points_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Curve_get_point_position_23728632", (void*)godot_icall_Curve_get_point_position_23728632},
	{"Godot.NativeCalls::godot_icall_Curve_set_point_value_708a76ed", (void*)godot_icall_Curve_set_point_value_708a76ed},
	{"Godot.NativeCalls::godot_icall_Curve_set_point_offset_90acacee", (void*)godot_icall_Curve_set_point_offset_90acacee},
	{"Godot.NativeCalls::godot_icall_Curve_interpolate_f6dda625", (void*)godot_icall_Curve_interpolate_f6dda625},
	{"Godot.NativeCalls::godot_icall_Curve_interpolate_baked_f6dda625", (void*)godot_icall_Curve_interpolate_baked_f6dda625},
	{"Godot.NativeCalls::godot_icall_Curve_get_point_left_tangent_c671df3a", (void*)godot_icall_Curve_get_point_left_tangent_c671df3a},
	{"Godot.NativeCalls::godot_icall_Curve_get_point_right_tangent_c671df3a", (void*)godot_icall_Curve_get_point_right_tangent_c671df3a},
	{"Godot.NativeCalls::godot_icall_Curve_get_point_left_mode_325248d3", (void*)godot_icall_Curve_get_point_left_mode_325248d3},
	{"Godot.NativeCalls::godot_icall_Curve_get_point_right_mode_325248d3", (void*)godot_icall_Curve_get_point_right_mode_325248d3},
	{"Godot.NativeCalls::godot_icall_Curve_set_point_left_tangent_708a76ed", (void*)godot_icall_Curve_set_point_left_tangent_708a76ed},
	{"Godot.NativeCalls::godot_icall_Curve_set_point_right_tangent_708a76ed", (void*)godot_icall_Curve_set_point_right_tangent_708a76ed},
	{"Godot.NativeCalls::godot_icall_Curve_set_point_left_mode_92847e76", (void*)godot_icall_Curve_set_point_left_mode_92847e76},
	{"Godot.NativeCalls::godot_icall_Curve_set_point_right_mode_92847e76", (void*)godot_icall_Curve_set_point_right_mode_92847e76},
	{"Godot.NativeCalls::godot_icall_Curve_get_min_value_4edcd7a9", (void*)godot_icall_Curve_get_min_value_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Curve_set_min_value_904508bb", (void*)godot_icall_Curve_set_min_value_904508bb},
	{"Godot.NativeCalls::godot_icall_Curve_get_max_value_4edcd7a9", (void*)godot_icall_Curve_get_max_value_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Curve_set_max_value_904508bb", (void*)godot_icall_Curve_set_max_value_904508bb},
	{"Godot.NativeCalls::godot_icall_Curve_clean_dupes_c8e54a7b", (void*)godot_icall_Curve_clean_dupes_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Curve_bake_c8e54a7b", (void*)godot_icall_Curve_bake_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Curve_get_bake_resolution_1f886eb0", (void*)godot_icall_Curve_get_bake_resolution_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Curve_set_bake_resolution_e1ae93bc", (void*)godot_icall_Curve_set_bake_resolution_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Curve_get_data_d80382d4", (void*)godot_icall_Curve_get_data_d80382d4},
	{"Godot.NativeCalls::godot_icall_Curve_set_data_2923a790", (void*)godot_icall_Curve_set_data_2923a790},
	{"Godot.NativeCalls::godot_icall_Curve2D_get_point_count_1f886eb0", (void*)godot_icall_Curve2D_get_point_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Curve2D_add_point_a65b9c10", (void*)godot_icall_Curve2D_add_point_a65b9c10},
	{"Godot.NativeCalls::godot_icall_Curve2D_set_point_position_3c383c4a", (void*)godot_icall_Curve2D_set_point_position_3c383c4a},
	{"Godot.NativeCalls::godot_icall_Curve2D_get_point_position_23728632", (void*)godot_icall_Curve2D_get_point_position_23728632},
	{"Godot.NativeCalls::godot_icall_Curve2D_set_point_in_3c383c4a", (void*)godot_icall_Curve2D_set_point_in_3c383c4a},
	{"Godot.NativeCalls::godot_icall_Curve2D_get_point_in_23728632", (void*)godot_icall_Curve2D_get_point_in_23728632},
	{"Godot.NativeCalls::godot_icall_Curve2D_set_point_out_3c383c4a", (void*)godot_icall_Curve2D_set_point_out_3c383c4a},
	{"Godot.NativeCalls::godot_icall_Curve2D_get_point_out_23728632", (void*)godot_icall_Curve2D_get_point_out_23728632},
	{"Godot.NativeCalls::godot_icall_Curve2D_remove_point_e1ae93bc", (void*)godot_icall_Curve2D_remove_point_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Curve2D_clear_points_c8e54a7b", (void*)godot_icall_Curve2D_clear_points_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Curve2D_interpolate_f1e0f95c", (void*)godot_icall_Curve2D_interpolate_f1e0f95c},
	{"Godot.NativeCalls::godot_icall_Curve2D_interpolatef_7cde2f3b", (void*)godot_icall_Curve2D_interpolatef_7cde2f3b},
	{"Godot.NativeCalls::godot_icall_Curve2D_set_bake_interval_904508bb", (void*)godot_icall_Curve2D_set_bake_interval_904508bb},
	{"Godot.NativeCalls::godot_icall_Curve2D_get_bake_interval_4edcd7a9", (void*)godot_icall_Curve2D_get_bake_interval_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Curve2D_get_baked_length_4edcd7a9", (void*)godot_icall_Curve2D_get_baked_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Curve2D_interpolate_baked_21271c9b", (void*)godot_icall_Curve2D_interpolate_baked_21271c9b},
	{"Godot.NativeCalls::godot_icall_Curve2D_get_baked_points_e910f1af", (void*)godot_icall_Curve2D_get_baked_points_e910f1af},
	{"Godot.NativeCalls::godot_icall_Curve2D_get_closest_point_af4cfa54", (void*)godot_icall_Curve2D_get_closest_point_af4cfa54},
	{"Godot.NativeCalls::godot_icall_Curve2D_get_closest_offset_4aafeb98", (void*)godot_icall_Curve2D_get_closest_offset_4aafeb98},
	{"Godot.NativeCalls::godot_icall_Curve2D_tessellate_a3d0d94b", (void*)godot_icall_Curve2D_tessellate_a3d0d94b},
	{"Godot.NativeCalls::godot_icall_Curve2D__get_data_22d47c9d", (void*)godot_icall_Curve2D__get_data_22d47c9d},
	{"Godot.NativeCalls::godot_icall_Curve2D__set_data_e472adcf", (void*)godot_icall_Curve2D__set_data_e472adcf},
	{"Godot.NativeCalls::godot_icall_Curve3D_get_point_count_1f886eb0", (void*)godot_icall_Curve3D_get_point_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Curve3D_add_point_a65fb4ae", (void*)godot_icall_Curve3D_add_point_a65fb4ae},
	{"Godot.NativeCalls::godot_icall_Curve3D_set_point_position_3c383c4b", (void*)godot_icall_Curve3D_set_point_position_3c383c4b},
	{"Godot.NativeCalls::godot_icall_Curve3D_get_point_position_237286f3", (void*)godot_icall_Curve3D_get_point_position_237286f3},
	{"Godot.NativeCalls::godot_icall_Curve3D_set_point_tilt_708a76ed", (void*)godot_icall_Curve3D_set_point_tilt_708a76ed},
	{"Godot.NativeCalls::godot_icall_Curve3D_get_point_tilt_c671df3a", (void*)godot_icall_Curve3D_get_point_tilt_c671df3a},
	{"Godot.NativeCalls::godot_icall_Curve3D_set_point_in_3c383c4b", (void*)godot_icall_Curve3D_set_point_in_3c383c4b},
	{"Godot.NativeCalls::godot_icall_Curve3D_get_point_in_237286f3", (void*)godot_icall_Curve3D_get_point_in_237286f3},
	{"Godot.NativeCalls::godot_icall_Curve3D_set_point_out_3c383c4b", (void*)godot_icall_Curve3D_set_point_out_3c383c4b},
	{"Godot.NativeCalls::godot_icall_Curve3D_get_point_out_237286f3", (void*)godot_icall_Curve3D_get_point_out_237286f3},
	{"Godot.NativeCalls::godot_icall_Curve3D_remove_point_e1ae93bc", (void*)godot_icall_Curve3D_remove_point_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Curve3D_clear_points_c8e54a7b", (void*)godot_icall_Curve3D_clear_points_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Curve3D_interpolate_f1e0292d", (void*)godot_icall_Curve3D_interpolate_f1e0292d},
	{"Godot.NativeCalls::godot_icall_Curve3D_interpolatef_7cde2ffa", (void*)godot_icall_Curve3D_interpolatef_7cde2ffa},
	{"Godot.NativeCalls::godot_icall_Curve3D_set_bake_interval_904508bb", (void*)godot_icall_Curve3D_set_bake_interval_904508bb},
	{"Godot.NativeCalls::godot_icall_Curve3D_get_bake_interval_4edcd7a9", (void*)godot_icall_Curve3D_get_bake_interval_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Curve3D_set_up_vector_enabled_ba24800b", (void*)godot_icall_Curve3D_set_up_vector_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Curve3D_is_up_vector_enabled_68fe5f59", (void*)godot_icall_Curve3D_is_up_vector_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Curve3D_get_baked_length_4edcd7a9", (void*)godot_icall_Curve3D_get_baked_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Curve3D_interpolate_baked_21274c6a", (void*)godot_icall_Curve3D_interpolate_baked_21274c6a},
	{"Godot.NativeCalls::godot_icall_Curve3D_interpolate_baked_up_vector_21274c6a", (void*)godot_icall_Curve3D_interpolate_baked_up_vector_21274c6a},
	{"Godot.NativeCalls::godot_icall_Curve3D_get_baked_points_36607e58", (void*)godot_icall_Curve3D_get_baked_points_36607e58},
	{"Godot.NativeCalls::godot_icall_Curve3D_get_baked_tilts_7083ff1a", (void*)godot_icall_Curve3D_get_baked_tilts_7083ff1a},
	{"Godot.NativeCalls::godot_icall_Curve3D_get_baked_up_vectors_36607e58", (void*)godot_icall_Curve3D_get_baked_up_vectors_36607e58},
	{"Godot.NativeCalls::godot_icall_Curve3D_get_closest_point_af4cfa14", (void*)godot_icall_Curve3D_get_closest_point_af4cfa14},
	{"Godot.NativeCalls::godot_icall_Curve3D_get_closest_offset_4aafeb9b", (void*)godot_icall_Curve3D_get_closest_offset_4aafeb9b},
	{"Godot.NativeCalls::godot_icall_Curve3D_tessellate_1d44d7ac", (void*)godot_icall_Curve3D_tessellate_1d44d7ac},
	{"Godot.NativeCalls::godot_icall_Curve3D__get_data_22d47c9d", (void*)godot_icall_Curve3D__get_data_22d47c9d},
	{"Godot.NativeCalls::godot_icall_Curve3D__set_data_e472adcf", (void*)godot_icall_Curve3D__set_data_e472adcf},
	{"Godot.NativeCalls::godot_icall_CurveTexture_set_width_e1ae93bc", (void*)godot_icall_CurveTexture_set_width_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CurveTexture_set_curve_dbaac24a", (void*)godot_icall_CurveTexture_set_curve_dbaac24a},
	{"Godot.NativeCalls::godot_icall_CurveTexture_get_curve_98c1d1a", (void*)godot_icall_CurveTexture_get_curve_98c1d1a},
	{"Godot.NativeCalls::godot_icall_CylinderMesh_set_top_radius_904508bb", (void*)godot_icall_CylinderMesh_set_top_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CylinderMesh_get_top_radius_4edcd7a9", (void*)godot_icall_CylinderMesh_get_top_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CylinderMesh_set_bottom_radius_904508bb", (void*)godot_icall_CylinderMesh_set_bottom_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CylinderMesh_get_bottom_radius_4edcd7a9", (void*)godot_icall_CylinderMesh_get_bottom_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CylinderMesh_set_height_904508bb", (void*)godot_icall_CylinderMesh_set_height_904508bb},
	{"Godot.NativeCalls::godot_icall_CylinderMesh_get_height_4edcd7a9", (void*)godot_icall_CylinderMesh_get_height_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CylinderMesh_set_radial_segments_e1ae93bc", (void*)godot_icall_CylinderMesh_set_radial_segments_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CylinderMesh_get_radial_segments_1f886eb0", (void*)godot_icall_CylinderMesh_get_radial_segments_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CylinderMesh_set_rings_e1ae93bc", (void*)godot_icall_CylinderMesh_set_rings_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_CylinderMesh_get_rings_1f886eb0", (void*)godot_icall_CylinderMesh_get_rings_1f886eb0},
	{"Godot.NativeCalls::godot_icall_CylinderShape_set_radius_904508bb", (void*)godot_icall_CylinderShape_set_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_CylinderShape_get_radius_4edcd7a9", (void*)godot_icall_CylinderShape_get_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_CylinderShape_set_height_904508bb", (void*)godot_icall_CylinderShape_set_height_904508bb},
	{"Godot.NativeCalls::godot_icall_CylinderShape_get_height_4edcd7a9", (void*)godot_icall_CylinderShape_get_height_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_DampedSpringJoint2D_set_length_904508bb", (void*)godot_icall_DampedSpringJoint2D_set_length_904508bb},
	{"Godot.NativeCalls::godot_icall_DampedSpringJoint2D_get_length_4edcd7a9", (void*)godot_icall_DampedSpringJoint2D_get_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_DampedSpringJoint2D_set_rest_length_904508bb", (void*)godot_icall_DampedSpringJoint2D_set_rest_length_904508bb},
	{"Godot.NativeCalls::godot_icall_DampedSpringJoint2D_get_rest_length_4edcd7a9", (void*)godot_icall_DampedSpringJoint2D_get_rest_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_DampedSpringJoint2D_set_stiffness_904508bb", (void*)godot_icall_DampedSpringJoint2D_set_stiffness_904508bb},
	{"Godot.NativeCalls::godot_icall_DampedSpringJoint2D_get_stiffness_4edcd7a9", (void*)godot_icall_DampedSpringJoint2D_get_stiffness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_DampedSpringJoint2D_set_damping_904508bb", (void*)godot_icall_DampedSpringJoint2D_set_damping_904508bb},
	{"Godot.NativeCalls::godot_icall_DampedSpringJoint2D_get_damping_4edcd7a9", (void*)godot_icall_DampedSpringJoint2D_get_damping_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_DirectionalLight_set_shadow_mode_db240190", (void*)godot_icall_DirectionalLight_set_shadow_mode_db240190},
	{"Godot.NativeCalls::godot_icall_DirectionalLight_get_shadow_mode_9fde0d4", (void*)godot_icall_DirectionalLight_get_shadow_mode_9fde0d4},
	{"Godot.NativeCalls::godot_icall_DirectionalLight_set_shadow_depth_range_3e6f5b29", (void*)godot_icall_DirectionalLight_set_shadow_depth_range_3e6f5b29},
	{"Godot.NativeCalls::godot_icall_DirectionalLight_get_shadow_depth_range_ecc6a63b", (void*)godot_icall_DirectionalLight_get_shadow_depth_range_ecc6a63b},
	{"Godot.NativeCalls::godot_icall_DirectionalLight_set_blend_splits_ba24800b", (void*)godot_icall_DirectionalLight_set_blend_splits_ba24800b},
	{"Godot.NativeCalls::godot_icall_DirectionalLight_is_blend_splits_enabled_68fe5f59", (void*)godot_icall_DirectionalLight_is_blend_splits_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_DynamicFont_set_font_data_b503adb9", (void*)godot_icall_DynamicFont_set_font_data_b503adb9},
	{"Godot.NativeCalls::godot_icall_DynamicFont_get_font_data_74237cab", (void*)godot_icall_DynamicFont_get_font_data_74237cab},
	{"Godot.NativeCalls::godot_icall_DynamicFont_set_size_e1ae93bc", (void*)godot_icall_DynamicFont_set_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_DynamicFont_get_size_1f886eb0", (void*)godot_icall_DynamicFont_get_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_DynamicFont_set_outline_size_e1ae93bc", (void*)godot_icall_DynamicFont_set_outline_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_DynamicFont_get_outline_size_1f886eb0", (void*)godot_icall_DynamicFont_get_outline_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_DynamicFont_set_outline_color_f2e3b5aa", (void*)godot_icall_DynamicFont_set_outline_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_DynamicFont_get_outline_color_304394ba", (void*)godot_icall_DynamicFont_get_outline_color_304394ba},
	{"Godot.NativeCalls::godot_icall_DynamicFont_set_use_mipmaps_ba24800b", (void*)godot_icall_DynamicFont_set_use_mipmaps_ba24800b},
	{"Godot.NativeCalls::godot_icall_DynamicFont_get_use_mipmaps_68fe5f59", (void*)godot_icall_DynamicFont_get_use_mipmaps_68fe5f59},
	{"Godot.NativeCalls::godot_icall_DynamicFont_set_use_filter_ba24800b", (void*)godot_icall_DynamicFont_set_use_filter_ba24800b},
	{"Godot.NativeCalls::godot_icall_DynamicFont_get_use_filter_68fe5f59", (void*)godot_icall_DynamicFont_get_use_filter_68fe5f59},
	{"Godot.NativeCalls::godot_icall_DynamicFont_set_spacing_807eefe4", (void*)godot_icall_DynamicFont_set_spacing_807eefe4},
	{"Godot.NativeCalls::godot_icall_DynamicFont_get_spacing_b835dea5", (void*)godot_icall_DynamicFont_get_spacing_b835dea5},
	{"Godot.NativeCalls::godot_icall_DynamicFont_add_fallback_b503adb9", (void*)godot_icall_DynamicFont_add_fallback_b503adb9},
	{"Godot.NativeCalls::godot_icall_DynamicFont_set_fallback_57c519ef", (void*)godot_icall_DynamicFont_set_fallback_57c519ef},
	{"Godot.NativeCalls::godot_icall_DynamicFont_get_fallback_97848ef8", (void*)godot_icall_DynamicFont_get_fallback_97848ef8},
	{"Godot.NativeCalls::godot_icall_DynamicFont_remove_fallback_e1ae93bc", (void*)godot_icall_DynamicFont_remove_fallback_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_DynamicFont_get_fallback_count_1f886eb0", (void*)godot_icall_DynamicFont_get_fallback_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_DynamicFontData_set_antialiased_ba24800b", (void*)godot_icall_DynamicFontData_set_antialiased_ba24800b},
	{"Godot.NativeCalls::godot_icall_DynamicFontData_is_antialiased_68fe5f59", (void*)godot_icall_DynamicFontData_is_antialiased_68fe5f59},
	{"Godot.NativeCalls::godot_icall_DynamicFontData_set_font_path_3ca14953", (void*)godot_icall_DynamicFontData_set_font_path_3ca14953},
	{"Godot.NativeCalls::godot_icall_DynamicFontData_get_font_path_97be4a2e", (void*)godot_icall_DynamicFontData_get_font_path_97be4a2e},
	{"Godot.NativeCalls::godot_icall_DynamicFontData_set_hinting_353c5c44", (void*)godot_icall_DynamicFontData_set_hinting_353c5c44},
	{"Godot.NativeCalls::godot_icall_DynamicFontData_get_hinting_7636ab77", (void*)godot_icall_DynamicFontData_get_hinting_7636ab77},
#ifdef TOOLS_ENABLED
	{"Godot.EditorNativeCalls::godot_icall_EditorExportPlugin_add_shared_object_4b60c74", (void*)godot_icall_EditorExportPlugin_add_shared_object_4b60c74},
	{"Godot.EditorNativeCalls::godot_icall_EditorExportPlugin_add_file_e91798f9", (void*)godot_icall_EditorExportPlugin_add_file_e91798f9},
	{"Godot.EditorNativeCalls::godot_icall_EditorExportPlugin_skip_c8e54a7b", (void*)godot_icall_EditorExportPlugin_skip_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorFeatureProfile_set_disable_class_f253b141", (void*)godot_icall_EditorFeatureProfile_set_disable_class_f253b141},
	{"Godot.EditorNativeCalls::godot_icall_EditorFeatureProfile_is_class_disabled_bee64043", (void*)godot_icall_EditorFeatureProfile_is_class_disabled_bee64043},
	{"Godot.EditorNativeCalls::godot_icall_EditorFeatureProfile_set_disable_class_editor_f253b141", (void*)godot_icall_EditorFeatureProfile_set_disable_class_editor_f253b141},
	{"Godot.EditorNativeCalls::godot_icall_EditorFeatureProfile_is_class_editor_disabled_bee64043", (void*)godot_icall_EditorFeatureProfile_is_class_editor_disabled_bee64043},
	{"Godot.EditorNativeCalls::godot_icall_EditorFeatureProfile_set_disable_class_property_ec7bbd75", (void*)godot_icall_EditorFeatureProfile_set_disable_class_property_ec7bbd75},
	{"Godot.EditorNativeCalls::godot_icall_EditorFeatureProfile_is_class_property_disabled_db6c1197", (void*)godot_icall_EditorFeatureProfile_is_class_property_disabled_db6c1197},
	{"Godot.EditorNativeCalls::godot_icall_EditorFeatureProfile_set_disable_feature_40adab2a", (void*)godot_icall_EditorFeatureProfile_set_disable_feature_40adab2a},
	{"Godot.EditorNativeCalls::godot_icall_EditorFeatureProfile_is_feature_disabled_cfe5c55f", (void*)godot_icall_EditorFeatureProfile_is_feature_disabled_cfe5c55f},
	{"Godot.EditorNativeCalls::godot_icall_EditorFeatureProfile_get_feature_name_f57803d5", (void*)godot_icall_EditorFeatureProfile_get_feature_name_f57803d5},
	{"Godot.EditorNativeCalls::godot_icall_EditorFeatureProfile_save_to_file_2660dbb2", (void*)godot_icall_EditorFeatureProfile_save_to_file_2660dbb2},
	{"Godot.EditorNativeCalls::godot_icall_EditorFeatureProfile_load_from_file_2660dbb2", (void*)godot_icall_EditorFeatureProfile_load_from_file_2660dbb2},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_clear_filters_c8e54a7b", (void*)godot_icall_EditorFileDialog_clear_filters_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_add_filter_3ca14953", (void*)godot_icall_EditorFileDialog_add_filter_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_get_current_dir_97be4a2e", (void*)godot_icall_EditorFileDialog_get_current_dir_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_get_current_file_97be4a2e", (void*)godot_icall_EditorFileDialog_get_current_file_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_get_current_path_97be4a2e", (void*)godot_icall_EditorFileDialog_get_current_path_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_set_current_dir_3ca14953", (void*)godot_icall_EditorFileDialog_set_current_dir_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_set_current_file_3ca14953", (void*)godot_icall_EditorFileDialog_set_current_file_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_set_current_path_3ca14953", (void*)godot_icall_EditorFileDialog_set_current_path_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_set_mode_a82b4f65", (void*)godot_icall_EditorFileDialog_set_mode_a82b4f65},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_get_mode_94ce3420", (void*)godot_icall_EditorFileDialog_get_mode_94ce3420},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_get_vbox_eb5679a1", (void*)godot_icall_EditorFileDialog_get_vbox_eb5679a1},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_set_access_44410ee4", (void*)godot_icall_EditorFileDialog_set_access_44410ee4},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_get_access_1c1c9a97", (void*)godot_icall_EditorFileDialog_get_access_1c1c9a97},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_set_show_hidden_files_ba24800b", (void*)godot_icall_EditorFileDialog_set_show_hidden_files_ba24800b},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_is_showing_hidden_files_68fe5f59", (void*)godot_icall_EditorFileDialog_is_showing_hidden_files_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_set_display_mode_2d765637", (void*)godot_icall_EditorFileDialog_set_display_mode_2d765637},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_get_display_mode_c81f6e52", (void*)godot_icall_EditorFileDialog_get_display_mode_c81f6e52},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_set_disable_overwrite_warning_ba24800b", (void*)godot_icall_EditorFileDialog_set_disable_overwrite_warning_ba24800b},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_is_overwrite_warning_disabled_68fe5f59", (void*)godot_icall_EditorFileDialog_is_overwrite_warning_disabled_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileDialog_invalidate_c8e54a7b", (void*)godot_icall_EditorFileDialog_invalidate_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystem_get_filesystem_fbf6e50", (void*)godot_icall_EditorFileSystem_get_filesystem_fbf6e50},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystem_is_scanning_68fe5f59", (void*)godot_icall_EditorFileSystem_is_scanning_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystem_get_scanning_progress_4edcd7a9", (void*)godot_icall_EditorFileSystem_get_scanning_progress_4edcd7a9},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystem_scan_c8e54a7b", (void*)godot_icall_EditorFileSystem_scan_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystem_scan_changes_c8e54a7b", (void*)godot_icall_EditorFileSystem_scan_changes_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystem_update_file_3ca14953", (void*)godot_icall_EditorFileSystem_update_file_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystem_get_filesystem_path_733cef0e", (void*)godot_icall_EditorFileSystem_get_filesystem_path_733cef0e},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystem_get_file_type_98465fb", (void*)godot_icall_EditorFileSystem_get_file_type_98465fb},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystem_update_script_classes_c8e54a7b", (void*)godot_icall_EditorFileSystem_update_script_classes_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_get_subdir_count_1f886eb0", (void*)godot_icall_EditorFileSystemDirectory_get_subdir_count_1f886eb0},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_get_subdir_be3439ad", (void*)godot_icall_EditorFileSystemDirectory_get_subdir_be3439ad},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_get_file_count_1f886eb0", (void*)godot_icall_EditorFileSystemDirectory_get_file_count_1f886eb0},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_get_file_44fc4c5a", (void*)godot_icall_EditorFileSystemDirectory_get_file_44fc4c5a},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_get_file_path_44fc4c5a", (void*)godot_icall_EditorFileSystemDirectory_get_file_path_44fc4c5a},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_get_file_type_44fc4c5a", (void*)godot_icall_EditorFileSystemDirectory_get_file_type_44fc4c5a},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_get_file_script_class_name_44fc4c5a", (void*)godot_icall_EditorFileSystemDirectory_get_file_script_class_name_44fc4c5a},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_get_file_script_class_extends_44fc4c5a", (void*)godot_icall_EditorFileSystemDirectory_get_file_script_class_extends_44fc4c5a},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_get_file_import_is_valid_7f690926", (void*)godot_icall_EditorFileSystemDirectory_get_file_import_is_valid_7f690926},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_get_name_97be4a2e", (void*)godot_icall_EditorFileSystemDirectory_get_name_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_get_path_97be4a2e", (void*)godot_icall_EditorFileSystemDirectory_get_path_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_get_parent_fbf6e50", (void*)godot_icall_EditorFileSystemDirectory_get_parent_fbf6e50},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_find_file_index_6d3db7c6", (void*)godot_icall_EditorFileSystemDirectory_find_file_index_6d3db7c6},
	{"Godot.EditorNativeCalls::godot_icall_EditorFileSystemDirectory_find_dir_index_6d3db7c6", (void*)godot_icall_EditorFileSystemDirectory_find_dir_index_6d3db7c6},
	{"Godot.EditorNativeCalls::godot_icall_EditorInspector_refresh_c8e54a7b", (void*)godot_icall_EditorInspector_refresh_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorInspectorPlugin_add_custom_control_3dddc41c", (void*)godot_icall_EditorInspectorPlugin_add_custom_control_3dddc41c},
	{"Godot.EditorNativeCalls::godot_icall_EditorInspectorPlugin_add_property_editor_fd860d4e", (void*)godot_icall_EditorInspectorPlugin_add_property_editor_fd860d4e},
	{"Godot.EditorNativeCalls::godot_icall_EditorInspectorPlugin_add_property_editor_for_multiple_properties_bceb3152", (void*)godot_icall_EditorInspectorPlugin_add_property_editor_for_multiple_properties_bceb3152},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_inspect_object_bf01414e", (void*)godot_icall_EditorInterface_inspect_object_bf01414e},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_get_selection_780b36ac", (void*)godot_icall_EditorInterface_get_selection_780b36ac},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_get_editor_settings_99bdc54d", (void*)godot_icall_EditorInterface_get_editor_settings_99bdc54d},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_get_script_editor_b03cf41b", (void*)godot_icall_EditorInterface_get_script_editor_b03cf41b},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_get_base_control_eb752350", (void*)godot_icall_EditorInterface_get_base_control_eb752350},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_edit_resource_7ce53eb", (void*)godot_icall_EditorInterface_edit_resource_7ce53eb},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_open_scene_from_path_3ca14953", (void*)godot_icall_EditorInterface_open_scene_from_path_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_reload_scene_from_path_3ca14953", (void*)godot_icall_EditorInterface_reload_scene_from_path_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_get_open_scenes_d80382d4", (void*)godot_icall_EditorInterface_get_open_scenes_d80382d4},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_get_edited_scene_root_87a9bfc5", (void*)godot_icall_EditorInterface_get_edited_scene_root_87a9bfc5},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_get_resource_previewer_9f79bd12", (void*)godot_icall_EditorInterface_get_resource_previewer_9f79bd12},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_get_resource_filesystem_85c6acdf", (void*)godot_icall_EditorInterface_get_resource_filesystem_85c6acdf},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_get_editor_viewport_eb752350", (void*)godot_icall_EditorInterface_get_editor_viewport_eb752350},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_make_mesh_previews_57d4c298", (void*)godot_icall_EditorInterface_make_mesh_previews_57d4c298},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_select_file_3ca14953", (void*)godot_icall_EditorInterface_select_file_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_get_selected_path_97be4a2e", (void*)godot_icall_EditorInterface_get_selected_path_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_get_current_path_97be4a2e", (void*)godot_icall_EditorInterface_get_current_path_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_set_plugin_enabled_f253b141", (void*)godot_icall_EditorInterface_set_plugin_enabled_f253b141},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_is_plugin_enabled_bee64043", (void*)godot_icall_EditorInterface_is_plugin_enabled_bee64043},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_get_inspector_771c0899", (void*)godot_icall_EditorInterface_get_inspector_771c0899},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_save_scene_f04570f5", (void*)godot_icall_EditorInterface_save_scene_f04570f5},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_save_scene_as_211c975", (void*)godot_icall_EditorInterface_save_scene_as_211c975},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_set_main_screen_editor_2f29e819", (void*)godot_icall_EditorInterface_set_main_screen_editor_2f29e819},
	{"Godot.EditorNativeCalls::godot_icall_EditorInterface_set_distraction_free_mode_ba24800b", (void*)godot_icall_EditorInterface_set_distraction_free_mode_ba24800b},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_add_control_to_container_8f04cd94", (void*)godot_icall_EditorPlugin_add_control_to_container_8f04cd94},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_add_control_to_bottom_panel_a3580764", (void*)godot_icall_EditorPlugin_add_control_to_bottom_panel_a3580764},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_add_control_to_dock_49de7d02", (void*)godot_icall_EditorPlugin_add_control_to_dock_49de7d02},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_remove_control_from_docks_3dddc41c", (void*)godot_icall_EditorPlugin_remove_control_from_docks_3dddc41c},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_remove_control_from_bottom_panel_3dddc41c", (void*)godot_icall_EditorPlugin_remove_control_from_bottom_panel_3dddc41c},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_remove_control_from_container_8f04cd94", (void*)godot_icall_EditorPlugin_remove_control_from_container_8f04cd94},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_add_tool_menu_item_dbe800bc", (void*)godot_icall_EditorPlugin_add_tool_menu_item_dbe800bc},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_add_tool_submenu_item_ff7cba0a", (void*)godot_icall_EditorPlugin_add_tool_submenu_item_ff7cba0a},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_remove_tool_menu_item_2f29e819", (void*)godot_icall_EditorPlugin_remove_tool_menu_item_2f29e819},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_add_custom_type_46093d7e", (void*)godot_icall_EditorPlugin_add_custom_type_46093d7e},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_remove_custom_type_2f29e819", (void*)godot_icall_EditorPlugin_remove_custom_type_2f29e819},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_add_autoload_singleton_71d57a09", (void*)godot_icall_EditorPlugin_add_autoload_singleton_71d57a09},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_remove_autoload_singleton_2f29e819", (void*)godot_icall_EditorPlugin_remove_autoload_singleton_2f29e819},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_update_overlays_1f886eb0", (void*)godot_icall_EditorPlugin_update_overlays_1f886eb0},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_make_bottom_panel_item_visible_3dddc41c", (void*)godot_icall_EditorPlugin_make_bottom_panel_item_visible_3dddc41c},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_hide_bottom_panel_c8e54a7b", (void*)godot_icall_EditorPlugin_hide_bottom_panel_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_get_undo_redo_d103ffd7", (void*)godot_icall_EditorPlugin_get_undo_redo_d103ffd7},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_queue_save_layout_c8e54a7b", (void*)godot_icall_EditorPlugin_queue_save_layout_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_add_import_plugin_cf7b8d08", (void*)godot_icall_EditorPlugin_add_import_plugin_cf7b8d08},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_remove_import_plugin_cf7b8d08", (void*)godot_icall_EditorPlugin_remove_import_plugin_cf7b8d08},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_add_scene_import_plugin_a94e748", (void*)godot_icall_EditorPlugin_add_scene_import_plugin_a94e748},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_remove_scene_import_plugin_a94e748", (void*)godot_icall_EditorPlugin_remove_scene_import_plugin_a94e748},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_add_export_plugin_371a38b3", (void*)godot_icall_EditorPlugin_add_export_plugin_371a38b3},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_remove_export_plugin_371a38b3", (void*)godot_icall_EditorPlugin_remove_export_plugin_371a38b3},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_add_spatial_gizmo_plugin_7a9f2d6b", (void*)godot_icall_EditorPlugin_add_spatial_gizmo_plugin_7a9f2d6b},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_remove_spatial_gizmo_plugin_7a9f2d6b", (void*)godot_icall_EditorPlugin_remove_spatial_gizmo_plugin_7a9f2d6b},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_add_inspector_plugin_8932c0fc", (void*)godot_icall_EditorPlugin_add_inspector_plugin_8932c0fc},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_remove_inspector_plugin_8932c0fc", (void*)godot_icall_EditorPlugin_remove_inspector_plugin_8932c0fc},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_set_input_event_forwarding_always_enabled_c8e54a7b", (void*)godot_icall_EditorPlugin_set_input_event_forwarding_always_enabled_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_set_force_draw_over_forwarding_enabled_c8e54a7b", (void*)godot_icall_EditorPlugin_set_force_draw_over_forwarding_enabled_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_get_editor_interface_2949c0d3", (void*)godot_icall_EditorPlugin_get_editor_interface_2949c0d3},
	{"Godot.EditorNativeCalls::godot_icall_EditorPlugin_get_script_create_dialog_bb0f1784", (void*)godot_icall_EditorPlugin_get_script_create_dialog_bb0f1784},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_set_label_3ca14953", (void*)godot_icall_EditorProperty_set_label_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_get_label_97be4a2e", (void*)godot_icall_EditorProperty_get_label_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_set_read_only_ba24800b", (void*)godot_icall_EditorProperty_set_read_only_ba24800b},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_is_read_only_68fe5f59", (void*)godot_icall_EditorProperty_is_read_only_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_set_checkable_ba24800b", (void*)godot_icall_EditorProperty_set_checkable_ba24800b},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_is_checkable_68fe5f59", (void*)godot_icall_EditorProperty_is_checkable_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_set_checked_ba24800b", (void*)godot_icall_EditorProperty_set_checked_ba24800b},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_is_checked_68fe5f59", (void*)godot_icall_EditorProperty_is_checked_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_set_draw_red_ba24800b", (void*)godot_icall_EditorProperty_set_draw_red_ba24800b},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_is_draw_red_68fe5f59", (void*)godot_icall_EditorProperty_is_draw_red_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_set_keying_ba24800b", (void*)godot_icall_EditorProperty_set_keying_ba24800b},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_is_keying_68fe5f59", (void*)godot_icall_EditorProperty_is_keying_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_get_edited_property_97be4a2e", (void*)godot_icall_EditorProperty_get_edited_property_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_get_edited_object_5bd95814", (void*)godot_icall_EditorProperty_get_edited_object_5bd95814},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_get_tooltip_text_97be4a2e", (void*)godot_icall_EditorProperty_get_tooltip_text_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_add_focusable_3dddc41c", (void*)godot_icall_EditorProperty_add_focusable_3dddc41c},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_set_bottom_editor_3dddc41c", (void*)godot_icall_EditorProperty_set_bottom_editor_3dddc41c},
	{"Godot.EditorNativeCalls::godot_icall_EditorProperty_emit_changed_6b07a116", (void*)godot_icall_EditorProperty_emit_changed_6b07a116},
	{"Godot.EditorNativeCalls::godot_icall_EditorResourcePreview_queue_resource_preview_f8c7c71b", (void*)godot_icall_EditorResourcePreview_queue_resource_preview_f8c7c71b},
	{"Godot.EditorNativeCalls::godot_icall_EditorResourcePreview_queue_edited_resource_preview_40989ab6", (void*)godot_icall_EditorResourcePreview_queue_edited_resource_preview_40989ab6},
	{"Godot.EditorNativeCalls::godot_icall_EditorResourcePreview_add_preview_generator_49d15f9b", (void*)godot_icall_EditorResourcePreview_add_preview_generator_49d15f9b},
	{"Godot.EditorNativeCalls::godot_icall_EditorResourcePreview_remove_preview_generator_49d15f9b", (void*)godot_icall_EditorResourcePreview_remove_preview_generator_49d15f9b},
	{"Godot.EditorNativeCalls::godot_icall_EditorResourcePreview_check_for_invalidation_3ca14953", (void*)godot_icall_EditorResourcePreview_check_for_invalidation_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorSceneImporter_import_scene_from_other_importer_465afea2", (void*)godot_icall_EditorSceneImporter_import_scene_from_other_importer_465afea2},
	{"Godot.EditorNativeCalls::godot_icall_EditorSceneImporter_import_animation_from_other_importer_e5807398", (void*)godot_icall_EditorSceneImporter_import_animation_from_other_importer_e5807398},
	{"Godot.EditorNativeCalls::godot_icall_EditorScenePostImport_get_source_folder_97be4a2e", (void*)godot_icall_EditorScenePostImport_get_source_folder_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorScenePostImport_get_source_file_97be4a2e", (void*)godot_icall_EditorScenePostImport_get_source_file_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorScript_add_root_node_598860a7", (void*)godot_icall_EditorScript_add_root_node_598860a7},
	{"Godot.EditorNativeCalls::godot_icall_EditorScript_get_scene_87a9bfc5", (void*)godot_icall_EditorScript_get_scene_87a9bfc5},
	{"Godot.EditorNativeCalls::godot_icall_EditorScript_get_editor_interface_2949c0d3", (void*)godot_icall_EditorScript_get_editor_interface_2949c0d3},
	{"Godot.EditorNativeCalls::godot_icall_EditorSelection_clear_c8e54a7b", (void*)godot_icall_EditorSelection_clear_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorSelection_add_node_598860a7", (void*)godot_icall_EditorSelection_add_node_598860a7},
	{"Godot.EditorNativeCalls::godot_icall_EditorSelection_remove_node_598860a7", (void*)godot_icall_EditorSelection_remove_node_598860a7},
	{"Godot.EditorNativeCalls::godot_icall_EditorSelection_get_selected_nodes_d80382d4", (void*)godot_icall_EditorSelection_get_selected_nodes_d80382d4},
	{"Godot.EditorNativeCalls::godot_icall_EditorSelection_get_transformable_selected_nodes_d80382d4", (void*)godot_icall_EditorSelection_get_transformable_selected_nodes_d80382d4},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_has_setting_bee64043", (void*)godot_icall_EditorSettings_has_setting_bee64043},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_set_setting_3a208116", (void*)godot_icall_EditorSettings_set_setting_3a208116},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_get_setting_6732bfd8", (void*)godot_icall_EditorSettings_get_setting_6732bfd8},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_erase_2f29e819", (void*)godot_icall_EditorSettings_erase_2f29e819},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_set_initial_value_a7febfc1", (void*)godot_icall_EditorSettings_set_initial_value_a7febfc1},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_property_can_revert_bee64043", (void*)godot_icall_EditorSettings_property_can_revert_bee64043},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_property_get_revert_6732bfd8", (void*)godot_icall_EditorSettings_property_get_revert_6732bfd8},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_add_property_info_e472adcf", (void*)godot_icall_EditorSettings_add_property_info_e472adcf},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_get_settings_dir_97be4a2e", (void*)godot_icall_EditorSettings_get_settings_dir_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_get_project_settings_dir_97be4a2e", (void*)godot_icall_EditorSettings_get_project_settings_dir_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_set_project_metadata_5e75b9e1", (void*)godot_icall_EditorSettings_set_project_metadata_5e75b9e1},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_get_project_metadata_373d864b", (void*)godot_icall_EditorSettings_get_project_metadata_373d864b},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_set_favorites_a4cdc50a", (void*)godot_icall_EditorSettings_set_favorites_a4cdc50a},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_get_favorites_4cc8f2a7", (void*)godot_icall_EditorSettings_get_favorites_4cc8f2a7},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_set_recent_dirs_a4cdc50a", (void*)godot_icall_EditorSettings_set_recent_dirs_a4cdc50a},
	{"Godot.EditorNativeCalls::godot_icall_EditorSettings_get_recent_dirs_4cc8f2a7", (void*)godot_icall_EditorSettings_get_recent_dirs_4cc8f2a7},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmo_add_lines_23c392c", (void*)godot_icall_EditorSpatialGizmo_add_lines_23c392c},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmo_add_mesh_32eec7d8", (void*)godot_icall_EditorSpatialGizmo_add_mesh_32eec7d8},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmo_add_collision_segments_b8a866b9", (void*)godot_icall_EditorSpatialGizmo_add_collision_segments_b8a866b9},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmo_add_collision_triangles_3616c62", (void*)godot_icall_EditorSpatialGizmo_add_collision_triangles_3616c62},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmo_add_unscaled_billboard_514f3e17", (void*)godot_icall_EditorSpatialGizmo_add_unscaled_billboard_514f3e17},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmo_add_handles_daf2f38f", (void*)godot_icall_EditorSpatialGizmo_add_handles_daf2f38f},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmo_set_spatial_node_598860a7", (void*)godot_icall_EditorSpatialGizmo_set_spatial_node_598860a7},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmo_get_spatial_node_5ca237df", (void*)godot_icall_EditorSpatialGizmo_get_spatial_node_5ca237df},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmo_get_plugin_a8b6fbf9", (void*)godot_icall_EditorSpatialGizmo_get_plugin_a8b6fbf9},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmo_clear_c8e54a7b", (void*)godot_icall_EditorSpatialGizmo_clear_c8e54a7b},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmo_set_hidden_ba24800b", (void*)godot_icall_EditorSpatialGizmo_set_hidden_ba24800b},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmoPlugin_create_material_6175c29e", (void*)godot_icall_EditorSpatialGizmoPlugin_create_material_6175c29e},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmoPlugin_create_icon_material_79329c02", (void*)godot_icall_EditorSpatialGizmoPlugin_create_icon_material_79329c02},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmoPlugin_create_handle_material_13aa175f", (void*)godot_icall_EditorSpatialGizmoPlugin_create_handle_material_13aa175f},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmoPlugin_add_material_1ba33d2e", (void*)godot_icall_EditorSpatialGizmoPlugin_add_material_1ba33d2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpatialGizmoPlugin_get_material_2887cae8", (void*)godot_icall_EditorSpatialGizmoPlugin_get_material_2887cae8},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpinSlider_set_label_3ca14953", (void*)godot_icall_EditorSpinSlider_set_label_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpinSlider_get_label_97be4a2e", (void*)godot_icall_EditorSpinSlider_get_label_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpinSlider_set_read_only_ba24800b", (void*)godot_icall_EditorSpinSlider_set_read_only_ba24800b},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpinSlider_is_read_only_68fe5f59", (void*)godot_icall_EditorSpinSlider_is_read_only_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpinSlider_set_flat_ba24800b", (void*)godot_icall_EditorSpinSlider_set_flat_ba24800b},
	{"Godot.EditorNativeCalls::godot_icall_EditorSpinSlider_is_flat_68fe5f59", (void*)godot_icall_EditorSpinSlider_is_flat_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorVCSInterface_is_addon_ready_68fe5f59", (void*)godot_icall_EditorVCSInterface_is_addon_ready_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorVCSInterface_initialize_8a7120b9", (void*)godot_icall_EditorVCSInterface_initialize_8a7120b9},
	{"Godot.EditorNativeCalls::godot_icall_EditorVCSInterface_is_vcs_initialized_68fe5f59", (void*)godot_icall_EditorVCSInterface_is_vcs_initialized_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorVCSInterface_get_modified_files_data_22d47c9d", (void*)godot_icall_EditorVCSInterface_get_modified_files_data_22d47c9d},
	{"Godot.EditorNativeCalls::godot_icall_EditorVCSInterface_stage_file_3ca14953", (void*)godot_icall_EditorVCSInterface_stage_file_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorVCSInterface_unstage_file_3ca14953", (void*)godot_icall_EditorVCSInterface_unstage_file_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorVCSInterface_commit_3ca14953", (void*)godot_icall_EditorVCSInterface_commit_3ca14953},
	{"Godot.EditorNativeCalls::godot_icall_EditorVCSInterface_get_file_diff_679a25ab", (void*)godot_icall_EditorVCSInterface_get_file_diff_679a25ab},
	{"Godot.EditorNativeCalls::godot_icall_EditorVCSInterface_shut_down_68fe5f59", (void*)godot_icall_EditorVCSInterface_shut_down_68fe5f59},
	{"Godot.EditorNativeCalls::godot_icall_EditorVCSInterface_get_project_name_97be4a2e", (void*)godot_icall_EditorVCSInterface_get_project_name_97be4a2e},
	{"Godot.EditorNativeCalls::godot_icall_EditorVCSInterface_get_vcs_name_97be4a2e", (void*)godot_icall_EditorVCSInterface_get_vcs_name_97be4a2e},
#endif
	{"Godot.NativeCalls::godot_icall_EncodedObjectAsID_set_object_id_9d9e6424", (void*)godot_icall_EncodedObjectAsID_set_object_id_9d9e6424},
	{"Godot.NativeCalls::godot_icall_EncodedObjectAsID_get_object_id_4bb7c348", (void*)godot_icall_EncodedObjectAsID_get_object_id_4bb7c348},
	{"Godot.NativeCalls::godot_icall_Environment_set_background_5dc487f6", (void*)godot_icall_Environment_set_background_5dc487f6},
	{"Godot.NativeCalls::godot_icall_Environment_set_sky_e50160c0", (void*)godot_icall_Environment_set_sky_e50160c0},
	{"Godot.NativeCalls::godot_icall_Environment_set_sky_custom_fov_904508bb", (void*)godot_icall_Environment_set_sky_custom_fov_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_set_sky_orientation_99ef666f", (void*)godot_icall_Environment_set_sky_orientation_99ef666f},
	{"Godot.NativeCalls::godot_icall_Environment_set_sky_rotation_6df7471d", (void*)godot_icall_Environment_set_sky_rotation_6df7471d},
	{"Godot.NativeCalls::godot_icall_Environment_set_sky_rotation_degrees_6df7471d", (void*)godot_icall_Environment_set_sky_rotation_degrees_6df7471d},
	{"Godot.NativeCalls::godot_icall_Environment_set_bg_color_f2e3b5aa", (void*)godot_icall_Environment_set_bg_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_Environment_set_bg_energy_904508bb", (void*)godot_icall_Environment_set_bg_energy_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_set_canvas_max_layer_e1ae93bc", (void*)godot_icall_Environment_set_canvas_max_layer_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Environment_set_ambient_light_color_f2e3b5aa", (void*)godot_icall_Environment_set_ambient_light_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_Environment_set_ambient_light_energy_904508bb", (void*)godot_icall_Environment_set_ambient_light_energy_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_set_ambient_light_sky_contribution_904508bb", (void*)godot_icall_Environment_set_ambient_light_sky_contribution_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_set_camera_feed_id_e1ae93bc", (void*)godot_icall_Environment_set_camera_feed_id_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Environment_get_background_8b5e6276", (void*)godot_icall_Environment_get_background_8b5e6276},
	{"Godot.NativeCalls::godot_icall_Environment_get_sky_2420bfa4", (void*)godot_icall_Environment_get_sky_2420bfa4},
	{"Godot.NativeCalls::godot_icall_Environment_get_sky_custom_fov_4edcd7a9", (void*)godot_icall_Environment_get_sky_custom_fov_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_get_sky_orientation_4746c0fd", (void*)godot_icall_Environment_get_sky_orientation_4746c0fd},
	{"Godot.NativeCalls::godot_icall_Environment_get_sky_rotation_9b4ea24f", (void*)godot_icall_Environment_get_sky_rotation_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Environment_get_sky_rotation_degrees_9b4ea24f", (void*)godot_icall_Environment_get_sky_rotation_degrees_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Environment_get_bg_color_304394ba", (void*)godot_icall_Environment_get_bg_color_304394ba},
	{"Godot.NativeCalls::godot_icall_Environment_get_bg_energy_4edcd7a9", (void*)godot_icall_Environment_get_bg_energy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_get_canvas_max_layer_1f886eb0", (void*)godot_icall_Environment_get_canvas_max_layer_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Environment_get_ambient_light_color_304394ba", (void*)godot_icall_Environment_get_ambient_light_color_304394ba},
	{"Godot.NativeCalls::godot_icall_Environment_get_ambient_light_energy_4edcd7a9", (void*)godot_icall_Environment_get_ambient_light_energy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_get_ambient_light_sky_contribution_4edcd7a9", (void*)godot_icall_Environment_get_ambient_light_sky_contribution_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_get_camera_feed_id_1f886eb0", (void*)godot_icall_Environment_get_camera_feed_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_enabled_ba24800b", (void*)godot_icall_Environment_set_fog_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_is_fog_enabled_68fe5f59", (void*)godot_icall_Environment_is_fog_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_color_f2e3b5aa", (void*)godot_icall_Environment_set_fog_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_Environment_get_fog_color_304394ba", (void*)godot_icall_Environment_get_fog_color_304394ba},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_sun_color_f2e3b5aa", (void*)godot_icall_Environment_set_fog_sun_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_Environment_get_fog_sun_color_304394ba", (void*)godot_icall_Environment_get_fog_sun_color_304394ba},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_sun_amount_904508bb", (void*)godot_icall_Environment_set_fog_sun_amount_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_fog_sun_amount_4edcd7a9", (void*)godot_icall_Environment_get_fog_sun_amount_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_depth_enabled_ba24800b", (void*)godot_icall_Environment_set_fog_depth_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_is_fog_depth_enabled_68fe5f59", (void*)godot_icall_Environment_is_fog_depth_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_depth_begin_904508bb", (void*)godot_icall_Environment_set_fog_depth_begin_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_fog_depth_begin_4edcd7a9", (void*)godot_icall_Environment_get_fog_depth_begin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_depth_end_904508bb", (void*)godot_icall_Environment_set_fog_depth_end_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_fog_depth_end_4edcd7a9", (void*)godot_icall_Environment_get_fog_depth_end_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_depth_curve_904508bb", (void*)godot_icall_Environment_set_fog_depth_curve_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_fog_depth_curve_4edcd7a9", (void*)godot_icall_Environment_get_fog_depth_curve_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_transmit_enabled_ba24800b", (void*)godot_icall_Environment_set_fog_transmit_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_is_fog_transmit_enabled_68fe5f59", (void*)godot_icall_Environment_is_fog_transmit_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_transmit_curve_904508bb", (void*)godot_icall_Environment_set_fog_transmit_curve_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_fog_transmit_curve_4edcd7a9", (void*)godot_icall_Environment_get_fog_transmit_curve_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_height_enabled_ba24800b", (void*)godot_icall_Environment_set_fog_height_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_is_fog_height_enabled_68fe5f59", (void*)godot_icall_Environment_is_fog_height_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_height_min_904508bb", (void*)godot_icall_Environment_set_fog_height_min_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_fog_height_min_4edcd7a9", (void*)godot_icall_Environment_get_fog_height_min_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_height_max_904508bb", (void*)godot_icall_Environment_set_fog_height_max_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_fog_height_max_4edcd7a9", (void*)godot_icall_Environment_get_fog_height_max_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_fog_height_curve_904508bb", (void*)godot_icall_Environment_set_fog_height_curve_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_fog_height_curve_4edcd7a9", (void*)godot_icall_Environment_get_fog_height_curve_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_tonemapper_8df61ecb", (void*)godot_icall_Environment_set_tonemapper_8df61ecb},
	{"Godot.NativeCalls::godot_icall_Environment_get_tonemapper_3b4fe999", (void*)godot_icall_Environment_get_tonemapper_3b4fe999},
	{"Godot.NativeCalls::godot_icall_Environment_set_tonemap_exposure_904508bb", (void*)godot_icall_Environment_set_tonemap_exposure_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_tonemap_exposure_4edcd7a9", (void*)godot_icall_Environment_get_tonemap_exposure_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_tonemap_white_904508bb", (void*)godot_icall_Environment_set_tonemap_white_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_tonemap_white_4edcd7a9", (void*)godot_icall_Environment_get_tonemap_white_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_tonemap_auto_exposure_ba24800b", (void*)godot_icall_Environment_set_tonemap_auto_exposure_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_get_tonemap_auto_exposure_68fe5f59", (void*)godot_icall_Environment_get_tonemap_auto_exposure_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_tonemap_auto_exposure_max_904508bb", (void*)godot_icall_Environment_set_tonemap_auto_exposure_max_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_tonemap_auto_exposure_max_4edcd7a9", (void*)godot_icall_Environment_get_tonemap_auto_exposure_max_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_tonemap_auto_exposure_min_904508bb", (void*)godot_icall_Environment_set_tonemap_auto_exposure_min_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_tonemap_auto_exposure_min_4edcd7a9", (void*)godot_icall_Environment_get_tonemap_auto_exposure_min_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_tonemap_auto_exposure_speed_904508bb", (void*)godot_icall_Environment_set_tonemap_auto_exposure_speed_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_tonemap_auto_exposure_speed_4edcd7a9", (void*)godot_icall_Environment_get_tonemap_auto_exposure_speed_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_tonemap_auto_exposure_grey_904508bb", (void*)godot_icall_Environment_set_tonemap_auto_exposure_grey_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_tonemap_auto_exposure_grey_4edcd7a9", (void*)godot_icall_Environment_get_tonemap_auto_exposure_grey_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssr_enabled_ba24800b", (void*)godot_icall_Environment_set_ssr_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_is_ssr_enabled_68fe5f59", (void*)godot_icall_Environment_is_ssr_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssr_max_steps_e1ae93bc", (void*)godot_icall_Environment_set_ssr_max_steps_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssr_max_steps_1f886eb0", (void*)godot_icall_Environment_get_ssr_max_steps_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssr_fade_in_904508bb", (void*)godot_icall_Environment_set_ssr_fade_in_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssr_fade_in_4edcd7a9", (void*)godot_icall_Environment_get_ssr_fade_in_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssr_fade_out_904508bb", (void*)godot_icall_Environment_set_ssr_fade_out_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssr_fade_out_4edcd7a9", (void*)godot_icall_Environment_get_ssr_fade_out_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssr_depth_tolerance_904508bb", (void*)godot_icall_Environment_set_ssr_depth_tolerance_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssr_depth_tolerance_4edcd7a9", (void*)godot_icall_Environment_get_ssr_depth_tolerance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssr_rough_ba24800b", (void*)godot_icall_Environment_set_ssr_rough_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_is_ssr_rough_68fe5f59", (void*)godot_icall_Environment_is_ssr_rough_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssao_enabled_ba24800b", (void*)godot_icall_Environment_set_ssao_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_is_ssao_enabled_68fe5f59", (void*)godot_icall_Environment_is_ssao_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssao_radius_904508bb", (void*)godot_icall_Environment_set_ssao_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssao_radius_4edcd7a9", (void*)godot_icall_Environment_get_ssao_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssao_intensity_904508bb", (void*)godot_icall_Environment_set_ssao_intensity_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssao_intensity_4edcd7a9", (void*)godot_icall_Environment_get_ssao_intensity_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssao_radius2_904508bb", (void*)godot_icall_Environment_set_ssao_radius2_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssao_radius2_4edcd7a9", (void*)godot_icall_Environment_get_ssao_radius2_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssao_intensity2_904508bb", (void*)godot_icall_Environment_set_ssao_intensity2_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssao_intensity2_4edcd7a9", (void*)godot_icall_Environment_get_ssao_intensity2_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssao_bias_904508bb", (void*)godot_icall_Environment_set_ssao_bias_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssao_bias_4edcd7a9", (void*)godot_icall_Environment_get_ssao_bias_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssao_direct_light_affect_904508bb", (void*)godot_icall_Environment_set_ssao_direct_light_affect_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssao_direct_light_affect_4edcd7a9", (void*)godot_icall_Environment_get_ssao_direct_light_affect_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssao_ao_channel_affect_904508bb", (void*)godot_icall_Environment_set_ssao_ao_channel_affect_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssao_ao_channel_affect_4edcd7a9", (void*)godot_icall_Environment_get_ssao_ao_channel_affect_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssao_color_f2e3b5aa", (void*)godot_icall_Environment_set_ssao_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssao_color_304394ba", (void*)godot_icall_Environment_get_ssao_color_304394ba},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssao_blur_43b57e0d", (void*)godot_icall_Environment_set_ssao_blur_43b57e0d},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssao_blur_818cc95f", (void*)godot_icall_Environment_get_ssao_blur_818cc95f},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssao_quality_44bf4675", (void*)godot_icall_Environment_set_ssao_quality_44bf4675},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssao_quality_8296a0f7", (void*)godot_icall_Environment_get_ssao_quality_8296a0f7},
	{"Godot.NativeCalls::godot_icall_Environment_set_ssao_edge_sharpness_904508bb", (void*)godot_icall_Environment_set_ssao_edge_sharpness_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_ssao_edge_sharpness_4edcd7a9", (void*)godot_icall_Environment_get_ssao_edge_sharpness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_dof_blur_far_enabled_ba24800b", (void*)godot_icall_Environment_set_dof_blur_far_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_is_dof_blur_far_enabled_68fe5f59", (void*)godot_icall_Environment_is_dof_blur_far_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_dof_blur_far_distance_904508bb", (void*)godot_icall_Environment_set_dof_blur_far_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_dof_blur_far_distance_4edcd7a9", (void*)godot_icall_Environment_get_dof_blur_far_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_dof_blur_far_transition_904508bb", (void*)godot_icall_Environment_set_dof_blur_far_transition_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_dof_blur_far_transition_4edcd7a9", (void*)godot_icall_Environment_get_dof_blur_far_transition_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_dof_blur_far_amount_904508bb", (void*)godot_icall_Environment_set_dof_blur_far_amount_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_dof_blur_far_amount_4edcd7a9", (void*)godot_icall_Environment_get_dof_blur_far_amount_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_dof_blur_far_quality_287b91fb", (void*)godot_icall_Environment_set_dof_blur_far_quality_287b91fb},
	{"Godot.NativeCalls::godot_icall_Environment_get_dof_blur_far_quality_d6db7069", (void*)godot_icall_Environment_get_dof_blur_far_quality_d6db7069},
	{"Godot.NativeCalls::godot_icall_Environment_set_dof_blur_near_enabled_ba24800b", (void*)godot_icall_Environment_set_dof_blur_near_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_is_dof_blur_near_enabled_68fe5f59", (void*)godot_icall_Environment_is_dof_blur_near_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_dof_blur_near_distance_904508bb", (void*)godot_icall_Environment_set_dof_blur_near_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_dof_blur_near_distance_4edcd7a9", (void*)godot_icall_Environment_get_dof_blur_near_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_dof_blur_near_transition_904508bb", (void*)godot_icall_Environment_set_dof_blur_near_transition_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_dof_blur_near_transition_4edcd7a9", (void*)godot_icall_Environment_get_dof_blur_near_transition_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_dof_blur_near_amount_904508bb", (void*)godot_icall_Environment_set_dof_blur_near_amount_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_dof_blur_near_amount_4edcd7a9", (void*)godot_icall_Environment_get_dof_blur_near_amount_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_dof_blur_near_quality_287b91fb", (void*)godot_icall_Environment_set_dof_blur_near_quality_287b91fb},
	{"Godot.NativeCalls::godot_icall_Environment_get_dof_blur_near_quality_d6db7069", (void*)godot_icall_Environment_get_dof_blur_near_quality_d6db7069},
	{"Godot.NativeCalls::godot_icall_Environment_set_glow_enabled_ba24800b", (void*)godot_icall_Environment_set_glow_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_is_glow_enabled_68fe5f59", (void*)godot_icall_Environment_is_glow_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_glow_level_4ae8febd", (void*)godot_icall_Environment_set_glow_level_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Environment_is_glow_level_enabled_7f690926", (void*)godot_icall_Environment_is_glow_level_enabled_7f690926},
	{"Godot.NativeCalls::godot_icall_Environment_set_glow_intensity_904508bb", (void*)godot_icall_Environment_set_glow_intensity_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_glow_intensity_4edcd7a9", (void*)godot_icall_Environment_get_glow_intensity_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_glow_strength_904508bb", (void*)godot_icall_Environment_set_glow_strength_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_glow_strength_4edcd7a9", (void*)godot_icall_Environment_get_glow_strength_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_glow_bloom_904508bb", (void*)godot_icall_Environment_set_glow_bloom_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_glow_bloom_4edcd7a9", (void*)godot_icall_Environment_get_glow_bloom_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_glow_blend_mode_69befe6d", (void*)godot_icall_Environment_set_glow_blend_mode_69befe6d},
	{"Godot.NativeCalls::godot_icall_Environment_get_glow_blend_mode_7ac6bd98", (void*)godot_icall_Environment_get_glow_blend_mode_7ac6bd98},
	{"Godot.NativeCalls::godot_icall_Environment_set_glow_hdr_bleed_threshold_904508bb", (void*)godot_icall_Environment_set_glow_hdr_bleed_threshold_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_glow_hdr_bleed_threshold_4edcd7a9", (void*)godot_icall_Environment_get_glow_hdr_bleed_threshold_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_glow_hdr_luminance_cap_904508bb", (void*)godot_icall_Environment_set_glow_hdr_luminance_cap_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_glow_hdr_luminance_cap_4edcd7a9", (void*)godot_icall_Environment_get_glow_hdr_luminance_cap_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_glow_hdr_bleed_scale_904508bb", (void*)godot_icall_Environment_set_glow_hdr_bleed_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_glow_hdr_bleed_scale_4edcd7a9", (void*)godot_icall_Environment_get_glow_hdr_bleed_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_glow_bicubic_upscale_ba24800b", (void*)godot_icall_Environment_set_glow_bicubic_upscale_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_is_glow_bicubic_upscale_enabled_68fe5f59", (void*)godot_icall_Environment_is_glow_bicubic_upscale_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_adjustment_enable_ba24800b", (void*)godot_icall_Environment_set_adjustment_enable_ba24800b},
	{"Godot.NativeCalls::godot_icall_Environment_is_adjustment_enabled_68fe5f59", (void*)godot_icall_Environment_is_adjustment_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Environment_set_adjustment_brightness_904508bb", (void*)godot_icall_Environment_set_adjustment_brightness_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_adjustment_brightness_4edcd7a9", (void*)godot_icall_Environment_get_adjustment_brightness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_adjustment_contrast_904508bb", (void*)godot_icall_Environment_set_adjustment_contrast_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_adjustment_contrast_4edcd7a9", (void*)godot_icall_Environment_get_adjustment_contrast_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_adjustment_saturation_904508bb", (void*)godot_icall_Environment_set_adjustment_saturation_904508bb},
	{"Godot.NativeCalls::godot_icall_Environment_get_adjustment_saturation_4edcd7a9", (void*)godot_icall_Environment_get_adjustment_saturation_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Environment_set_adjustment_color_correction_7eecd31a", (void*)godot_icall_Environment_set_adjustment_color_correction_7eecd31a},
	{"Godot.NativeCalls::godot_icall_Environment_get_adjustment_color_correction_ac462e4a", (void*)godot_icall_Environment_get_adjustment_color_correction_ac462e4a},
	{"Godot.NativeCalls::godot_icall_Expression_parse_840b1acd", (void*)godot_icall_Expression_parse_840b1acd},
	{"Godot.NativeCalls::godot_icall_Expression_execute_4b704ee5", (void*)godot_icall_Expression_execute_4b704ee5},
	{"Godot.NativeCalls::godot_icall_Expression_has_execute_failed_68fe5f59", (void*)godot_icall_Expression_has_execute_failed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Expression_get_error_text_97be4a2e", (void*)godot_icall_Expression_get_error_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall_FileDialog_clear_filters_c8e54a7b", (void*)godot_icall_FileDialog_clear_filters_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_FileDialog_add_filter_3ca14953", (void*)godot_icall_FileDialog_add_filter_3ca14953},
	{"Godot.NativeCalls::godot_icall_FileDialog_set_filters_a4cdc50a", (void*)godot_icall_FileDialog_set_filters_a4cdc50a},
	{"Godot.NativeCalls::godot_icall_FileDialog_get_filters_4cc8f2a7", (void*)godot_icall_FileDialog_get_filters_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_FileDialog_get_current_dir_97be4a2e", (void*)godot_icall_FileDialog_get_current_dir_97be4a2e},
	{"Godot.NativeCalls::godot_icall_FileDialog_get_current_file_97be4a2e", (void*)godot_icall_FileDialog_get_current_file_97be4a2e},
	{"Godot.NativeCalls::godot_icall_FileDialog_get_current_path_97be4a2e", (void*)godot_icall_FileDialog_get_current_path_97be4a2e},
	{"Godot.NativeCalls::godot_icall_FileDialog_set_current_dir_3ca14953", (void*)godot_icall_FileDialog_set_current_dir_3ca14953},
	{"Godot.NativeCalls::godot_icall_FileDialog_set_current_file_3ca14953", (void*)godot_icall_FileDialog_set_current_file_3ca14953},
	{"Godot.NativeCalls::godot_icall_FileDialog_set_current_path_3ca14953", (void*)godot_icall_FileDialog_set_current_path_3ca14953},
	{"Godot.NativeCalls::godot_icall_FileDialog_set_mode_overrides_title_ba24800b", (void*)godot_icall_FileDialog_set_mode_overrides_title_ba24800b},
	{"Godot.NativeCalls::godot_icall_FileDialog_is_mode_overriding_title_68fe5f59", (void*)godot_icall_FileDialog_is_mode_overriding_title_68fe5f59},
	{"Godot.NativeCalls::godot_icall_FileDialog_set_mode_f90d15da", (void*)godot_icall_FileDialog_set_mode_f90d15da},
	{"Godot.NativeCalls::godot_icall_FileDialog_get_mode_86c49715", (void*)godot_icall_FileDialog_get_mode_86c49715},
	{"Godot.NativeCalls::godot_icall_FileDialog_get_vbox_eb5679a1", (void*)godot_icall_FileDialog_get_vbox_eb5679a1},
	{"Godot.NativeCalls::godot_icall_FileDialog_get_line_edit_3297ede3", (void*)godot_icall_FileDialog_get_line_edit_3297ede3},
	{"Godot.NativeCalls::godot_icall_FileDialog_set_access_fcfab4d7", (void*)godot_icall_FileDialog_set_access_fcfab4d7},
	{"Godot.NativeCalls::godot_icall_FileDialog_get_access_c52e5272", (void*)godot_icall_FileDialog_get_access_c52e5272},
	{"Godot.NativeCalls::godot_icall_FileDialog_set_show_hidden_files_ba24800b", (void*)godot_icall_FileDialog_set_show_hidden_files_ba24800b},
	{"Godot.NativeCalls::godot_icall_FileDialog_is_showing_hidden_files_68fe5f59", (void*)godot_icall_FileDialog_is_showing_hidden_files_68fe5f59},
	{"Godot.NativeCalls::godot_icall_FileDialog_deselect_items_c8e54a7b", (void*)godot_icall_FileDialog_deselect_items_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_FileDialog_invalidate_c8e54a7b", (void*)godot_icall_FileDialog_invalidate_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Font_draw_67a9f450", (void*)godot_icall_Font_draw_67a9f450},
	{"Godot.NativeCalls::godot_icall_Font_get_ascent_4edcd7a9", (void*)godot_icall_Font_get_ascent_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Font_get_descent_4edcd7a9", (void*)godot_icall_Font_get_descent_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Font_get_height_4edcd7a9", (void*)godot_icall_Font_get_height_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Font_is_distance_field_hint_68fe5f59", (void*)godot_icall_Font_is_distance_field_hint_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Font_get_string_size_187aef93", (void*)godot_icall_Font_get_string_size_187aef93},
	{"Godot.NativeCalls::godot_icall_Font_get_wordwrap_string_size_9941d95", (void*)godot_icall_Font_get_wordwrap_string_size_9941d95},
	{"Godot.NativeCalls::godot_icall_Font_has_outline_68fe5f59", (void*)godot_icall_Font_has_outline_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Font_draw_char_24a8008b", (void*)godot_icall_Font_draw_char_24a8008b},
	{"Godot.NativeCalls::godot_icall_Font_update_changes_c8e54a7b", (void*)godot_icall_Font_update_changes_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_FuncRef_call_func_e5975f9d", (void*)godot_icall_FuncRef_call_func_e5975f9d},
	{"Godot.NativeCalls::godot_icall_FuncRef_call_funcv_61377341", (void*)godot_icall_FuncRef_call_funcv_61377341},
	{"Godot.NativeCalls::godot_icall_FuncRef_set_instance_ad798950", (void*)godot_icall_FuncRef_set_instance_ad798950},
	{"Godot.NativeCalls::godot_icall_FuncRef_set_function_2f29e819", (void*)godot_icall_FuncRef_set_function_2f29e819},
	{"Godot.NativeCalls::godot_icall_FuncRef_is_valid_68fe5f59", (void*)godot_icall_FuncRef_is_valid_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GDScript_new_e5975f9d", (void*)godot_icall_GDScript_new_e5975f9d},
	{"Godot.NativeCalls::godot_icall_GDScript_get_as_byte_code_8edaba4", (void*)godot_icall_GDScript_get_as_byte_code_8edaba4},
	{"Godot.NativeCalls::godot_icall_GDScriptFunctionState_resume_2ac9679d", (void*)godot_icall_GDScriptFunctionState_resume_2ac9679d},
	{"Godot.NativeCalls::godot_icall_GDScriptFunctionState_is_valid_9f31871", (void*)godot_icall_GDScriptFunctionState_is_valid_9f31871},
	{"Godot.NativeCalls::godot_icall_GIProbe_set_probe_data_16797b27", (void*)godot_icall_GIProbe_set_probe_data_16797b27},
	{"Godot.NativeCalls::godot_icall_GIProbe_get_probe_data_d4d8c645", (void*)godot_icall_GIProbe_get_probe_data_d4d8c645},
	{"Godot.NativeCalls::godot_icall_GIProbe_set_subdiv_283224ce", (void*)godot_icall_GIProbe_set_subdiv_283224ce},
	{"Godot.NativeCalls::godot_icall_GIProbe_get_subdiv_7e87e149", (void*)godot_icall_GIProbe_get_subdiv_7e87e149},
	{"Godot.NativeCalls::godot_icall_GIProbe_set_extents_6df7471d", (void*)godot_icall_GIProbe_set_extents_6df7471d},
	{"Godot.NativeCalls::godot_icall_GIProbe_get_extents_9b4ea24f", (void*)godot_icall_GIProbe_get_extents_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_GIProbe_set_dynamic_range_e1ae93bc", (void*)godot_icall_GIProbe_set_dynamic_range_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_GIProbe_get_dynamic_range_1f886eb0", (void*)godot_icall_GIProbe_get_dynamic_range_1f886eb0},
	{"Godot.NativeCalls::godot_icall_GIProbe_set_energy_904508bb", (void*)godot_icall_GIProbe_set_energy_904508bb},
	{"Godot.NativeCalls::godot_icall_GIProbe_get_energy_4edcd7a9", (void*)godot_icall_GIProbe_get_energy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GIProbe_set_bias_904508bb", (void*)godot_icall_GIProbe_set_bias_904508bb},
	{"Godot.NativeCalls::godot_icall_GIProbe_get_bias_4edcd7a9", (void*)godot_icall_GIProbe_get_bias_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GIProbe_set_normal_bias_904508bb", (void*)godot_icall_GIProbe_set_normal_bias_904508bb},
	{"Godot.NativeCalls::godot_icall_GIProbe_get_normal_bias_4edcd7a9", (void*)godot_icall_GIProbe_get_normal_bias_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GIProbe_set_propagation_904508bb", (void*)godot_icall_GIProbe_set_propagation_904508bb},
	{"Godot.NativeCalls::godot_icall_GIProbe_get_propagation_4edcd7a9", (void*)godot_icall_GIProbe_get_propagation_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GIProbe_set_interior_ba24800b", (void*)godot_icall_GIProbe_set_interior_ba24800b},
	{"Godot.NativeCalls::godot_icall_GIProbe_is_interior_68fe5f59", (void*)godot_icall_GIProbe_is_interior_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GIProbe_set_compress_ba24800b", (void*)godot_icall_GIProbe_set_compress_ba24800b},
	{"Godot.NativeCalls::godot_icall_GIProbe_is_compressed_68fe5f59", (void*)godot_icall_GIProbe_is_compressed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GIProbe_bake_26387a5c", (void*)godot_icall_GIProbe_bake_26387a5c},
	{"Godot.NativeCalls::godot_icall_GIProbe_debug_bake_c8e54a7b", (void*)godot_icall_GIProbe_debug_bake_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_GIProbeData_set_bounds_ff67b409", (void*)godot_icall_GIProbeData_set_bounds_ff67b409},
	{"Godot.NativeCalls::godot_icall_GIProbeData_get_bounds_2dbf935b", (void*)godot_icall_GIProbeData_get_bounds_2dbf935b},
	{"Godot.NativeCalls::godot_icall_GIProbeData_set_cell_size_904508bb", (void*)godot_icall_GIProbeData_set_cell_size_904508bb},
	{"Godot.NativeCalls::godot_icall_GIProbeData_get_cell_size_4edcd7a9", (void*)godot_icall_GIProbeData_get_cell_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GIProbeData_set_to_cell_xform_655b85c9", (void*)godot_icall_GIProbeData_set_to_cell_xform_655b85c9},
	{"Godot.NativeCalls::godot_icall_GIProbeData_get_to_cell_xform_a3fb649b", (void*)godot_icall_GIProbeData_get_to_cell_xform_a3fb649b},
	{"Godot.NativeCalls::godot_icall_GIProbeData_set_dynamic_data_fb3c9f9f", (void*)godot_icall_GIProbeData_set_dynamic_data_fb3c9f9f},
	{"Godot.NativeCalls::godot_icall_GIProbeData_get_dynamic_data_2a166acd", (void*)godot_icall_GIProbeData_get_dynamic_data_2a166acd},
	{"Godot.NativeCalls::godot_icall_GIProbeData_set_dynamic_range_e1ae93bc", (void*)godot_icall_GIProbeData_set_dynamic_range_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_GIProbeData_get_dynamic_range_1f886eb0", (void*)godot_icall_GIProbeData_get_dynamic_range_1f886eb0},
	{"Godot.NativeCalls::godot_icall_GIProbeData_set_energy_904508bb", (void*)godot_icall_GIProbeData_set_energy_904508bb},
	{"Godot.NativeCalls::godot_icall_GIProbeData_get_energy_4edcd7a9", (void*)godot_icall_GIProbeData_get_energy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GIProbeData_set_bias_904508bb", (void*)godot_icall_GIProbeData_set_bias_904508bb},
	{"Godot.NativeCalls::godot_icall_GIProbeData_get_bias_4edcd7a9", (void*)godot_icall_GIProbeData_get_bias_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GIProbeData_set_normal_bias_904508bb", (void*)godot_icall_GIProbeData_set_normal_bias_904508bb},
	{"Godot.NativeCalls::godot_icall_GIProbeData_get_normal_bias_4edcd7a9", (void*)godot_icall_GIProbeData_get_normal_bias_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GIProbeData_set_propagation_904508bb", (void*)godot_icall_GIProbeData_set_propagation_904508bb},
	{"Godot.NativeCalls::godot_icall_GIProbeData_get_propagation_4edcd7a9", (void*)godot_icall_GIProbeData_get_propagation_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GIProbeData_set_interior_ba24800b", (void*)godot_icall_GIProbeData_set_interior_ba24800b},
	{"Godot.NativeCalls::godot_icall_GIProbeData_is_interior_68fe5f59", (void*)godot_icall_GIProbeData_is_interior_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GIProbeData_set_compress_ba24800b", (void*)godot_icall_GIProbeData_set_compress_ba24800b},
	{"Godot.NativeCalls::godot_icall_GIProbeData_is_compressed_68fe5f59", (void*)godot_icall_GIProbeData_is_compressed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint__set_angular_hi_limit_x_904508bb", (void*)godot_icall_Generic6DOFJoint__set_angular_hi_limit_x_904508bb},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint__get_angular_hi_limit_x_4edcd7a9", (void*)godot_icall_Generic6DOFJoint__get_angular_hi_limit_x_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint__set_angular_lo_limit_x_904508bb", (void*)godot_icall_Generic6DOFJoint__set_angular_lo_limit_x_904508bb},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint__get_angular_lo_limit_x_4edcd7a9", (void*)godot_icall_Generic6DOFJoint__get_angular_lo_limit_x_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint__set_angular_hi_limit_y_904508bb", (void*)godot_icall_Generic6DOFJoint__set_angular_hi_limit_y_904508bb},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint__get_angular_hi_limit_y_4edcd7a9", (void*)godot_icall_Generic6DOFJoint__get_angular_hi_limit_y_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint__set_angular_lo_limit_y_904508bb", (void*)godot_icall_Generic6DOFJoint__set_angular_lo_limit_y_904508bb},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint__get_angular_lo_limit_y_4edcd7a9", (void*)godot_icall_Generic6DOFJoint__get_angular_lo_limit_y_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint__set_angular_hi_limit_z_904508bb", (void*)godot_icall_Generic6DOFJoint__set_angular_hi_limit_z_904508bb},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint__get_angular_hi_limit_z_4edcd7a9", (void*)godot_icall_Generic6DOFJoint__get_angular_hi_limit_z_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint__set_angular_lo_limit_z_904508bb", (void*)godot_icall_Generic6DOFJoint__set_angular_lo_limit_z_904508bb},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint__get_angular_lo_limit_z_4edcd7a9", (void*)godot_icall_Generic6DOFJoint__get_angular_lo_limit_z_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_set_param_x_afe4c5c6", (void*)godot_icall_Generic6DOFJoint_set_param_x_afe4c5c6},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_get_param_x_171066b4", (void*)godot_icall_Generic6DOFJoint_get_param_x_171066b4},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_set_param_y_afe4c5c6", (void*)godot_icall_Generic6DOFJoint_set_param_y_afe4c5c6},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_get_param_y_171066b4", (void*)godot_icall_Generic6DOFJoint_get_param_y_171066b4},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_set_param_z_afe4c5c6", (void*)godot_icall_Generic6DOFJoint_set_param_z_afe4c5c6},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_get_param_z_171066b4", (void*)godot_icall_Generic6DOFJoint_get_param_z_171066b4},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_set_flag_x_a5ed5d6b", (void*)godot_icall_Generic6DOFJoint_set_flag_x_a5ed5d6b},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_get_flag_x_6eb0fe61", (void*)godot_icall_Generic6DOFJoint_get_flag_x_6eb0fe61},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_set_flag_y_a5ed5d6b", (void*)godot_icall_Generic6DOFJoint_set_flag_y_a5ed5d6b},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_get_flag_y_6eb0fe61", (void*)godot_icall_Generic6DOFJoint_get_flag_y_6eb0fe61},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_set_flag_z_a5ed5d6b", (void*)godot_icall_Generic6DOFJoint_set_flag_z_a5ed5d6b},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_get_flag_z_6eb0fe61", (void*)godot_icall_Generic6DOFJoint_get_flag_z_6eb0fe61},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_set_precision_e1ae93bc", (void*)godot_icall_Generic6DOFJoint_set_precision_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Generic6DOFJoint_get_precision_1f886eb0", (void*)godot_icall_Generic6DOFJoint_get_precision_1f886eb0},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_set_material_override_be2d0ec2", (void*)godot_icall_GeometryInstance_set_material_override_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_get_material_override_6d04d9a2", (void*)godot_icall_GeometryInstance_get_material_override_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_set_flag_2816383", (void*)godot_icall_GeometryInstance_set_flag_2816383},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_get_flag_b3f4b12b", (void*)godot_icall_GeometryInstance_get_flag_b3f4b12b},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_set_cast_shadows_setting_7dd9c999", (void*)godot_icall_GeometryInstance_set_cast_shadows_setting_7dd9c999},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_get_cast_shadows_setting_ab7918cb", (void*)godot_icall_GeometryInstance_get_cast_shadows_setting_ab7918cb},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_set_lod_max_hysteresis_904508bb", (void*)godot_icall_GeometryInstance_set_lod_max_hysteresis_904508bb},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_get_lod_max_hysteresis_4edcd7a9", (void*)godot_icall_GeometryInstance_get_lod_max_hysteresis_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_set_lod_max_distance_904508bb", (void*)godot_icall_GeometryInstance_set_lod_max_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_get_lod_max_distance_4edcd7a9", (void*)godot_icall_GeometryInstance_get_lod_max_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_set_lod_min_hysteresis_904508bb", (void*)godot_icall_GeometryInstance_set_lod_min_hysteresis_904508bb},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_get_lod_min_hysteresis_4edcd7a9", (void*)godot_icall_GeometryInstance_get_lod_min_hysteresis_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_set_lod_min_distance_904508bb", (void*)godot_icall_GeometryInstance_set_lod_min_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_get_lod_min_distance_4edcd7a9", (void*)godot_icall_GeometryInstance_get_lod_min_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_set_extra_cull_margin_904508bb", (void*)godot_icall_GeometryInstance_set_extra_cull_margin_904508bb},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_get_extra_cull_margin_4edcd7a9", (void*)godot_icall_GeometryInstance_get_extra_cull_margin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GeometryInstance_set_custom_aabb_ff67b409", (void*)godot_icall_GeometryInstance_set_custom_aabb_ff67b409},
	{"Godot.NativeCalls::godot_icall_Gradient_add_point_938b77da", (void*)godot_icall_Gradient_add_point_938b77da},
	{"Godot.NativeCalls::godot_icall_Gradient_remove_point_e1ae93bc", (void*)godot_icall_Gradient_remove_point_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Gradient_set_offset_708a76ed", (void*)godot_icall_Gradient_set_offset_708a76ed},
	{"Godot.NativeCalls::godot_icall_Gradient_get_offset_c671df3a", (void*)godot_icall_Gradient_get_offset_c671df3a},
	{"Godot.NativeCalls::godot_icall_Gradient_set_color_932531de", (void*)godot_icall_Gradient_set_color_932531de},
	{"Godot.NativeCalls::godot_icall_Gradient_get_color_eaf668ad", (void*)godot_icall_Gradient_get_color_eaf668ad},
	{"Godot.NativeCalls::godot_icall_Gradient_interpolate_3a49f1aa", (void*)godot_icall_Gradient_interpolate_3a49f1aa},
	{"Godot.NativeCalls::godot_icall_Gradient_get_point_count_1f886eb0", (void*)godot_icall_Gradient_get_point_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Gradient_set_offsets_da080d07", (void*)godot_icall_Gradient_set_offsets_da080d07},
	{"Godot.NativeCalls::godot_icall_Gradient_get_offsets_7083ff1a", (void*)godot_icall_Gradient_get_offsets_7083ff1a},
	{"Godot.NativeCalls::godot_icall_Gradient_set_colors_dda43e9e", (void*)godot_icall_Gradient_set_colors_dda43e9e},
	{"Godot.NativeCalls::godot_icall_Gradient_get_colors_e048d8e7", (void*)godot_icall_Gradient_get_colors_e048d8e7},
	{"Godot.NativeCalls::godot_icall_GradientTexture_set_gradient_487c5873", (void*)godot_icall_GradientTexture_set_gradient_487c5873},
	{"Godot.NativeCalls::godot_icall_GradientTexture_get_gradient_76d5a6f1", (void*)godot_icall_GradientTexture_get_gradient_76d5a6f1},
	{"Godot.NativeCalls::godot_icall_GradientTexture_set_width_e1ae93bc", (void*)godot_icall_GradientTexture_set_width_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_GraphEdit_connect_node_4f89d9ef", (void*)godot_icall_GraphEdit_connect_node_4f89d9ef},
	{"Godot.NativeCalls::godot_icall_GraphEdit_is_node_connected_20828817", (void*)godot_icall_GraphEdit_is_node_connected_20828817},
	{"Godot.NativeCalls::godot_icall_GraphEdit_disconnect_node_8c3e67ad", (void*)godot_icall_GraphEdit_disconnect_node_8c3e67ad},
	{"Godot.NativeCalls::godot_icall_GraphEdit_set_connection_activity_9383b120", (void*)godot_icall_GraphEdit_set_connection_activity_9383b120},
	{"Godot.NativeCalls::godot_icall_GraphEdit_get_connection_list_d80382d4", (void*)godot_icall_GraphEdit_get_connection_list_d80382d4},
	{"Godot.NativeCalls::godot_icall_GraphEdit_clear_connections_c8e54a7b", (void*)godot_icall_GraphEdit_clear_connections_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_GraphEdit_get_scroll_ofs_9b4ea24e", (void*)godot_icall_GraphEdit_get_scroll_ofs_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_GraphEdit_set_scroll_ofs_6df7471e", (void*)godot_icall_GraphEdit_set_scroll_ofs_6df7471e},
	{"Godot.NativeCalls::godot_icall_GraphEdit_add_valid_right_disconnect_type_e1ae93bc", (void*)godot_icall_GraphEdit_add_valid_right_disconnect_type_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_GraphEdit_remove_valid_right_disconnect_type_e1ae93bc", (void*)godot_icall_GraphEdit_remove_valid_right_disconnect_type_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_GraphEdit_add_valid_left_disconnect_type_e1ae93bc", (void*)godot_icall_GraphEdit_add_valid_left_disconnect_type_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_GraphEdit_remove_valid_left_disconnect_type_e1ae93bc", (void*)godot_icall_GraphEdit_remove_valid_left_disconnect_type_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_GraphEdit_add_valid_connection_type_807eefe4", (void*)godot_icall_GraphEdit_add_valid_connection_type_807eefe4},
	{"Godot.NativeCalls::godot_icall_GraphEdit_remove_valid_connection_type_807eefe4", (void*)godot_icall_GraphEdit_remove_valid_connection_type_807eefe4},
	{"Godot.NativeCalls::godot_icall_GraphEdit_is_valid_connection_type_c8b57d14", (void*)godot_icall_GraphEdit_is_valid_connection_type_c8b57d14},
	{"Godot.NativeCalls::godot_icall_GraphEdit_set_zoom_904508bb", (void*)godot_icall_GraphEdit_set_zoom_904508bb},
	{"Godot.NativeCalls::godot_icall_GraphEdit_get_zoom_4edcd7a9", (void*)godot_icall_GraphEdit_get_zoom_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GraphEdit_set_snap_e1ae93bc", (void*)godot_icall_GraphEdit_set_snap_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_GraphEdit_get_snap_1f886eb0", (void*)godot_icall_GraphEdit_get_snap_1f886eb0},
	{"Godot.NativeCalls::godot_icall_GraphEdit_set_use_snap_ba24800b", (void*)godot_icall_GraphEdit_set_use_snap_ba24800b},
	{"Godot.NativeCalls::godot_icall_GraphEdit_is_using_snap_68fe5f59", (void*)godot_icall_GraphEdit_is_using_snap_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GraphEdit_set_right_disconnects_ba24800b", (void*)godot_icall_GraphEdit_set_right_disconnects_ba24800b},
	{"Godot.NativeCalls::godot_icall_GraphEdit_is_right_disconnects_enabled_68fe5f59", (void*)godot_icall_GraphEdit_is_right_disconnects_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GraphEdit_get_zoom_hbox_333097db", (void*)godot_icall_GraphEdit_get_zoom_hbox_333097db},
	{"Godot.NativeCalls::godot_icall_GraphEdit_set_selected_598860a7", (void*)godot_icall_GraphEdit_set_selected_598860a7},
	{"Godot.NativeCalls::godot_icall_GraphNode_set_title_3ca14953", (void*)godot_icall_GraphNode_set_title_3ca14953},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_title_97be4a2e", (void*)godot_icall_GraphNode_get_title_97be4a2e},
	{"Godot.NativeCalls::godot_icall_GraphNode_set_slot_c3f5dca5", (void*)godot_icall_GraphNode_set_slot_c3f5dca5},
	{"Godot.NativeCalls::godot_icall_GraphNode_clear_slot_e1ae93bc", (void*)godot_icall_GraphNode_clear_slot_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_GraphNode_clear_all_slots_c8e54a7b", (void*)godot_icall_GraphNode_clear_all_slots_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_GraphNode_is_slot_enabled_left_7f690926", (void*)godot_icall_GraphNode_is_slot_enabled_left_7f690926},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_slot_type_left_b835dea5", (void*)godot_icall_GraphNode_get_slot_type_left_b835dea5},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_slot_color_left_eaf668ad", (void*)godot_icall_GraphNode_get_slot_color_left_eaf668ad},
	{"Godot.NativeCalls::godot_icall_GraphNode_is_slot_enabled_right_7f690926", (void*)godot_icall_GraphNode_is_slot_enabled_right_7f690926},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_slot_type_right_b835dea5", (void*)godot_icall_GraphNode_get_slot_type_right_b835dea5},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_slot_color_right_eaf668ad", (void*)godot_icall_GraphNode_get_slot_color_right_eaf668ad},
	{"Godot.NativeCalls::godot_icall_GraphNode_set_offset_6df7471e", (void*)godot_icall_GraphNode_set_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_offset_9b4ea24e", (void*)godot_icall_GraphNode_get_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_GraphNode_set_comment_ba24800b", (void*)godot_icall_GraphNode_set_comment_ba24800b},
	{"Godot.NativeCalls::godot_icall_GraphNode_is_comment_68fe5f59", (void*)godot_icall_GraphNode_is_comment_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GraphNode_set_resizable_ba24800b", (void*)godot_icall_GraphNode_set_resizable_ba24800b},
	{"Godot.NativeCalls::godot_icall_GraphNode_is_resizable_68fe5f59", (void*)godot_icall_GraphNode_is_resizable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GraphNode_set_selected_ba24800b", (void*)godot_icall_GraphNode_set_selected_ba24800b},
	{"Godot.NativeCalls::godot_icall_GraphNode_is_selected_68fe5f59", (void*)godot_icall_GraphNode_is_selected_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_connection_output_count_1f886eb0", (void*)godot_icall_GraphNode_get_connection_output_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_connection_input_count_1f886eb0", (void*)godot_icall_GraphNode_get_connection_input_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_connection_output_position_23728632", (void*)godot_icall_GraphNode_get_connection_output_position_23728632},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_connection_output_type_b835dea5", (void*)godot_icall_GraphNode_get_connection_output_type_b835dea5},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_connection_output_color_eaf668ad", (void*)godot_icall_GraphNode_get_connection_output_color_eaf668ad},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_connection_input_position_23728632", (void*)godot_icall_GraphNode_get_connection_input_position_23728632},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_connection_input_type_b835dea5", (void*)godot_icall_GraphNode_get_connection_input_type_b835dea5},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_connection_input_color_eaf668ad", (void*)godot_icall_GraphNode_get_connection_input_color_eaf668ad},
	{"Godot.NativeCalls::godot_icall_GraphNode_set_show_close_button_ba24800b", (void*)godot_icall_GraphNode_set_show_close_button_ba24800b},
	{"Godot.NativeCalls::godot_icall_GraphNode_is_close_button_visible_68fe5f59", (void*)godot_icall_GraphNode_is_close_button_visible_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GraphNode_set_overlay_f14cc41f", (void*)godot_icall_GraphNode_set_overlay_f14cc41f},
	{"Godot.NativeCalls::godot_icall_GraphNode_get_overlay_717699ea", (void*)godot_icall_GraphNode_get_overlay_717699ea},
	{"Godot.NativeCalls::godot_icall_GridContainer_set_columns_e1ae93bc", (void*)godot_icall_GridContainer_set_columns_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_GridContainer_get_columns_1f886eb0", (void*)godot_icall_GridContainer_get_columns_1f886eb0},
	{"Godot.NativeCalls::godot_icall_GridMap_set_collision_layer_966aab97", (void*)godot_icall_GridMap_set_collision_layer_966aab97},
	{"Godot.NativeCalls::godot_icall_GridMap_get_collision_layer_54cc76d5", (void*)godot_icall_GridMap_get_collision_layer_54cc76d5},
	{"Godot.NativeCalls::godot_icall_GridMap_set_collision_mask_966aab97", (void*)godot_icall_GridMap_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_GridMap_get_collision_mask_54cc76d5", (void*)godot_icall_GridMap_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_GridMap_set_collision_mask_bit_4ae8febd", (void*)godot_icall_GridMap_set_collision_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_GridMap_get_collision_mask_bit_7f690926", (void*)godot_icall_GridMap_get_collision_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_GridMap_set_collision_layer_bit_4ae8febd", (void*)godot_icall_GridMap_set_collision_layer_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_GridMap_get_collision_layer_bit_7f690926", (void*)godot_icall_GridMap_get_collision_layer_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_GridMap_set_mesh_library_e1f7ded5", (void*)godot_icall_GridMap_set_mesh_library_e1f7ded5},
	{"Godot.NativeCalls::godot_icall_GridMap_get_mesh_library_1f4f2997", (void*)godot_icall_GridMap_get_mesh_library_1f4f2997},
	{"Godot.NativeCalls::godot_icall_GridMap_set_cell_size_6df7471d", (void*)godot_icall_GridMap_set_cell_size_6df7471d},
	{"Godot.NativeCalls::godot_icall_GridMap_get_cell_size_9b4ea24f", (void*)godot_icall_GridMap_get_cell_size_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_GridMap_set_cell_scale_904508bb", (void*)godot_icall_GridMap_set_cell_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_GridMap_get_cell_scale_4edcd7a9", (void*)godot_icall_GridMap_get_cell_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GridMap_set_octant_size_e1ae93bc", (void*)godot_icall_GridMap_set_octant_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_GridMap_get_octant_size_1f886eb0", (void*)godot_icall_GridMap_get_octant_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_GridMap_set_cell_item_8fb18460", (void*)godot_icall_GridMap_set_cell_item_8fb18460},
	{"Godot.NativeCalls::godot_icall_GridMap_get_cell_item_6b22cbd1", (void*)godot_icall_GridMap_get_cell_item_6b22cbd1},
	{"Godot.NativeCalls::godot_icall_GridMap_get_cell_item_orientation_6b22cbd1", (void*)godot_icall_GridMap_get_cell_item_orientation_6b22cbd1},
	{"Godot.NativeCalls::godot_icall_GridMap_world_to_map_af4cfa14", (void*)godot_icall_GridMap_world_to_map_af4cfa14},
	{"Godot.NativeCalls::godot_icall_GridMap_map_to_world_714fddf8", (void*)godot_icall_GridMap_map_to_world_714fddf8},
	{"Godot.NativeCalls::godot_icall_GridMap_resource_changed_7ce53eb", (void*)godot_icall_GridMap_resource_changed_7ce53eb},
	{"Godot.NativeCalls::godot_icall_GridMap_set_center_x_ba24800b", (void*)godot_icall_GridMap_set_center_x_ba24800b},
	{"Godot.NativeCalls::godot_icall_GridMap_get_center_x_68fe5f59", (void*)godot_icall_GridMap_get_center_x_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GridMap_set_center_y_ba24800b", (void*)godot_icall_GridMap_set_center_y_ba24800b},
	{"Godot.NativeCalls::godot_icall_GridMap_get_center_y_68fe5f59", (void*)godot_icall_GridMap_get_center_y_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GridMap_set_center_z_ba24800b", (void*)godot_icall_GridMap_set_center_z_ba24800b},
	{"Godot.NativeCalls::godot_icall_GridMap_get_center_z_68fe5f59", (void*)godot_icall_GridMap_get_center_z_68fe5f59},
	{"Godot.NativeCalls::godot_icall_GridMap_set_clip_7daa45ef", (void*)godot_icall_GridMap_set_clip_7daa45ef},
	{"Godot.NativeCalls::godot_icall_GridMap_clear_c8e54a7b", (void*)godot_icall_GridMap_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_GridMap_get_used_cells_d80382d4", (void*)godot_icall_GridMap_get_used_cells_d80382d4},
	{"Godot.NativeCalls::godot_icall_GridMap_get_meshes_d80382d4", (void*)godot_icall_GridMap_get_meshes_d80382d4},
	{"Godot.NativeCalls::godot_icall_GridMap_get_bake_meshes_d80382d4", (void*)godot_icall_GridMap_get_bake_meshes_d80382d4},
	{"Godot.NativeCalls::godot_icall_GridMap_get_bake_mesh_instance_6012f6e", (void*)godot_icall_GridMap_get_bake_mesh_instance_6012f6e},
	{"Godot.NativeCalls::godot_icall_GridMap_clear_baked_meshes_c8e54a7b", (void*)godot_icall_GridMap_clear_baked_meshes_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_GridMap_make_baked_meshes_1e99f42f", (void*)godot_icall_GridMap_make_baked_meshes_1e99f42f},
	{"Godot.NativeCalls::godot_icall_GrooveJoint2D_set_length_904508bb", (void*)godot_icall_GrooveJoint2D_set_length_904508bb},
	{"Godot.NativeCalls::godot_icall_GrooveJoint2D_get_length_4edcd7a9", (void*)godot_icall_GrooveJoint2D_get_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_GrooveJoint2D_set_initial_offset_904508bb", (void*)godot_icall_GrooveJoint2D_set_initial_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_GrooveJoint2D_get_initial_offset_4edcd7a9", (void*)godot_icall_GrooveJoint2D_get_initial_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_HTTPClient_connect_to_host_3c965c6e", (void*)godot_icall_HTTPClient_connect_to_host_3c965c6e},
	{"Godot.NativeCalls::godot_icall_HTTPClient_set_connection_85f8707", (void*)godot_icall_HTTPClient_set_connection_85f8707},
	{"Godot.NativeCalls::godot_icall_HTTPClient_get_connection_b6f76265", (void*)godot_icall_HTTPClient_get_connection_b6f76265},
	{"Godot.NativeCalls::godot_icall_HTTPClient_request_raw_e7f84acd", (void*)godot_icall_HTTPClient_request_raw_e7f84acd},
	{"Godot.NativeCalls::godot_icall_HTTPClient_request_dee5b030", (void*)godot_icall_HTTPClient_request_dee5b030},
	{"Godot.NativeCalls::godot_icall_HTTPClient_close_c8e54a7b", (void*)godot_icall_HTTPClient_close_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_HTTPClient_has_response_68fe5f59", (void*)godot_icall_HTTPClient_has_response_68fe5f59},
	{"Godot.NativeCalls::godot_icall_HTTPClient_is_response_chunked_68fe5f59", (void*)godot_icall_HTTPClient_is_response_chunked_68fe5f59},
	{"Godot.NativeCalls::godot_icall_HTTPClient_get_response_code_1f886eb0", (void*)godot_icall_HTTPClient_get_response_code_1f886eb0},
	{"Godot.NativeCalls::godot_icall_HTTPClient_get_response_headers_4cc8f2a7", (void*)godot_icall_HTTPClient_get_response_headers_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_HTTPClient_get_response_headers_as_dictionary_22d47c9d", (void*)godot_icall_HTTPClient_get_response_headers_as_dictionary_22d47c9d},
	{"Godot.NativeCalls::godot_icall_HTTPClient_get_response_body_length_1f886eb0", (void*)godot_icall_HTTPClient_get_response_body_length_1f886eb0},
	{"Godot.NativeCalls::godot_icall_HTTPClient_read_response_body_chunk_8edaba4", (void*)godot_icall_HTTPClient_read_response_body_chunk_8edaba4},
	{"Godot.NativeCalls::godot_icall_HTTPClient_set_read_chunk_size_e1ae93bc", (void*)godot_icall_HTTPClient_set_read_chunk_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_HTTPClient_get_read_chunk_size_1f886eb0", (void*)godot_icall_HTTPClient_get_read_chunk_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_HTTPClient_set_blocking_mode_ba24800b", (void*)godot_icall_HTTPClient_set_blocking_mode_ba24800b},
	{"Godot.NativeCalls::godot_icall_HTTPClient_is_blocking_mode_enabled_68fe5f59", (void*)godot_icall_HTTPClient_is_blocking_mode_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_HTTPClient_get_status_e2cdce5c", (void*)godot_icall_HTTPClient_get_status_e2cdce5c},
	{"Godot.NativeCalls::godot_icall_HTTPClient_poll_f04570f5", (void*)godot_icall_HTTPClient_poll_f04570f5},
	{"Godot.NativeCalls::godot_icall_HTTPClient_query_string_from_dict_41305e4f", (void*)godot_icall_HTTPClient_query_string_from_dict_41305e4f},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_request_5706dd2e", (void*)godot_icall_HTTPRequest_request_5706dd2e},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_cancel_request_c8e54a7b", (void*)godot_icall_HTTPRequest_cancel_request_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_get_http_client_status_e2cdce5c", (void*)godot_icall_HTTPRequest_get_http_client_status_e2cdce5c},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_set_use_threads_ba24800b", (void*)godot_icall_HTTPRequest_set_use_threads_ba24800b},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_is_using_threads_68fe5f59", (void*)godot_icall_HTTPRequest_is_using_threads_68fe5f59},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_set_body_size_limit_e1ae93bc", (void*)godot_icall_HTTPRequest_set_body_size_limit_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_get_body_size_limit_1f886eb0", (void*)godot_icall_HTTPRequest_get_body_size_limit_1f886eb0},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_set_max_redirects_e1ae93bc", (void*)godot_icall_HTTPRequest_set_max_redirects_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_get_max_redirects_1f886eb0", (void*)godot_icall_HTTPRequest_get_max_redirects_1f886eb0},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_set_download_file_3ca14953", (void*)godot_icall_HTTPRequest_set_download_file_3ca14953},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_get_download_file_97be4a2e", (void*)godot_icall_HTTPRequest_get_download_file_97be4a2e},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_get_downloaded_bytes_1f886eb0", (void*)godot_icall_HTTPRequest_get_downloaded_bytes_1f886eb0},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_get_body_size_1f886eb0", (void*)godot_icall_HTTPRequest_get_body_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_set_timeout_e1ae93bc", (void*)godot_icall_HTTPRequest_set_timeout_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_get_timeout_1f886eb0", (void*)godot_icall_HTTPRequest_get_timeout_1f886eb0},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_set_download_chunk_size_e1ae93bc", (void*)godot_icall_HTTPRequest_set_download_chunk_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_HTTPRequest_get_download_chunk_size_1f886eb0", (void*)godot_icall_HTTPRequest_get_download_chunk_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_HashingContext_start_8a77dae5", (void*)godot_icall_HashingContext_start_8a77dae5},
	{"Godot.NativeCalls::godot_icall_HashingContext_update_4d7ce2f", (void*)godot_icall_HashingContext_update_4d7ce2f},
	{"Godot.NativeCalls::godot_icall_HashingContext_finish_8edaba4", (void*)godot_icall_HashingContext_finish_8edaba4},
	{"Godot.NativeCalls::godot_icall_HeightMapShape_set_map_width_e1ae93bc", (void*)godot_icall_HeightMapShape_set_map_width_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_HeightMapShape_get_map_width_1f886eb0", (void*)godot_icall_HeightMapShape_get_map_width_1f886eb0},
	{"Godot.NativeCalls::godot_icall_HeightMapShape_set_map_depth_e1ae93bc", (void*)godot_icall_HeightMapShape_set_map_depth_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_HeightMapShape_get_map_depth_1f886eb0", (void*)godot_icall_HeightMapShape_get_map_depth_1f886eb0},
	{"Godot.NativeCalls::godot_icall_HeightMapShape_set_map_data_b2a2204a", (void*)godot_icall_HeightMapShape_set_map_data_b2a2204a},
	{"Godot.NativeCalls::godot_icall_HeightMapShape_get_map_data_7083ff1a", (void*)godot_icall_HeightMapShape_get_map_data_7083ff1a},
	{"Godot.NativeCalls::godot_icall_HingeJoint_set_param_e82ed057", (void*)godot_icall_HingeJoint_set_param_e82ed057},
	{"Godot.NativeCalls::godot_icall_HingeJoint_get_param_7686921f", (void*)godot_icall_HingeJoint_get_param_7686921f},
	{"Godot.NativeCalls::godot_icall_HingeJoint_set_flag_92fa1aab", (void*)godot_icall_HingeJoint_set_flag_92fa1aab},
	{"Godot.NativeCalls::godot_icall_HingeJoint_get_flag_81e2bcb4", (void*)godot_icall_HingeJoint_get_flag_81e2bcb4},
	{"Godot.NativeCalls::godot_icall_HingeJoint__set_upper_limit_904508bb", (void*)godot_icall_HingeJoint__set_upper_limit_904508bb},
	{"Godot.NativeCalls::godot_icall_HingeJoint__get_upper_limit_4edcd7a9", (void*)godot_icall_HingeJoint__get_upper_limit_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_HingeJoint__set_lower_limit_904508bb", (void*)godot_icall_HingeJoint__set_lower_limit_904508bb},
	{"Godot.NativeCalls::godot_icall_HingeJoint__get_lower_limit_4edcd7a9", (void*)godot_icall_HingeJoint__get_lower_limit_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_IP_resolve_hostname_997a524c", (void*)godot_icall_IP_resolve_hostname_997a524c},
	{"Godot.NativeCalls::godot_icall_IP_resolve_hostname_queue_item_4ce004a2", (void*)godot_icall_IP_resolve_hostname_queue_item_4ce004a2},
	{"Godot.NativeCalls::godot_icall_IP_get_resolve_item_status_e7569df6", (void*)godot_icall_IP_get_resolve_item_status_e7569df6},
	{"Godot.NativeCalls::godot_icall_IP_get_resolve_item_address_44fc4c5a", (void*)godot_icall_IP_get_resolve_item_address_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_IP_erase_resolve_item_e1ae93bc", (void*)godot_icall_IP_erase_resolve_item_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_IP_get_local_addresses_d80382d4", (void*)godot_icall_IP_get_local_addresses_d80382d4},
	{"Godot.NativeCalls::godot_icall_IP_get_local_interfaces_d80382d4", (void*)godot_icall_IP_get_local_interfaces_d80382d4},
	{"Godot.NativeCalls::godot_icall_IP_clear_cache_6964ff3e", (void*)godot_icall_IP_clear_cache_6964ff3e},
	{"Godot.NativeCalls::godot_icall_Image_get_width_1f886eb0", (void*)godot_icall_Image_get_width_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Image_get_height_1f886eb0", (void*)godot_icall_Image_get_height_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Image_get_size_9b4ea24e", (void*)godot_icall_Image_get_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Image_has_mipmaps_68fe5f59", (void*)godot_icall_Image_has_mipmaps_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Image_get_format_648eb81f", (void*)godot_icall_Image_get_format_648eb81f},
	{"Godot.NativeCalls::godot_icall_Image_get_data_8edaba4", (void*)godot_icall_Image_get_data_8edaba4},
	{"Godot.NativeCalls::godot_icall_Image_convert_a6b7694d", (void*)godot_icall_Image_convert_a6b7694d},
	{"Godot.NativeCalls::godot_icall_Image_get_mipmap_offset_b835dea5", (void*)godot_icall_Image_get_mipmap_offset_b835dea5},
	{"Godot.NativeCalls::godot_icall_Image_resize_to_po2_ba24800b", (void*)godot_icall_Image_resize_to_po2_ba24800b},
	{"Godot.NativeCalls::godot_icall_Image_resize_9f1c1c7a", (void*)godot_icall_Image_resize_9f1c1c7a},
	{"Godot.NativeCalls::godot_icall_Image_shrink_x2_c8e54a7b", (void*)godot_icall_Image_shrink_x2_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Image_expand_x2_hq2x_c8e54a7b", (void*)godot_icall_Image_expand_x2_hq2x_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Image_crop_807eefe4", (void*)godot_icall_Image_crop_807eefe4},
	{"Godot.NativeCalls::godot_icall_Image_flip_x_c8e54a7b", (void*)godot_icall_Image_flip_x_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Image_flip_y_c8e54a7b", (void*)godot_icall_Image_flip_y_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Image_generate_mipmaps_a4e6027a", (void*)godot_icall_Image_generate_mipmaps_a4e6027a},
	{"Godot.NativeCalls::godot_icall_Image_clear_mipmaps_c8e54a7b", (void*)godot_icall_Image_clear_mipmaps_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Image_create_d715e7fc", (void*)godot_icall_Image_create_d715e7fc},
	{"Godot.NativeCalls::godot_icall_Image_create_from_data_757179a0", (void*)godot_icall_Image_create_from_data_757179a0},
	{"Godot.NativeCalls::godot_icall_Image_is_empty_68fe5f59", (void*)godot_icall_Image_is_empty_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Image_load_2660dbb2", (void*)godot_icall_Image_load_2660dbb2},
	{"Godot.NativeCalls::godot_icall_Image_save_png_2660dbb2", (void*)godot_icall_Image_save_png_2660dbb2},
	{"Godot.NativeCalls::godot_icall_Image_save_exr_8f6427cc", (void*)godot_icall_Image_save_exr_8f6427cc},
	{"Godot.NativeCalls::godot_icall_Image_detect_alpha_cf33925f", (void*)godot_icall_Image_detect_alpha_cf33925f},
	{"Godot.NativeCalls::godot_icall_Image_is_invisible_68fe5f59", (void*)godot_icall_Image_is_invisible_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Image_detect_used_channels_cbc886f4", (void*)godot_icall_Image_detect_used_channels_cbc886f4},
	{"Godot.NativeCalls::godot_icall_Image_compress_d8dd7e0e", (void*)godot_icall_Image_compress_d8dd7e0e},
	{"Godot.NativeCalls::godot_icall_Image_compress_from_channels_d8dd7e0e", (void*)godot_icall_Image_compress_from_channels_d8dd7e0e},
	{"Godot.NativeCalls::godot_icall_Image_decompress_f04570f5", (void*)godot_icall_Image_decompress_f04570f5},
	{"Godot.NativeCalls::godot_icall_Image_is_compressed_68fe5f59", (void*)godot_icall_Image_is_compressed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Image_fix_alpha_edges_c8e54a7b", (void*)godot_icall_Image_fix_alpha_edges_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Image_premultiply_alpha_c8e54a7b", (void*)godot_icall_Image_premultiply_alpha_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Image_srgb_to_linear_c8e54a7b", (void*)godot_icall_Image_srgb_to_linear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Image_normalmap_to_xy_c8e54a7b", (void*)godot_icall_Image_normalmap_to_xy_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Image_rgbe_to_srgb_20b1d94c", (void*)godot_icall_Image_rgbe_to_srgb_20b1d94c},
	{"Godot.NativeCalls::godot_icall_Image_bumpmap_to_normalmap_904508bb", (void*)godot_icall_Image_bumpmap_to_normalmap_904508bb},
	{"Godot.NativeCalls::godot_icall_Image_blit_rect_4915b45b", (void*)godot_icall_Image_blit_rect_4915b45b},
	{"Godot.NativeCalls::godot_icall_Image_blit_rect_mask_d9430c04", (void*)godot_icall_Image_blit_rect_mask_d9430c04},
	{"Godot.NativeCalls::godot_icall_Image_blend_rect_4915b45b", (void*)godot_icall_Image_blend_rect_4915b45b},
	{"Godot.NativeCalls::godot_icall_Image_blend_rect_mask_d9430c04", (void*)godot_icall_Image_blend_rect_mask_d9430c04},
	{"Godot.NativeCalls::godot_icall_Image_fill_f2e3b5aa", (void*)godot_icall_Image_fill_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_Image_get_used_rect_6344c073", (void*)godot_icall_Image_get_used_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_Image_get_rect_16aeda33", (void*)godot_icall_Image_get_rect_16aeda33},
	{"Godot.NativeCalls::godot_icall_Image_copy_from_e2900e18", (void*)godot_icall_Image_copy_from_e2900e18},
	{"Godot.NativeCalls::godot_icall_Image__set_data_e472adcf", (void*)godot_icall_Image__set_data_e472adcf},
	{"Godot.NativeCalls::godot_icall_Image__get_data_22d47c9d", (void*)godot_icall_Image__get_data_22d47c9d},
	{"Godot.NativeCalls::godot_icall_Image_lock_c8e54a7b", (void*)godot_icall_Image_lock_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Image_unlock_c8e54a7b", (void*)godot_icall_Image_unlock_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Image_get_pixelv_663fbb0f", (void*)godot_icall_Image_get_pixelv_663fbb0f},
	{"Godot.NativeCalls::godot_icall_Image_get_pixel_5ce1c579", (void*)godot_icall_Image_get_pixel_5ce1c579},
	{"Godot.NativeCalls::godot_icall_Image_set_pixelv_a3de0a4", (void*)godot_icall_Image_set_pixelv_a3de0a4},
	{"Godot.NativeCalls::godot_icall_Image_set_pixel_8e282c88", (void*)godot_icall_Image_set_pixel_8e282c88},
	{"Godot.NativeCalls::godot_icall_Image_load_png_from_buffer_4d7ce2f", (void*)godot_icall_Image_load_png_from_buffer_4d7ce2f},
	{"Godot.NativeCalls::godot_icall_Image_load_jpg_from_buffer_4d7ce2f", (void*)godot_icall_Image_load_jpg_from_buffer_4d7ce2f},
	{"Godot.NativeCalls::godot_icall_Image_load_webp_from_buffer_4d7ce2f", (void*)godot_icall_Image_load_webp_from_buffer_4d7ce2f},
	{"Godot.NativeCalls::godot_icall_ImageTexture_create_19a1092e", (void*)godot_icall_ImageTexture_create_19a1092e},
	{"Godot.NativeCalls::godot_icall_ImageTexture_create_from_image_2d3b740c", (void*)godot_icall_ImageTexture_create_from_image_2d3b740c},
	{"Godot.NativeCalls::godot_icall_ImageTexture_get_format_648eb81f", (void*)godot_icall_ImageTexture_get_format_648eb81f},
	{"Godot.NativeCalls::godot_icall_ImageTexture_set_data_e2900e18", (void*)godot_icall_ImageTexture_set_data_e2900e18},
	{"Godot.NativeCalls::godot_icall_ImageTexture_set_storage_620037c", (void*)godot_icall_ImageTexture_set_storage_620037c},
	{"Godot.NativeCalls::godot_icall_ImageTexture_get_storage_709dce5f", (void*)godot_icall_ImageTexture_get_storage_709dce5f},
	{"Godot.NativeCalls::godot_icall_ImageTexture_set_lossy_storage_quality_904508bb", (void*)godot_icall_ImageTexture_set_lossy_storage_quality_904508bb},
	{"Godot.NativeCalls::godot_icall_ImageTexture_get_lossy_storage_quality_4edcd7a9", (void*)godot_icall_ImageTexture_get_lossy_storage_quality_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ImageTexture_set_size_override_6df7471e", (void*)godot_icall_ImageTexture_set_size_override_6df7471e},
	{"Godot.NativeCalls::godot_icall_ImmediateGeometry_begin_950bef01", (void*)godot_icall_ImmediateGeometry_begin_950bef01},
	{"Godot.NativeCalls::godot_icall_ImmediateGeometry_set_normal_6df7471d", (void*)godot_icall_ImmediateGeometry_set_normal_6df7471d},
	{"Godot.NativeCalls::godot_icall_ImmediateGeometry_set_tangent_582036ef", (void*)godot_icall_ImmediateGeometry_set_tangent_582036ef},
	{"Godot.NativeCalls::godot_icall_ImmediateGeometry_set_color_f2e3b5aa", (void*)godot_icall_ImmediateGeometry_set_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ImmediateGeometry_set_uv_6df7471e", (void*)godot_icall_ImmediateGeometry_set_uv_6df7471e},
	{"Godot.NativeCalls::godot_icall_ImmediateGeometry_set_uv2_6df7471e", (void*)godot_icall_ImmediateGeometry_set_uv2_6df7471e},
	{"Godot.NativeCalls::godot_icall_ImmediateGeometry_add_vertex_6df7471d", (void*)godot_icall_ImmediateGeometry_add_vertex_6df7471d},
	{"Godot.NativeCalls::godot_icall_ImmediateGeometry_add_sphere_fa9aeafe", (void*)godot_icall_ImmediateGeometry_add_sphere_fa9aeafe},
	{"Godot.NativeCalls::godot_icall_ImmediateGeometry_end_c8e54a7b", (void*)godot_icall_ImmediateGeometry_end_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_ImmediateGeometry_clear_c8e54a7b", (void*)godot_icall_ImmediateGeometry_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Input_is_key_pressed_7f690926", (void*)godot_icall_Input_is_key_pressed_7f690926},
	{"Godot.NativeCalls::godot_icall_Input_is_mouse_button_pressed_7f690926", (void*)godot_icall_Input_is_mouse_button_pressed_7f690926},
	{"Godot.NativeCalls::godot_icall_Input_is_joy_button_pressed_c8b57d14", (void*)godot_icall_Input_is_joy_button_pressed_c8b57d14},
	{"Godot.NativeCalls::godot_icall_Input_is_action_pressed_bee64043", (void*)godot_icall_Input_is_action_pressed_bee64043},
	{"Godot.NativeCalls::godot_icall_Input_is_action_just_pressed_bee64043", (void*)godot_icall_Input_is_action_just_pressed_bee64043},
	{"Godot.NativeCalls::godot_icall_Input_is_action_just_released_bee64043", (void*)godot_icall_Input_is_action_just_released_bee64043},
	{"Godot.NativeCalls::godot_icall_Input_get_action_strength_9f10687", (void*)godot_icall_Input_get_action_strength_9f10687},
	{"Godot.NativeCalls::godot_icall_Input_add_joy_mapping_211c975", (void*)godot_icall_Input_add_joy_mapping_211c975},
	{"Godot.NativeCalls::godot_icall_Input_remove_joy_mapping_2f29e819", (void*)godot_icall_Input_remove_joy_mapping_2f29e819},
	{"Godot.NativeCalls::godot_icall_Input_joy_connection_changed_721ffd99", (void*)godot_icall_Input_joy_connection_changed_721ffd99},
	{"Godot.NativeCalls::godot_icall_Input_is_joy_known_7f690926", (void*)godot_icall_Input_is_joy_known_7f690926},
	{"Godot.NativeCalls::godot_icall_Input_get_joy_axis_4da5f18d", (void*)godot_icall_Input_get_joy_axis_4da5f18d},
	{"Godot.NativeCalls::godot_icall_Input_get_joy_name_44fc4c5a", (void*)godot_icall_Input_get_joy_name_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_Input_get_joy_guid_44fc4c5a", (void*)godot_icall_Input_get_joy_guid_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_Input_get_connected_joypads_d80382d4", (void*)godot_icall_Input_get_connected_joypads_d80382d4},
	{"Godot.NativeCalls::godot_icall_Input_get_joy_vibration_strength_23728632", (void*)godot_icall_Input_get_joy_vibration_strength_23728632},
	{"Godot.NativeCalls::godot_icall_Input_get_joy_vibration_duration_c671df3a", (void*)godot_icall_Input_get_joy_vibration_duration_c671df3a},
	{"Godot.NativeCalls::godot_icall_Input_get_joy_button_string_44fc4c5a", (void*)godot_icall_Input_get_joy_button_string_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_Input_get_joy_button_index_from_string_6d3db7c6", (void*)godot_icall_Input_get_joy_button_index_from_string_6d3db7c6},
	{"Godot.NativeCalls::godot_icall_Input_get_joy_axis_string_44fc4c5a", (void*)godot_icall_Input_get_joy_axis_string_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_Input_get_joy_axis_index_from_string_6d3db7c6", (void*)godot_icall_Input_get_joy_axis_index_from_string_6d3db7c6},
	{"Godot.NativeCalls::godot_icall_Input_start_joy_vibration_80fde83e", (void*)godot_icall_Input_start_joy_vibration_80fde83e},
	{"Godot.NativeCalls::godot_icall_Input_stop_joy_vibration_e1ae93bc", (void*)godot_icall_Input_stop_joy_vibration_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Input_vibrate_handheld_e1ae93bc", (void*)godot_icall_Input_vibrate_handheld_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Input_get_gravity_9b4ea24f", (void*)godot_icall_Input_get_gravity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Input_get_accelerometer_9b4ea24f", (void*)godot_icall_Input_get_accelerometer_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Input_get_magnetometer_9b4ea24f", (void*)godot_icall_Input_get_magnetometer_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Input_get_gyroscope_9b4ea24f", (void*)godot_icall_Input_get_gyroscope_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Input_get_last_mouse_speed_9b4ea24e", (void*)godot_icall_Input_get_last_mouse_speed_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Input_get_mouse_button_mask_1f886eb0", (void*)godot_icall_Input_get_mouse_button_mask_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Input_set_mouse_mode_18983783", (void*)godot_icall_Input_set_mouse_mode_18983783},
	{"Godot.NativeCalls::godot_icall_Input_get_mouse_mode_c6ba12e1", (void*)godot_icall_Input_get_mouse_mode_c6ba12e1},
	{"Godot.NativeCalls::godot_icall_Input_warp_mouse_position_6df7471e", (void*)godot_icall_Input_warp_mouse_position_6df7471e},
	{"Godot.NativeCalls::godot_icall_Input_action_press_ec7139b1", (void*)godot_icall_Input_action_press_ec7139b1},
	{"Godot.NativeCalls::godot_icall_Input_action_release_2f29e819", (void*)godot_icall_Input_action_release_2f29e819},
	{"Godot.NativeCalls::godot_icall_Input_set_default_cursor_shape_5eb8710", (void*)godot_icall_Input_set_default_cursor_shape_5eb8710},
	{"Godot.NativeCalls::godot_icall_Input_get_current_cursor_shape_c34b6254", (void*)godot_icall_Input_get_current_cursor_shape_c34b6254},
	{"Godot.NativeCalls::godot_icall_Input_set_custom_mouse_cursor_2fc04d3e", (void*)godot_icall_Input_set_custom_mouse_cursor_2fc04d3e},
	{"Godot.NativeCalls::godot_icall_Input_parse_input_event_7ac4986f", (void*)godot_icall_Input_parse_input_event_7ac4986f},
	{"Godot.NativeCalls::godot_icall_Input_set_use_accumulated_input_ba24800b", (void*)godot_icall_Input_set_use_accumulated_input_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEvent_set_device_e1ae93bc", (void*)godot_icall_InputEvent_set_device_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEvent_get_device_1f886eb0", (void*)godot_icall_InputEvent_get_device_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEvent_is_action_bee64043", (void*)godot_icall_InputEvent_is_action_bee64043},
	{"Godot.NativeCalls::godot_icall_InputEvent_is_action_pressed_4e9939a1", (void*)godot_icall_InputEvent_is_action_pressed_4e9939a1},
	{"Godot.NativeCalls::godot_icall_InputEvent_is_action_released_bee64043", (void*)godot_icall_InputEvent_is_action_released_bee64043},
	{"Godot.NativeCalls::godot_icall_InputEvent_get_action_strength_9f10687", (void*)godot_icall_InputEvent_get_action_strength_9f10687},
	{"Godot.NativeCalls::godot_icall_InputEvent_is_pressed_68fe5f59", (void*)godot_icall_InputEvent_is_pressed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_InputEvent_is_echo_68fe5f59", (void*)godot_icall_InputEvent_is_echo_68fe5f59},
	{"Godot.NativeCalls::godot_icall_InputEvent_as_text_97be4a2e", (void*)godot_icall_InputEvent_as_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall_InputEvent_shortcut_match_c8931195", (void*)godot_icall_InputEvent_shortcut_match_c8931195},
	{"Godot.NativeCalls::godot_icall_InputEvent_is_action_type_68fe5f59", (void*)godot_icall_InputEvent_is_action_type_68fe5f59},
	{"Godot.NativeCalls::godot_icall_InputEvent_accumulate_c8931195", (void*)godot_icall_InputEvent_accumulate_c8931195},
	{"Godot.NativeCalls::godot_icall_InputEvent_xformed_by_e2d8d72d", (void*)godot_icall_InputEvent_xformed_by_e2d8d72d},
	{"Godot.NativeCalls::godot_icall_InputEventAction_set_action_2f29e819", (void*)godot_icall_InputEventAction_set_action_2f29e819},
	{"Godot.NativeCalls::godot_icall_InputEventAction_get_action_97be4a2e", (void*)godot_icall_InputEventAction_get_action_97be4a2e},
	{"Godot.NativeCalls::godot_icall_InputEventAction_set_pressed_ba24800b", (void*)godot_icall_InputEventAction_set_pressed_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEventAction_set_strength_904508bb", (void*)godot_icall_InputEventAction_set_strength_904508bb},
	{"Godot.NativeCalls::godot_icall_InputEventAction_get_strength_4edcd7a9", (void*)godot_icall_InputEventAction_get_strength_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_InputEventGesture_set_position_6df7471e", (void*)godot_icall_InputEventGesture_set_position_6df7471e},
	{"Godot.NativeCalls::godot_icall_InputEventGesture_get_position_9b4ea24e", (void*)godot_icall_InputEventGesture_get_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_InputEventJoypadButton_set_button_index_e1ae93bc", (void*)godot_icall_InputEventJoypadButton_set_button_index_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventJoypadButton_get_button_index_1f886eb0", (void*)godot_icall_InputEventJoypadButton_get_button_index_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventJoypadButton_set_pressure_904508bb", (void*)godot_icall_InputEventJoypadButton_set_pressure_904508bb},
	{"Godot.NativeCalls::godot_icall_InputEventJoypadButton_get_pressure_4edcd7a9", (void*)godot_icall_InputEventJoypadButton_get_pressure_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_InputEventJoypadButton_set_pressed_ba24800b", (void*)godot_icall_InputEventJoypadButton_set_pressed_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEventJoypadMotion_set_axis_e1ae93bc", (void*)godot_icall_InputEventJoypadMotion_set_axis_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventJoypadMotion_get_axis_1f886eb0", (void*)godot_icall_InputEventJoypadMotion_get_axis_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventJoypadMotion_set_axis_value_904508bb", (void*)godot_icall_InputEventJoypadMotion_set_axis_value_904508bb},
	{"Godot.NativeCalls::godot_icall_InputEventJoypadMotion_get_axis_value_4edcd7a9", (void*)godot_icall_InputEventJoypadMotion_get_axis_value_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_InputEventKey_set_pressed_ba24800b", (void*)godot_icall_InputEventKey_set_pressed_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEventKey_set_scancode_966aab97", (void*)godot_icall_InputEventKey_set_scancode_966aab97},
	{"Godot.NativeCalls::godot_icall_InputEventKey_get_scancode_54cc76d5", (void*)godot_icall_InputEventKey_get_scancode_54cc76d5},
	{"Godot.NativeCalls::godot_icall_InputEventKey_set_unicode_966aab97", (void*)godot_icall_InputEventKey_set_unicode_966aab97},
	{"Godot.NativeCalls::godot_icall_InputEventKey_get_unicode_54cc76d5", (void*)godot_icall_InputEventKey_get_unicode_54cc76d5},
	{"Godot.NativeCalls::godot_icall_InputEventKey_set_echo_ba24800b", (void*)godot_icall_InputEventKey_set_echo_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEventKey_get_scancode_with_modifiers_54cc76d5", (void*)godot_icall_InputEventKey_get_scancode_with_modifiers_54cc76d5},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_set_channel_e1ae93bc", (void*)godot_icall_InputEventMIDI_set_channel_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_get_channel_1f886eb0", (void*)godot_icall_InputEventMIDI_get_channel_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_set_message_e1ae93bc", (void*)godot_icall_InputEventMIDI_set_message_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_get_message_1f886eb0", (void*)godot_icall_InputEventMIDI_get_message_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_set_pitch_e1ae93bc", (void*)godot_icall_InputEventMIDI_set_pitch_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_get_pitch_1f886eb0", (void*)godot_icall_InputEventMIDI_get_pitch_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_set_velocity_e1ae93bc", (void*)godot_icall_InputEventMIDI_set_velocity_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_get_velocity_1f886eb0", (void*)godot_icall_InputEventMIDI_get_velocity_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_set_instrument_e1ae93bc", (void*)godot_icall_InputEventMIDI_set_instrument_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_get_instrument_1f886eb0", (void*)godot_icall_InputEventMIDI_get_instrument_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_set_pressure_e1ae93bc", (void*)godot_icall_InputEventMIDI_set_pressure_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_get_pressure_1f886eb0", (void*)godot_icall_InputEventMIDI_get_pressure_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_set_controller_number_e1ae93bc", (void*)godot_icall_InputEventMIDI_set_controller_number_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_get_controller_number_1f886eb0", (void*)godot_icall_InputEventMIDI_get_controller_number_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_set_controller_value_e1ae93bc", (void*)godot_icall_InputEventMIDI_set_controller_value_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventMIDI_get_controller_value_1f886eb0", (void*)godot_icall_InputEventMIDI_get_controller_value_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventMagnifyGesture_set_factor_904508bb", (void*)godot_icall_InputEventMagnifyGesture_set_factor_904508bb},
	{"Godot.NativeCalls::godot_icall_InputEventMagnifyGesture_get_factor_4edcd7a9", (void*)godot_icall_InputEventMagnifyGesture_get_factor_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_InputEventMouse_set_button_mask_e1ae93bc", (void*)godot_icall_InputEventMouse_set_button_mask_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventMouse_get_button_mask_1f886eb0", (void*)godot_icall_InputEventMouse_get_button_mask_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventMouse_set_position_6df7471e", (void*)godot_icall_InputEventMouse_set_position_6df7471e},
	{"Godot.NativeCalls::godot_icall_InputEventMouse_get_position_9b4ea24e", (void*)godot_icall_InputEventMouse_get_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_InputEventMouse_set_global_position_6df7471e", (void*)godot_icall_InputEventMouse_set_global_position_6df7471e},
	{"Godot.NativeCalls::godot_icall_InputEventMouse_get_global_position_9b4ea24e", (void*)godot_icall_InputEventMouse_get_global_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_InputEventMouseButton_set_factor_904508bb", (void*)godot_icall_InputEventMouseButton_set_factor_904508bb},
	{"Godot.NativeCalls::godot_icall_InputEventMouseButton_get_factor_4edcd7a9", (void*)godot_icall_InputEventMouseButton_get_factor_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_InputEventMouseButton_set_button_index_e1ae93bc", (void*)godot_icall_InputEventMouseButton_set_button_index_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventMouseButton_get_button_index_1f886eb0", (void*)godot_icall_InputEventMouseButton_get_button_index_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventMouseButton_set_pressed_ba24800b", (void*)godot_icall_InputEventMouseButton_set_pressed_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEventMouseButton_set_doubleclick_ba24800b", (void*)godot_icall_InputEventMouseButton_set_doubleclick_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEventMouseButton_is_doubleclick_68fe5f59", (void*)godot_icall_InputEventMouseButton_is_doubleclick_68fe5f59},
	{"Godot.NativeCalls::godot_icall_InputEventMouseMotion_set_tilt_6df7471e", (void*)godot_icall_InputEventMouseMotion_set_tilt_6df7471e},
	{"Godot.NativeCalls::godot_icall_InputEventMouseMotion_get_tilt_9b4ea24e", (void*)godot_icall_InputEventMouseMotion_get_tilt_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_InputEventMouseMotion_set_pressure_904508bb", (void*)godot_icall_InputEventMouseMotion_set_pressure_904508bb},
	{"Godot.NativeCalls::godot_icall_InputEventMouseMotion_get_pressure_4edcd7a9", (void*)godot_icall_InputEventMouseMotion_get_pressure_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_InputEventMouseMotion_set_relative_6df7471e", (void*)godot_icall_InputEventMouseMotion_set_relative_6df7471e},
	{"Godot.NativeCalls::godot_icall_InputEventMouseMotion_get_relative_9b4ea24e", (void*)godot_icall_InputEventMouseMotion_get_relative_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_InputEventMouseMotion_set_speed_6df7471e", (void*)godot_icall_InputEventMouseMotion_set_speed_6df7471e},
	{"Godot.NativeCalls::godot_icall_InputEventMouseMotion_get_speed_9b4ea24e", (void*)godot_icall_InputEventMouseMotion_get_speed_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_InputEventPanGesture_set_delta_6df7471e", (void*)godot_icall_InputEventPanGesture_set_delta_6df7471e},
	{"Godot.NativeCalls::godot_icall_InputEventPanGesture_get_delta_9b4ea24e", (void*)godot_icall_InputEventPanGesture_get_delta_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_InputEventScreenDrag_set_index_e1ae93bc", (void*)godot_icall_InputEventScreenDrag_set_index_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventScreenDrag_get_index_1f886eb0", (void*)godot_icall_InputEventScreenDrag_get_index_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventScreenDrag_set_position_6df7471e", (void*)godot_icall_InputEventScreenDrag_set_position_6df7471e},
	{"Godot.NativeCalls::godot_icall_InputEventScreenDrag_get_position_9b4ea24e", (void*)godot_icall_InputEventScreenDrag_get_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_InputEventScreenDrag_set_relative_6df7471e", (void*)godot_icall_InputEventScreenDrag_set_relative_6df7471e},
	{"Godot.NativeCalls::godot_icall_InputEventScreenDrag_get_relative_9b4ea24e", (void*)godot_icall_InputEventScreenDrag_get_relative_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_InputEventScreenDrag_set_speed_6df7471e", (void*)godot_icall_InputEventScreenDrag_set_speed_6df7471e},
	{"Godot.NativeCalls::godot_icall_InputEventScreenDrag_get_speed_9b4ea24e", (void*)godot_icall_InputEventScreenDrag_get_speed_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_InputEventScreenTouch_set_index_e1ae93bc", (void*)godot_icall_InputEventScreenTouch_set_index_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_InputEventScreenTouch_get_index_1f886eb0", (void*)godot_icall_InputEventScreenTouch_get_index_1f886eb0},
	{"Godot.NativeCalls::godot_icall_InputEventScreenTouch_set_position_6df7471e", (void*)godot_icall_InputEventScreenTouch_set_position_6df7471e},
	{"Godot.NativeCalls::godot_icall_InputEventScreenTouch_get_position_9b4ea24e", (void*)godot_icall_InputEventScreenTouch_get_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_InputEventScreenTouch_set_pressed_ba24800b", (void*)godot_icall_InputEventScreenTouch_set_pressed_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEventWithModifiers_set_alt_ba24800b", (void*)godot_icall_InputEventWithModifiers_set_alt_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEventWithModifiers_get_alt_68fe5f59", (void*)godot_icall_InputEventWithModifiers_get_alt_68fe5f59},
	{"Godot.NativeCalls::godot_icall_InputEventWithModifiers_set_shift_ba24800b", (void*)godot_icall_InputEventWithModifiers_set_shift_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEventWithModifiers_get_shift_68fe5f59", (void*)godot_icall_InputEventWithModifiers_get_shift_68fe5f59},
	{"Godot.NativeCalls::godot_icall_InputEventWithModifiers_set_control_ba24800b", (void*)godot_icall_InputEventWithModifiers_set_control_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEventWithModifiers_get_control_68fe5f59", (void*)godot_icall_InputEventWithModifiers_get_control_68fe5f59},
	{"Godot.NativeCalls::godot_icall_InputEventWithModifiers_set_metakey_ba24800b", (void*)godot_icall_InputEventWithModifiers_set_metakey_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEventWithModifiers_get_metakey_68fe5f59", (void*)godot_icall_InputEventWithModifiers_get_metakey_68fe5f59},
	{"Godot.NativeCalls::godot_icall_InputEventWithModifiers_set_command_ba24800b", (void*)godot_icall_InputEventWithModifiers_set_command_ba24800b},
	{"Godot.NativeCalls::godot_icall_InputEventWithModifiers_get_command_68fe5f59", (void*)godot_icall_InputEventWithModifiers_get_command_68fe5f59},
	{"Godot.NativeCalls::godot_icall_InputMap_has_action_bee64043", (void*)godot_icall_InputMap_has_action_bee64043},
	{"Godot.NativeCalls::godot_icall_InputMap_get_actions_d80382d4", (void*)godot_icall_InputMap_get_actions_d80382d4},
	{"Godot.NativeCalls::godot_icall_InputMap_add_action_ec7139b1", (void*)godot_icall_InputMap_add_action_ec7139b1},
	{"Godot.NativeCalls::godot_icall_InputMap_erase_action_2f29e819", (void*)godot_icall_InputMap_erase_action_2f29e819},
	{"Godot.NativeCalls::godot_icall_InputMap_action_set_deadzone_ec7139b1", (void*)godot_icall_InputMap_action_set_deadzone_ec7139b1},
	{"Godot.NativeCalls::godot_icall_InputMap_action_add_event_33f388e5", (void*)godot_icall_InputMap_action_add_event_33f388e5},
	{"Godot.NativeCalls::godot_icall_InputMap_action_has_event_9139c1c5", (void*)godot_icall_InputMap_action_has_event_9139c1c5},
	{"Godot.NativeCalls::godot_icall_InputMap_action_erase_event_33f388e5", (void*)godot_icall_InputMap_action_erase_event_33f388e5},
	{"Godot.NativeCalls::godot_icall_InputMap_action_erase_events_2f29e819", (void*)godot_icall_InputMap_action_erase_events_2f29e819},
	{"Godot.NativeCalls::godot_icall_InputMap_get_action_list_6b21c46d", (void*)godot_icall_InputMap_get_action_list_6b21c46d},
	{"Godot.NativeCalls::godot_icall_InputMap_event_is_action_1bbacb3c", (void*)godot_icall_InputMap_event_is_action_1bbacb3c},
	{"Godot.NativeCalls::godot_icall_InputMap_load_from_globals_c8e54a7b", (void*)godot_icall_InputMap_load_from_globals_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_InstancePlaceholder_get_stored_values_e7de63e4", (void*)godot_icall_InstancePlaceholder_get_stored_values_e7de63e4},
	{"Godot.NativeCalls::godot_icall_InstancePlaceholder_create_instance_5b9db04b", (void*)godot_icall_InstancePlaceholder_create_instance_5b9db04b},
	{"Godot.NativeCalls::godot_icall_InstancePlaceholder_replace_by_instance_cf252e31", (void*)godot_icall_InstancePlaceholder_replace_by_instance_cf252e31},
	{"Godot.NativeCalls::godot_icall_InstancePlaceholder_get_instance_path_97be4a2e", (void*)godot_icall_InstancePlaceholder_get_instance_path_97be4a2e},
	{"Godot.NativeCalls::godot_icall_InterpolatedCamera_set_target_path_1e08804", (void*)godot_icall_InterpolatedCamera_set_target_path_1e08804},
	{"Godot.NativeCalls::godot_icall_InterpolatedCamera_get_target_path_bf425768", (void*)godot_icall_InterpolatedCamera_get_target_path_bf425768},
	{"Godot.NativeCalls::godot_icall_InterpolatedCamera_set_target_ad798950", (void*)godot_icall_InterpolatedCamera_set_target_ad798950},
	{"Godot.NativeCalls::godot_icall_InterpolatedCamera_set_speed_904508bb", (void*)godot_icall_InterpolatedCamera_set_speed_904508bb},
	{"Godot.NativeCalls::godot_icall_InterpolatedCamera_get_speed_4edcd7a9", (void*)godot_icall_InterpolatedCamera_get_speed_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_InterpolatedCamera_set_interpolation_enabled_ba24800b", (void*)godot_icall_InterpolatedCamera_set_interpolation_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_InterpolatedCamera_is_interpolation_enabled_68fe5f59", (void*)godot_icall_InterpolatedCamera_is_interpolation_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ItemList_add_item_9cb1d76", (void*)godot_icall_ItemList_add_item_9cb1d76},
	{"Godot.NativeCalls::godot_icall_ItemList_add_icon_item_9cc90742", (void*)godot_icall_ItemList_add_icon_item_9cc90742},
	{"Godot.NativeCalls::godot_icall_ItemList_set_item_text_c1ffd74f", (void*)godot_icall_ItemList_set_item_text_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_ItemList_get_item_text_44fc4c5a", (void*)godot_icall_ItemList_get_item_text_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_ItemList_set_item_icon_f20a84e", (void*)godot_icall_ItemList_set_item_icon_f20a84e},
	{"Godot.NativeCalls::godot_icall_ItemList_get_item_icon_561b2831", (void*)godot_icall_ItemList_get_item_icon_561b2831},
	{"Godot.NativeCalls::godot_icall_ItemList_set_item_icon_transposed_4ae8febd", (void*)godot_icall_ItemList_set_item_icon_transposed_4ae8febd},
	{"Godot.NativeCalls::godot_icall_ItemList_is_item_icon_transposed_7f690926", (void*)godot_icall_ItemList_is_item_icon_transposed_7f690926},
	{"Godot.NativeCalls::godot_icall_ItemList_set_item_icon_region_44225da7", (void*)godot_icall_ItemList_set_item_icon_region_44225da7},
	{"Godot.NativeCalls::godot_icall_ItemList_get_item_icon_region_c485f536", (void*)godot_icall_ItemList_get_item_icon_region_c485f536},
	{"Godot.NativeCalls::godot_icall_ItemList_set_item_icon_modulate_932531de", (void*)godot_icall_ItemList_set_item_icon_modulate_932531de},
	{"Godot.NativeCalls::godot_icall_ItemList_get_item_icon_modulate_eaf668ad", (void*)godot_icall_ItemList_get_item_icon_modulate_eaf668ad},
	{"Godot.NativeCalls::godot_icall_ItemList_set_item_selectable_4ae8febd", (void*)godot_icall_ItemList_set_item_selectable_4ae8febd},
	{"Godot.NativeCalls::godot_icall_ItemList_is_item_selectable_7f690926", (void*)godot_icall_ItemList_is_item_selectable_7f690926},
	{"Godot.NativeCalls::godot_icall_ItemList_set_item_disabled_4ae8febd", (void*)godot_icall_ItemList_set_item_disabled_4ae8febd},
	{"Godot.NativeCalls::godot_icall_ItemList_is_item_disabled_7f690926", (void*)godot_icall_ItemList_is_item_disabled_7f690926},
	{"Godot.NativeCalls::godot_icall_ItemList_set_item_metadata_37bef04", (void*)godot_icall_ItemList_set_item_metadata_37bef04},
	{"Godot.NativeCalls::godot_icall_ItemList_get_item_metadata_a9b2673d", (void*)godot_icall_ItemList_get_item_metadata_a9b2673d},
	{"Godot.NativeCalls::godot_icall_ItemList_set_item_custom_bg_color_932531de", (void*)godot_icall_ItemList_set_item_custom_bg_color_932531de},
	{"Godot.NativeCalls::godot_icall_ItemList_get_item_custom_bg_color_eaf668ad", (void*)godot_icall_ItemList_get_item_custom_bg_color_eaf668ad},
	{"Godot.NativeCalls::godot_icall_ItemList_set_item_custom_fg_color_932531de", (void*)godot_icall_ItemList_set_item_custom_fg_color_932531de},
	{"Godot.NativeCalls::godot_icall_ItemList_get_item_custom_fg_color_eaf668ad", (void*)godot_icall_ItemList_get_item_custom_fg_color_eaf668ad},
	{"Godot.NativeCalls::godot_icall_ItemList_set_item_tooltip_enabled_4ae8febd", (void*)godot_icall_ItemList_set_item_tooltip_enabled_4ae8febd},
	{"Godot.NativeCalls::godot_icall_ItemList_is_item_tooltip_enabled_7f690926", (void*)godot_icall_ItemList_is_item_tooltip_enabled_7f690926},
	{"Godot.NativeCalls::godot_icall_ItemList_set_item_tooltip_c1ffd74f", (void*)godot_icall_ItemList_set_item_tooltip_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_ItemList_get_item_tooltip_44fc4c5a", (void*)godot_icall_ItemList_get_item_tooltip_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_ItemList_select_4ae8febd", (void*)godot_icall_ItemList_select_4ae8febd},
	{"Godot.NativeCalls::godot_icall_ItemList_unselect_e1ae93bc", (void*)godot_icall_ItemList_unselect_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ItemList_unselect_all_c8e54a7b", (void*)godot_icall_ItemList_unselect_all_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_ItemList_is_selected_7f690926", (void*)godot_icall_ItemList_is_selected_7f690926},
	{"Godot.NativeCalls::godot_icall_ItemList_get_selected_items_2a166acd", (void*)godot_icall_ItemList_get_selected_items_2a166acd},
	{"Godot.NativeCalls::godot_icall_ItemList_move_item_807eefe4", (void*)godot_icall_ItemList_move_item_807eefe4},
	{"Godot.NativeCalls::godot_icall_ItemList_get_item_count_1f886eb0", (void*)godot_icall_ItemList_get_item_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ItemList_remove_item_e1ae93bc", (void*)godot_icall_ItemList_remove_item_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ItemList_clear_c8e54a7b", (void*)godot_icall_ItemList_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_ItemList_sort_items_by_text_c8e54a7b", (void*)godot_icall_ItemList_sort_items_by_text_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_ItemList_set_fixed_column_width_e1ae93bc", (void*)godot_icall_ItemList_set_fixed_column_width_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ItemList_get_fixed_column_width_1f886eb0", (void*)godot_icall_ItemList_get_fixed_column_width_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ItemList_set_same_column_width_ba24800b", (void*)godot_icall_ItemList_set_same_column_width_ba24800b},
	{"Godot.NativeCalls::godot_icall_ItemList_is_same_column_width_68fe5f59", (void*)godot_icall_ItemList_is_same_column_width_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ItemList_set_max_text_lines_e1ae93bc", (void*)godot_icall_ItemList_set_max_text_lines_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ItemList_get_max_text_lines_1f886eb0", (void*)godot_icall_ItemList_get_max_text_lines_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ItemList_set_max_columns_e1ae93bc", (void*)godot_icall_ItemList_set_max_columns_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ItemList_get_max_columns_1f886eb0", (void*)godot_icall_ItemList_get_max_columns_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ItemList_set_select_mode_e9c9a461", (void*)godot_icall_ItemList_set_select_mode_e9c9a461},
	{"Godot.NativeCalls::godot_icall_ItemList_get_select_mode_4182cf2c", (void*)godot_icall_ItemList_get_select_mode_4182cf2c},
	{"Godot.NativeCalls::godot_icall_ItemList_set_icon_mode_fb9050ac", (void*)godot_icall_ItemList_set_icon_mode_fb9050ac},
	{"Godot.NativeCalls::godot_icall_ItemList_get_icon_mode_936fea8f", (void*)godot_icall_ItemList_get_icon_mode_936fea8f},
	{"Godot.NativeCalls::godot_icall_ItemList_set_fixed_icon_size_6df7471e", (void*)godot_icall_ItemList_set_fixed_icon_size_6df7471e},
	{"Godot.NativeCalls::godot_icall_ItemList_get_fixed_icon_size_9b4ea24e", (void*)godot_icall_ItemList_get_fixed_icon_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_ItemList_set_icon_scale_904508bb", (void*)godot_icall_ItemList_set_icon_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_ItemList_get_icon_scale_4edcd7a9", (void*)godot_icall_ItemList_get_icon_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ItemList_set_allow_rmb_select_ba24800b", (void*)godot_icall_ItemList_set_allow_rmb_select_ba24800b},
	{"Godot.NativeCalls::godot_icall_ItemList_get_allow_rmb_select_68fe5f59", (void*)godot_icall_ItemList_get_allow_rmb_select_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ItemList_set_allow_reselect_ba24800b", (void*)godot_icall_ItemList_set_allow_reselect_ba24800b},
	{"Godot.NativeCalls::godot_icall_ItemList_get_allow_reselect_68fe5f59", (void*)godot_icall_ItemList_get_allow_reselect_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ItemList_set_auto_height_ba24800b", (void*)godot_icall_ItemList_set_auto_height_ba24800b},
	{"Godot.NativeCalls::godot_icall_ItemList_has_auto_height_68fe5f59", (void*)godot_icall_ItemList_has_auto_height_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ItemList_is_anything_selected_68fe5f59", (void*)godot_icall_ItemList_is_anything_selected_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ItemList_get_item_at_position_25107011", (void*)godot_icall_ItemList_get_item_at_position_25107011},
	{"Godot.NativeCalls::godot_icall_ItemList_ensure_current_is_visible_c8e54a7b", (void*)godot_icall_ItemList_ensure_current_is_visible_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_ItemList_get_v_scroll_37ab5951", (void*)godot_icall_ItemList_get_v_scroll_37ab5951},
	{"Godot.NativeCalls::godot_icall_ItemList__set_items_2923a790", (void*)godot_icall_ItemList__set_items_2923a790},
	{"Godot.NativeCalls::godot_icall_ItemList__get_items_d80382d4", (void*)godot_icall_ItemList__get_items_d80382d4},
	{"Godot.NativeCalls::godot_icall_JSONParseResult_get_error_f04570f5", (void*)godot_icall_JSONParseResult_get_error_f04570f5},
	{"Godot.NativeCalls::godot_icall_JSONParseResult_get_error_string_97be4a2e", (void*)godot_icall_JSONParseResult_get_error_string_97be4a2e},
	{"Godot.NativeCalls::godot_icall_JSONParseResult_get_error_line_1f886eb0", (void*)godot_icall_JSONParseResult_get_error_line_1f886eb0},
	{"Godot.NativeCalls::godot_icall_JSONParseResult_get_result_a08d6f10", (void*)godot_icall_JSONParseResult_get_result_a08d6f10},
	{"Godot.NativeCalls::godot_icall_JSONParseResult_set_error_32ed9677", (void*)godot_icall_JSONParseResult_set_error_32ed9677},
	{"Godot.NativeCalls::godot_icall_JSONParseResult_set_error_string_3ca14953", (void*)godot_icall_JSONParseResult_set_error_string_3ca14953},
	{"Godot.NativeCalls::godot_icall_JSONParseResult_set_error_line_e1ae93bc", (void*)godot_icall_JSONParseResult_set_error_line_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_JSONParseResult_set_result_62b5905c", (void*)godot_icall_JSONParseResult_set_result_62b5905c},
	{"Godot.NativeCalls::godot_icall_JSONRPC_set_scope_4cd1e22", (void*)godot_icall_JSONRPC_set_scope_4cd1e22},
	{"Godot.NativeCalls::godot_icall_JSONRPC_process_action_ee8b7da4", (void*)godot_icall_JSONRPC_process_action_ee8b7da4},
	{"Godot.NativeCalls::godot_icall_JSONRPC_process_string_dcc9abdc", (void*)godot_icall_JSONRPC_process_string_dcc9abdc},
	{"Godot.NativeCalls::godot_icall_JSONRPC_make_request_b9fe3487", (void*)godot_icall_JSONRPC_make_request_b9fe3487},
	{"Godot.NativeCalls::godot_icall_JSONRPC_make_response_d7e07b59", (void*)godot_icall_JSONRPC_make_response_d7e07b59},
	{"Godot.NativeCalls::godot_icall_JSONRPC_make_notification_9bc3858", (void*)godot_icall_JSONRPC_make_notification_9bc3858},
	{"Godot.NativeCalls::godot_icall_JSONRPC_make_response_error_b5cbfc6d", (void*)godot_icall_JSONRPC_make_response_error_b5cbfc6d},
	{"Godot.NativeCalls::godot_icall_Joint_set_node_a_1e08804", (void*)godot_icall_Joint_set_node_a_1e08804},
	{"Godot.NativeCalls::godot_icall_Joint_get_node_a_bf425768", (void*)godot_icall_Joint_get_node_a_bf425768},
	{"Godot.NativeCalls::godot_icall_Joint_set_node_b_1e08804", (void*)godot_icall_Joint_set_node_b_1e08804},
	{"Godot.NativeCalls::godot_icall_Joint_get_node_b_bf425768", (void*)godot_icall_Joint_get_node_b_bf425768},
	{"Godot.NativeCalls::godot_icall_Joint_set_solver_priority_e1ae93bc", (void*)godot_icall_Joint_set_solver_priority_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Joint_get_solver_priority_1f886eb0", (void*)godot_icall_Joint_get_solver_priority_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Joint_set_exclude_nodes_from_collision_ba24800b", (void*)godot_icall_Joint_set_exclude_nodes_from_collision_ba24800b},
	{"Godot.NativeCalls::godot_icall_Joint_get_exclude_nodes_from_collision_68fe5f59", (void*)godot_icall_Joint_get_exclude_nodes_from_collision_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Joint2D_set_node_a_1e08804", (void*)godot_icall_Joint2D_set_node_a_1e08804},
	{"Godot.NativeCalls::godot_icall_Joint2D_get_node_a_bf425768", (void*)godot_icall_Joint2D_get_node_a_bf425768},
	{"Godot.NativeCalls::godot_icall_Joint2D_set_node_b_1e08804", (void*)godot_icall_Joint2D_set_node_b_1e08804},
	{"Godot.NativeCalls::godot_icall_Joint2D_get_node_b_bf425768", (void*)godot_icall_Joint2D_get_node_b_bf425768},
	{"Godot.NativeCalls::godot_icall_Joint2D_set_bias_904508bb", (void*)godot_icall_Joint2D_set_bias_904508bb},
	{"Godot.NativeCalls::godot_icall_Joint2D_get_bias_4edcd7a9", (void*)godot_icall_Joint2D_get_bias_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Joint2D_set_exclude_nodes_from_collision_ba24800b", (void*)godot_icall_Joint2D_set_exclude_nodes_from_collision_ba24800b},
	{"Godot.NativeCalls::godot_icall_Joint2D_get_exclude_nodes_from_collision_68fe5f59", (void*)godot_icall_Joint2D_get_exclude_nodes_from_collision_68fe5f59},
	{"Godot.NativeCalls::godot_icall_KinematicBody_move_and_collide_6581a079", (void*)godot_icall_KinematicBody_move_and_collide_6581a079},
	{"Godot.NativeCalls::godot_icall_KinematicBody_move_and_slide_5e9a3c5", (void*)godot_icall_KinematicBody_move_and_slide_5e9a3c5},
	{"Godot.NativeCalls::godot_icall_KinematicBody_move_and_slide_with_snap_3088b58", (void*)godot_icall_KinematicBody_move_and_slide_with_snap_3088b58},
	{"Godot.NativeCalls::godot_icall_KinematicBody_test_move_a1317cdc", (void*)godot_icall_KinematicBody_test_move_a1317cdc},
	{"Godot.NativeCalls::godot_icall_KinematicBody_is_on_floor_68fe5f59", (void*)godot_icall_KinematicBody_is_on_floor_68fe5f59},
	{"Godot.NativeCalls::godot_icall_KinematicBody_is_on_ceiling_68fe5f59", (void*)godot_icall_KinematicBody_is_on_ceiling_68fe5f59},
	{"Godot.NativeCalls::godot_icall_KinematicBody_is_on_wall_68fe5f59", (void*)godot_icall_KinematicBody_is_on_wall_68fe5f59},
	{"Godot.NativeCalls::godot_icall_KinematicBody_get_floor_normal_9b4ea24f", (void*)godot_icall_KinematicBody_get_floor_normal_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_KinematicBody_get_floor_velocity_9b4ea24f", (void*)godot_icall_KinematicBody_get_floor_velocity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_KinematicBody_set_axis_lock_cb8f1f44", (void*)godot_icall_KinematicBody_set_axis_lock_cb8f1f44},
	{"Godot.NativeCalls::godot_icall_KinematicBody_get_axis_lock_81481178", (void*)godot_icall_KinematicBody_get_axis_lock_81481178},
	{"Godot.NativeCalls::godot_icall_KinematicBody_set_safe_margin_904508bb", (void*)godot_icall_KinematicBody_set_safe_margin_904508bb},
	{"Godot.NativeCalls::godot_icall_KinematicBody_get_safe_margin_4edcd7a9", (void*)godot_icall_KinematicBody_get_safe_margin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_KinematicBody_get_slide_count_1f886eb0", (void*)godot_icall_KinematicBody_get_slide_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_KinematicBody_get_slide_collision_76c75dcd", (void*)godot_icall_KinematicBody_get_slide_collision_76c75dcd},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_move_and_collide_9cbd18b4", (void*)godot_icall_KinematicBody2D_move_and_collide_9cbd18b4},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_move_and_slide_3a69bb33", (void*)godot_icall_KinematicBody2D_move_and_slide_3a69bb33},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_move_and_slide_with_snap_3f02eca8", (void*)godot_icall_KinematicBody2D_move_and_slide_with_snap_3f02eca8},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_test_move_37a505a0", (void*)godot_icall_KinematicBody2D_test_move_37a505a0},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_is_on_floor_68fe5f59", (void*)godot_icall_KinematicBody2D_is_on_floor_68fe5f59},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_is_on_ceiling_68fe5f59", (void*)godot_icall_KinematicBody2D_is_on_ceiling_68fe5f59},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_is_on_wall_68fe5f59", (void*)godot_icall_KinematicBody2D_is_on_wall_68fe5f59},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_get_floor_normal_9b4ea24e", (void*)godot_icall_KinematicBody2D_get_floor_normal_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_get_floor_velocity_9b4ea24e", (void*)godot_icall_KinematicBody2D_get_floor_velocity_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_set_safe_margin_904508bb", (void*)godot_icall_KinematicBody2D_set_safe_margin_904508bb},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_get_safe_margin_4edcd7a9", (void*)godot_icall_KinematicBody2D_get_safe_margin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_get_slide_count_1f886eb0", (void*)godot_icall_KinematicBody2D_get_slide_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_get_slide_collision_e7401c33", (void*)godot_icall_KinematicBody2D_get_slide_collision_e7401c33},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_set_sync_to_physics_ba24800b", (void*)godot_icall_KinematicBody2D_set_sync_to_physics_ba24800b},
	{"Godot.NativeCalls::godot_icall_KinematicBody2D_is_sync_to_physics_enabled_68fe5f59", (void*)godot_icall_KinematicBody2D_is_sync_to_physics_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_KinematicCollision_get_position_9b4ea24f", (void*)godot_icall_KinematicCollision_get_position_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_KinematicCollision_get_normal_9b4ea24f", (void*)godot_icall_KinematicCollision_get_normal_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_KinematicCollision_get_travel_9b4ea24f", (void*)godot_icall_KinematicCollision_get_travel_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_KinematicCollision_get_remainder_9b4ea24f", (void*)godot_icall_KinematicCollision_get_remainder_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_KinematicCollision_get_local_shape_5bd95814", (void*)godot_icall_KinematicCollision_get_local_shape_5bd95814},
	{"Godot.NativeCalls::godot_icall_KinematicCollision_get_collider_5bd95814", (void*)godot_icall_KinematicCollision_get_collider_5bd95814},
	{"Godot.NativeCalls::godot_icall_KinematicCollision_get_collider_id_4bb7c348", (void*)godot_icall_KinematicCollision_get_collider_id_4bb7c348},
	{"Godot.NativeCalls::godot_icall_KinematicCollision_get_collider_shape_5bd95814", (void*)godot_icall_KinematicCollision_get_collider_shape_5bd95814},
	{"Godot.NativeCalls::godot_icall_KinematicCollision_get_collider_shape_index_1f886eb0", (void*)godot_icall_KinematicCollision_get_collider_shape_index_1f886eb0},
	{"Godot.NativeCalls::godot_icall_KinematicCollision_get_collider_velocity_9b4ea24f", (void*)godot_icall_KinematicCollision_get_collider_velocity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_KinematicCollision_get_collider_metadata_a08d6f10", (void*)godot_icall_KinematicCollision_get_collider_metadata_a08d6f10},
	{"Godot.NativeCalls::godot_icall_KinematicCollision2D_get_position_9b4ea24e", (void*)godot_icall_KinematicCollision2D_get_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_KinematicCollision2D_get_normal_9b4ea24e", (void*)godot_icall_KinematicCollision2D_get_normal_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_KinematicCollision2D_get_travel_9b4ea24e", (void*)godot_icall_KinematicCollision2D_get_travel_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_KinematicCollision2D_get_remainder_9b4ea24e", (void*)godot_icall_KinematicCollision2D_get_remainder_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_KinematicCollision2D_get_local_shape_5bd95814", (void*)godot_icall_KinematicCollision2D_get_local_shape_5bd95814},
	{"Godot.NativeCalls::godot_icall_KinematicCollision2D_get_collider_5bd95814", (void*)godot_icall_KinematicCollision2D_get_collider_5bd95814},
	{"Godot.NativeCalls::godot_icall_KinematicCollision2D_get_collider_id_4bb7c348", (void*)godot_icall_KinematicCollision2D_get_collider_id_4bb7c348},
	{"Godot.NativeCalls::godot_icall_KinematicCollision2D_get_collider_shape_5bd95814", (void*)godot_icall_KinematicCollision2D_get_collider_shape_5bd95814},
	{"Godot.NativeCalls::godot_icall_KinematicCollision2D_get_collider_shape_index_1f886eb0", (void*)godot_icall_KinematicCollision2D_get_collider_shape_index_1f886eb0},
	{"Godot.NativeCalls::godot_icall_KinematicCollision2D_get_collider_velocity_9b4ea24e", (void*)godot_icall_KinematicCollision2D_get_collider_velocity_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_KinematicCollision2D_get_collider_metadata_a08d6f10", (void*)godot_icall_KinematicCollision2D_get_collider_metadata_a08d6f10},
	{"Godot.NativeCalls::godot_icall_Label_set_align_210ae4fc", (void*)godot_icall_Label_set_align_210ae4fc},
	{"Godot.NativeCalls::godot_icall_Label_get_align_1f690bdf", (void*)godot_icall_Label_get_align_1f690bdf},
	{"Godot.NativeCalls::godot_icall_Label_set_valign_bc7bac80", (void*)godot_icall_Label_set_valign_bc7bac80},
	{"Godot.NativeCalls::godot_icall_Label_get_valign_6adb7be4", (void*)godot_icall_Label_get_valign_6adb7be4},
	{"Godot.NativeCalls::godot_icall_Label_set_text_2f29e819", (void*)godot_icall_Label_set_text_2f29e819},
	{"Godot.NativeCalls::godot_icall_Label_get_text_97be4a2e", (void*)godot_icall_Label_get_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Label_set_autowrap_ba24800b", (void*)godot_icall_Label_set_autowrap_ba24800b},
	{"Godot.NativeCalls::godot_icall_Label_has_autowrap_68fe5f59", (void*)godot_icall_Label_has_autowrap_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Label_set_clip_text_ba24800b", (void*)godot_icall_Label_set_clip_text_ba24800b},
	{"Godot.NativeCalls::godot_icall_Label_is_clipping_text_68fe5f59", (void*)godot_icall_Label_is_clipping_text_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Label_set_uppercase_ba24800b", (void*)godot_icall_Label_set_uppercase_ba24800b},
	{"Godot.NativeCalls::godot_icall_Label_is_uppercase_68fe5f59", (void*)godot_icall_Label_is_uppercase_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Label_get_line_height_1f886eb0", (void*)godot_icall_Label_get_line_height_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Label_get_line_count_1f886eb0", (void*)godot_icall_Label_get_line_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Label_get_visible_line_count_1f886eb0", (void*)godot_icall_Label_get_visible_line_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Label_get_total_character_count_1f886eb0", (void*)godot_icall_Label_get_total_character_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Label_set_visible_characters_e1ae93bc", (void*)godot_icall_Label_set_visible_characters_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Label_get_visible_characters_1f886eb0", (void*)godot_icall_Label_get_visible_characters_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Label_set_percent_visible_904508bb", (void*)godot_icall_Label_set_percent_visible_904508bb},
	{"Godot.NativeCalls::godot_icall_Label_get_percent_visible_4edcd7a9", (void*)godot_icall_Label_get_percent_visible_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Label_set_lines_skipped_e1ae93bc", (void*)godot_icall_Label_set_lines_skipped_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Label_get_lines_skipped_1f886eb0", (void*)godot_icall_Label_get_lines_skipped_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Label_set_max_lines_visible_e1ae93bc", (void*)godot_icall_Label_set_max_lines_visible_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Label_get_max_lines_visible_1f886eb0", (void*)godot_icall_Label_get_max_lines_visible_1f886eb0},
	{"Godot.NativeCalls::godot_icall_LargeTexture_add_piece_60684100", (void*)godot_icall_LargeTexture_add_piece_60684100},
	{"Godot.NativeCalls::godot_icall_LargeTexture_set_piece_offset_3c383c4a", (void*)godot_icall_LargeTexture_set_piece_offset_3c383c4a},
	{"Godot.NativeCalls::godot_icall_LargeTexture_set_piece_texture_f20a84e", (void*)godot_icall_LargeTexture_set_piece_texture_f20a84e},
	{"Godot.NativeCalls::godot_icall_LargeTexture_set_size_6df7471e", (void*)godot_icall_LargeTexture_set_size_6df7471e},
	{"Godot.NativeCalls::godot_icall_LargeTexture_clear_c8e54a7b", (void*)godot_icall_LargeTexture_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_LargeTexture_get_piece_count_1f886eb0", (void*)godot_icall_LargeTexture_get_piece_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_LargeTexture_get_piece_offset_23728632", (void*)godot_icall_LargeTexture_get_piece_offset_23728632},
	{"Godot.NativeCalls::godot_icall_LargeTexture_get_piece_texture_561b2831", (void*)godot_icall_LargeTexture_get_piece_texture_561b2831},
	{"Godot.NativeCalls::godot_icall_LargeTexture__set_data_2923a790", (void*)godot_icall_LargeTexture__set_data_2923a790},
	{"Godot.NativeCalls::godot_icall_LargeTexture__get_data_d80382d4", (void*)godot_icall_LargeTexture__get_data_d80382d4},
	{"Godot.NativeCalls::godot_icall_Light_set_editor_only_ba24800b", (void*)godot_icall_Light_set_editor_only_ba24800b},
	{"Godot.NativeCalls::godot_icall_Light_is_editor_only_68fe5f59", (void*)godot_icall_Light_is_editor_only_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Light_set_param_f9d26d1", (void*)godot_icall_Light_set_param_f9d26d1},
	{"Godot.NativeCalls::godot_icall_Light_get_param_178e6d10", (void*)godot_icall_Light_get_param_178e6d10},
	{"Godot.NativeCalls::godot_icall_Light_set_shadow_ba24800b", (void*)godot_icall_Light_set_shadow_ba24800b},
	{"Godot.NativeCalls::godot_icall_Light_has_shadow_68fe5f59", (void*)godot_icall_Light_has_shadow_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Light_set_negative_ba24800b", (void*)godot_icall_Light_set_negative_ba24800b},
	{"Godot.NativeCalls::godot_icall_Light_is_negative_68fe5f59", (void*)godot_icall_Light_is_negative_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Light_set_cull_mask_966aab97", (void*)godot_icall_Light_set_cull_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_Light_get_cull_mask_54cc76d5", (void*)godot_icall_Light_get_cull_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_Light_set_color_f2e3b5aa", (void*)godot_icall_Light_set_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_Light_get_color_304394ba", (void*)godot_icall_Light_get_color_304394ba},
	{"Godot.NativeCalls::godot_icall_Light_set_shadow_reverse_cull_face_ba24800b", (void*)godot_icall_Light_set_shadow_reverse_cull_face_ba24800b},
	{"Godot.NativeCalls::godot_icall_Light_get_shadow_reverse_cull_face_68fe5f59", (void*)godot_icall_Light_get_shadow_reverse_cull_face_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Light_set_shadow_color_f2e3b5aa", (void*)godot_icall_Light_set_shadow_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_Light_get_shadow_color_304394ba", (void*)godot_icall_Light_get_shadow_color_304394ba},
	{"Godot.NativeCalls::godot_icall_Light_set_bake_mode_492dba53", (void*)godot_icall_Light_set_bake_mode_492dba53},
	{"Godot.NativeCalls::godot_icall_Light_get_bake_mode_78058511", (void*)godot_icall_Light_get_bake_mode_78058511},
	{"Godot.NativeCalls::godot_icall_Light2D_set_enabled_ba24800b", (void*)godot_icall_Light2D_set_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Light2D_is_enabled_68fe5f59", (void*)godot_icall_Light2D_is_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Light2D_set_editor_only_ba24800b", (void*)godot_icall_Light2D_set_editor_only_ba24800b},
	{"Godot.NativeCalls::godot_icall_Light2D_is_editor_only_68fe5f59", (void*)godot_icall_Light2D_is_editor_only_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Light2D_set_texture_7eecd31a", (void*)godot_icall_Light2D_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_Light2D_get_texture_ac462e4a", (void*)godot_icall_Light2D_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_Light2D_set_texture_offset_6df7471e", (void*)godot_icall_Light2D_set_texture_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_Light2D_get_texture_offset_9b4ea24e", (void*)godot_icall_Light2D_get_texture_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Light2D_set_color_f2e3b5aa", (void*)godot_icall_Light2D_set_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_Light2D_get_color_304394ba", (void*)godot_icall_Light2D_get_color_304394ba},
	{"Godot.NativeCalls::godot_icall_Light2D_set_height_904508bb", (void*)godot_icall_Light2D_set_height_904508bb},
	{"Godot.NativeCalls::godot_icall_Light2D_get_height_4edcd7a9", (void*)godot_icall_Light2D_get_height_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Light2D_set_energy_904508bb", (void*)godot_icall_Light2D_set_energy_904508bb},
	{"Godot.NativeCalls::godot_icall_Light2D_get_energy_4edcd7a9", (void*)godot_icall_Light2D_get_energy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Light2D_set_texture_scale_904508bb", (void*)godot_icall_Light2D_set_texture_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_Light2D_get_texture_scale_4edcd7a9", (void*)godot_icall_Light2D_get_texture_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Light2D_set_z_range_min_e1ae93bc", (void*)godot_icall_Light2D_set_z_range_min_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Light2D_get_z_range_min_1f886eb0", (void*)godot_icall_Light2D_get_z_range_min_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Light2D_set_z_range_max_e1ae93bc", (void*)godot_icall_Light2D_set_z_range_max_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Light2D_get_z_range_max_1f886eb0", (void*)godot_icall_Light2D_get_z_range_max_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Light2D_set_layer_range_min_e1ae93bc", (void*)godot_icall_Light2D_set_layer_range_min_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Light2D_get_layer_range_min_1f886eb0", (void*)godot_icall_Light2D_get_layer_range_min_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Light2D_set_layer_range_max_e1ae93bc", (void*)godot_icall_Light2D_set_layer_range_max_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Light2D_get_layer_range_max_1f886eb0", (void*)godot_icall_Light2D_get_layer_range_max_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Light2D_set_item_cull_mask_e1ae93bc", (void*)godot_icall_Light2D_set_item_cull_mask_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Light2D_get_item_cull_mask_1f886eb0", (void*)godot_icall_Light2D_get_item_cull_mask_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Light2D_set_item_shadow_cull_mask_e1ae93bc", (void*)godot_icall_Light2D_set_item_shadow_cull_mask_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Light2D_get_item_shadow_cull_mask_1f886eb0", (void*)godot_icall_Light2D_get_item_shadow_cull_mask_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Light2D_set_mode_c991bc70", (void*)godot_icall_Light2D_set_mode_c991bc70},
	{"Godot.NativeCalls::godot_icall_Light2D_get_mode_cac44bc3", (void*)godot_icall_Light2D_get_mode_cac44bc3},
	{"Godot.NativeCalls::godot_icall_Light2D_set_shadow_enabled_ba24800b", (void*)godot_icall_Light2D_set_shadow_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Light2D_is_shadow_enabled_68fe5f59", (void*)godot_icall_Light2D_is_shadow_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Light2D_set_shadow_buffer_size_e1ae93bc", (void*)godot_icall_Light2D_set_shadow_buffer_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Light2D_get_shadow_buffer_size_1f886eb0", (void*)godot_icall_Light2D_get_shadow_buffer_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Light2D_set_shadow_smooth_904508bb", (void*)godot_icall_Light2D_set_shadow_smooth_904508bb},
	{"Godot.NativeCalls::godot_icall_Light2D_get_shadow_smooth_4edcd7a9", (void*)godot_icall_Light2D_get_shadow_smooth_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Light2D_set_shadow_gradient_length_904508bb", (void*)godot_icall_Light2D_set_shadow_gradient_length_904508bb},
	{"Godot.NativeCalls::godot_icall_Light2D_get_shadow_gradient_length_4edcd7a9", (void*)godot_icall_Light2D_get_shadow_gradient_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Light2D_set_shadow_filter_9906f0d", (void*)godot_icall_Light2D_set_shadow_filter_9906f0d},
	{"Godot.NativeCalls::godot_icall_Light2D_get_shadow_filter_8fd689b8", (void*)godot_icall_Light2D_get_shadow_filter_8fd689b8},
	{"Godot.NativeCalls::godot_icall_Light2D_set_shadow_color_f2e3b5aa", (void*)godot_icall_Light2D_set_shadow_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_Light2D_get_shadow_color_304394ba", (void*)godot_icall_Light2D_get_shadow_color_304394ba},
	{"Godot.NativeCalls::godot_icall_LightOccluder2D_set_occluder_polygon_bbfd2230", (void*)godot_icall_LightOccluder2D_set_occluder_polygon_bbfd2230},
	{"Godot.NativeCalls::godot_icall_LightOccluder2D_get_occluder_polygon_6954fd34", (void*)godot_icall_LightOccluder2D_get_occluder_polygon_6954fd34},
	{"Godot.NativeCalls::godot_icall_LightOccluder2D_set_occluder_light_mask_e1ae93bc", (void*)godot_icall_LightOccluder2D_set_occluder_light_mask_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_LightOccluder2D_get_occluder_light_mask_1f886eb0", (void*)godot_icall_LightOccluder2D_get_occluder_light_mask_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Line2D_set_points_3a3116bd", (void*)godot_icall_Line2D_set_points_3a3116bd},
	{"Godot.NativeCalls::godot_icall_Line2D_get_points_e910f1af", (void*)godot_icall_Line2D_get_points_e910f1af},
	{"Godot.NativeCalls::godot_icall_Line2D_set_point_position_3c383c4a", (void*)godot_icall_Line2D_set_point_position_3c383c4a},
	{"Godot.NativeCalls::godot_icall_Line2D_get_point_position_23728632", (void*)godot_icall_Line2D_get_point_position_23728632},
	{"Godot.NativeCalls::godot_icall_Line2D_get_point_count_1f886eb0", (void*)godot_icall_Line2D_get_point_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Line2D_add_point_3af8c6ae", (void*)godot_icall_Line2D_add_point_3af8c6ae},
	{"Godot.NativeCalls::godot_icall_Line2D_remove_point_e1ae93bc", (void*)godot_icall_Line2D_remove_point_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Line2D_clear_points_c8e54a7b", (void*)godot_icall_Line2D_clear_points_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Line2D_set_width_904508bb", (void*)godot_icall_Line2D_set_width_904508bb},
	{"Godot.NativeCalls::godot_icall_Line2D_get_width_4edcd7a9", (void*)godot_icall_Line2D_get_width_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Line2D_set_curve_dbaac24a", (void*)godot_icall_Line2D_set_curve_dbaac24a},
	{"Godot.NativeCalls::godot_icall_Line2D_get_curve_98c1d1a", (void*)godot_icall_Line2D_get_curve_98c1d1a},
	{"Godot.NativeCalls::godot_icall_Line2D_set_default_color_f2e3b5aa", (void*)godot_icall_Line2D_set_default_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_Line2D_get_default_color_304394ba", (void*)godot_icall_Line2D_get_default_color_304394ba},
	{"Godot.NativeCalls::godot_icall_Line2D_set_gradient_487c5873", (void*)godot_icall_Line2D_set_gradient_487c5873},
	{"Godot.NativeCalls::godot_icall_Line2D_get_gradient_76d5a6f1", (void*)godot_icall_Line2D_get_gradient_76d5a6f1},
	{"Godot.NativeCalls::godot_icall_Line2D_set_texture_7eecd31a", (void*)godot_icall_Line2D_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_Line2D_get_texture_ac462e4a", (void*)godot_icall_Line2D_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_Line2D_set_texture_mode_eb9ffbe7", (void*)godot_icall_Line2D_set_texture_mode_eb9ffbe7},
	{"Godot.NativeCalls::godot_icall_Line2D_get_texture_mode_19b74685", (void*)godot_icall_Line2D_get_texture_mode_19b74685},
	{"Godot.NativeCalls::godot_icall_Line2D_set_joint_mode_101ab874", (void*)godot_icall_Line2D_set_joint_mode_101ab874},
	{"Godot.NativeCalls::godot_icall_Line2D_get_joint_mode_cf3c86f8", (void*)godot_icall_Line2D_get_joint_mode_cf3c86f8},
	{"Godot.NativeCalls::godot_icall_Line2D_set_begin_cap_mode_bcfd99d0", (void*)godot_icall_Line2D_set_begin_cap_mode_bcfd99d0},
	{"Godot.NativeCalls::godot_icall_Line2D_get_begin_cap_mode_6a556894", (void*)godot_icall_Line2D_get_begin_cap_mode_6a556894},
	{"Godot.NativeCalls::godot_icall_Line2D_set_end_cap_mode_bcfd99d0", (void*)godot_icall_Line2D_set_end_cap_mode_bcfd99d0},
	{"Godot.NativeCalls::godot_icall_Line2D_get_end_cap_mode_6a556894", (void*)godot_icall_Line2D_get_end_cap_mode_6a556894},
	{"Godot.NativeCalls::godot_icall_Line2D_set_sharp_limit_904508bb", (void*)godot_icall_Line2D_set_sharp_limit_904508bb},
	{"Godot.NativeCalls::godot_icall_Line2D_get_sharp_limit_4edcd7a9", (void*)godot_icall_Line2D_get_sharp_limit_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Line2D_set_round_precision_e1ae93bc", (void*)godot_icall_Line2D_set_round_precision_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Line2D_get_round_precision_1f886eb0", (void*)godot_icall_Line2D_get_round_precision_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Line2D_set_antialiased_ba24800b", (void*)godot_icall_Line2D_set_antialiased_ba24800b},
	{"Godot.NativeCalls::godot_icall_Line2D_get_antialiased_68fe5f59", (void*)godot_icall_Line2D_get_antialiased_68fe5f59},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_align_e83a8d0a", (void*)godot_icall_LineEdit_set_align_e83a8d0a},
	{"Godot.NativeCalls::godot_icall_LineEdit_get_align_3e41aa45", (void*)godot_icall_LineEdit_get_align_3e41aa45},
	{"Godot.NativeCalls::godot_icall_LineEdit_clear_c8e54a7b", (void*)godot_icall_LineEdit_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_LineEdit_select_807eefe4", (void*)godot_icall_LineEdit_select_807eefe4},
	{"Godot.NativeCalls::godot_icall_LineEdit_select_all_c8e54a7b", (void*)godot_icall_LineEdit_select_all_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_LineEdit_deselect_c8e54a7b", (void*)godot_icall_LineEdit_deselect_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_text_3ca14953", (void*)godot_icall_LineEdit_set_text_3ca14953},
	{"Godot.NativeCalls::godot_icall_LineEdit_get_text_97be4a2e", (void*)godot_icall_LineEdit_get_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_placeholder_2f29e819", (void*)godot_icall_LineEdit_set_placeholder_2f29e819},
	{"Godot.NativeCalls::godot_icall_LineEdit_get_placeholder_97be4a2e", (void*)godot_icall_LineEdit_get_placeholder_97be4a2e},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_placeholder_alpha_904508bb", (void*)godot_icall_LineEdit_set_placeholder_alpha_904508bb},
	{"Godot.NativeCalls::godot_icall_LineEdit_get_placeholder_alpha_4edcd7a9", (void*)godot_icall_LineEdit_get_placeholder_alpha_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_cursor_position_e1ae93bc", (void*)godot_icall_LineEdit_set_cursor_position_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_LineEdit_get_cursor_position_1f886eb0", (void*)godot_icall_LineEdit_get_cursor_position_1f886eb0},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_expand_to_text_length_ba24800b", (void*)godot_icall_LineEdit_set_expand_to_text_length_ba24800b},
	{"Godot.NativeCalls::godot_icall_LineEdit_get_expand_to_text_length_68fe5f59", (void*)godot_icall_LineEdit_get_expand_to_text_length_68fe5f59},
	{"Godot.NativeCalls::godot_icall_LineEdit_cursor_set_blink_enabled_ba24800b", (void*)godot_icall_LineEdit_cursor_set_blink_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_LineEdit_cursor_get_blink_enabled_68fe5f59", (void*)godot_icall_LineEdit_cursor_get_blink_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_LineEdit_cursor_set_blink_speed_904508bb", (void*)godot_icall_LineEdit_cursor_set_blink_speed_904508bb},
	{"Godot.NativeCalls::godot_icall_LineEdit_cursor_get_blink_speed_4edcd7a9", (void*)godot_icall_LineEdit_cursor_get_blink_speed_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_max_length_e1ae93bc", (void*)godot_icall_LineEdit_set_max_length_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_LineEdit_get_max_length_1f886eb0", (void*)godot_icall_LineEdit_get_max_length_1f886eb0},
	{"Godot.NativeCalls::godot_icall_LineEdit_append_at_cursor_3ca14953", (void*)godot_icall_LineEdit_append_at_cursor_3ca14953},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_editable_ba24800b", (void*)godot_icall_LineEdit_set_editable_ba24800b},
	{"Godot.NativeCalls::godot_icall_LineEdit_is_editable_68fe5f59", (void*)godot_icall_LineEdit_is_editable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_secret_ba24800b", (void*)godot_icall_LineEdit_set_secret_ba24800b},
	{"Godot.NativeCalls::godot_icall_LineEdit_is_secret_68fe5f59", (void*)godot_icall_LineEdit_is_secret_68fe5f59},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_secret_character_6964ff3e", (void*)godot_icall_LineEdit_set_secret_character_6964ff3e},
	{"Godot.NativeCalls::godot_icall_LineEdit_get_secret_character_97be4a2e", (void*)godot_icall_LineEdit_get_secret_character_97be4a2e},
	{"Godot.NativeCalls::godot_icall_LineEdit_menu_option_e1ae93bc", (void*)godot_icall_LineEdit_menu_option_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_LineEdit_get_menu_d0a780e0", (void*)godot_icall_LineEdit_get_menu_d0a780e0},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_context_menu_enabled_ba24800b", (void*)godot_icall_LineEdit_set_context_menu_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_LineEdit_is_context_menu_enabled_68fe5f59", (void*)godot_icall_LineEdit_is_context_menu_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_clear_button_enabled_ba24800b", (void*)godot_icall_LineEdit_set_clear_button_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_LineEdit_is_clear_button_enabled_68fe5f59", (void*)godot_icall_LineEdit_is_clear_button_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_shortcut_keys_enabled_ba24800b", (void*)godot_icall_LineEdit_set_shortcut_keys_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_LineEdit_is_shortcut_keys_enabled_68fe5f59", (void*)godot_icall_LineEdit_is_shortcut_keys_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_selecting_enabled_ba24800b", (void*)godot_icall_LineEdit_set_selecting_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_LineEdit_is_selecting_enabled_68fe5f59", (void*)godot_icall_LineEdit_is_selecting_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_LineEdit_set_right_icon_7eecd31a", (void*)godot_icall_LineEdit_set_right_icon_7eecd31a},
	{"Godot.NativeCalls::godot_icall_LineEdit_get_right_icon_ac462e4a", (void*)godot_icall_LineEdit_get_right_icon_ac462e4a},
	{"Godot.NativeCalls::godot_icall_LineShape2D_set_normal_6df7471e", (void*)godot_icall_LineShape2D_set_normal_6df7471e},
	{"Godot.NativeCalls::godot_icall_LineShape2D_get_normal_9b4ea24e", (void*)godot_icall_LineShape2D_get_normal_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_LineShape2D_set_d_904508bb", (void*)godot_icall_LineShape2D_set_d_904508bb},
	{"Godot.NativeCalls::godot_icall_LineShape2D_get_d_4edcd7a9", (void*)godot_icall_LineShape2D_get_d_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_LinkButton_set_text_3ca14953", (void*)godot_icall_LinkButton_set_text_3ca14953},
	{"Godot.NativeCalls::godot_icall_LinkButton_get_text_97be4a2e", (void*)godot_icall_LinkButton_get_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall_LinkButton_set_underline_mode_2dc424aa", (void*)godot_icall_LinkButton_set_underline_mode_2dc424aa},
	{"Godot.NativeCalls::godot_icall_LinkButton_get_underline_mode_db5e03ba", (void*)godot_icall_LinkButton_get_underline_mode_db5e03ba},
	{"Godot.NativeCalls::godot_icall_Listener_make_current_c8e54a7b", (void*)godot_icall_Listener_make_current_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Listener_clear_current_c8e54a7b", (void*)godot_icall_Listener_clear_current_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Listener_is_current_68fe5f59", (void*)godot_icall_Listener_is_current_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Listener_get_listener_transform_a3fb649b", (void*)godot_icall_Listener_get_listener_transform_a3fb649b},
	{"Godot.NativeCalls::godot_icall_MainLoop_input_event_7ac4986f", (void*)godot_icall_MainLoop_input_event_7ac4986f},
	{"Godot.NativeCalls::godot_icall_MainLoop_input_text_3ca14953", (void*)godot_icall_MainLoop_input_text_3ca14953},
	{"Godot.NativeCalls::godot_icall_MainLoop_init_c8e54a7b", (void*)godot_icall_MainLoop_init_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_MainLoop_iteration_2e15e021", (void*)godot_icall_MainLoop_iteration_2e15e021},
	{"Godot.NativeCalls::godot_icall_MainLoop_idle_2e15e021", (void*)godot_icall_MainLoop_idle_2e15e021},
	{"Godot.NativeCalls::godot_icall_MainLoop_finish_c8e54a7b", (void*)godot_icall_MainLoop_finish_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Material_set_next_pass_be2d0ec2", (void*)godot_icall_Material_set_next_pass_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_Material_get_next_pass_6d04d9a2", (void*)godot_icall_Material_get_next_pass_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_Material_set_render_priority_e1ae93bc", (void*)godot_icall_Material_set_render_priority_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Material_get_render_priority_1f886eb0", (void*)godot_icall_Material_get_render_priority_1f886eb0},
	{"Godot.NativeCalls::godot_icall_MenuButton_get_popup_d0a780e0", (void*)godot_icall_MenuButton_get_popup_d0a780e0},
	{"Godot.NativeCalls::godot_icall_MenuButton__set_items_2923a790", (void*)godot_icall_MenuButton__set_items_2923a790},
	{"Godot.NativeCalls::godot_icall_MenuButton__get_items_d80382d4", (void*)godot_icall_MenuButton__get_items_d80382d4},
	{"Godot.NativeCalls::godot_icall_MenuButton_set_switch_on_hover_ba24800b", (void*)godot_icall_MenuButton_set_switch_on_hover_ba24800b},
	{"Godot.NativeCalls::godot_icall_MenuButton_is_switch_on_hover_68fe5f59", (void*)godot_icall_MenuButton_is_switch_on_hover_68fe5f59},
	{"Godot.NativeCalls::godot_icall_MenuButton_set_disable_shortcuts_ba24800b", (void*)godot_icall_MenuButton_set_disable_shortcuts_ba24800b},
	{"Godot.NativeCalls::godot_icall_Mesh_set_lightmap_size_hint_6df7471e", (void*)godot_icall_Mesh_set_lightmap_size_hint_6df7471e},
	{"Godot.NativeCalls::godot_icall_Mesh_get_lightmap_size_hint_9b4ea24e", (void*)godot_icall_Mesh_get_lightmap_size_hint_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Mesh_get_aabb_2dbf935b", (void*)godot_icall_Mesh_get_aabb_2dbf935b},
	{"Godot.NativeCalls::godot_icall_Mesh_get_surface_count_1f886eb0", (void*)godot_icall_Mesh_get_surface_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Mesh_surface_get_arrays_2ca2fcca", (void*)godot_icall_Mesh_surface_get_arrays_2ca2fcca},
	{"Godot.NativeCalls::godot_icall_Mesh_surface_get_blend_shape_arrays_2ca2fcca", (void*)godot_icall_Mesh_surface_get_blend_shape_arrays_2ca2fcca},
	{"Godot.NativeCalls::godot_icall_Mesh_surface_set_material_4ee274f6", (void*)godot_icall_Mesh_surface_set_material_4ee274f6},
	{"Godot.NativeCalls::godot_icall_Mesh_surface_get_material_77335ef3", (void*)godot_icall_Mesh_surface_get_material_77335ef3},
	{"Godot.NativeCalls::godot_icall_Mesh_create_trimesh_shape_34362f58", (void*)godot_icall_Mesh_create_trimesh_shape_34362f58},
	{"Godot.NativeCalls::godot_icall_Mesh_create_convex_shape_34362f58", (void*)godot_icall_Mesh_create_convex_shape_34362f58},
	{"Godot.NativeCalls::godot_icall_Mesh_create_outline_ddd437dd", (void*)godot_icall_Mesh_create_outline_ddd437dd},
	{"Godot.NativeCalls::godot_icall_Mesh_get_faces_36607e58", (void*)godot_icall_Mesh_get_faces_36607e58},
	{"Godot.NativeCalls::godot_icall_Mesh_generate_triangle_mesh_c1c0bb02", (void*)godot_icall_Mesh_generate_triangle_mesh_c1c0bb02},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_clear_c8e54a7b", (void*)godot_icall_MeshDataTool_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_create_from_surface_ca706a5e", (void*)godot_icall_MeshDataTool_create_from_surface_ca706a5e},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_commit_to_surface_531b94c4", (void*)godot_icall_MeshDataTool_commit_to_surface_531b94c4},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_format_1f886eb0", (void*)godot_icall_MeshDataTool_get_format_1f886eb0},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_vertex_count_1f886eb0", (void*)godot_icall_MeshDataTool_get_vertex_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_edge_count_1f886eb0", (void*)godot_icall_MeshDataTool_get_edge_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_face_count_1f886eb0", (void*)godot_icall_MeshDataTool_get_face_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_set_vertex_3c383c4b", (void*)godot_icall_MeshDataTool_set_vertex_3c383c4b},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_vertex_237286f3", (void*)godot_icall_MeshDataTool_get_vertex_237286f3},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_set_vertex_normal_3c383c4b", (void*)godot_icall_MeshDataTool_set_vertex_normal_3c383c4b},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_vertex_normal_237286f3", (void*)godot_icall_MeshDataTool_get_vertex_normal_237286f3},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_set_vertex_tangent_28e48c99", (void*)godot_icall_MeshDataTool_set_vertex_tangent_28e48c99},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_vertex_tangent_2706dd75", (void*)godot_icall_MeshDataTool_get_vertex_tangent_2706dd75},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_set_vertex_uv_3c383c4a", (void*)godot_icall_MeshDataTool_set_vertex_uv_3c383c4a},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_vertex_uv_23728632", (void*)godot_icall_MeshDataTool_get_vertex_uv_23728632},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_set_vertex_uv2_3c383c4a", (void*)godot_icall_MeshDataTool_set_vertex_uv2_3c383c4a},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_vertex_uv2_23728632", (void*)godot_icall_MeshDataTool_get_vertex_uv2_23728632},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_set_vertex_color_932531de", (void*)godot_icall_MeshDataTool_set_vertex_color_932531de},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_vertex_color_eaf668ad", (void*)godot_icall_MeshDataTool_get_vertex_color_eaf668ad},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_set_vertex_bones_3da8dbe8", (void*)godot_icall_MeshDataTool_set_vertex_bones_3da8dbe8},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_vertex_bones_67f65c91", (void*)godot_icall_MeshDataTool_get_vertex_bones_67f65c91},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_set_vertex_weights_aadf79b1", (void*)godot_icall_MeshDataTool_set_vertex_weights_aadf79b1},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_vertex_weights_8a6351b5", (void*)godot_icall_MeshDataTool_get_vertex_weights_8a6351b5},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_set_vertex_meta_37bef04", (void*)godot_icall_MeshDataTool_set_vertex_meta_37bef04},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_vertex_meta_a9b2673d", (void*)godot_icall_MeshDataTool_get_vertex_meta_a9b2673d},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_vertex_edges_67f65c91", (void*)godot_icall_MeshDataTool_get_vertex_edges_67f65c91},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_vertex_faces_67f65c91", (void*)godot_icall_MeshDataTool_get_vertex_faces_67f65c91},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_edge_vertex_4170d7f7", (void*)godot_icall_MeshDataTool_get_edge_vertex_4170d7f7},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_edge_faces_67f65c91", (void*)godot_icall_MeshDataTool_get_edge_faces_67f65c91},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_set_edge_meta_37bef04", (void*)godot_icall_MeshDataTool_set_edge_meta_37bef04},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_edge_meta_a9b2673d", (void*)godot_icall_MeshDataTool_get_edge_meta_a9b2673d},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_face_vertex_4170d7f7", (void*)godot_icall_MeshDataTool_get_face_vertex_4170d7f7},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_face_edge_4170d7f7", (void*)godot_icall_MeshDataTool_get_face_edge_4170d7f7},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_set_face_meta_37bef04", (void*)godot_icall_MeshDataTool_set_face_meta_37bef04},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_face_meta_a9b2673d", (void*)godot_icall_MeshDataTool_get_face_meta_a9b2673d},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_face_normal_237286f3", (void*)godot_icall_MeshDataTool_get_face_normal_237286f3},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_set_material_be2d0ec2", (void*)godot_icall_MeshDataTool_set_material_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_MeshDataTool_get_material_6d04d9a2", (void*)godot_icall_MeshDataTool_get_material_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_MeshInstance_set_mesh_d5d30806", (void*)godot_icall_MeshInstance_set_mesh_d5d30806},
	{"Godot.NativeCalls::godot_icall_MeshInstance_get_mesh_1372d766", (void*)godot_icall_MeshInstance_get_mesh_1372d766},
	{"Godot.NativeCalls::godot_icall_MeshInstance_set_skeleton_path_1e08804", (void*)godot_icall_MeshInstance_set_skeleton_path_1e08804},
	{"Godot.NativeCalls::godot_icall_MeshInstance_get_skeleton_path_bf425768", (void*)godot_icall_MeshInstance_get_skeleton_path_bf425768},
	{"Godot.NativeCalls::godot_icall_MeshInstance_set_skin_55b47932", (void*)godot_icall_MeshInstance_set_skin_55b47932},
	{"Godot.NativeCalls::godot_icall_MeshInstance_get_skin_938dc832", (void*)godot_icall_MeshInstance_get_skin_938dc832},
	{"Godot.NativeCalls::godot_icall_MeshInstance_get_surface_material_count_1f886eb0", (void*)godot_icall_MeshInstance_get_surface_material_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_MeshInstance_set_surface_material_4ee274f6", (void*)godot_icall_MeshInstance_set_surface_material_4ee274f6},
	{"Godot.NativeCalls::godot_icall_MeshInstance_get_surface_material_77335ef3", (void*)godot_icall_MeshInstance_get_surface_material_77335ef3},
	{"Godot.NativeCalls::godot_icall_MeshInstance_create_trimesh_collision_c8e54a7b", (void*)godot_icall_MeshInstance_create_trimesh_collision_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_MeshInstance_create_convex_collision_c8e54a7b", (void*)godot_icall_MeshInstance_create_convex_collision_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_MeshInstance_create_debug_tangents_c8e54a7b", (void*)godot_icall_MeshInstance_create_debug_tangents_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_MeshInstance2D_set_mesh_d5d30806", (void*)godot_icall_MeshInstance2D_set_mesh_d5d30806},
	{"Godot.NativeCalls::godot_icall_MeshInstance2D_get_mesh_1372d766", (void*)godot_icall_MeshInstance2D_get_mesh_1372d766},
	{"Godot.NativeCalls::godot_icall_MeshInstance2D_set_texture_7eecd31a", (void*)godot_icall_MeshInstance2D_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_MeshInstance2D_get_texture_ac462e4a", (void*)godot_icall_MeshInstance2D_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_MeshInstance2D_set_normal_map_7eecd31a", (void*)godot_icall_MeshInstance2D_set_normal_map_7eecd31a},
	{"Godot.NativeCalls::godot_icall_MeshInstance2D_get_normal_map_ac462e4a", (void*)godot_icall_MeshInstance2D_get_normal_map_ac462e4a},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_create_item_e1ae93bc", (void*)godot_icall_MeshLibrary_create_item_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_set_item_name_cd663605", (void*)godot_icall_MeshLibrary_set_item_name_cd663605},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_set_item_mesh_b41476b2", (void*)godot_icall_MeshLibrary_set_item_mesh_b41476b2},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_set_item_navmesh_af6e76cc", (void*)godot_icall_MeshLibrary_set_item_navmesh_af6e76cc},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_set_item_navmesh_transform_7ede1ff", (void*)godot_icall_MeshLibrary_set_item_navmesh_transform_7ede1ff},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_set_item_shapes_fbe503c0", (void*)godot_icall_MeshLibrary_set_item_shapes_fbe503c0},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_set_item_preview_f20a84e", (void*)godot_icall_MeshLibrary_set_item_preview_f20a84e},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_get_item_name_44fc4c5a", (void*)godot_icall_MeshLibrary_get_item_name_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_get_item_mesh_8c20a0a4", (void*)godot_icall_MeshLibrary_get_item_mesh_8c20a0a4},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_get_item_navmesh_d36cc793", (void*)godot_icall_MeshLibrary_get_item_navmesh_d36cc793},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_get_item_navmesh_transform_466c8cd4", (void*)godot_icall_MeshLibrary_get_item_navmesh_transform_466c8cd4},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_get_item_shapes_2ca2fcca", (void*)godot_icall_MeshLibrary_get_item_shapes_2ca2fcca},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_get_item_preview_561b2831", (void*)godot_icall_MeshLibrary_get_item_preview_561b2831},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_remove_item_e1ae93bc", (void*)godot_icall_MeshLibrary_remove_item_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_find_item_by_name_6d3db7c6", (void*)godot_icall_MeshLibrary_find_item_by_name_6d3db7c6},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_clear_c8e54a7b", (void*)godot_icall_MeshLibrary_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_get_item_list_2a166acd", (void*)godot_icall_MeshLibrary_get_item_list_2a166acd},
	{"Godot.NativeCalls::godot_icall_MeshLibrary_get_last_unused_item_id_1f886eb0", (void*)godot_icall_MeshLibrary_get_last_unused_item_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_MeshTexture_set_mesh_d5d30806", (void*)godot_icall_MeshTexture_set_mesh_d5d30806},
	{"Godot.NativeCalls::godot_icall_MeshTexture_get_mesh_1372d766", (void*)godot_icall_MeshTexture_get_mesh_1372d766},
	{"Godot.NativeCalls::godot_icall_MeshTexture_set_image_size_6df7471e", (void*)godot_icall_MeshTexture_set_image_size_6df7471e},
	{"Godot.NativeCalls::godot_icall_MeshTexture_get_image_size_9b4ea24e", (void*)godot_icall_MeshTexture_get_image_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_MeshTexture_set_base_texture_7eecd31a", (void*)godot_icall_MeshTexture_set_base_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_MeshTexture_get_base_texture_ac462e4a", (void*)godot_icall_MeshTexture_get_base_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_MultiMesh_set_mesh_d5d30806", (void*)godot_icall_MultiMesh_set_mesh_d5d30806},
	{"Godot.NativeCalls::godot_icall_MultiMesh_get_mesh_1372d766", (void*)godot_icall_MultiMesh_get_mesh_1372d766},
	{"Godot.NativeCalls::godot_icall_MultiMesh_set_color_format_a5711d97", (void*)godot_icall_MultiMesh_set_color_format_a5711d97},
	{"Godot.NativeCalls::godot_icall_MultiMesh_get_color_format_9cc1c4b2", (void*)godot_icall_MultiMesh_get_color_format_9cc1c4b2},
	{"Godot.NativeCalls::godot_icall_MultiMesh_set_custom_data_format_c99560c9", (void*)godot_icall_MultiMesh_set_custom_data_format_c99560c9},
	{"Godot.NativeCalls::godot_icall_MultiMesh_get_custom_data_format_7c79cc24", (void*)godot_icall_MultiMesh_get_custom_data_format_7c79cc24},
	{"Godot.NativeCalls::godot_icall_MultiMesh_set_transform_format_2b7d36f4", (void*)godot_icall_MultiMesh_set_transform_format_2b7d36f4},
	{"Godot.NativeCalls::godot_icall_MultiMesh_get_transform_format_869d2427", (void*)godot_icall_MultiMesh_get_transform_format_869d2427},
	{"Godot.NativeCalls::godot_icall_MultiMesh_set_instance_count_e1ae93bc", (void*)godot_icall_MultiMesh_set_instance_count_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_MultiMesh_get_instance_count_1f886eb0", (void*)godot_icall_MultiMesh_get_instance_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_MultiMesh_set_visible_instance_count_e1ae93bc", (void*)godot_icall_MultiMesh_set_visible_instance_count_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_MultiMesh_get_visible_instance_count_1f886eb0", (void*)godot_icall_MultiMesh_get_visible_instance_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_MultiMesh_set_instance_transform_7ede1ff", (void*)godot_icall_MultiMesh_set_instance_transform_7ede1ff},
	{"Godot.NativeCalls::godot_icall_MultiMesh_set_instance_transform_2d_ae22ee09", (void*)godot_icall_MultiMesh_set_instance_transform_2d_ae22ee09},
	{"Godot.NativeCalls::godot_icall_MultiMesh_get_instance_transform_466c8cd4", (void*)godot_icall_MultiMesh_get_instance_transform_466c8cd4},
	{"Godot.NativeCalls::godot_icall_MultiMesh_get_instance_transform_2d_1f6977a1", (void*)godot_icall_MultiMesh_get_instance_transform_2d_1f6977a1},
	{"Godot.NativeCalls::godot_icall_MultiMesh_set_instance_color_932531de", (void*)godot_icall_MultiMesh_set_instance_color_932531de},
	{"Godot.NativeCalls::godot_icall_MultiMesh_get_instance_color_eaf668ad", (void*)godot_icall_MultiMesh_get_instance_color_eaf668ad},
	{"Godot.NativeCalls::godot_icall_MultiMesh_set_instance_custom_data_932531de", (void*)godot_icall_MultiMesh_set_instance_custom_data_932531de},
	{"Godot.NativeCalls::godot_icall_MultiMesh_get_instance_custom_data_eaf668ad", (void*)godot_icall_MultiMesh_get_instance_custom_data_eaf668ad},
	{"Godot.NativeCalls::godot_icall_MultiMesh_set_as_bulk_array_b2a2204a", (void*)godot_icall_MultiMesh_set_as_bulk_array_b2a2204a},
	{"Godot.NativeCalls::godot_icall_MultiMesh_get_aabb_2dbf935b", (void*)godot_icall_MultiMesh_get_aabb_2dbf935b},
	{"Godot.NativeCalls::godot_icall_MultiMesh__set_transform_array_88c6a314", (void*)godot_icall_MultiMesh__set_transform_array_88c6a314},
	{"Godot.NativeCalls::godot_icall_MultiMesh__get_transform_array_36607e58", (void*)godot_icall_MultiMesh__get_transform_array_36607e58},
	{"Godot.NativeCalls::godot_icall_MultiMesh__set_transform_2d_array_3a3116bd", (void*)godot_icall_MultiMesh__set_transform_2d_array_3a3116bd},
	{"Godot.NativeCalls::godot_icall_MultiMesh__get_transform_2d_array_e910f1af", (void*)godot_icall_MultiMesh__get_transform_2d_array_e910f1af},
	{"Godot.NativeCalls::godot_icall_MultiMesh__set_color_array_22e90985", (void*)godot_icall_MultiMesh__set_color_array_22e90985},
	{"Godot.NativeCalls::godot_icall_MultiMesh__get_color_array_e048d8e7", (void*)godot_icall_MultiMesh__get_color_array_e048d8e7},
	{"Godot.NativeCalls::godot_icall_MultiMesh__set_custom_data_array_22e90985", (void*)godot_icall_MultiMesh__set_custom_data_array_22e90985},
	{"Godot.NativeCalls::godot_icall_MultiMesh__get_custom_data_array_e048d8e7", (void*)godot_icall_MultiMesh__get_custom_data_array_e048d8e7},
	{"Godot.NativeCalls::godot_icall_MultiMeshInstance_set_multimesh_872cf6cd", (void*)godot_icall_MultiMeshInstance_set_multimesh_872cf6cd},
	{"Godot.NativeCalls::godot_icall_MultiMeshInstance_get_multimesh_4606519f", (void*)godot_icall_MultiMeshInstance_get_multimesh_4606519f},
	{"Godot.NativeCalls::godot_icall_MultiMeshInstance2D_set_multimesh_872cf6cd", (void*)godot_icall_MultiMeshInstance2D_set_multimesh_872cf6cd},
	{"Godot.NativeCalls::godot_icall_MultiMeshInstance2D_get_multimesh_4606519f", (void*)godot_icall_MultiMeshInstance2D_get_multimesh_4606519f},
	{"Godot.NativeCalls::godot_icall_MultiMeshInstance2D_set_texture_7eecd31a", (void*)godot_icall_MultiMeshInstance2D_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_MultiMeshInstance2D_get_texture_ac462e4a", (void*)godot_icall_MultiMeshInstance2D_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_MultiMeshInstance2D_set_normal_map_7eecd31a", (void*)godot_icall_MultiMeshInstance2D_set_normal_map_7eecd31a},
	{"Godot.NativeCalls::godot_icall_MultiMeshInstance2D_get_normal_map_ac462e4a", (void*)godot_icall_MultiMeshInstance2D_get_normal_map_ac462e4a},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_set_root_node_598860a7", (void*)godot_icall_MultiplayerAPI_set_root_node_598860a7},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_send_bytes_26cb9d38", (void*)godot_icall_MultiplayerAPI_send_bytes_26cb9d38},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_has_network_peer_68fe5f59", (void*)godot_icall_MultiplayerAPI_has_network_peer_68fe5f59},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_get_network_peer_9929695a", (void*)godot_icall_MultiplayerAPI_get_network_peer_9929695a},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_get_network_unique_id_1f886eb0", (void*)godot_icall_MultiplayerAPI_get_network_unique_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_is_network_server_68fe5f59", (void*)godot_icall_MultiplayerAPI_is_network_server_68fe5f59},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_get_rpc_sender_id_1f886eb0", (void*)godot_icall_MultiplayerAPI_get_rpc_sender_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_set_network_peer_6a099e0a", (void*)godot_icall_MultiplayerAPI_set_network_peer_6a099e0a},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_poll_c8e54a7b", (void*)godot_icall_MultiplayerAPI_poll_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_clear_c8e54a7b", (void*)godot_icall_MultiplayerAPI_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_get_network_connected_peers_2a166acd", (void*)godot_icall_MultiplayerAPI_get_network_connected_peers_2a166acd},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_set_refuse_new_network_connections_ba24800b", (void*)godot_icall_MultiplayerAPI_set_refuse_new_network_connections_ba24800b},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_is_refusing_new_network_connections_68fe5f59", (void*)godot_icall_MultiplayerAPI_is_refusing_new_network_connections_68fe5f59},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_set_allow_object_decoding_ba24800b", (void*)godot_icall_MultiplayerAPI_set_allow_object_decoding_ba24800b},
	{"Godot.NativeCalls::godot_icall_MultiplayerAPI_is_object_decoding_allowed_68fe5f59", (void*)godot_icall_MultiplayerAPI_is_object_decoding_allowed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Navigation_get_rid_6623661e", (void*)godot_icall_Navigation_get_rid_6623661e},
	{"Godot.NativeCalls::godot_icall_Navigation_get_simple_path_b6e4683e", (void*)godot_icall_Navigation_get_simple_path_b6e4683e},
	{"Godot.NativeCalls::godot_icall_Navigation_set_up_vector_6df7471d", (void*)godot_icall_Navigation_set_up_vector_6df7471d},
	{"Godot.NativeCalls::godot_icall_Navigation_get_up_vector_9b4ea24f", (void*)godot_icall_Navigation_get_up_vector_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Navigation_set_cell_size_904508bb", (void*)godot_icall_Navigation_set_cell_size_904508bb},
	{"Godot.NativeCalls::godot_icall_Navigation_get_cell_size_4edcd7a9", (void*)godot_icall_Navigation_get_cell_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Navigation_set_edge_connection_margin_904508bb", (void*)godot_icall_Navigation_set_edge_connection_margin_904508bb},
	{"Godot.NativeCalls::godot_icall_Navigation_get_edge_connection_margin_4edcd7a9", (void*)godot_icall_Navigation_get_edge_connection_margin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Navigation2D_get_rid_6623661e", (void*)godot_icall_Navigation2D_get_rid_6623661e},
	{"Godot.NativeCalls::godot_icall_Navigation2D_get_simple_path_9ddca2d", (void*)godot_icall_Navigation2D_get_simple_path_9ddca2d},
	{"Godot.NativeCalls::godot_icall_Navigation2D_set_cell_size_904508bb", (void*)godot_icall_Navigation2D_set_cell_size_904508bb},
	{"Godot.NativeCalls::godot_icall_Navigation2D_get_cell_size_4edcd7a9", (void*)godot_icall_Navigation2D_get_cell_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Navigation2D_set_edge_connection_margin_904508bb", (void*)godot_icall_Navigation2D_set_edge_connection_margin_904508bb},
	{"Godot.NativeCalls::godot_icall_Navigation2D_get_edge_connection_margin_4edcd7a9", (void*)godot_icall_Navigation2D_get_edge_connection_margin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_set_target_desired_distance_904508bb", (void*)godot_icall_NavigationAgent_set_target_desired_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_target_desired_distance_4edcd7a9", (void*)godot_icall_NavigationAgent_get_target_desired_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_set_radius_904508bb", (void*)godot_icall_NavigationAgent_set_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_radius_4edcd7a9", (void*)godot_icall_NavigationAgent_get_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_set_agent_height_offset_904508bb", (void*)godot_icall_NavigationAgent_set_agent_height_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_agent_height_offset_4edcd7a9", (void*)godot_icall_NavigationAgent_get_agent_height_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_set_ignore_y_ba24800b", (void*)godot_icall_NavigationAgent_set_ignore_y_ba24800b},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_ignore_y_68fe5f59", (void*)godot_icall_NavigationAgent_get_ignore_y_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_set_navigation_598860a7", (void*)godot_icall_NavigationAgent_set_navigation_598860a7},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_navigation_87a9bfc5", (void*)godot_icall_NavigationAgent_get_navigation_87a9bfc5},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_set_neighbor_dist_904508bb", (void*)godot_icall_NavigationAgent_set_neighbor_dist_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_neighbor_dist_4edcd7a9", (void*)godot_icall_NavigationAgent_get_neighbor_dist_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_set_max_neighbors_e1ae93bc", (void*)godot_icall_NavigationAgent_set_max_neighbors_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_max_neighbors_1f886eb0", (void*)godot_icall_NavigationAgent_get_max_neighbors_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_set_time_horizon_904508bb", (void*)godot_icall_NavigationAgent_set_time_horizon_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_time_horizon_4edcd7a9", (void*)godot_icall_NavigationAgent_get_time_horizon_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_set_max_speed_904508bb", (void*)godot_icall_NavigationAgent_set_max_speed_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_max_speed_4edcd7a9", (void*)godot_icall_NavigationAgent_get_max_speed_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_set_path_max_distance_904508bb", (void*)godot_icall_NavigationAgent_set_path_max_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_path_max_distance_4edcd7a9", (void*)godot_icall_NavigationAgent_get_path_max_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_set_target_location_6df7471d", (void*)godot_icall_NavigationAgent_set_target_location_6df7471d},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_target_location_9b4ea24f", (void*)godot_icall_NavigationAgent_get_target_location_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_next_location_9b4ea24f", (void*)godot_icall_NavigationAgent_get_next_location_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_distance_to_target_4edcd7a9", (void*)godot_icall_NavigationAgent_distance_to_target_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_set_velocity_6df7471d", (void*)godot_icall_NavigationAgent_set_velocity_6df7471d},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_nav_path_36607e58", (void*)godot_icall_NavigationAgent_get_nav_path_36607e58},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_nav_path_index_1f886eb0", (void*)godot_icall_NavigationAgent_get_nav_path_index_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_is_target_reached_68fe5f59", (void*)godot_icall_NavigationAgent_is_target_reached_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_is_target_reachable_68fe5f59", (void*)godot_icall_NavigationAgent_is_target_reachable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_is_navigation_finished_68fe5f59", (void*)godot_icall_NavigationAgent_is_navigation_finished_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NavigationAgent_get_final_location_9b4ea24f", (void*)godot_icall_NavigationAgent_get_final_location_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_set_target_desired_distance_904508bb", (void*)godot_icall_NavigationAgent2D_set_target_desired_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_target_desired_distance_4edcd7a9", (void*)godot_icall_NavigationAgent2D_get_target_desired_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_set_radius_904508bb", (void*)godot_icall_NavigationAgent2D_set_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_radius_4edcd7a9", (void*)godot_icall_NavigationAgent2D_get_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_set_navigation_598860a7", (void*)godot_icall_NavigationAgent2D_set_navigation_598860a7},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_navigation_87a9bfc5", (void*)godot_icall_NavigationAgent2D_get_navigation_87a9bfc5},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_set_neighbor_dist_904508bb", (void*)godot_icall_NavigationAgent2D_set_neighbor_dist_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_neighbor_dist_4edcd7a9", (void*)godot_icall_NavigationAgent2D_get_neighbor_dist_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_set_max_neighbors_e1ae93bc", (void*)godot_icall_NavigationAgent2D_set_max_neighbors_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_max_neighbors_1f886eb0", (void*)godot_icall_NavigationAgent2D_get_max_neighbors_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_set_time_horizon_904508bb", (void*)godot_icall_NavigationAgent2D_set_time_horizon_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_time_horizon_4edcd7a9", (void*)godot_icall_NavigationAgent2D_get_time_horizon_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_set_max_speed_904508bb", (void*)godot_icall_NavigationAgent2D_set_max_speed_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_max_speed_4edcd7a9", (void*)godot_icall_NavigationAgent2D_get_max_speed_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_set_path_max_distance_904508bb", (void*)godot_icall_NavigationAgent2D_set_path_max_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_path_max_distance_4edcd7a9", (void*)godot_icall_NavigationAgent2D_get_path_max_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_set_target_location_6df7471e", (void*)godot_icall_NavigationAgent2D_set_target_location_6df7471e},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_target_location_9b4ea24e", (void*)godot_icall_NavigationAgent2D_get_target_location_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_next_location_9b4ea24e", (void*)godot_icall_NavigationAgent2D_get_next_location_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_distance_to_target_4edcd7a9", (void*)godot_icall_NavigationAgent2D_distance_to_target_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_set_velocity_6df7471e", (void*)godot_icall_NavigationAgent2D_set_velocity_6df7471e},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_nav_path_e910f1af", (void*)godot_icall_NavigationAgent2D_get_nav_path_e910f1af},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_nav_path_index_1f886eb0", (void*)godot_icall_NavigationAgent2D_get_nav_path_index_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_is_target_reached_68fe5f59", (void*)godot_icall_NavigationAgent2D_is_target_reached_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_is_target_reachable_68fe5f59", (void*)godot_icall_NavigationAgent2D_is_target_reachable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_is_navigation_finished_68fe5f59", (void*)godot_icall_NavigationAgent2D_is_navigation_finished_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NavigationAgent2D_get_final_location_9b4ea24e", (void*)godot_icall_NavigationAgent2D_get_final_location_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_sample_partition_type_e1ae93bc", (void*)godot_icall_NavigationMesh_set_sample_partition_type_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_sample_partition_type_1f886eb0", (void*)godot_icall_NavigationMesh_get_sample_partition_type_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_parsed_geometry_type_e1ae93bc", (void*)godot_icall_NavigationMesh_set_parsed_geometry_type_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_parsed_geometry_type_1f886eb0", (void*)godot_icall_NavigationMesh_get_parsed_geometry_type_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_collision_mask_966aab97", (void*)godot_icall_NavigationMesh_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_collision_mask_54cc76d5", (void*)godot_icall_NavigationMesh_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_collision_mask_bit_4ae8febd", (void*)godot_icall_NavigationMesh_set_collision_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_collision_mask_bit_7f690926", (void*)godot_icall_NavigationMesh_get_collision_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_source_geometry_mode_e1ae93bc", (void*)godot_icall_NavigationMesh_set_source_geometry_mode_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_source_geometry_mode_1f886eb0", (void*)godot_icall_NavigationMesh_get_source_geometry_mode_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_source_group_name_2f29e819", (void*)godot_icall_NavigationMesh_set_source_group_name_2f29e819},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_source_group_name_97be4a2e", (void*)godot_icall_NavigationMesh_get_source_group_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_cell_size_904508bb", (void*)godot_icall_NavigationMesh_set_cell_size_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_cell_size_4edcd7a9", (void*)godot_icall_NavigationMesh_get_cell_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_cell_height_904508bb", (void*)godot_icall_NavigationMesh_set_cell_height_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_cell_height_4edcd7a9", (void*)godot_icall_NavigationMesh_get_cell_height_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_agent_height_904508bb", (void*)godot_icall_NavigationMesh_set_agent_height_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_agent_height_4edcd7a9", (void*)godot_icall_NavigationMesh_get_agent_height_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_agent_radius_904508bb", (void*)godot_icall_NavigationMesh_set_agent_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_agent_radius_4edcd7a9", (void*)godot_icall_NavigationMesh_get_agent_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_agent_max_climb_904508bb", (void*)godot_icall_NavigationMesh_set_agent_max_climb_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_agent_max_climb_4edcd7a9", (void*)godot_icall_NavigationMesh_get_agent_max_climb_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_agent_max_slope_904508bb", (void*)godot_icall_NavigationMesh_set_agent_max_slope_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_agent_max_slope_4edcd7a9", (void*)godot_icall_NavigationMesh_get_agent_max_slope_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_region_min_size_904508bb", (void*)godot_icall_NavigationMesh_set_region_min_size_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_region_min_size_4edcd7a9", (void*)godot_icall_NavigationMesh_get_region_min_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_region_merge_size_904508bb", (void*)godot_icall_NavigationMesh_set_region_merge_size_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_region_merge_size_4edcd7a9", (void*)godot_icall_NavigationMesh_get_region_merge_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_edge_max_length_904508bb", (void*)godot_icall_NavigationMesh_set_edge_max_length_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_edge_max_length_4edcd7a9", (void*)godot_icall_NavigationMesh_get_edge_max_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_edge_max_error_904508bb", (void*)godot_icall_NavigationMesh_set_edge_max_error_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_edge_max_error_4edcd7a9", (void*)godot_icall_NavigationMesh_get_edge_max_error_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_verts_per_poly_904508bb", (void*)godot_icall_NavigationMesh_set_verts_per_poly_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_verts_per_poly_4edcd7a9", (void*)godot_icall_NavigationMesh_get_verts_per_poly_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_detail_sample_distance_904508bb", (void*)godot_icall_NavigationMesh_set_detail_sample_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_detail_sample_distance_4edcd7a9", (void*)godot_icall_NavigationMesh_get_detail_sample_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_detail_sample_max_error_904508bb", (void*)godot_icall_NavigationMesh_set_detail_sample_max_error_904508bb},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_detail_sample_max_error_4edcd7a9", (void*)godot_icall_NavigationMesh_get_detail_sample_max_error_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_filter_low_hanging_obstacles_ba24800b", (void*)godot_icall_NavigationMesh_set_filter_low_hanging_obstacles_ba24800b},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_filter_low_hanging_obstacles_68fe5f59", (void*)godot_icall_NavigationMesh_get_filter_low_hanging_obstacles_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_filter_ledge_spans_ba24800b", (void*)godot_icall_NavigationMesh_set_filter_ledge_spans_ba24800b},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_filter_ledge_spans_68fe5f59", (void*)godot_icall_NavigationMesh_get_filter_ledge_spans_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_filter_walkable_low_height_spans_ba24800b", (void*)godot_icall_NavigationMesh_set_filter_walkable_low_height_spans_ba24800b},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_filter_walkable_low_height_spans_68fe5f59", (void*)godot_icall_NavigationMesh_get_filter_walkable_low_height_spans_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_set_vertices_b8a866b9", (void*)godot_icall_NavigationMesh_set_vertices_b8a866b9},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_vertices_36607e58", (void*)godot_icall_NavigationMesh_get_vertices_36607e58},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_add_polygon_6b64efb8", (void*)godot_icall_NavigationMesh_add_polygon_6b64efb8},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_polygon_count_1f886eb0", (void*)godot_icall_NavigationMesh_get_polygon_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_get_polygon_67f65c91", (void*)godot_icall_NavigationMesh_get_polygon_67f65c91},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_clear_polygons_c8e54a7b", (void*)godot_icall_NavigationMesh_clear_polygons_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_NavigationMesh_create_from_mesh_d5d30806", (void*)godot_icall_NavigationMesh_create_from_mesh_d5d30806},
	{"Godot.NativeCalls::godot_icall_NavigationMesh__set_polygons_2923a790", (void*)godot_icall_NavigationMesh__set_polygons_2923a790},
	{"Godot.NativeCalls::godot_icall_NavigationMesh__get_polygons_d80382d4", (void*)godot_icall_NavigationMesh__get_polygons_d80382d4},
	{"Godot.NativeCalls::godot_icall_NavigationMeshGenerator_bake_cd00ac03", (void*)godot_icall_NavigationMeshGenerator_bake_cd00ac03},
	{"Godot.NativeCalls::godot_icall_NavigationMeshGenerator_clear_ded908a4", (void*)godot_icall_NavigationMeshGenerator_clear_ded908a4},
	{"Godot.NativeCalls::godot_icall_NavigationMeshInstance_set_navigation_mesh_ded908a4", (void*)godot_icall_NavigationMeshInstance_set_navigation_mesh_ded908a4},
	{"Godot.NativeCalls::godot_icall_NavigationMeshInstance_get_navigation_mesh_c78d7c8", (void*)godot_icall_NavigationMeshInstance_get_navigation_mesh_c78d7c8},
	{"Godot.NativeCalls::godot_icall_NavigationMeshInstance_set_enabled_ba24800b", (void*)godot_icall_NavigationMeshInstance_set_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_NavigationMeshInstance_is_enabled_68fe5f59", (void*)godot_icall_NavigationMeshInstance_is_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NavigationMeshInstance_bake_navigation_mesh_c8e54a7b", (void*)godot_icall_NavigationMeshInstance_bake_navigation_mesh_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_NavigationObstacle_set_navigation_598860a7", (void*)godot_icall_NavigationObstacle_set_navigation_598860a7},
	{"Godot.NativeCalls::godot_icall_NavigationObstacle_get_navigation_87a9bfc5", (void*)godot_icall_NavigationObstacle_get_navigation_87a9bfc5},
	{"Godot.NativeCalls::godot_icall_NavigationObstacle2D_set_navigation_598860a7", (void*)godot_icall_NavigationObstacle2D_set_navigation_598860a7},
	{"Godot.NativeCalls::godot_icall_NavigationObstacle2D_get_navigation_87a9bfc5", (void*)godot_icall_NavigationObstacle2D_get_navigation_87a9bfc5},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_set_vertices_b8a866ba", (void*)godot_icall_NavigationPolygon_set_vertices_b8a866ba},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_get_vertices_e910f1af", (void*)godot_icall_NavigationPolygon_get_vertices_e910f1af},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_add_polygon_6b64efb8", (void*)godot_icall_NavigationPolygon_add_polygon_6b64efb8},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_get_polygon_count_1f886eb0", (void*)godot_icall_NavigationPolygon_get_polygon_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_get_polygon_67f65c91", (void*)godot_icall_NavigationPolygon_get_polygon_67f65c91},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_clear_polygons_c8e54a7b", (void*)godot_icall_NavigationPolygon_clear_polygons_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_add_outline_3a3116bd", (void*)godot_icall_NavigationPolygon_add_outline_3a3116bd},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_add_outline_at_index_62a0cbe5", (void*)godot_icall_NavigationPolygon_add_outline_at_index_62a0cbe5},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_get_outline_count_1f886eb0", (void*)godot_icall_NavigationPolygon_get_outline_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_set_outline_caf66ceb", (void*)godot_icall_NavigationPolygon_set_outline_caf66ceb},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_get_outline_d550613b", (void*)godot_icall_NavigationPolygon_get_outline_d550613b},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_remove_outline_e1ae93bc", (void*)godot_icall_NavigationPolygon_remove_outline_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_clear_outlines_c8e54a7b", (void*)godot_icall_NavigationPolygon_clear_outlines_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon_make_polygons_from_outlines_c8e54a7b", (void*)godot_icall_NavigationPolygon_make_polygons_from_outlines_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon__set_polygons_2923a790", (void*)godot_icall_NavigationPolygon__set_polygons_2923a790},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon__get_polygons_d80382d4", (void*)godot_icall_NavigationPolygon__get_polygons_d80382d4},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon__set_outlines_2923a790", (void*)godot_icall_NavigationPolygon__set_outlines_2923a790},
	{"Godot.NativeCalls::godot_icall_NavigationPolygon__get_outlines_d80382d4", (void*)godot_icall_NavigationPolygon__get_outlines_d80382d4},
	{"Godot.NativeCalls::godot_icall_NavigationPolygonInstance_set_navigation_polygon_e7711b85", (void*)godot_icall_NavigationPolygonInstance_set_navigation_polygon_e7711b85},
	{"Godot.NativeCalls::godot_icall_NavigationPolygonInstance_get_navigation_polygon_25d0e6e7", (void*)godot_icall_NavigationPolygonInstance_get_navigation_polygon_25d0e6e7},
	{"Godot.NativeCalls::godot_icall_NavigationPolygonInstance_set_enabled_ba24800b", (void*)godot_icall_NavigationPolygonInstance_set_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_NavigationPolygonInstance_is_enabled_68fe5f59", (void*)godot_icall_NavigationPolygonInstance_is_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_create_server_88365f0", (void*)godot_icall_NetworkedMultiplayerENet_create_server_88365f0},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_create_client_d5ecd879", (void*)godot_icall_NetworkedMultiplayerENet_create_client_d5ecd879},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_close_connection_966aab97", (void*)godot_icall_NetworkedMultiplayerENet_close_connection_966aab97},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_disconnect_peer_4ae8febd", (void*)godot_icall_NetworkedMultiplayerENet_disconnect_peer_4ae8febd},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_set_compression_mode_2f36d35b", (void*)godot_icall_NetworkedMultiplayerENet_set_compression_mode_2f36d35b},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_get_compression_mode_33954c16", (void*)godot_icall_NetworkedMultiplayerENet_get_compression_mode_33954c16},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_set_bind_ip_6964ff3e", (void*)godot_icall_NetworkedMultiplayerENet_set_bind_ip_6964ff3e},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_get_peer_address_44fc4c5a", (void*)godot_icall_NetworkedMultiplayerENet_get_peer_address_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_get_peer_port_b835dea5", (void*)godot_icall_NetworkedMultiplayerENet_get_peer_port_b835dea5},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_get_packet_channel_1f886eb0", (void*)godot_icall_NetworkedMultiplayerENet_get_packet_channel_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_get_last_packet_channel_1f886eb0", (void*)godot_icall_NetworkedMultiplayerENet_get_last_packet_channel_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_set_transfer_channel_e1ae93bc", (void*)godot_icall_NetworkedMultiplayerENet_set_transfer_channel_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_get_transfer_channel_1f886eb0", (void*)godot_icall_NetworkedMultiplayerENet_get_transfer_channel_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_set_channel_count_e1ae93bc", (void*)godot_icall_NetworkedMultiplayerENet_set_channel_count_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_get_channel_count_1f886eb0", (void*)godot_icall_NetworkedMultiplayerENet_get_channel_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_set_always_ordered_ba24800b", (void*)godot_icall_NetworkedMultiplayerENet_set_always_ordered_ba24800b},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_is_always_ordered_68fe5f59", (void*)godot_icall_NetworkedMultiplayerENet_is_always_ordered_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_set_server_relay_enabled_ba24800b", (void*)godot_icall_NetworkedMultiplayerENet_set_server_relay_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerENet_is_server_relay_enabled_68fe5f59", (void*)godot_icall_NetworkedMultiplayerENet_is_server_relay_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerPeer_set_transfer_mode_3e225ea0", (void*)godot_icall_NetworkedMultiplayerPeer_set_transfer_mode_3e225ea0},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerPeer_get_transfer_mode_b4b121f3", (void*)godot_icall_NetworkedMultiplayerPeer_get_transfer_mode_b4b121f3},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerPeer_set_target_peer_e1ae93bc", (void*)godot_icall_NetworkedMultiplayerPeer_set_target_peer_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerPeer_get_packet_peer_1f886eb0", (void*)godot_icall_NetworkedMultiplayerPeer_get_packet_peer_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerPeer_poll_c8e54a7b", (void*)godot_icall_NetworkedMultiplayerPeer_poll_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerPeer_get_connection_status_b217d53e", (void*)godot_icall_NetworkedMultiplayerPeer_get_connection_status_b217d53e},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerPeer_get_unique_id_1f886eb0", (void*)godot_icall_NetworkedMultiplayerPeer_get_unique_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerPeer_set_refuse_new_connections_ba24800b", (void*)godot_icall_NetworkedMultiplayerPeer_set_refuse_new_connections_ba24800b},
	{"Godot.NativeCalls::godot_icall_NetworkedMultiplayerPeer_is_refusing_new_connections_68fe5f59", (void*)godot_icall_NetworkedMultiplayerPeer_is_refusing_new_connections_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_set_texture_7eecd31a", (void*)godot_icall_NinePatchRect_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_get_texture_ac462e4a", (void*)godot_icall_NinePatchRect_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_set_patch_margin_d167c784", (void*)godot_icall_NinePatchRect_set_patch_margin_d167c784},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_get_patch_margin_bbd2c228", (void*)godot_icall_NinePatchRect_get_patch_margin_bbd2c228},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_set_region_rect_a5ed61f1", (void*)godot_icall_NinePatchRect_set_region_rect_a5ed61f1},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_get_region_rect_6344c073", (void*)godot_icall_NinePatchRect_get_region_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_set_draw_center_ba24800b", (void*)godot_icall_NinePatchRect_set_draw_center_ba24800b},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_is_draw_center_enabled_68fe5f59", (void*)godot_icall_NinePatchRect_is_draw_center_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_set_h_axis_stretch_mode_8bcc0b0e", (void*)godot_icall_NinePatchRect_set_h_axis_stretch_mode_8bcc0b0e},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_get_h_axis_stretch_mode_3965d65e", (void*)godot_icall_NinePatchRect_get_h_axis_stretch_mode_3965d65e},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_set_v_axis_stretch_mode_8bcc0b0e", (void*)godot_icall_NinePatchRect_set_v_axis_stretch_mode_8bcc0b0e},
	{"Godot.NativeCalls::godot_icall_NinePatchRect_get_v_axis_stretch_mode_3965d65e", (void*)godot_icall_NinePatchRect_get_v_axis_stretch_mode_3965d65e},
	{"Godot.NativeCalls::godot_icall_Node_add_child_below_node_ea228bc2", (void*)godot_icall_Node_add_child_below_node_ea228bc2},
	{"Godot.NativeCalls::godot_icall_Node_set_name_3ca14953", (void*)godot_icall_Node_set_name_3ca14953},
	{"Godot.NativeCalls::godot_icall_Node_get_name_97be4a2e", (void*)godot_icall_Node_get_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Node_add_child_26387a5c", (void*)godot_icall_Node_add_child_26387a5c},
	{"Godot.NativeCalls::godot_icall_Node_remove_child_598860a7", (void*)godot_icall_Node_remove_child_598860a7},
	{"Godot.NativeCalls::godot_icall_Node_get_child_count_1f886eb0", (void*)godot_icall_Node_get_child_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Node_get_children_d80382d4", (void*)godot_icall_Node_get_children_d80382d4},
	{"Godot.NativeCalls::godot_icall_Node_get_child_4db3f65f", (void*)godot_icall_Node_get_child_4db3f65f},
	{"Godot.NativeCalls::godot_icall_Node_has_node_dfaf606e", (void*)godot_icall_Node_has_node_dfaf606e},
	{"Godot.NativeCalls::godot_icall_Node_get_node_ee7d8d97", (void*)godot_icall_Node_get_node_ee7d8d97},
	{"Godot.NativeCalls::godot_icall_Node_get_node_or_null_ee7d8d97", (void*)godot_icall_Node_get_node_or_null_ee7d8d97},
	{"Godot.NativeCalls::godot_icall_Node_get_parent_87a9bfc5", (void*)godot_icall_Node_get_parent_87a9bfc5},
	{"Godot.NativeCalls::godot_icall_Node_find_node_e2275056", (void*)godot_icall_Node_find_node_e2275056},
	{"Godot.NativeCalls::godot_icall_Node_find_parent_12bbcd3e", (void*)godot_icall_Node_find_parent_12bbcd3e},
	{"Godot.NativeCalls::godot_icall_Node_has_node_and_resource_dfaf606e", (void*)godot_icall_Node_has_node_and_resource_dfaf606e},
	{"Godot.NativeCalls::godot_icall_Node_get_node_and_resource_4c58e402", (void*)godot_icall_Node_get_node_and_resource_4c58e402},
	{"Godot.NativeCalls::godot_icall_Node_is_inside_tree_68fe5f59", (void*)godot_icall_Node_is_inside_tree_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node_is_a_parent_of_1746f8cd", (void*)godot_icall_Node_is_a_parent_of_1746f8cd},
	{"Godot.NativeCalls::godot_icall_Node_is_greater_than_1746f8cd", (void*)godot_icall_Node_is_greater_than_1746f8cd},
	{"Godot.NativeCalls::godot_icall_Node_get_path_bf425768", (void*)godot_icall_Node_get_path_bf425768},
	{"Godot.NativeCalls::godot_icall_Node_get_path_to_9905fe30", (void*)godot_icall_Node_get_path_to_9905fe30},
	{"Godot.NativeCalls::godot_icall_Node_add_to_group_f253b141", (void*)godot_icall_Node_add_to_group_f253b141},
	{"Godot.NativeCalls::godot_icall_Node_remove_from_group_2f29e819", (void*)godot_icall_Node_remove_from_group_2f29e819},
	{"Godot.NativeCalls::godot_icall_Node_is_in_group_bee64043", (void*)godot_icall_Node_is_in_group_bee64043},
	{"Godot.NativeCalls::godot_icall_Node_move_child_6fb24af5", (void*)godot_icall_Node_move_child_6fb24af5},
	{"Godot.NativeCalls::godot_icall_Node_get_groups_d80382d4", (void*)godot_icall_Node_get_groups_d80382d4},
	{"Godot.NativeCalls::godot_icall_Node_raise_c8e54a7b", (void*)godot_icall_Node_raise_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Node_set_owner_598860a7", (void*)godot_icall_Node_set_owner_598860a7},
	{"Godot.NativeCalls::godot_icall_Node_get_owner_87a9bfc5", (void*)godot_icall_Node_get_owner_87a9bfc5},
	{"Godot.NativeCalls::godot_icall_Node_remove_and_skip_c8e54a7b", (void*)godot_icall_Node_remove_and_skip_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Node_get_index_1f886eb0", (void*)godot_icall_Node_get_index_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Node_print_tree_c8e54a7b", (void*)godot_icall_Node_print_tree_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Node_set_filename_3ca14953", (void*)godot_icall_Node_set_filename_3ca14953},
	{"Godot.NativeCalls::godot_icall_Node_get_filename_97be4a2e", (void*)godot_icall_Node_get_filename_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Node_propagate_notification_e1ae93bc", (void*)godot_icall_Node_propagate_notification_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Node_propagate_call_96e6240e", (void*)godot_icall_Node_propagate_call_96e6240e},
	{"Godot.NativeCalls::godot_icall_Node_set_physics_process_ba24800b", (void*)godot_icall_Node_set_physics_process_ba24800b},
	{"Godot.NativeCalls::godot_icall_Node_get_physics_process_delta_time_4edcd7a9", (void*)godot_icall_Node_get_physics_process_delta_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Node_is_physics_processing_68fe5f59", (void*)godot_icall_Node_is_physics_processing_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node_get_process_delta_time_4edcd7a9", (void*)godot_icall_Node_get_process_delta_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Node_set_process_ba24800b", (void*)godot_icall_Node_set_process_ba24800b},
	{"Godot.NativeCalls::godot_icall_Node_set_process_priority_e1ae93bc", (void*)godot_icall_Node_set_process_priority_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Node_get_process_priority_1f886eb0", (void*)godot_icall_Node_get_process_priority_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Node_is_processing_68fe5f59", (void*)godot_icall_Node_is_processing_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node_set_process_input_ba24800b", (void*)godot_icall_Node_set_process_input_ba24800b},
	{"Godot.NativeCalls::godot_icall_Node_is_processing_input_68fe5f59", (void*)godot_icall_Node_is_processing_input_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node_set_process_unhandled_input_ba24800b", (void*)godot_icall_Node_set_process_unhandled_input_ba24800b},
	{"Godot.NativeCalls::godot_icall_Node_is_processing_unhandled_input_68fe5f59", (void*)godot_icall_Node_is_processing_unhandled_input_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node_set_process_unhandled_key_input_ba24800b", (void*)godot_icall_Node_set_process_unhandled_key_input_ba24800b},
	{"Godot.NativeCalls::godot_icall_Node_is_processing_unhandled_key_input_68fe5f59", (void*)godot_icall_Node_is_processing_unhandled_key_input_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node_set_pause_mode_944c6d48", (void*)godot_icall_Node_set_pause_mode_944c6d48},
	{"Godot.NativeCalls::godot_icall_Node_get_pause_mode_245c402b", (void*)godot_icall_Node_get_pause_mode_245c402b},
	{"Godot.NativeCalls::godot_icall_Node_can_process_68fe5f59", (void*)godot_icall_Node_can_process_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node_print_stray_nodes_c8e54a7b", (void*)godot_icall_Node_print_stray_nodes_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Node_get_position_in_parent_1f886eb0", (void*)godot_icall_Node_get_position_in_parent_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Node_set_display_folded_ba24800b", (void*)godot_icall_Node_set_display_folded_ba24800b},
	{"Godot.NativeCalls::godot_icall_Node_is_displayed_folded_68fe5f59", (void*)godot_icall_Node_is_displayed_folded_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node_set_process_internal_ba24800b", (void*)godot_icall_Node_set_process_internal_ba24800b},
	{"Godot.NativeCalls::godot_icall_Node_is_processing_internal_68fe5f59", (void*)godot_icall_Node_is_processing_internal_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node_set_physics_process_internal_ba24800b", (void*)godot_icall_Node_set_physics_process_internal_ba24800b},
	{"Godot.NativeCalls::godot_icall_Node_is_physics_processing_internal_68fe5f59", (void*)godot_icall_Node_is_physics_processing_internal_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node_get_tree_289c6b9f", (void*)godot_icall_Node_get_tree_289c6b9f},
	{"Godot.NativeCalls::godot_icall_Node_duplicate_4db3f65f", (void*)godot_icall_Node_duplicate_4db3f65f},
	{"Godot.NativeCalls::godot_icall_Node_replace_by_26387a5c", (void*)godot_icall_Node_replace_by_26387a5c},
	{"Godot.NativeCalls::godot_icall_Node_set_scene_instance_load_placeholder_ba24800b", (void*)godot_icall_Node_set_scene_instance_load_placeholder_ba24800b},
	{"Godot.NativeCalls::godot_icall_Node_get_scene_instance_load_placeholder_68fe5f59", (void*)godot_icall_Node_get_scene_instance_load_placeholder_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node_get_viewport_16d0f927", (void*)godot_icall_Node_get_viewport_16d0f927},
	{"Godot.NativeCalls::godot_icall_Node_queue_free_c8e54a7b", (void*)godot_icall_Node_queue_free_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Node_request_ready_c8e54a7b", (void*)godot_icall_Node_request_ready_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Node_set_network_master_4ae8febd", (void*)godot_icall_Node_set_network_master_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Node_get_network_master_1f886eb0", (void*)godot_icall_Node_get_network_master_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Node_is_network_master_68fe5f59", (void*)godot_icall_Node_is_network_master_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node_get_multiplayer_f8da1ad5", (void*)godot_icall_Node_get_multiplayer_f8da1ad5},
	{"Godot.NativeCalls::godot_icall_Node_get_custom_multiplayer_f8da1ad5", (void*)godot_icall_Node_get_custom_multiplayer_f8da1ad5},
	{"Godot.NativeCalls::godot_icall_Node_set_custom_multiplayer_ca78cf97", (void*)godot_icall_Node_set_custom_multiplayer_ca78cf97},
	{"Godot.NativeCalls::godot_icall_Node_rpc_config_5de5b82a", (void*)godot_icall_Node_rpc_config_5de5b82a},
	{"Godot.NativeCalls::godot_icall_Node_rset_config_5de5b82a", (void*)godot_icall_Node_rset_config_5de5b82a},
	{"Godot.NativeCalls::godot_icall_Node__set_import_path_1e08804", (void*)godot_icall_Node__set_import_path_1e08804},
	{"Godot.NativeCalls::godot_icall_Node_get_import_path_bf425768", (void*)godot_icall_Node_get_import_path_bf425768},
	{"Godot.NativeCalls::godot_icall_Node_rpc_a1852e0c", (void*)godot_icall_Node_rpc_a1852e0c},
	{"Godot.NativeCalls::godot_icall_Node_rpc_unreliable_a1852e0c", (void*)godot_icall_Node_rpc_unreliable_a1852e0c},
	{"Godot.NativeCalls::godot_icall_Node_rpc_id_3cfddb0", (void*)godot_icall_Node_rpc_id_3cfddb0},
	{"Godot.NativeCalls::godot_icall_Node_rpc_unreliable_id_3cfddb0", (void*)godot_icall_Node_rpc_unreliable_id_3cfddb0},
	{"Godot.NativeCalls::godot_icall_Node_rset_3a208116", (void*)godot_icall_Node_rset_3a208116},
	{"Godot.NativeCalls::godot_icall_Node_rset_id_2ec56513", (void*)godot_icall_Node_rset_id_2ec56513},
	{"Godot.NativeCalls::godot_icall_Node_rset_unreliable_3a208116", (void*)godot_icall_Node_rset_unreliable_3a208116},
	{"Godot.NativeCalls::godot_icall_Node_rset_unreliable_id_2ec56513", (void*)godot_icall_Node_rset_unreliable_id_2ec56513},
	{"Godot.NativeCalls::godot_icall_Node_update_configuration_warning_c8e54a7b", (void*)godot_icall_Node_update_configuration_warning_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Node2D_set_position_6df7471e", (void*)godot_icall_Node2D_set_position_6df7471e},
	{"Godot.NativeCalls::godot_icall_Node2D_set_rotation_904508bb", (void*)godot_icall_Node2D_set_rotation_904508bb},
	{"Godot.NativeCalls::godot_icall_Node2D_set_rotation_degrees_904508bb", (void*)godot_icall_Node2D_set_rotation_degrees_904508bb},
	{"Godot.NativeCalls::godot_icall_Node2D_set_scale_6df7471e", (void*)godot_icall_Node2D_set_scale_6df7471e},
	{"Godot.NativeCalls::godot_icall_Node2D_get_position_9b4ea24e", (void*)godot_icall_Node2D_get_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Node2D_get_rotation_4edcd7a9", (void*)godot_icall_Node2D_get_rotation_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Node2D_get_rotation_degrees_4edcd7a9", (void*)godot_icall_Node2D_get_rotation_degrees_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Node2D_get_scale_9b4ea24e", (void*)godot_icall_Node2D_get_scale_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Node2D_rotate_904508bb", (void*)godot_icall_Node2D_rotate_904508bb},
	{"Godot.NativeCalls::godot_icall_Node2D_move_local_x_accc42bb", (void*)godot_icall_Node2D_move_local_x_accc42bb},
	{"Godot.NativeCalls::godot_icall_Node2D_move_local_y_accc42bb", (void*)godot_icall_Node2D_move_local_y_accc42bb},
	{"Godot.NativeCalls::godot_icall_Node2D_translate_6df7471e", (void*)godot_icall_Node2D_translate_6df7471e},
	{"Godot.NativeCalls::godot_icall_Node2D_global_translate_6df7471e", (void*)godot_icall_Node2D_global_translate_6df7471e},
	{"Godot.NativeCalls::godot_icall_Node2D_apply_scale_6df7471e", (void*)godot_icall_Node2D_apply_scale_6df7471e},
	{"Godot.NativeCalls::godot_icall_Node2D_set_global_position_6df7471e", (void*)godot_icall_Node2D_set_global_position_6df7471e},
	{"Godot.NativeCalls::godot_icall_Node2D_get_global_position_9b4ea24e", (void*)godot_icall_Node2D_get_global_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Node2D_set_global_rotation_904508bb", (void*)godot_icall_Node2D_set_global_rotation_904508bb},
	{"Godot.NativeCalls::godot_icall_Node2D_get_global_rotation_4edcd7a9", (void*)godot_icall_Node2D_get_global_rotation_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Node2D_set_global_rotation_degrees_904508bb", (void*)godot_icall_Node2D_set_global_rotation_degrees_904508bb},
	{"Godot.NativeCalls::godot_icall_Node2D_get_global_rotation_degrees_4edcd7a9", (void*)godot_icall_Node2D_get_global_rotation_degrees_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Node2D_set_global_scale_6df7471e", (void*)godot_icall_Node2D_set_global_scale_6df7471e},
	{"Godot.NativeCalls::godot_icall_Node2D_get_global_scale_9b4ea24e", (void*)godot_icall_Node2D_get_global_scale_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Node2D_set_transform_dfe2915f", (void*)godot_icall_Node2D_set_transform_dfe2915f},
	{"Godot.NativeCalls::godot_icall_Node2D_set_global_transform_dfe2915f", (void*)godot_icall_Node2D_set_global_transform_dfe2915f},
	{"Godot.NativeCalls::godot_icall_Node2D_look_at_6df7471e", (void*)godot_icall_Node2D_look_at_6df7471e},
	{"Godot.NativeCalls::godot_icall_Node2D_get_angle_to_4aafeb98", (void*)godot_icall_Node2D_get_angle_to_4aafeb98},
	{"Godot.NativeCalls::godot_icall_Node2D_to_local_af4cfa54", (void*)godot_icall_Node2D_to_local_af4cfa54},
	{"Godot.NativeCalls::godot_icall_Node2D_to_global_af4cfa54", (void*)godot_icall_Node2D_to_global_af4cfa54},
	{"Godot.NativeCalls::godot_icall_Node2D_set_z_index_e1ae93bc", (void*)godot_icall_Node2D_set_z_index_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Node2D_get_z_index_1f886eb0", (void*)godot_icall_Node2D_get_z_index_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Node2D_set_z_as_relative_ba24800b", (void*)godot_icall_Node2D_set_z_as_relative_ba24800b},
	{"Godot.NativeCalls::godot_icall_Node2D_is_z_relative_68fe5f59", (void*)godot_icall_Node2D_is_z_relative_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Node2D_get_relative_transform_to_parent_770a28cc", (void*)godot_icall_Node2D_get_relative_transform_to_parent_770a28cc},
	{"Godot.NativeCalls::godot_icall_NoiseTexture_set_width_e1ae93bc", (void*)godot_icall_NoiseTexture_set_width_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_NoiseTexture_set_height_e1ae93bc", (void*)godot_icall_NoiseTexture_set_height_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_NoiseTexture_set_noise_f47ff6f", (void*)godot_icall_NoiseTexture_set_noise_f47ff6f},
	{"Godot.NativeCalls::godot_icall_NoiseTexture_get_noise_bddf49fd", (void*)godot_icall_NoiseTexture_get_noise_bddf49fd},
	{"Godot.NativeCalls::godot_icall_NoiseTexture_set_seamless_ba24800b", (void*)godot_icall_NoiseTexture_set_seamless_ba24800b},
	{"Godot.NativeCalls::godot_icall_NoiseTexture_get_seamless_68fe5f59", (void*)godot_icall_NoiseTexture_get_seamless_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NoiseTexture_set_as_normalmap_ba24800b", (void*)godot_icall_NoiseTexture_set_as_normalmap_ba24800b},
	{"Godot.NativeCalls::godot_icall_NoiseTexture_is_normalmap_68fe5f59", (void*)godot_icall_NoiseTexture_is_normalmap_68fe5f59},
	{"Godot.NativeCalls::godot_icall_NoiseTexture_set_bump_strength_904508bb", (void*)godot_icall_NoiseTexture_set_bump_strength_904508bb},
	{"Godot.NativeCalls::godot_icall_NoiseTexture_get_bump_strength_4edcd7a9", (void*)godot_icall_NoiseTexture_get_bump_strength_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Object_free_c8e54a7b", (void*)godot_icall_Object_free_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Object_get_class_97be4a2e", (void*)godot_icall_Object_get_class_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Object_is_class_8a7120b9", (void*)godot_icall_Object_is_class_8a7120b9},
	{"Godot.NativeCalls::godot_icall_Object_set_3a208116", (void*)godot_icall_Object_set_3a208116},
	{"Godot.NativeCalls::godot_icall_Object_get_6732bfd8", (void*)godot_icall_Object_get_6732bfd8},
	{"Godot.NativeCalls::godot_icall_Object_set_indexed_b6bf83ce", (void*)godot_icall_Object_set_indexed_b6bf83ce},
	{"Godot.NativeCalls::godot_icall_Object_get_indexed_8759ff5", (void*)godot_icall_Object_get_indexed_8759ff5},
	{"Godot.NativeCalls::godot_icall_Object_get_property_list_d80382d4", (void*)godot_icall_Object_get_property_list_d80382d4},
	{"Godot.NativeCalls::godot_icall_Object_get_method_list_d80382d4", (void*)godot_icall_Object_get_method_list_d80382d4},
	{"Godot.NativeCalls::godot_icall_Object_notification_4ae8febd", (void*)godot_icall_Object_notification_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Object_get_instance_id_4bb7c348", (void*)godot_icall_Object_get_instance_id_4bb7c348},
	{"Godot.NativeCalls::godot_icall_Object_set_script_b878983a", (void*)godot_icall_Object_set_script_b878983a},
	{"Godot.NativeCalls::godot_icall_Object_get_script_66da672a", (void*)godot_icall_Object_get_script_66da672a},
	{"Godot.NativeCalls::godot_icall_Object_set_meta_4a9ec68e", (void*)godot_icall_Object_set_meta_4a9ec68e},
	{"Godot.NativeCalls::godot_icall_Object_remove_meta_3ca14953", (void*)godot_icall_Object_remove_meta_3ca14953},
	{"Godot.NativeCalls::godot_icall_Object_get_meta_74ba5e9e", (void*)godot_icall_Object_get_meta_74ba5e9e},
	{"Godot.NativeCalls::godot_icall_Object_has_meta_8a7120b9", (void*)godot_icall_Object_has_meta_8a7120b9},
	{"Godot.NativeCalls::godot_icall_Object_get_meta_list_4cc8f2a7", (void*)godot_icall_Object_get_meta_list_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_Object_add_user_signal_635694ca", (void*)godot_icall_Object_add_user_signal_635694ca},
	{"Godot.NativeCalls::godot_icall_Object_has_user_signal_bee64043", (void*)godot_icall_Object_has_user_signal_bee64043},
	{"Godot.NativeCalls::godot_icall_Object_emit_signal_450df26", (void*)godot_icall_Object_emit_signal_450df26},
	{"Godot.NativeCalls::godot_icall_Object_call_a1852e0c", (void*)godot_icall_Object_call_a1852e0c},
	{"Godot.NativeCalls::godot_icall_Object_call_deferred_450df26", (void*)godot_icall_Object_call_deferred_450df26},
	{"Godot.NativeCalls::godot_icall_Object_set_deferred_3a208116", (void*)godot_icall_Object_set_deferred_3a208116},
	{"Godot.NativeCalls::godot_icall_Object_callv_3b851d5b", (void*)godot_icall_Object_callv_3b851d5b},
	{"Godot.NativeCalls::godot_icall_Object_has_method_bee64043", (void*)godot_icall_Object_has_method_bee64043},
	{"Godot.NativeCalls::godot_icall_Object_get_signal_list_d80382d4", (void*)godot_icall_Object_get_signal_list_d80382d4},
	{"Godot.NativeCalls::godot_icall_Object_get_signal_connection_list_6b21c46d", (void*)godot_icall_Object_get_signal_connection_list_6b21c46d},
	{"Godot.NativeCalls::godot_icall_Object_get_incoming_connections_d80382d4", (void*)godot_icall_Object_get_incoming_connections_d80382d4},
	{"Godot.NativeCalls::godot_icall_Object_connect_c78b711c", (void*)godot_icall_Object_connect_c78b711c},
	{"Godot.NativeCalls::godot_icall_Object_disconnect_6432d80c", (void*)godot_icall_Object_disconnect_6432d80c},
	{"Godot.NativeCalls::godot_icall_Object_is_connected_5f0047e5", (void*)godot_icall_Object_is_connected_5f0047e5},
	{"Godot.NativeCalls::godot_icall_Object_set_block_signals_ba24800b", (void*)godot_icall_Object_set_block_signals_ba24800b},
	{"Godot.NativeCalls::godot_icall_Object_is_blocking_signals_68fe5f59", (void*)godot_icall_Object_is_blocking_signals_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Object_property_list_changed_notify_c8e54a7b", (void*)godot_icall_Object_property_list_changed_notify_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Object_set_message_translation_ba24800b", (void*)godot_icall_Object_set_message_translation_ba24800b},
	{"Godot.NativeCalls::godot_icall_Object_can_translate_messages_68fe5f59", (void*)godot_icall_Object_can_translate_messages_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Object_tr_67c8521", (void*)godot_icall_Object_tr_67c8521},
	{"Godot.NativeCalls::godot_icall_Object_is_queued_for_deletion_68fe5f59", (void*)godot_icall_Object_is_queued_for_deletion_68fe5f59},
	{"Godot.NativeCalls::godot_icall_OccluderPolygon2D_set_closed_ba24800b", (void*)godot_icall_OccluderPolygon2D_set_closed_ba24800b},
	{"Godot.NativeCalls::godot_icall_OccluderPolygon2D_is_closed_68fe5f59", (void*)godot_icall_OccluderPolygon2D_is_closed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_OccluderPolygon2D_set_cull_mode_95336d85", (void*)godot_icall_OccluderPolygon2D_set_cull_mode_95336d85},
	{"Godot.NativeCalls::godot_icall_OccluderPolygon2D_get_cull_mode_220ca440", (void*)godot_icall_OccluderPolygon2D_get_cull_mode_220ca440},
	{"Godot.NativeCalls::godot_icall_OccluderPolygon2D_set_polygon_b8a866ba", (void*)godot_icall_OccluderPolygon2D_set_polygon_b8a866ba},
	{"Godot.NativeCalls::godot_icall_OccluderPolygon2D_get_polygon_e910f1af", (void*)godot_icall_OccluderPolygon2D_get_polygon_e910f1af},
	{"Godot.NativeCalls::godot_icall_OmniLight_set_shadow_mode_95b9edab", (void*)godot_icall_OmniLight_set_shadow_mode_95b9edab},
	{"Godot.NativeCalls::godot_icall_OmniLight_get_shadow_mode_53993cb9", (void*)godot_icall_OmniLight_get_shadow_mode_53993cb9},
	{"Godot.NativeCalls::godot_icall_OmniLight_set_shadow_detail_6d75c611", (void*)godot_icall_OmniLight_set_shadow_detail_6d75c611},
	{"Godot.NativeCalls::godot_icall_OmniLight_get_shadow_detail_9bcd2153", (void*)godot_icall_OmniLight_get_shadow_detail_9bcd2153},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_seed_1f886eb0", (void*)godot_icall_OpenSimplexNoise_get_seed_1f886eb0},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_set_seed_e1ae93bc", (void*)godot_icall_OpenSimplexNoise_set_seed_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_set_octaves_e1ae93bc", (void*)godot_icall_OpenSimplexNoise_set_octaves_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_octaves_1f886eb0", (void*)godot_icall_OpenSimplexNoise_get_octaves_1f886eb0},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_set_period_904508bb", (void*)godot_icall_OpenSimplexNoise_set_period_904508bb},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_period_4edcd7a9", (void*)godot_icall_OpenSimplexNoise_get_period_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_set_persistence_904508bb", (void*)godot_icall_OpenSimplexNoise_set_persistence_904508bb},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_persistence_4edcd7a9", (void*)godot_icall_OpenSimplexNoise_get_persistence_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_set_lacunarity_904508bb", (void*)godot_icall_OpenSimplexNoise_set_lacunarity_904508bb},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_lacunarity_4edcd7a9", (void*)godot_icall_OpenSimplexNoise_get_lacunarity_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_image_759d9655", (void*)godot_icall_OpenSimplexNoise_get_image_759d9655},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_seamless_image_d2d368f0", (void*)godot_icall_OpenSimplexNoise_get_seamless_image_d2d368f0},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_noise_1d_f6dda625", (void*)godot_icall_OpenSimplexNoise_get_noise_1d_f6dda625},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_noise_2d_14e8e20e", (void*)godot_icall_OpenSimplexNoise_get_noise_2d_14e8e20e},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_noise_3d_386fef6b", (void*)godot_icall_OpenSimplexNoise_get_noise_3d_386fef6b},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_noise_4d_2f43c897", (void*)godot_icall_OpenSimplexNoise_get_noise_4d_2f43c897},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_noise_2dv_4aafeb98", (void*)godot_icall_OpenSimplexNoise_get_noise_2dv_4aafeb98},
	{"Godot.NativeCalls::godot_icall_OpenSimplexNoise_get_noise_3dv_4aafeb9b", (void*)godot_icall_OpenSimplexNoise_get_noise_3dv_4aafeb9b},
	{"Godot.NativeCalls::godot_icall_OptionButton_add_item_bb2d80b6", (void*)godot_icall_OptionButton_add_item_bb2d80b6},
	{"Godot.NativeCalls::godot_icall_OptionButton_add_icon_item_168aa36d", (void*)godot_icall_OptionButton_add_icon_item_168aa36d},
	{"Godot.NativeCalls::godot_icall_OptionButton_set_item_text_c1ffd74f", (void*)godot_icall_OptionButton_set_item_text_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_OptionButton_set_item_icon_f20a84e", (void*)godot_icall_OptionButton_set_item_icon_f20a84e},
	{"Godot.NativeCalls::godot_icall_OptionButton_set_item_disabled_4ae8febd", (void*)godot_icall_OptionButton_set_item_disabled_4ae8febd},
	{"Godot.NativeCalls::godot_icall_OptionButton_set_item_id_807eefe4", (void*)godot_icall_OptionButton_set_item_id_807eefe4},
	{"Godot.NativeCalls::godot_icall_OptionButton_set_item_metadata_37bef04", (void*)godot_icall_OptionButton_set_item_metadata_37bef04},
	{"Godot.NativeCalls::godot_icall_OptionButton_get_item_text_44fc4c5a", (void*)godot_icall_OptionButton_get_item_text_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_OptionButton_get_item_icon_561b2831", (void*)godot_icall_OptionButton_get_item_icon_561b2831},
	{"Godot.NativeCalls::godot_icall_OptionButton_get_item_id_b835dea5", (void*)godot_icall_OptionButton_get_item_id_b835dea5},
	{"Godot.NativeCalls::godot_icall_OptionButton_get_item_index_b835dea5", (void*)godot_icall_OptionButton_get_item_index_b835dea5},
	{"Godot.NativeCalls::godot_icall_OptionButton_get_item_metadata_a9b2673d", (void*)godot_icall_OptionButton_get_item_metadata_a9b2673d},
	{"Godot.NativeCalls::godot_icall_OptionButton_is_item_disabled_7f690926", (void*)godot_icall_OptionButton_is_item_disabled_7f690926},
	{"Godot.NativeCalls::godot_icall_OptionButton_get_item_count_1f886eb0", (void*)godot_icall_OptionButton_get_item_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_OptionButton_add_separator_c8e54a7b", (void*)godot_icall_OptionButton_add_separator_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_OptionButton_clear_c8e54a7b", (void*)godot_icall_OptionButton_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_OptionButton_select_e1ae93bc", (void*)godot_icall_OptionButton_select_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_OptionButton_get_selected_1f886eb0", (void*)godot_icall_OptionButton_get_selected_1f886eb0},
	{"Godot.NativeCalls::godot_icall_OptionButton_get_selected_id_1f886eb0", (void*)godot_icall_OptionButton_get_selected_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_OptionButton_get_selected_metadata_a08d6f10", (void*)godot_icall_OptionButton_get_selected_metadata_a08d6f10},
	{"Godot.NativeCalls::godot_icall_OptionButton_remove_item_e1ae93bc", (void*)godot_icall_OptionButton_remove_item_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_OptionButton__select_int_e1ae93bc", (void*)godot_icall_OptionButton__select_int_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_OptionButton_get_popup_d0a780e0", (void*)godot_icall_OptionButton_get_popup_d0a780e0},
	{"Godot.NativeCalls::godot_icall_OptionButton__set_items_2923a790", (void*)godot_icall_OptionButton__set_items_2923a790},
	{"Godot.NativeCalls::godot_icall_OptionButton__get_items_d80382d4", (void*)godot_icall_OptionButton__get_items_d80382d4},
	{"Godot.NativeCalls::godot_icall_PCKPacker_pck_start_79efd067", (void*)godot_icall_PCKPacker_pck_start_79efd067},
	{"Godot.NativeCalls::godot_icall_PCKPacker_add_file_ce7ee84", (void*)godot_icall_PCKPacker_add_file_ce7ee84},
	{"Godot.NativeCalls::godot_icall_PCKPacker_flush_a4e6027a", (void*)godot_icall_PCKPacker_flush_a4e6027a},
	{"Godot.NativeCalls::godot_icall_PHashTranslation_generate_96eab132", (void*)godot_icall_PHashTranslation_generate_96eab132},
	{"Godot.NativeCalls::godot_icall_PackedDataContainer__set_data_da545cc0", (void*)godot_icall_PackedDataContainer__set_data_da545cc0},
	{"Godot.NativeCalls::godot_icall_PackedDataContainer__get_data_8edaba4", (void*)godot_icall_PackedDataContainer__get_data_8edaba4},
	{"Godot.NativeCalls::godot_icall_PackedDataContainer_pack_7c77f2b3", (void*)godot_icall_PackedDataContainer_pack_7c77f2b3},
	{"Godot.NativeCalls::godot_icall_PackedDataContainer_size_1f886eb0", (void*)godot_icall_PackedDataContainer_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PackedDataContainerRef_size_1f886eb0", (void*)godot_icall_PackedDataContainerRef_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PackedScene_pack_830ba20e", (void*)godot_icall_PackedScene_pack_830ba20e},
	{"Godot.NativeCalls::godot_icall_PackedScene_instance_353368b5", (void*)godot_icall_PackedScene_instance_353368b5},
	{"Godot.NativeCalls::godot_icall_PackedScene_can_instance_68fe5f59", (void*)godot_icall_PackedScene_can_instance_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PackedScene__set_bundled_scene_e472adcf", (void*)godot_icall_PackedScene__set_bundled_scene_e472adcf},
	{"Godot.NativeCalls::godot_icall_PackedScene__get_bundled_scene_22d47c9d", (void*)godot_icall_PackedScene__get_bundled_scene_22d47c9d},
	{"Godot.NativeCalls::godot_icall_PackedScene_get_state_d2eec9ca", (void*)godot_icall_PackedScene_get_state_d2eec9ca},
	{"Godot.NativeCalls::godot_icall_PacketPeer_get_var_f23997c6", (void*)godot_icall_PacketPeer_get_var_f23997c6},
	{"Godot.NativeCalls::godot_icall_PacketPeer_put_var_382770cd", (void*)godot_icall_PacketPeer_put_var_382770cd},
	{"Godot.NativeCalls::godot_icall_PacketPeer_get_packet_8edaba4", (void*)godot_icall_PacketPeer_get_packet_8edaba4},
	{"Godot.NativeCalls::godot_icall_PacketPeer_put_packet_4d7ce2f", (void*)godot_icall_PacketPeer_put_packet_4d7ce2f},
	{"Godot.NativeCalls::godot_icall_PacketPeer_get_packet_error_f04570f5", (void*)godot_icall_PacketPeer_get_packet_error_f04570f5},
	{"Godot.NativeCalls::godot_icall_PacketPeer_get_available_packet_count_1f886eb0", (void*)godot_icall_PacketPeer_get_available_packet_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PacketPeer_set_allow_object_decoding_ba24800b", (void*)godot_icall_PacketPeer_set_allow_object_decoding_ba24800b},
	{"Godot.NativeCalls::godot_icall_PacketPeer_is_object_decoding_allowed_68fe5f59", (void*)godot_icall_PacketPeer_is_object_decoding_allowed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PacketPeer_get_encode_buffer_max_size_1f886eb0", (void*)godot_icall_PacketPeer_get_encode_buffer_max_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PacketPeer_set_encode_buffer_max_size_e1ae93bc", (void*)godot_icall_PacketPeer_set_encode_buffer_max_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_PacketPeerStream_set_stream_peer_85f8707", (void*)godot_icall_PacketPeerStream_set_stream_peer_85f8707},
	{"Godot.NativeCalls::godot_icall_PacketPeerStream_get_stream_peer_b6f76265", (void*)godot_icall_PacketPeerStream_get_stream_peer_b6f76265},
	{"Godot.NativeCalls::godot_icall_PacketPeerStream_set_input_buffer_max_size_e1ae93bc", (void*)godot_icall_PacketPeerStream_set_input_buffer_max_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_PacketPeerStream_set_output_buffer_max_size_e1ae93bc", (void*)godot_icall_PacketPeerStream_set_output_buffer_max_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_PacketPeerStream_get_input_buffer_max_size_1f886eb0", (void*)godot_icall_PacketPeerStream_get_input_buffer_max_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PacketPeerStream_get_output_buffer_max_size_1f886eb0", (void*)godot_icall_PacketPeerStream_get_output_buffer_max_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PacketPeerUDP_listen_b062261f", (void*)godot_icall_PacketPeerUDP_listen_b062261f},
	{"Godot.NativeCalls::godot_icall_PacketPeerUDP_close_c8e54a7b", (void*)godot_icall_PacketPeerUDP_close_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_PacketPeerUDP_wait_f04570f5", (void*)godot_icall_PacketPeerUDP_wait_f04570f5},
	{"Godot.NativeCalls::godot_icall_PacketPeerUDP_is_listening_68fe5f59", (void*)godot_icall_PacketPeerUDP_is_listening_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PacketPeerUDP_get_packet_ip_97be4a2e", (void*)godot_icall_PacketPeerUDP_get_packet_ip_97be4a2e},
	{"Godot.NativeCalls::godot_icall_PacketPeerUDP_get_packet_port_1f886eb0", (void*)godot_icall_PacketPeerUDP_get_packet_port_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PacketPeerUDP_set_dest_address_d732f59c", (void*)godot_icall_PacketPeerUDP_set_dest_address_d732f59c},
	{"Godot.NativeCalls::godot_icall_PacketPeerUDP_set_broadcast_enabled_ba24800b", (void*)godot_icall_PacketPeerUDP_set_broadcast_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_PacketPeerUDP_join_multicast_group_1c2b2cff", (void*)godot_icall_PacketPeerUDP_join_multicast_group_1c2b2cff},
	{"Godot.NativeCalls::godot_icall_PacketPeerUDP_leave_multicast_group_1c2b2cff", (void*)godot_icall_PacketPeerUDP_leave_multicast_group_1c2b2cff},
	{"Godot.NativeCalls::godot_icall_PanoramaSky_set_panorama_7eecd31a", (void*)godot_icall_PanoramaSky_set_panorama_7eecd31a},
	{"Godot.NativeCalls::godot_icall_PanoramaSky_get_panorama_ac462e4a", (void*)godot_icall_PanoramaSky_get_panorama_ac462e4a},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_set_scroll_offset_6df7471e", (void*)godot_icall_ParallaxBackground_set_scroll_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_get_scroll_offset_9b4ea24e", (void*)godot_icall_ParallaxBackground_get_scroll_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_set_scroll_base_offset_6df7471e", (void*)godot_icall_ParallaxBackground_set_scroll_base_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_get_scroll_base_offset_9b4ea24e", (void*)godot_icall_ParallaxBackground_get_scroll_base_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_set_scroll_base_scale_6df7471e", (void*)godot_icall_ParallaxBackground_set_scroll_base_scale_6df7471e},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_get_scroll_base_scale_9b4ea24e", (void*)godot_icall_ParallaxBackground_get_scroll_base_scale_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_set_limit_begin_6df7471e", (void*)godot_icall_ParallaxBackground_set_limit_begin_6df7471e},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_get_limit_begin_9b4ea24e", (void*)godot_icall_ParallaxBackground_get_limit_begin_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_set_limit_end_6df7471e", (void*)godot_icall_ParallaxBackground_set_limit_end_6df7471e},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_get_limit_end_9b4ea24e", (void*)godot_icall_ParallaxBackground_get_limit_end_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_set_ignore_camera_zoom_ba24800b", (void*)godot_icall_ParallaxBackground_set_ignore_camera_zoom_ba24800b},
	{"Godot.NativeCalls::godot_icall_ParallaxBackground_is_ignore_camera_zoom_68fe5f59", (void*)godot_icall_ParallaxBackground_is_ignore_camera_zoom_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ParallaxLayer_set_motion_scale_6df7471e", (void*)godot_icall_ParallaxLayer_set_motion_scale_6df7471e},
	{"Godot.NativeCalls::godot_icall_ParallaxLayer_get_motion_scale_9b4ea24e", (void*)godot_icall_ParallaxLayer_get_motion_scale_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_ParallaxLayer_set_motion_offset_6df7471e", (void*)godot_icall_ParallaxLayer_set_motion_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_ParallaxLayer_get_motion_offset_9b4ea24e", (void*)godot_icall_ParallaxLayer_get_motion_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_ParallaxLayer_set_mirroring_6df7471e", (void*)godot_icall_ParallaxLayer_set_mirroring_6df7471e},
	{"Godot.NativeCalls::godot_icall_ParallaxLayer_get_mirroring_9b4ea24e", (void*)godot_icall_ParallaxLayer_get_mirroring_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Particles_set_emitting_ba24800b", (void*)godot_icall_Particles_set_emitting_ba24800b},
	{"Godot.NativeCalls::godot_icall_Particles_set_amount_e1ae93bc", (void*)godot_icall_Particles_set_amount_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Particles_set_lifetime_904508bb", (void*)godot_icall_Particles_set_lifetime_904508bb},
	{"Godot.NativeCalls::godot_icall_Particles_set_one_shot_ba24800b", (void*)godot_icall_Particles_set_one_shot_ba24800b},
	{"Godot.NativeCalls::godot_icall_Particles_set_pre_process_time_904508bb", (void*)godot_icall_Particles_set_pre_process_time_904508bb},
	{"Godot.NativeCalls::godot_icall_Particles_set_explosiveness_ratio_904508bb", (void*)godot_icall_Particles_set_explosiveness_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_Particles_set_randomness_ratio_904508bb", (void*)godot_icall_Particles_set_randomness_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_Particles_set_visibility_aabb_ff67b409", (void*)godot_icall_Particles_set_visibility_aabb_ff67b409},
	{"Godot.NativeCalls::godot_icall_Particles_set_use_local_coordinates_ba24800b", (void*)godot_icall_Particles_set_use_local_coordinates_ba24800b},
	{"Godot.NativeCalls::godot_icall_Particles_set_fixed_fps_e1ae93bc", (void*)godot_icall_Particles_set_fixed_fps_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Particles_set_fractional_delta_ba24800b", (void*)godot_icall_Particles_set_fractional_delta_ba24800b},
	{"Godot.NativeCalls::godot_icall_Particles_set_process_material_be2d0ec2", (void*)godot_icall_Particles_set_process_material_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_Particles_set_speed_scale_904508bb", (void*)godot_icall_Particles_set_speed_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_Particles_is_emitting_68fe5f59", (void*)godot_icall_Particles_is_emitting_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Particles_get_amount_1f886eb0", (void*)godot_icall_Particles_get_amount_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Particles_get_lifetime_4edcd7a9", (void*)godot_icall_Particles_get_lifetime_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Particles_get_one_shot_68fe5f59", (void*)godot_icall_Particles_get_one_shot_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Particles_get_pre_process_time_4edcd7a9", (void*)godot_icall_Particles_get_pre_process_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Particles_get_explosiveness_ratio_4edcd7a9", (void*)godot_icall_Particles_get_explosiveness_ratio_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Particles_get_randomness_ratio_4edcd7a9", (void*)godot_icall_Particles_get_randomness_ratio_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Particles_get_visibility_aabb_2dbf935b", (void*)godot_icall_Particles_get_visibility_aabb_2dbf935b},
	{"Godot.NativeCalls::godot_icall_Particles_get_use_local_coordinates_68fe5f59", (void*)godot_icall_Particles_get_use_local_coordinates_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Particles_get_fixed_fps_1f886eb0", (void*)godot_icall_Particles_get_fixed_fps_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Particles_get_fractional_delta_68fe5f59", (void*)godot_icall_Particles_get_fractional_delta_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Particles_get_process_material_6d04d9a2", (void*)godot_icall_Particles_get_process_material_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_Particles_get_speed_scale_4edcd7a9", (void*)godot_icall_Particles_get_speed_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Particles_set_draw_order_aaa89856", (void*)godot_icall_Particles_set_draw_order_aaa89856},
	{"Godot.NativeCalls::godot_icall_Particles_get_draw_order_73e44381", (void*)godot_icall_Particles_get_draw_order_73e44381},
	{"Godot.NativeCalls::godot_icall_Particles_set_draw_passes_e1ae93bc", (void*)godot_icall_Particles_set_draw_passes_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Particles_set_draw_pass_mesh_b41476b2", (void*)godot_icall_Particles_set_draw_pass_mesh_b41476b2},
	{"Godot.NativeCalls::godot_icall_Particles_get_draw_passes_1f886eb0", (void*)godot_icall_Particles_get_draw_passes_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Particles_get_draw_pass_mesh_8c20a0a4", (void*)godot_icall_Particles_get_draw_pass_mesh_8c20a0a4},
	{"Godot.NativeCalls::godot_icall_Particles_restart_c8e54a7b", (void*)godot_icall_Particles_restart_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Particles_capture_aabb_2dbf935b", (void*)godot_icall_Particles_capture_aabb_2dbf935b},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_emitting_ba24800b", (void*)godot_icall_Particles2D_set_emitting_ba24800b},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_amount_e1ae93bc", (void*)godot_icall_Particles2D_set_amount_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_lifetime_904508bb", (void*)godot_icall_Particles2D_set_lifetime_904508bb},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_one_shot_ba24800b", (void*)godot_icall_Particles2D_set_one_shot_ba24800b},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_pre_process_time_904508bb", (void*)godot_icall_Particles2D_set_pre_process_time_904508bb},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_explosiveness_ratio_904508bb", (void*)godot_icall_Particles2D_set_explosiveness_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_randomness_ratio_904508bb", (void*)godot_icall_Particles2D_set_randomness_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_visibility_rect_a5ed61f1", (void*)godot_icall_Particles2D_set_visibility_rect_a5ed61f1},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_use_local_coordinates_ba24800b", (void*)godot_icall_Particles2D_set_use_local_coordinates_ba24800b},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_fixed_fps_e1ae93bc", (void*)godot_icall_Particles2D_set_fixed_fps_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_fractional_delta_ba24800b", (void*)godot_icall_Particles2D_set_fractional_delta_ba24800b},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_process_material_be2d0ec2", (void*)godot_icall_Particles2D_set_process_material_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_speed_scale_904508bb", (void*)godot_icall_Particles2D_set_speed_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_Particles2D_is_emitting_68fe5f59", (void*)godot_icall_Particles2D_is_emitting_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_amount_1f886eb0", (void*)godot_icall_Particles2D_get_amount_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_lifetime_4edcd7a9", (void*)godot_icall_Particles2D_get_lifetime_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_one_shot_68fe5f59", (void*)godot_icall_Particles2D_get_one_shot_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_pre_process_time_4edcd7a9", (void*)godot_icall_Particles2D_get_pre_process_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_explosiveness_ratio_4edcd7a9", (void*)godot_icall_Particles2D_get_explosiveness_ratio_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_randomness_ratio_4edcd7a9", (void*)godot_icall_Particles2D_get_randomness_ratio_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_visibility_rect_6344c073", (void*)godot_icall_Particles2D_get_visibility_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_use_local_coordinates_68fe5f59", (void*)godot_icall_Particles2D_get_use_local_coordinates_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_fixed_fps_1f886eb0", (void*)godot_icall_Particles2D_get_fixed_fps_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_fractional_delta_68fe5f59", (void*)godot_icall_Particles2D_get_fractional_delta_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_process_material_6d04d9a2", (void*)godot_icall_Particles2D_get_process_material_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_speed_scale_4edcd7a9", (void*)godot_icall_Particles2D_get_speed_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_draw_order_cb74df8", (void*)godot_icall_Particles2D_set_draw_order_cb74df8},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_draw_order_4249d31b", (void*)godot_icall_Particles2D_get_draw_order_4249d31b},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_texture_7eecd31a", (void*)godot_icall_Particles2D_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_texture_ac462e4a", (void*)godot_icall_Particles2D_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_Particles2D_set_normal_map_7eecd31a", (void*)godot_icall_Particles2D_set_normal_map_7eecd31a},
	{"Godot.NativeCalls::godot_icall_Particles2D_get_normal_map_ac462e4a", (void*)godot_icall_Particles2D_get_normal_map_ac462e4a},
	{"Godot.NativeCalls::godot_icall_Particles2D_capture_rect_6344c073", (void*)godot_icall_Particles2D_capture_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_Particles2D_restart_c8e54a7b", (void*)godot_icall_Particles2D_restart_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_direction_6df7471d", (void*)godot_icall_ParticlesMaterial_set_direction_6df7471d},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_direction_9b4ea24f", (void*)godot_icall_ParticlesMaterial_get_direction_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_spread_904508bb", (void*)godot_icall_ParticlesMaterial_set_spread_904508bb},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_spread_4edcd7a9", (void*)godot_icall_ParticlesMaterial_get_spread_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_flatness_904508bb", (void*)godot_icall_ParticlesMaterial_set_flatness_904508bb},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_flatness_4edcd7a9", (void*)godot_icall_ParticlesMaterial_get_flatness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_param_89e708ca", (void*)godot_icall_ParticlesMaterial_set_param_89e708ca},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_param_2162baa4", (void*)godot_icall_ParticlesMaterial_get_param_2162baa4},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_param_randomness_89e708ca", (void*)godot_icall_ParticlesMaterial_set_param_randomness_89e708ca},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_param_randomness_2162baa4", (void*)godot_icall_ParticlesMaterial_get_param_randomness_2162baa4},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_param_texture_7670a7ab", (void*)godot_icall_ParticlesMaterial_set_param_texture_7670a7ab},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_param_texture_4d2844bf", (void*)godot_icall_ParticlesMaterial_get_param_texture_4d2844bf},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_color_f2e3b5aa", (void*)godot_icall_ParticlesMaterial_set_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_color_304394ba", (void*)godot_icall_ParticlesMaterial_get_color_304394ba},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_color_ramp_7eecd31a", (void*)godot_icall_ParticlesMaterial_set_color_ramp_7eecd31a},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_color_ramp_ac462e4a", (void*)godot_icall_ParticlesMaterial_get_color_ramp_ac462e4a},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_flag_34bb14a4", (void*)godot_icall_ParticlesMaterial_set_flag_34bb14a4},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_flag_c21e7af8", (void*)godot_icall_ParticlesMaterial_get_flag_c21e7af8},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_emission_shape_52428255", (void*)godot_icall_ParticlesMaterial_set_emission_shape_52428255},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_emission_shape_2a061450", (void*)godot_icall_ParticlesMaterial_get_emission_shape_2a061450},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_emission_sphere_radius_904508bb", (void*)godot_icall_ParticlesMaterial_set_emission_sphere_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_emission_sphere_radius_4edcd7a9", (void*)godot_icall_ParticlesMaterial_get_emission_sphere_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_emission_box_extents_6df7471d", (void*)godot_icall_ParticlesMaterial_set_emission_box_extents_6df7471d},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_emission_box_extents_9b4ea24f", (void*)godot_icall_ParticlesMaterial_get_emission_box_extents_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_emission_point_texture_7eecd31a", (void*)godot_icall_ParticlesMaterial_set_emission_point_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_emission_point_texture_ac462e4a", (void*)godot_icall_ParticlesMaterial_get_emission_point_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_emission_normal_texture_7eecd31a", (void*)godot_icall_ParticlesMaterial_set_emission_normal_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_emission_normal_texture_ac462e4a", (void*)godot_icall_ParticlesMaterial_get_emission_normal_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_emission_color_texture_7eecd31a", (void*)godot_icall_ParticlesMaterial_set_emission_color_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_emission_color_texture_ac462e4a", (void*)godot_icall_ParticlesMaterial_get_emission_color_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_emission_point_count_e1ae93bc", (void*)godot_icall_ParticlesMaterial_set_emission_point_count_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_emission_point_count_1f886eb0", (void*)godot_icall_ParticlesMaterial_get_emission_point_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_trail_divisor_e1ae93bc", (void*)godot_icall_ParticlesMaterial_set_trail_divisor_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_trail_divisor_1f886eb0", (void*)godot_icall_ParticlesMaterial_get_trail_divisor_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_trail_size_modifier_7bbe5a99", (void*)godot_icall_ParticlesMaterial_set_trail_size_modifier_7bbe5a99},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_trail_size_modifier_a997a5cb", (void*)godot_icall_ParticlesMaterial_get_trail_size_modifier_a997a5cb},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_trail_color_modifier_c8030426", (void*)godot_icall_ParticlesMaterial_set_trail_color_modifier_c8030426},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_trail_color_modifier_f722e346", (void*)godot_icall_ParticlesMaterial_get_trail_color_modifier_f722e346},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_gravity_9b4ea24f", (void*)godot_icall_ParticlesMaterial_get_gravity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_gravity_6df7471d", (void*)godot_icall_ParticlesMaterial_set_gravity_6df7471d},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_set_lifetime_randomness_904508bb", (void*)godot_icall_ParticlesMaterial_set_lifetime_randomness_904508bb},
	{"Godot.NativeCalls::godot_icall_ParticlesMaterial_get_lifetime_randomness_4edcd7a9", (void*)godot_icall_ParticlesMaterial_get_lifetime_randomness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Path_set_curve_77a8e9c1", (void*)godot_icall_Path_set_curve_77a8e9c1},
	{"Godot.NativeCalls::godot_icall_Path_get_curve_b58a38a3", (void*)godot_icall_Path_get_curve_b58a38a3},
	{"Godot.NativeCalls::godot_icall_Path2D_set_curve_76a8e85c", (void*)godot_icall_Path2D_set_curve_76a8e85c},
	{"Godot.NativeCalls::godot_icall_Path2D_get_curve_b48a3710", (void*)godot_icall_Path2D_get_curve_b48a3710},
	{"Godot.NativeCalls::godot_icall_PathFollow_set_offset_904508bb", (void*)godot_icall_PathFollow_set_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_PathFollow_get_offset_4edcd7a9", (void*)godot_icall_PathFollow_get_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PathFollow_set_h_offset_904508bb", (void*)godot_icall_PathFollow_set_h_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_PathFollow_get_h_offset_4edcd7a9", (void*)godot_icall_PathFollow_get_h_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PathFollow_set_v_offset_904508bb", (void*)godot_icall_PathFollow_set_v_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_PathFollow_get_v_offset_4edcd7a9", (void*)godot_icall_PathFollow_get_v_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PathFollow_set_unit_offset_904508bb", (void*)godot_icall_PathFollow_set_unit_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_PathFollow_get_unit_offset_4edcd7a9", (void*)godot_icall_PathFollow_get_unit_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PathFollow_set_rotation_mode_5bf2100", (void*)godot_icall_PathFollow_set_rotation_mode_5bf2100},
	{"Godot.NativeCalls::godot_icall_PathFollow_get_rotation_mode_e8cd06d3", (void*)godot_icall_PathFollow_get_rotation_mode_e8cd06d3},
	{"Godot.NativeCalls::godot_icall_PathFollow_set_cubic_interpolation_ba24800b", (void*)godot_icall_PathFollow_set_cubic_interpolation_ba24800b},
	{"Godot.NativeCalls::godot_icall_PathFollow_get_cubic_interpolation_68fe5f59", (void*)godot_icall_PathFollow_get_cubic_interpolation_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PathFollow_set_loop_ba24800b", (void*)godot_icall_PathFollow_set_loop_ba24800b},
	{"Godot.NativeCalls::godot_icall_PathFollow_has_loop_68fe5f59", (void*)godot_icall_PathFollow_has_loop_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_set_offset_904508bb", (void*)godot_icall_PathFollow2D_set_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_get_offset_4edcd7a9", (void*)godot_icall_PathFollow2D_get_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_set_h_offset_904508bb", (void*)godot_icall_PathFollow2D_set_h_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_get_h_offset_4edcd7a9", (void*)godot_icall_PathFollow2D_get_h_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_set_v_offset_904508bb", (void*)godot_icall_PathFollow2D_set_v_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_get_v_offset_4edcd7a9", (void*)godot_icall_PathFollow2D_get_v_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_set_unit_offset_904508bb", (void*)godot_icall_PathFollow2D_set_unit_offset_904508bb},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_get_unit_offset_4edcd7a9", (void*)godot_icall_PathFollow2D_get_unit_offset_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_set_rotate_ba24800b", (void*)godot_icall_PathFollow2D_set_rotate_ba24800b},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_is_rotating_68fe5f59", (void*)godot_icall_PathFollow2D_is_rotating_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_set_cubic_interpolation_ba24800b", (void*)godot_icall_PathFollow2D_set_cubic_interpolation_ba24800b},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_get_cubic_interpolation_68fe5f59", (void*)godot_icall_PathFollow2D_get_cubic_interpolation_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_set_loop_ba24800b", (void*)godot_icall_PathFollow2D_set_loop_ba24800b},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_has_loop_68fe5f59", (void*)godot_icall_PathFollow2D_has_loop_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_set_lookahead_904508bb", (void*)godot_icall_PathFollow2D_set_lookahead_904508bb},
	{"Godot.NativeCalls::godot_icall_PathFollow2D_get_lookahead_4edcd7a9", (void*)godot_icall_PathFollow2D_get_lookahead_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Performance_get_monitor_7b112f19", (void*)godot_icall_Performance_get_monitor_7b112f19},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_apply_central_impulse_6df7471d", (void*)godot_icall_PhysicalBone_apply_central_impulse_6df7471d},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_apply_impulse_bf22f212", (void*)godot_icall_PhysicalBone_apply_impulse_bf22f212},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_set_joint_type_f16bb46", (void*)godot_icall_PhysicalBone_set_joint_type_f16bb46},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_get_joint_type_98f70731", (void*)godot_icall_PhysicalBone_get_joint_type_98f70731},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_set_joint_offset_655b85c9", (void*)godot_icall_PhysicalBone_set_joint_offset_655b85c9},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_get_joint_offset_a3fb649b", (void*)godot_icall_PhysicalBone_get_joint_offset_a3fb649b},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_set_body_offset_655b85c9", (void*)godot_icall_PhysicalBone_set_body_offset_655b85c9},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_get_body_offset_a3fb649b", (void*)godot_icall_PhysicalBone_get_body_offset_a3fb649b},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_is_static_body_68fe5f59", (void*)godot_icall_PhysicalBone_is_static_body_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_get_simulate_physics_68fe5f59", (void*)godot_icall_PhysicalBone_get_simulate_physics_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_is_simulating_physics_68fe5f59", (void*)godot_icall_PhysicalBone_is_simulating_physics_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_get_bone_id_1f886eb0", (void*)godot_icall_PhysicalBone_get_bone_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_set_mass_904508bb", (void*)godot_icall_PhysicalBone_set_mass_904508bb},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_get_mass_4edcd7a9", (void*)godot_icall_PhysicalBone_get_mass_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_set_weight_904508bb", (void*)godot_icall_PhysicalBone_set_weight_904508bb},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_get_weight_4edcd7a9", (void*)godot_icall_PhysicalBone_get_weight_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_set_friction_904508bb", (void*)godot_icall_PhysicalBone_set_friction_904508bb},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_get_friction_4edcd7a9", (void*)godot_icall_PhysicalBone_get_friction_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_set_bounce_904508bb", (void*)godot_icall_PhysicalBone_set_bounce_904508bb},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_get_bounce_4edcd7a9", (void*)godot_icall_PhysicalBone_get_bounce_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_set_gravity_scale_904508bb", (void*)godot_icall_PhysicalBone_set_gravity_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_PhysicalBone_get_gravity_scale_4edcd7a9", (void*)godot_icall_PhysicalBone_get_gravity_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_total_gravity_9b4ea24e", (void*)godot_icall_Physics2DDirectBodyState_get_total_gravity_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_total_linear_damp_4edcd7a9", (void*)godot_icall_Physics2DDirectBodyState_get_total_linear_damp_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_total_angular_damp_4edcd7a9", (void*)godot_icall_Physics2DDirectBodyState_get_total_angular_damp_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_inverse_mass_4edcd7a9", (void*)godot_icall_Physics2DDirectBodyState_get_inverse_mass_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_inverse_inertia_4edcd7a9", (void*)godot_icall_Physics2DDirectBodyState_get_inverse_inertia_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_set_linear_velocity_6df7471e", (void*)godot_icall_Physics2DDirectBodyState_set_linear_velocity_6df7471e},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_linear_velocity_9b4ea24e", (void*)godot_icall_Physics2DDirectBodyState_get_linear_velocity_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_set_angular_velocity_904508bb", (void*)godot_icall_Physics2DDirectBodyState_set_angular_velocity_904508bb},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_angular_velocity_4edcd7a9", (void*)godot_icall_Physics2DDirectBodyState_get_angular_velocity_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_set_transform_dfe2915f", (void*)godot_icall_Physics2DDirectBodyState_set_transform_dfe2915f},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_transform_d44700d", (void*)godot_icall_Physics2DDirectBodyState_get_transform_d44700d},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_add_central_force_6df7471e", (void*)godot_icall_Physics2DDirectBodyState_add_central_force_6df7471e},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_add_force_bf22f250", (void*)godot_icall_Physics2DDirectBodyState_add_force_bf22f250},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_add_torque_904508bb", (void*)godot_icall_Physics2DDirectBodyState_add_torque_904508bb},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_apply_central_impulse_6df7471e", (void*)godot_icall_Physics2DDirectBodyState_apply_central_impulse_6df7471e},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_apply_torque_impulse_904508bb", (void*)godot_icall_Physics2DDirectBodyState_apply_torque_impulse_904508bb},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_apply_impulse_bf22f250", (void*)godot_icall_Physics2DDirectBodyState_apply_impulse_bf22f250},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_set_sleep_state_ba24800b", (void*)godot_icall_Physics2DDirectBodyState_set_sleep_state_ba24800b},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_is_sleeping_68fe5f59", (void*)godot_icall_Physics2DDirectBodyState_is_sleeping_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_contact_count_1f886eb0", (void*)godot_icall_Physics2DDirectBodyState_get_contact_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_contact_local_position_23728632", (void*)godot_icall_Physics2DDirectBodyState_get_contact_local_position_23728632},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_contact_local_normal_23728632", (void*)godot_icall_Physics2DDirectBodyState_get_contact_local_normal_23728632},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_contact_local_shape_b835dea5", (void*)godot_icall_Physics2DDirectBodyState_get_contact_local_shape_b835dea5},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_contact_collider_6012f6e", (void*)godot_icall_Physics2DDirectBodyState_get_contact_collider_6012f6e},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_contact_collider_position_23728632", (void*)godot_icall_Physics2DDirectBodyState_get_contact_collider_position_23728632},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_contact_collider_id_f5296873", (void*)godot_icall_Physics2DDirectBodyState_get_contact_collider_id_f5296873},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_contact_collider_object_90d51b7a", (void*)godot_icall_Physics2DDirectBodyState_get_contact_collider_object_90d51b7a},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_contact_collider_shape_b835dea5", (void*)godot_icall_Physics2DDirectBodyState_get_contact_collider_shape_b835dea5},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_contact_collider_shape_metadata_a9b2673d", (void*)godot_icall_Physics2DDirectBodyState_get_contact_collider_shape_metadata_a9b2673d},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_contact_collider_velocity_at_position_23728632", (void*)godot_icall_Physics2DDirectBodyState_get_contact_collider_velocity_at_position_23728632},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_step_4edcd7a9", (void*)godot_icall_Physics2DDirectBodyState_get_step_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_integrate_forces_c8e54a7b", (void*)godot_icall_Physics2DDirectBodyState_integrate_forces_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectBodyState_get_space_state_f8934848", (void*)godot_icall_Physics2DDirectBodyState_get_space_state_f8934848},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectSpaceState_intersect_point_10cea668", (void*)godot_icall_Physics2DDirectSpaceState_intersect_point_10cea668},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectSpaceState_intersect_point_on_canvas_b12900da", (void*)godot_icall_Physics2DDirectSpaceState_intersect_point_on_canvas_b12900da},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectSpaceState_intersect_ray_8a1a055", (void*)godot_icall_Physics2DDirectSpaceState_intersect_ray_8a1a055},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectSpaceState_intersect_shape_7fff5f49", (void*)godot_icall_Physics2DDirectSpaceState_intersect_shape_7fff5f49},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectSpaceState_cast_motion_4d8563ed", (void*)godot_icall_Physics2DDirectSpaceState_cast_motion_4d8563ed},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectSpaceState_collide_shape_7fff5f49", (void*)godot_icall_Physics2DDirectSpaceState_collide_shape_7fff5f49},
	{"Godot.NativeCalls::godot_icall_Physics2DDirectSpaceState_get_rest_info_3eaded76", (void*)godot_icall_Physics2DDirectSpaceState_get_rest_info_3eaded76},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_line_shape_create_6623661e", (void*)godot_icall_Physics2DServer_line_shape_create_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_ray_shape_create_6623661e", (void*)godot_icall_Physics2DServer_ray_shape_create_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_segment_shape_create_6623661e", (void*)godot_icall_Physics2DServer_segment_shape_create_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_circle_shape_create_6623661e", (void*)godot_icall_Physics2DServer_circle_shape_create_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_rectangle_shape_create_6623661e", (void*)godot_icall_Physics2DServer_rectangle_shape_create_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_capsule_shape_create_6623661e", (void*)godot_icall_Physics2DServer_capsule_shape_create_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_convex_polygon_shape_create_6623661e", (void*)godot_icall_Physics2DServer_convex_polygon_shape_create_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_concave_polygon_shape_create_6623661e", (void*)godot_icall_Physics2DServer_concave_polygon_shape_create_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_shape_set_data_8e6f3852", (void*)godot_icall_Physics2DServer_shape_set_data_8e6f3852},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_shape_get_type_2cdb95a8", (void*)godot_icall_Physics2DServer_shape_get_type_2cdb95a8},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_shape_get_data_ef54908b", (void*)godot_icall_Physics2DServer_shape_get_data_ef54908b},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_space_create_6623661e", (void*)godot_icall_Physics2DServer_space_create_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_space_set_active_56de082b", (void*)godot_icall_Physics2DServer_space_set_active_56de082b},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_space_is_active_36cc12b4", (void*)godot_icall_Physics2DServer_space_is_active_36cc12b4},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_space_set_param_da2b809b", (void*)godot_icall_Physics2DServer_space_set_param_da2b809b},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_space_get_param_96fd47bf", (void*)godot_icall_Physics2DServer_space_get_param_96fd47bf},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_space_get_direct_state_9fc28ba1", (void*)godot_icall_Physics2DServer_space_get_direct_state_9fc28ba1},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_create_6623661e", (void*)godot_icall_Physics2DServer_area_create_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_set_space_48010164", (void*)godot_icall_Physics2DServer_area_set_space_48010164},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_get_space_c09e26c0", (void*)godot_icall_Physics2DServer_area_get_space_c09e26c0},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_set_space_override_mode_8af87055", (void*)godot_icall_Physics2DServer_area_set_space_override_mode_8af87055},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_get_space_override_mode_d1d36655", (void*)godot_icall_Physics2DServer_area_get_space_override_mode_d1d36655},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_add_shape_41b85a0b", (void*)godot_icall_Physics2DServer_area_add_shape_41b85a0b},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_set_shape_ee265321", (void*)godot_icall_Physics2DServer_area_set_shape_ee265321},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_set_shape_transform_87074d30", (void*)godot_icall_Physics2DServer_area_set_shape_transform_87074d30},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_set_shape_disabled_eb795dfc", (void*)godot_icall_Physics2DServer_area_set_shape_disabled_eb795dfc},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_get_shape_count_f1d0c933", (void*)godot_icall_Physics2DServer_area_get_shape_count_f1d0c933},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_get_shape_d5ef04d9", (void*)godot_icall_Physics2DServer_area_get_shape_d5ef04d9},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_get_shape_transform_61871ef9", (void*)godot_icall_Physics2DServer_area_get_shape_transform_61871ef9},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_remove_shape_f6439f2", (void*)godot_icall_Physics2DServer_area_remove_shape_f6439f2},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_clear_shapes_a7039b4e", (void*)godot_icall_Physics2DServer_area_clear_shapes_a7039b4e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_set_collision_layer_7aa831af", (void*)godot_icall_Physics2DServer_area_set_collision_layer_7aa831af},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_set_collision_mask_7aa831af", (void*)godot_icall_Physics2DServer_area_set_collision_mask_7aa831af},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_set_param_fee54053", (void*)godot_icall_Physics2DServer_area_set_param_fee54053},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_set_transform_31203f57", (void*)godot_icall_Physics2DServer_area_set_transform_31203f57},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_get_param_155f591b", (void*)godot_icall_Physics2DServer_area_get_param_155f591b},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_get_transform_55838f17", (void*)godot_icall_Physics2DServer_area_get_transform_55838f17},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_attach_object_instance_id_73956c1a", (void*)godot_icall_Physics2DServer_area_attach_object_instance_id_73956c1a},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_get_object_instance_id_4e8e61e1", (void*)godot_icall_Physics2DServer_area_get_object_instance_id_4e8e61e1},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_attach_canvas_instance_id_73956c1a", (void*)godot_icall_Physics2DServer_area_attach_canvas_instance_id_73956c1a},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_get_canvas_instance_id_4e8e61e1", (void*)godot_icall_Physics2DServer_area_get_canvas_instance_id_4e8e61e1},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_set_monitor_callback_384e4531", (void*)godot_icall_Physics2DServer_area_set_monitor_callback_384e4531},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_set_area_monitor_callback_384e4531", (void*)godot_icall_Physics2DServer_area_set_area_monitor_callback_384e4531},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_area_set_monitorable_56de082b", (void*)godot_icall_Physics2DServer_area_set_monitorable_56de082b},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_create_6623661e", (void*)godot_icall_Physics2DServer_body_create_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_space_48010164", (void*)godot_icall_Physics2DServer_body_set_space_48010164},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_space_c09e26c0", (void*)godot_icall_Physics2DServer_body_get_space_c09e26c0},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_mode_158377b0", (void*)godot_icall_Physics2DServer_body_set_mode_158377b0},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_mode_5e903261", (void*)godot_icall_Physics2DServer_body_get_mode_5e903261},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_add_shape_41b85a0b", (void*)godot_icall_Physics2DServer_body_add_shape_41b85a0b},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_shape_ee265321", (void*)godot_icall_Physics2DServer_body_set_shape_ee265321},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_shape_transform_87074d30", (void*)godot_icall_Physics2DServer_body_set_shape_transform_87074d30},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_shape_metadata_14c84a37", (void*)godot_icall_Physics2DServer_body_set_shape_metadata_14c84a37},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_shape_count_f1d0c933", (void*)godot_icall_Physics2DServer_body_get_shape_count_f1d0c933},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_shape_d5ef04d9", (void*)godot_icall_Physics2DServer_body_get_shape_d5ef04d9},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_shape_transform_61871ef9", (void*)godot_icall_Physics2DServer_body_get_shape_transform_61871ef9},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_shape_metadata_21edbfc0", (void*)godot_icall_Physics2DServer_body_get_shape_metadata_21edbfc0},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_remove_shape_f6439f2", (void*)godot_icall_Physics2DServer_body_remove_shape_f6439f2},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_clear_shapes_a7039b4e", (void*)godot_icall_Physics2DServer_body_clear_shapes_a7039b4e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_shape_disabled_eb795dfc", (void*)godot_icall_Physics2DServer_body_set_shape_disabled_eb795dfc},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_shape_as_one_way_collision_ed337a1d", (void*)godot_icall_Physics2DServer_body_set_shape_as_one_way_collision_ed337a1d},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_attach_object_instance_id_7aa831af", (void*)godot_icall_Physics2DServer_body_attach_object_instance_id_7aa831af},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_object_instance_id_1867c419", (void*)godot_icall_Physics2DServer_body_get_object_instance_id_1867c419},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_attach_canvas_instance_id_7aa831af", (void*)godot_icall_Physics2DServer_body_attach_canvas_instance_id_7aa831af},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_canvas_instance_id_1867c419", (void*)godot_icall_Physics2DServer_body_get_canvas_instance_id_1867c419},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_continuous_collision_detection_mode_8ae314d0", (void*)godot_icall_Physics2DServer_body_set_continuous_collision_detection_mode_8ae314d0},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_continuous_collision_detection_mode_c8f340a9", (void*)godot_icall_Physics2DServer_body_get_continuous_collision_detection_mode_c8f340a9},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_collision_layer_7aa831af", (void*)godot_icall_Physics2DServer_body_set_collision_layer_7aa831af},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_collision_layer_1867c419", (void*)godot_icall_Physics2DServer_body_get_collision_layer_1867c419},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_collision_mask_7aa831af", (void*)godot_icall_Physics2DServer_body_set_collision_mask_7aa831af},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_collision_mask_1867c419", (void*)godot_icall_Physics2DServer_body_get_collision_mask_1867c419},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_param_9a4b042b", (void*)godot_icall_Physics2DServer_body_set_param_9a4b042b},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_param_4b96687f", (void*)godot_icall_Physics2DServer_body_get_param_4b96687f},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_state_942b2fee", (void*)godot_icall_Physics2DServer_body_set_state_942b2fee},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_state_2f9402d2", (void*)godot_icall_Physics2DServer_body_get_state_2f9402d2},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_apply_central_impulse_832e4d14", (void*)godot_icall_Physics2DServer_body_apply_central_impulse_832e4d14},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_apply_torque_impulse_70bf90fb", (void*)godot_icall_Physics2DServer_body_apply_torque_impulse_70bf90fb},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_apply_impulse_a6cab958", (void*)godot_icall_Physics2DServer_body_apply_impulse_a6cab958},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_add_central_force_832e4d14", (void*)godot_icall_Physics2DServer_body_add_central_force_832e4d14},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_add_force_a6cab958", (void*)godot_icall_Physics2DServer_body_add_force_a6cab958},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_add_torque_70bf90fb", (void*)godot_icall_Physics2DServer_body_add_torque_70bf90fb},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_axis_velocity_832e4d14", (void*)godot_icall_Physics2DServer_body_set_axis_velocity_832e4d14},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_add_collision_exception_48010164", (void*)godot_icall_Physics2DServer_body_add_collision_exception_48010164},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_remove_collision_exception_48010164", (void*)godot_icall_Physics2DServer_body_remove_collision_exception_48010164},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_max_contacts_reported_f6439f2", (void*)godot_icall_Physics2DServer_body_set_max_contacts_reported_f6439f2},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_max_contacts_reported_f1d0c933", (void*)godot_icall_Physics2DServer_body_get_max_contacts_reported_f1d0c933},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_omit_force_integration_56de082b", (void*)godot_icall_Physics2DServer_body_set_omit_force_integration_56de082b},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_is_omitting_force_integration_36cc12b4", (void*)godot_icall_Physics2DServer_body_is_omitting_force_integration_36cc12b4},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_set_force_integration_callback_58278364", (void*)godot_icall_Physics2DServer_body_set_force_integration_callback_58278364},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_test_motion_f50d3407", (void*)godot_icall_Physics2DServer_body_test_motion_f50d3407},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_body_get_direct_state_2c2c152a", (void*)godot_icall_Physics2DServer_body_get_direct_state_2c2c152a},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_joint_set_param_b27d642a", (void*)godot_icall_Physics2DServer_joint_set_param_b27d642a},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_joint_get_param_916b9023", (void*)godot_icall_Physics2DServer_joint_get_param_916b9023},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_pin_joint_create_f8506f72", (void*)godot_icall_Physics2DServer_pin_joint_create_f8506f72},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_groove_joint_create_53e709b2", (void*)godot_icall_Physics2DServer_groove_joint_create_53e709b2},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_damped_spring_joint_create_4d2d9f9a", (void*)godot_icall_Physics2DServer_damped_spring_joint_create_4d2d9f9a},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_damped_string_joint_set_param_bed3514d", (void*)godot_icall_Physics2DServer_damped_string_joint_set_param_bed3514d},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_damped_string_joint_get_param_b98e8957", (void*)godot_icall_Physics2DServer_damped_string_joint_get_param_b98e8957},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_joint_get_type_d1234bda", (void*)godot_icall_Physics2DServer_joint_get_type_d1234bda},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_free_rid_a7039b4e", (void*)godot_icall_Physics2DServer_free_rid_a7039b4e},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_set_active_ba24800b", (void*)godot_icall_Physics2DServer_set_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_Physics2DServer_get_process_info_79431e17", (void*)godot_icall_Physics2DServer_get_process_info_79431e17},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_set_shape_7ce53eb", (void*)godot_icall_Physics2DShapeQueryParameters_set_shape_7ce53eb},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_set_shape_rid_a7039b4e", (void*)godot_icall_Physics2DShapeQueryParameters_set_shape_rid_a7039b4e},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_get_shape_rid_6623661e", (void*)godot_icall_Physics2DShapeQueryParameters_get_shape_rid_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_set_transform_dfe2915f", (void*)godot_icall_Physics2DShapeQueryParameters_set_transform_dfe2915f},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_get_transform_d44700d", (void*)godot_icall_Physics2DShapeQueryParameters_get_transform_d44700d},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_set_motion_6df7471e", (void*)godot_icall_Physics2DShapeQueryParameters_set_motion_6df7471e},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_get_motion_9b4ea24e", (void*)godot_icall_Physics2DShapeQueryParameters_get_motion_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_set_margin_904508bb", (void*)godot_icall_Physics2DShapeQueryParameters_set_margin_904508bb},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_get_margin_4edcd7a9", (void*)godot_icall_Physics2DShapeQueryParameters_get_margin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_set_collision_mask_e1ae93bc", (void*)godot_icall_Physics2DShapeQueryParameters_set_collision_mask_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_get_collision_mask_1f886eb0", (void*)godot_icall_Physics2DShapeQueryParameters_get_collision_mask_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_set_exclude_2923a790", (void*)godot_icall_Physics2DShapeQueryParameters_set_exclude_2923a790},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_get_exclude_d80382d4", (void*)godot_icall_Physics2DShapeQueryParameters_get_exclude_d80382d4},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_set_collide_with_bodies_ba24800b", (void*)godot_icall_Physics2DShapeQueryParameters_set_collide_with_bodies_ba24800b},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_is_collide_with_bodies_enabled_68fe5f59", (void*)godot_icall_Physics2DShapeQueryParameters_is_collide_with_bodies_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_set_collide_with_areas_ba24800b", (void*)godot_icall_Physics2DShapeQueryParameters_set_collide_with_areas_ba24800b},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryParameters_is_collide_with_areas_enabled_68fe5f59", (void*)godot_icall_Physics2DShapeQueryParameters_is_collide_with_areas_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryResult_get_result_count_1f886eb0", (void*)godot_icall_Physics2DShapeQueryResult_get_result_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryResult_get_result_rid_6012f6e", (void*)godot_icall_Physics2DShapeQueryResult_get_result_rid_6012f6e},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryResult_get_result_object_id_f5296873", (void*)godot_icall_Physics2DShapeQueryResult_get_result_object_id_f5296873},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryResult_get_result_object_90d51b7a", (void*)godot_icall_Physics2DShapeQueryResult_get_result_object_90d51b7a},
	{"Godot.NativeCalls::godot_icall_Physics2DShapeQueryResult_get_result_object_shape_b835dea5", (void*)godot_icall_Physics2DShapeQueryResult_get_result_object_shape_b835dea5},
	{"Godot.NativeCalls::godot_icall_Physics2DTestMotionResult_get_motion_9b4ea24e", (void*)godot_icall_Physics2DTestMotionResult_get_motion_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Physics2DTestMotionResult_get_motion_remainder_9b4ea24e", (void*)godot_icall_Physics2DTestMotionResult_get_motion_remainder_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Physics2DTestMotionResult_get_collision_point_9b4ea24e", (void*)godot_icall_Physics2DTestMotionResult_get_collision_point_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Physics2DTestMotionResult_get_collision_normal_9b4ea24e", (void*)godot_icall_Physics2DTestMotionResult_get_collision_normal_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Physics2DTestMotionResult_get_collider_velocity_9b4ea24e", (void*)godot_icall_Physics2DTestMotionResult_get_collider_velocity_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Physics2DTestMotionResult_get_collider_id_4bb7c348", (void*)godot_icall_Physics2DTestMotionResult_get_collider_id_4bb7c348},
	{"Godot.NativeCalls::godot_icall_Physics2DTestMotionResult_get_collider_rid_6623661e", (void*)godot_icall_Physics2DTestMotionResult_get_collider_rid_6623661e},
	{"Godot.NativeCalls::godot_icall_Physics2DTestMotionResult_get_collider_5bd95814", (void*)godot_icall_Physics2DTestMotionResult_get_collider_5bd95814},
	{"Godot.NativeCalls::godot_icall_Physics2DTestMotionResult_get_collider_shape_1f886eb0", (void*)godot_icall_Physics2DTestMotionResult_get_collider_shape_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PhysicsBody_set_collision_layer_966aab97", (void*)godot_icall_PhysicsBody_set_collision_layer_966aab97},
	{"Godot.NativeCalls::godot_icall_PhysicsBody_get_collision_layer_54cc76d5", (void*)godot_icall_PhysicsBody_get_collision_layer_54cc76d5},
	{"Godot.NativeCalls::godot_icall_PhysicsBody_set_collision_mask_966aab97", (void*)godot_icall_PhysicsBody_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_PhysicsBody_get_collision_mask_54cc76d5", (void*)godot_icall_PhysicsBody_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_PhysicsBody_set_collision_mask_bit_4ae8febd", (void*)godot_icall_PhysicsBody_set_collision_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_PhysicsBody_get_collision_mask_bit_7f690926", (void*)godot_icall_PhysicsBody_get_collision_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_PhysicsBody_set_collision_layer_bit_4ae8febd", (void*)godot_icall_PhysicsBody_set_collision_layer_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_PhysicsBody_get_collision_layer_bit_7f690926", (void*)godot_icall_PhysicsBody_get_collision_layer_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_PhysicsBody_get_collision_exceptions_d80382d4", (void*)godot_icall_PhysicsBody_get_collision_exceptions_d80382d4},
	{"Godot.NativeCalls::godot_icall_PhysicsBody_add_collision_exception_with_598860a7", (void*)godot_icall_PhysicsBody_add_collision_exception_with_598860a7},
	{"Godot.NativeCalls::godot_icall_PhysicsBody_remove_collision_exception_with_598860a7", (void*)godot_icall_PhysicsBody_remove_collision_exception_with_598860a7},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D_set_collision_layer_966aab97", (void*)godot_icall_PhysicsBody2D_set_collision_layer_966aab97},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D_get_collision_layer_54cc76d5", (void*)godot_icall_PhysicsBody2D_get_collision_layer_54cc76d5},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D_set_collision_mask_966aab97", (void*)godot_icall_PhysicsBody2D_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D_get_collision_mask_54cc76d5", (void*)godot_icall_PhysicsBody2D_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D_set_collision_mask_bit_4ae8febd", (void*)godot_icall_PhysicsBody2D_set_collision_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D_get_collision_mask_bit_7f690926", (void*)godot_icall_PhysicsBody2D_get_collision_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D_set_collision_layer_bit_4ae8febd", (void*)godot_icall_PhysicsBody2D_set_collision_layer_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D_get_collision_layer_bit_7f690926", (void*)godot_icall_PhysicsBody2D_get_collision_layer_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D__set_layers_966aab97", (void*)godot_icall_PhysicsBody2D__set_layers_966aab97},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D__get_layers_54cc76d5", (void*)godot_icall_PhysicsBody2D__get_layers_54cc76d5},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D_get_collision_exceptions_d80382d4", (void*)godot_icall_PhysicsBody2D_get_collision_exceptions_d80382d4},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D_add_collision_exception_with_598860a7", (void*)godot_icall_PhysicsBody2D_add_collision_exception_with_598860a7},
	{"Godot.NativeCalls::godot_icall_PhysicsBody2D_remove_collision_exception_with_598860a7", (void*)godot_icall_PhysicsBody2D_remove_collision_exception_with_598860a7},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_total_gravity_9b4ea24f", (void*)godot_icall_PhysicsDirectBodyState_get_total_gravity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_total_linear_damp_4edcd7a9", (void*)godot_icall_PhysicsDirectBodyState_get_total_linear_damp_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_total_angular_damp_4edcd7a9", (void*)godot_icall_PhysicsDirectBodyState_get_total_angular_damp_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_center_of_mass_9b4ea24f", (void*)godot_icall_PhysicsDirectBodyState_get_center_of_mass_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_principal_inertia_axes_4746c0fd", (void*)godot_icall_PhysicsDirectBodyState_get_principal_inertia_axes_4746c0fd},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_inverse_mass_4edcd7a9", (void*)godot_icall_PhysicsDirectBodyState_get_inverse_mass_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_inverse_inertia_9b4ea24f", (void*)godot_icall_PhysicsDirectBodyState_get_inverse_inertia_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_set_linear_velocity_6df7471d", (void*)godot_icall_PhysicsDirectBodyState_set_linear_velocity_6df7471d},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_linear_velocity_9b4ea24f", (void*)godot_icall_PhysicsDirectBodyState_get_linear_velocity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_set_angular_velocity_6df7471d", (void*)godot_icall_PhysicsDirectBodyState_set_angular_velocity_6df7471d},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_angular_velocity_9b4ea24f", (void*)godot_icall_PhysicsDirectBodyState_get_angular_velocity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_set_transform_655b85c9", (void*)godot_icall_PhysicsDirectBodyState_set_transform_655b85c9},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_transform_a3fb649b", (void*)godot_icall_PhysicsDirectBodyState_get_transform_a3fb649b},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_add_central_force_6df7471d", (void*)godot_icall_PhysicsDirectBodyState_add_central_force_6df7471d},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_add_force_bf22f212", (void*)godot_icall_PhysicsDirectBodyState_add_force_bf22f212},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_add_torque_6df7471d", (void*)godot_icall_PhysicsDirectBodyState_add_torque_6df7471d},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_apply_central_impulse_6df7471d", (void*)godot_icall_PhysicsDirectBodyState_apply_central_impulse_6df7471d},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_apply_impulse_bf22f212", (void*)godot_icall_PhysicsDirectBodyState_apply_impulse_bf22f212},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_apply_torque_impulse_6df7471d", (void*)godot_icall_PhysicsDirectBodyState_apply_torque_impulse_6df7471d},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_set_sleep_state_ba24800b", (void*)godot_icall_PhysicsDirectBodyState_set_sleep_state_ba24800b},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_is_sleeping_68fe5f59", (void*)godot_icall_PhysicsDirectBodyState_is_sleeping_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_contact_count_1f886eb0", (void*)godot_icall_PhysicsDirectBodyState_get_contact_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_contact_local_position_237286f3", (void*)godot_icall_PhysicsDirectBodyState_get_contact_local_position_237286f3},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_contact_local_normal_237286f3", (void*)godot_icall_PhysicsDirectBodyState_get_contact_local_normal_237286f3},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_contact_impulse_c671df3a", (void*)godot_icall_PhysicsDirectBodyState_get_contact_impulse_c671df3a},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_contact_local_shape_b835dea5", (void*)godot_icall_PhysicsDirectBodyState_get_contact_local_shape_b835dea5},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_contact_collider_6012f6e", (void*)godot_icall_PhysicsDirectBodyState_get_contact_collider_6012f6e},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_contact_collider_position_237286f3", (void*)godot_icall_PhysicsDirectBodyState_get_contact_collider_position_237286f3},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_contact_collider_id_f5296873", (void*)godot_icall_PhysicsDirectBodyState_get_contact_collider_id_f5296873},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_contact_collider_object_90d51b7a", (void*)godot_icall_PhysicsDirectBodyState_get_contact_collider_object_90d51b7a},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_contact_collider_shape_b835dea5", (void*)godot_icall_PhysicsDirectBodyState_get_contact_collider_shape_b835dea5},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_contact_collider_velocity_at_position_237286f3", (void*)godot_icall_PhysicsDirectBodyState_get_contact_collider_velocity_at_position_237286f3},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_step_4edcd7a9", (void*)godot_icall_PhysicsDirectBodyState_get_step_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_integrate_forces_c8e54a7b", (void*)godot_icall_PhysicsDirectBodyState_integrate_forces_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectBodyState_get_space_state_bfc60632", (void*)godot_icall_PhysicsDirectBodyState_get_space_state_bfc60632},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectSpaceState_intersect_ray_4195d84b", (void*)godot_icall_PhysicsDirectSpaceState_intersect_ray_4195d84b},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectSpaceState_intersect_shape_6ae46979", (void*)godot_icall_PhysicsDirectSpaceState_intersect_shape_6ae46979},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectSpaceState_cast_motion_e6a21d1a", (void*)godot_icall_PhysicsDirectSpaceState_cast_motion_e6a21d1a},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectSpaceState_collide_shape_6ae46979", (void*)godot_icall_PhysicsDirectSpaceState_collide_shape_6ae46979},
	{"Godot.NativeCalls::godot_icall_PhysicsDirectSpaceState_get_rest_info_b0c480e8", (void*)godot_icall_PhysicsDirectSpaceState_get_rest_info_b0c480e8},
	{"Godot.NativeCalls::godot_icall_PhysicsMaterial_set_friction_904508bb", (void*)godot_icall_PhysicsMaterial_set_friction_904508bb},
	{"Godot.NativeCalls::godot_icall_PhysicsMaterial_get_friction_4edcd7a9", (void*)godot_icall_PhysicsMaterial_get_friction_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PhysicsMaterial_set_rough_ba24800b", (void*)godot_icall_PhysicsMaterial_set_rough_ba24800b},
	{"Godot.NativeCalls::godot_icall_PhysicsMaterial_is_rough_68fe5f59", (void*)godot_icall_PhysicsMaterial_is_rough_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PhysicsMaterial_set_bounce_904508bb", (void*)godot_icall_PhysicsMaterial_set_bounce_904508bb},
	{"Godot.NativeCalls::godot_icall_PhysicsMaterial_get_bounce_4edcd7a9", (void*)godot_icall_PhysicsMaterial_get_bounce_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PhysicsMaterial_set_absorbent_ba24800b", (void*)godot_icall_PhysicsMaterial_set_absorbent_ba24800b},
	{"Godot.NativeCalls::godot_icall_PhysicsMaterial_is_absorbent_68fe5f59", (void*)godot_icall_PhysicsMaterial_is_absorbent_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_shape_create_982ca4d2", (void*)godot_icall_PhysicsServer_shape_create_982ca4d2},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_shape_set_data_8e6f3852", (void*)godot_icall_PhysicsServer_shape_set_data_8e6f3852},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_shape_get_type_2c47b4d6", (void*)godot_icall_PhysicsServer_shape_get_type_2c47b4d6},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_shape_get_data_ef54908b", (void*)godot_icall_PhysicsServer_shape_get_data_ef54908b},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_space_create_6623661e", (void*)godot_icall_PhysicsServer_space_create_6623661e},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_space_set_active_56de082b", (void*)godot_icall_PhysicsServer_space_set_active_56de082b},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_space_is_active_36cc12b4", (void*)godot_icall_PhysicsServer_space_is_active_36cc12b4},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_space_set_param_6e88a234", (void*)godot_icall_PhysicsServer_space_set_param_6e88a234},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_space_get_param_29313795", (void*)godot_icall_PhysicsServer_space_get_param_29313795},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_space_get_direct_state_9a0bebd1", (void*)godot_icall_PhysicsServer_space_get_direct_state_9a0bebd1},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_create_6623661e", (void*)godot_icall_PhysicsServer_area_create_6623661e},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_space_48010164", (void*)godot_icall_PhysicsServer_area_set_space_48010164},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_get_space_c09e26c0", (void*)godot_icall_PhysicsServer_area_get_space_c09e26c0},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_space_override_mode_9aa4724b", (void*)godot_icall_PhysicsServer_area_set_space_override_mode_9aa4724b},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_get_space_override_mode_d772ffac", (void*)godot_icall_PhysicsServer_area_get_space_override_mode_d772ffac},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_add_shape_36825fcd", (void*)godot_icall_PhysicsServer_area_add_shape_36825fcd},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_shape_ee265321", (void*)godot_icall_PhysicsServer_area_set_shape_ee265321},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_shape_transform_107e50a2", (void*)godot_icall_PhysicsServer_area_set_shape_transform_107e50a2},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_shape_disabled_eb795dfc", (void*)godot_icall_PhysicsServer_area_set_shape_disabled_eb795dfc},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_get_shape_count_f1d0c933", (void*)godot_icall_PhysicsServer_area_get_shape_count_f1d0c933},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_get_shape_d5ef04d9", (void*)godot_icall_PhysicsServer_area_get_shape_d5ef04d9},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_get_shape_transform_5be89b94", (void*)godot_icall_PhysicsServer_area_get_shape_transform_5be89b94},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_remove_shape_f6439f2", (void*)godot_icall_PhysicsServer_area_remove_shape_f6439f2},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_clear_shapes_a7039b4e", (void*)godot_icall_PhysicsServer_area_clear_shapes_a7039b4e},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_collision_layer_7aa831af", (void*)godot_icall_PhysicsServer_area_set_collision_layer_7aa831af},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_collision_mask_7aa831af", (void*)godot_icall_PhysicsServer_area_set_collision_mask_7aa831af},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_param_3b3fccfc", (void*)godot_icall_PhysicsServer_area_set_param_3b3fccfc},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_transform_8bd903e9", (void*)godot_icall_PhysicsServer_area_set_transform_8bd903e9},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_get_param_f2e7b7e5", (void*)godot_icall_PhysicsServer_area_get_param_f2e7b7e5},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_get_transform_8fc9bb26", (void*)godot_icall_PhysicsServer_area_get_transform_8fc9bb26},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_attach_object_instance_id_73956c1a", (void*)godot_icall_PhysicsServer_area_attach_object_instance_id_73956c1a},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_get_object_instance_id_4e8e61e1", (void*)godot_icall_PhysicsServer_area_get_object_instance_id_4e8e61e1},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_monitor_callback_384e4531", (void*)godot_icall_PhysicsServer_area_set_monitor_callback_384e4531},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_area_monitor_callback_384e4531", (void*)godot_icall_PhysicsServer_area_set_area_monitor_callback_384e4531},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_monitorable_56de082b", (void*)godot_icall_PhysicsServer_area_set_monitorable_56de082b},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_set_ray_pickable_56de082b", (void*)godot_icall_PhysicsServer_area_set_ray_pickable_56de082b},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_area_is_ray_pickable_36cc12b4", (void*)godot_icall_PhysicsServer_area_is_ray_pickable_36cc12b4},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_create_1e1b128", (void*)godot_icall_PhysicsServer_body_create_1e1b128},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_space_48010164", (void*)godot_icall_PhysicsServer_body_set_space_48010164},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_space_c09e26c0", (void*)godot_icall_PhysicsServer_body_get_space_c09e26c0},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_mode_406db06", (void*)godot_icall_PhysicsServer_body_set_mode_406db06},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_mode_8e417dda", (void*)godot_icall_PhysicsServer_body_get_mode_8e417dda},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_collision_layer_7aa831af", (void*)godot_icall_PhysicsServer_body_set_collision_layer_7aa831af},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_collision_layer_1867c419", (void*)godot_icall_PhysicsServer_body_get_collision_layer_1867c419},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_collision_mask_7aa831af", (void*)godot_icall_PhysicsServer_body_set_collision_mask_7aa831af},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_collision_mask_1867c419", (void*)godot_icall_PhysicsServer_body_get_collision_mask_1867c419},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_add_shape_36825fcd", (void*)godot_icall_PhysicsServer_body_add_shape_36825fcd},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_shape_ee265321", (void*)godot_icall_PhysicsServer_body_set_shape_ee265321},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_shape_transform_107e50a2", (void*)godot_icall_PhysicsServer_body_set_shape_transform_107e50a2},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_shape_disabled_eb795dfc", (void*)godot_icall_PhysicsServer_body_set_shape_disabled_eb795dfc},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_shape_count_f1d0c933", (void*)godot_icall_PhysicsServer_body_get_shape_count_f1d0c933},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_shape_d5ef04d9", (void*)godot_icall_PhysicsServer_body_get_shape_d5ef04d9},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_shape_transform_5be89b94", (void*)godot_icall_PhysicsServer_body_get_shape_transform_5be89b94},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_remove_shape_f6439f2", (void*)godot_icall_PhysicsServer_body_remove_shape_f6439f2},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_clear_shapes_a7039b4e", (void*)godot_icall_PhysicsServer_body_clear_shapes_a7039b4e},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_attach_object_instance_id_73956c1a", (void*)godot_icall_PhysicsServer_body_attach_object_instance_id_73956c1a},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_object_instance_id_4e8e61e1", (void*)godot_icall_PhysicsServer_body_get_object_instance_id_4e8e61e1},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_enable_continuous_collision_detection_56de082b", (void*)godot_icall_PhysicsServer_body_set_enable_continuous_collision_detection_56de082b},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_is_continuous_collision_detection_enabled_36cc12b4", (void*)godot_icall_PhysicsServer_body_is_continuous_collision_detection_enabled_36cc12b4},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_param_4dfe98a5", (void*)godot_icall_PhysicsServer_body_set_param_4dfe98a5},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_param_b98c101", (void*)godot_icall_PhysicsServer_body_get_param_b98c101},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_kinematic_safe_margin_70bf90fb", (void*)godot_icall_PhysicsServer_body_set_kinematic_safe_margin_70bf90fb},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_kinematic_safe_margin_8194d7a8", (void*)godot_icall_PhysicsServer_body_get_kinematic_safe_margin_8194d7a8},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_state_25cf8d66", (void*)godot_icall_PhysicsServer_body_set_state_25cf8d66},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_state_c29efb74", (void*)godot_icall_PhysicsServer_body_get_state_c29efb74},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_add_central_force_832e4d15", (void*)godot_icall_PhysicsServer_body_add_central_force_832e4d15},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_add_force_a6cab998", (void*)godot_icall_PhysicsServer_body_add_force_a6cab998},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_add_torque_832e4d15", (void*)godot_icall_PhysicsServer_body_add_torque_832e4d15},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_apply_central_impulse_832e4d15", (void*)godot_icall_PhysicsServer_body_apply_central_impulse_832e4d15},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_apply_impulse_a6cab998", (void*)godot_icall_PhysicsServer_body_apply_impulse_a6cab998},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_apply_torque_impulse_832e4d15", (void*)godot_icall_PhysicsServer_body_apply_torque_impulse_832e4d15},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_axis_velocity_832e4d15", (void*)godot_icall_PhysicsServer_body_set_axis_velocity_832e4d15},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_axis_lock_42525c46", (void*)godot_icall_PhysicsServer_body_set_axis_lock_42525c46},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_is_axis_locked_665a830c", (void*)godot_icall_PhysicsServer_body_is_axis_locked_665a830c},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_add_collision_exception_48010164", (void*)godot_icall_PhysicsServer_body_add_collision_exception_48010164},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_remove_collision_exception_48010164", (void*)godot_icall_PhysicsServer_body_remove_collision_exception_48010164},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_max_contacts_reported_f6439f2", (void*)godot_icall_PhysicsServer_body_set_max_contacts_reported_f6439f2},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_max_contacts_reported_f1d0c933", (void*)godot_icall_PhysicsServer_body_get_max_contacts_reported_f1d0c933},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_omit_force_integration_56de082b", (void*)godot_icall_PhysicsServer_body_set_omit_force_integration_56de082b},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_is_omitting_force_integration_36cc12b4", (void*)godot_icall_PhysicsServer_body_is_omitting_force_integration_36cc12b4},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_force_integration_callback_58278364", (void*)godot_icall_PhysicsServer_body_set_force_integration_callback_58278364},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_set_ray_pickable_56de082b", (void*)godot_icall_PhysicsServer_body_set_ray_pickable_56de082b},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_is_ray_pickable_36cc12b4", (void*)godot_icall_PhysicsServer_body_is_ray_pickable_36cc12b4},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_body_get_direct_state_b66b9175", (void*)godot_icall_PhysicsServer_body_get_direct_state_b66b9175},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_joint_create_pin_c3880076", (void*)godot_icall_PhysicsServer_joint_create_pin_c3880076},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_pin_joint_set_param_ea08778c", (void*)godot_icall_PhysicsServer_pin_joint_set_param_ea08778c},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_pin_joint_get_param_500aa0a8", (void*)godot_icall_PhysicsServer_pin_joint_get_param_500aa0a8},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_pin_joint_set_local_a_832e4d15", (void*)godot_icall_PhysicsServer_pin_joint_set_local_a_832e4d15},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_pin_joint_get_local_a_6599be65", (void*)godot_icall_PhysicsServer_pin_joint_get_local_a_6599be65},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_pin_joint_set_local_b_832e4d15", (void*)godot_icall_PhysicsServer_pin_joint_set_local_b_832e4d15},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_pin_joint_get_local_b_6599be65", (void*)godot_icall_PhysicsServer_pin_joint_get_local_b_6599be65},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_joint_create_hinge_773426ab", (void*)godot_icall_PhysicsServer_joint_create_hinge_773426ab},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_hinge_joint_set_param_f17fe01b", (void*)godot_icall_PhysicsServer_hinge_joint_set_param_f17fe01b},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_hinge_joint_get_param_f87700e4", (void*)godot_icall_PhysicsServer_hinge_joint_get_param_f87700e4},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_hinge_joint_set_flag_59894709", (void*)godot_icall_PhysicsServer_hinge_joint_set_flag_59894709},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_hinge_joint_get_flag_e45035e6", (void*)godot_icall_PhysicsServer_hinge_joint_get_flag_e45035e6},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_joint_create_slider_773426ab", (void*)godot_icall_PhysicsServer_joint_create_slider_773426ab},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_slider_joint_set_param_618f32be", (void*)godot_icall_PhysicsServer_slider_joint_set_param_618f32be},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_slider_joint_get_param_6c0c4d60", (void*)godot_icall_PhysicsServer_slider_joint_get_param_6c0c4d60},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_joint_create_cone_twist_773426ab", (void*)godot_icall_PhysicsServer_joint_create_cone_twist_773426ab},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_cone_twist_joint_set_param_c16b23d5", (void*)godot_icall_PhysicsServer_cone_twist_joint_set_param_c16b23d5},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_cone_twist_joint_get_param_a25c6dc1", (void*)godot_icall_PhysicsServer_cone_twist_joint_get_param_a25c6dc1},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_joint_get_type_806c6db5", (void*)godot_icall_PhysicsServer_joint_get_type_806c6db5},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_joint_set_solver_priority_f6439f2", (void*)godot_icall_PhysicsServer_joint_set_solver_priority_f6439f2},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_joint_get_solver_priority_f1d0c933", (void*)godot_icall_PhysicsServer_joint_get_solver_priority_f1d0c933},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_joint_create_generic_6dof_773426ab", (void*)godot_icall_PhysicsServer_joint_create_generic_6dof_773426ab},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_generic_6dof_joint_set_param_b7e66223", (void*)godot_icall_PhysicsServer_generic_6dof_joint_set_param_b7e66223},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_generic_6dof_joint_get_param_59f8eddb", (void*)godot_icall_PhysicsServer_generic_6dof_joint_get_param_59f8eddb},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_generic_6dof_joint_set_flag_39470af5", (void*)godot_icall_PhysicsServer_generic_6dof_joint_set_flag_39470af5},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_generic_6dof_joint_get_flag_7270b5fb", (void*)godot_icall_PhysicsServer_generic_6dof_joint_get_flag_7270b5fb},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_free_rid_a7039b4e", (void*)godot_icall_PhysicsServer_free_rid_a7039b4e},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_set_active_ba24800b", (void*)godot_icall_PhysicsServer_set_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_PhysicsServer_get_process_info_d7865401", (void*)godot_icall_PhysicsServer_get_process_info_d7865401},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_set_shape_7ce53eb", (void*)godot_icall_PhysicsShapeQueryParameters_set_shape_7ce53eb},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_set_shape_rid_a7039b4e", (void*)godot_icall_PhysicsShapeQueryParameters_set_shape_rid_a7039b4e},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_get_shape_rid_6623661e", (void*)godot_icall_PhysicsShapeQueryParameters_get_shape_rid_6623661e},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_set_transform_655b85c9", (void*)godot_icall_PhysicsShapeQueryParameters_set_transform_655b85c9},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_get_transform_a3fb649b", (void*)godot_icall_PhysicsShapeQueryParameters_get_transform_a3fb649b},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_set_margin_904508bb", (void*)godot_icall_PhysicsShapeQueryParameters_set_margin_904508bb},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_get_margin_4edcd7a9", (void*)godot_icall_PhysicsShapeQueryParameters_get_margin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_set_collision_mask_e1ae93bc", (void*)godot_icall_PhysicsShapeQueryParameters_set_collision_mask_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_get_collision_mask_1f886eb0", (void*)godot_icall_PhysicsShapeQueryParameters_get_collision_mask_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_set_exclude_2923a790", (void*)godot_icall_PhysicsShapeQueryParameters_set_exclude_2923a790},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_get_exclude_d80382d4", (void*)godot_icall_PhysicsShapeQueryParameters_get_exclude_d80382d4},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_set_collide_with_bodies_ba24800b", (void*)godot_icall_PhysicsShapeQueryParameters_set_collide_with_bodies_ba24800b},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_is_collide_with_bodies_enabled_68fe5f59", (void*)godot_icall_PhysicsShapeQueryParameters_is_collide_with_bodies_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_set_collide_with_areas_ba24800b", (void*)godot_icall_PhysicsShapeQueryParameters_set_collide_with_areas_ba24800b},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryParameters_is_collide_with_areas_enabled_68fe5f59", (void*)godot_icall_PhysicsShapeQueryParameters_is_collide_with_areas_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryResult_get_result_count_1f886eb0", (void*)godot_icall_PhysicsShapeQueryResult_get_result_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryResult_get_result_rid_6012f6e", (void*)godot_icall_PhysicsShapeQueryResult_get_result_rid_6012f6e},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryResult_get_result_object_id_f5296873", (void*)godot_icall_PhysicsShapeQueryResult_get_result_object_id_f5296873},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryResult_get_result_object_90d51b7a", (void*)godot_icall_PhysicsShapeQueryResult_get_result_object_90d51b7a},
	{"Godot.NativeCalls::godot_icall_PhysicsShapeQueryResult_get_result_object_shape_b835dea5", (void*)godot_icall_PhysicsShapeQueryResult_get_result_object_shape_b835dea5},
	{"Godot.NativeCalls::godot_icall_PinJoint_set_param_54a63c46", (void*)godot_icall_PinJoint_set_param_54a63c46},
	{"Godot.NativeCalls::godot_icall_PinJoint_get_param_1203a663", (void*)godot_icall_PinJoint_get_param_1203a663},
	{"Godot.NativeCalls::godot_icall_PinJoint2D_set_softness_904508bb", (void*)godot_icall_PinJoint2D_set_softness_904508bb},
	{"Godot.NativeCalls::godot_icall_PinJoint2D_get_softness_4edcd7a9", (void*)godot_icall_PinJoint2D_get_softness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PlaneMesh_set_size_6df7471e", (void*)godot_icall_PlaneMesh_set_size_6df7471e},
	{"Godot.NativeCalls::godot_icall_PlaneMesh_get_size_9b4ea24e", (void*)godot_icall_PlaneMesh_get_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_PlaneMesh_set_subdivide_width_e1ae93bc", (void*)godot_icall_PlaneMesh_set_subdivide_width_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_PlaneMesh_get_subdivide_width_1f886eb0", (void*)godot_icall_PlaneMesh_get_subdivide_width_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PlaneMesh_set_subdivide_depth_e1ae93bc", (void*)godot_icall_PlaneMesh_set_subdivide_depth_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_PlaneMesh_get_subdivide_depth_1f886eb0", (void*)godot_icall_PlaneMesh_get_subdivide_depth_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PlaneShape_set_plane_582036ef", (void*)godot_icall_PlaneShape_set_plane_582036ef},
	{"Godot.NativeCalls::godot_icall_PlaneShape_get_plane_8702117d", (void*)godot_icall_PlaneShape_get_plane_8702117d},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_polygon_3a3116bd", (void*)godot_icall_Polygon2D_set_polygon_3a3116bd},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_polygon_e910f1af", (void*)godot_icall_Polygon2D_get_polygon_e910f1af},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_uv_3a3116bd", (void*)godot_icall_Polygon2D_set_uv_3a3116bd},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_uv_e910f1af", (void*)godot_icall_Polygon2D_get_uv_e910f1af},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_color_f2e3b5aa", (void*)godot_icall_Polygon2D_set_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_color_304394ba", (void*)godot_icall_Polygon2D_get_color_304394ba},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_polygons_2923a790", (void*)godot_icall_Polygon2D_set_polygons_2923a790},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_polygons_d80382d4", (void*)godot_icall_Polygon2D_get_polygons_d80382d4},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_vertex_colors_22e90985", (void*)godot_icall_Polygon2D_set_vertex_colors_22e90985},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_vertex_colors_e048d8e7", (void*)godot_icall_Polygon2D_get_vertex_colors_e048d8e7},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_texture_7eecd31a", (void*)godot_icall_Polygon2D_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_texture_ac462e4a", (void*)godot_icall_Polygon2D_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_texture_offset_6df7471e", (void*)godot_icall_Polygon2D_set_texture_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_texture_offset_9b4ea24e", (void*)godot_icall_Polygon2D_get_texture_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_texture_rotation_904508bb", (void*)godot_icall_Polygon2D_set_texture_rotation_904508bb},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_texture_rotation_4edcd7a9", (void*)godot_icall_Polygon2D_get_texture_rotation_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_texture_rotation_degrees_904508bb", (void*)godot_icall_Polygon2D_set_texture_rotation_degrees_904508bb},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_texture_rotation_degrees_4edcd7a9", (void*)godot_icall_Polygon2D_get_texture_rotation_degrees_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_texture_scale_6df7471e", (void*)godot_icall_Polygon2D_set_texture_scale_6df7471e},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_texture_scale_9b4ea24e", (void*)godot_icall_Polygon2D_get_texture_scale_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_invert_ba24800b", (void*)godot_icall_Polygon2D_set_invert_ba24800b},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_invert_68fe5f59", (void*)godot_icall_Polygon2D_get_invert_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_antialiased_ba24800b", (void*)godot_icall_Polygon2D_set_antialiased_ba24800b},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_antialiased_68fe5f59", (void*)godot_icall_Polygon2D_get_antialiased_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_invert_border_904508bb", (void*)godot_icall_Polygon2D_set_invert_border_904508bb},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_invert_border_4edcd7a9", (void*)godot_icall_Polygon2D_get_invert_border_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_offset_6df7471e", (void*)godot_icall_Polygon2D_set_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_offset_9b4ea24e", (void*)godot_icall_Polygon2D_get_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Polygon2D_add_bone_86b513d0", (void*)godot_icall_Polygon2D_add_bone_86b513d0},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_bone_count_1f886eb0", (void*)godot_icall_Polygon2D_get_bone_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_bone_path_1640f2b", (void*)godot_icall_Polygon2D_get_bone_path_1640f2b},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_bone_weights_8a6351b5", (void*)godot_icall_Polygon2D_get_bone_weights_8a6351b5},
	{"Godot.NativeCalls::godot_icall_Polygon2D_erase_bone_e1ae93bc", (void*)godot_icall_Polygon2D_erase_bone_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Polygon2D_clear_bones_c8e54a7b", (void*)godot_icall_Polygon2D_clear_bones_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_bone_path_e024f6ac", (void*)godot_icall_Polygon2D_set_bone_path_e024f6ac},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_bone_weights_53629f7e", (void*)godot_icall_Polygon2D_set_bone_weights_53629f7e},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_skeleton_1e08804", (void*)godot_icall_Polygon2D_set_skeleton_1e08804},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_skeleton_bf425768", (void*)godot_icall_Polygon2D_get_skeleton_bf425768},
	{"Godot.NativeCalls::godot_icall_Polygon2D_set_internal_vertex_count_e1ae93bc", (void*)godot_icall_Polygon2D_set_internal_vertex_count_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Polygon2D_get_internal_vertex_count_1f886eb0", (void*)godot_icall_Polygon2D_get_internal_vertex_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Polygon2D__set_bones_2923a790", (void*)godot_icall_Polygon2D__set_bones_2923a790},
	{"Godot.NativeCalls::godot_icall_Polygon2D__get_bones_d80382d4", (void*)godot_icall_Polygon2D__get_bones_d80382d4},
	{"Godot.NativeCalls::godot_icall_PolygonPathFinder_setup_28911a29", (void*)godot_icall_PolygonPathFinder_setup_28911a29},
	{"Godot.NativeCalls::godot_icall_PolygonPathFinder_find_path_c24f2533", (void*)godot_icall_PolygonPathFinder_find_path_c24f2533},
	{"Godot.NativeCalls::godot_icall_PolygonPathFinder_get_intersections_c24f2533", (void*)godot_icall_PolygonPathFinder_get_intersections_c24f2533},
	{"Godot.NativeCalls::godot_icall_PolygonPathFinder_get_closest_point_af4cfa54", (void*)godot_icall_PolygonPathFinder_get_closest_point_af4cfa54},
	{"Godot.NativeCalls::godot_icall_PolygonPathFinder_is_point_inside_fba3d544", (void*)godot_icall_PolygonPathFinder_is_point_inside_fba3d544},
	{"Godot.NativeCalls::godot_icall_PolygonPathFinder_set_point_penalty_708a76ed", (void*)godot_icall_PolygonPathFinder_set_point_penalty_708a76ed},
	{"Godot.NativeCalls::godot_icall_PolygonPathFinder_get_point_penalty_c671df3a", (void*)godot_icall_PolygonPathFinder_get_point_penalty_c671df3a},
	{"Godot.NativeCalls::godot_icall_PolygonPathFinder_get_bounds_6344c073", (void*)godot_icall_PolygonPathFinder_get_bounds_6344c073},
	{"Godot.NativeCalls::godot_icall_PolygonPathFinder__set_data_e472adcf", (void*)godot_icall_PolygonPathFinder__set_data_e472adcf},
	{"Godot.NativeCalls::godot_icall_PolygonPathFinder__get_data_22d47c9d", (void*)godot_icall_PolygonPathFinder__get_data_22d47c9d},
	{"Godot.NativeCalls::godot_icall_Popup_set_as_minsize_c8e54a7b", (void*)godot_icall_Popup_set_as_minsize_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Popup_popup_centered_6df7471e", (void*)godot_icall_Popup_popup_centered_6df7471e},
	{"Godot.NativeCalls::godot_icall_Popup_popup_centered_ratio_904508bb", (void*)godot_icall_Popup_popup_centered_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_Popup_popup_centered_minsize_6df7471e", (void*)godot_icall_Popup_popup_centered_minsize_6df7471e},
	{"Godot.NativeCalls::godot_icall_Popup_popup_centered_clamped_eb94adb7", (void*)godot_icall_Popup_popup_centered_clamped_eb94adb7},
	{"Godot.NativeCalls::godot_icall_Popup_popup_a5ed61f1", (void*)godot_icall_Popup_popup_a5ed61f1},
	{"Godot.NativeCalls::godot_icall_Popup_set_exclusive_ba24800b", (void*)godot_icall_Popup_set_exclusive_ba24800b},
	{"Godot.NativeCalls::godot_icall_Popup_is_exclusive_68fe5f59", (void*)godot_icall_Popup_is_exclusive_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_item_5602fe8d", (void*)godot_icall_PopupMenu_add_item_5602fe8d},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_icon_item_8dc5d7c4", (void*)godot_icall_PopupMenu_add_icon_item_8dc5d7c4},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_check_item_5602fe8d", (void*)godot_icall_PopupMenu_add_check_item_5602fe8d},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_icon_check_item_8dc5d7c4", (void*)godot_icall_PopupMenu_add_icon_check_item_8dc5d7c4},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_radio_check_item_5602fe8d", (void*)godot_icall_PopupMenu_add_radio_check_item_5602fe8d},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_icon_radio_check_item_8dc5d7c4", (void*)godot_icall_PopupMenu_add_icon_radio_check_item_8dc5d7c4},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_multistate_item_3365324b", (void*)godot_icall_PopupMenu_add_multistate_item_3365324b},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_shortcut_44ed075b", (void*)godot_icall_PopupMenu_add_shortcut_44ed075b},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_icon_shortcut_909fe38f", (void*)godot_icall_PopupMenu_add_icon_shortcut_909fe38f},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_check_shortcut_44ed075b", (void*)godot_icall_PopupMenu_add_check_shortcut_44ed075b},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_icon_check_shortcut_909fe38f", (void*)godot_icall_PopupMenu_add_icon_check_shortcut_909fe38f},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_radio_check_shortcut_44ed075b", (void*)godot_icall_PopupMenu_add_radio_check_shortcut_44ed075b},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_icon_radio_check_shortcut_909fe38f", (void*)godot_icall_PopupMenu_add_icon_radio_check_shortcut_909fe38f},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_submenu_item_35cdaa2e", (void*)godot_icall_PopupMenu_add_submenu_item_35cdaa2e},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_text_c1ffd74f", (void*)godot_icall_PopupMenu_set_item_text_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_icon_f20a84e", (void*)godot_icall_PopupMenu_set_item_icon_f20a84e},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_checked_4ae8febd", (void*)godot_icall_PopupMenu_set_item_checked_4ae8febd},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_id_807eefe4", (void*)godot_icall_PopupMenu_set_item_id_807eefe4},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_accelerator_76ba17c1", (void*)godot_icall_PopupMenu_set_item_accelerator_76ba17c1},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_metadata_37bef04", (void*)godot_icall_PopupMenu_set_item_metadata_37bef04},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_disabled_4ae8febd", (void*)godot_icall_PopupMenu_set_item_disabled_4ae8febd},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_submenu_c1ffd74f", (void*)godot_icall_PopupMenu_set_item_submenu_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_as_separator_4ae8febd", (void*)godot_icall_PopupMenu_set_item_as_separator_4ae8febd},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_as_checkable_4ae8febd", (void*)godot_icall_PopupMenu_set_item_as_checkable_4ae8febd},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_as_radio_checkable_4ae8febd", (void*)godot_icall_PopupMenu_set_item_as_radio_checkable_4ae8febd},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_tooltip_c1ffd74f", (void*)godot_icall_PopupMenu_set_item_tooltip_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_shortcut_afe18c3b", (void*)godot_icall_PopupMenu_set_item_shortcut_afe18c3b},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_multistate_807eefe4", (void*)godot_icall_PopupMenu_set_item_multistate_807eefe4},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_item_shortcut_disabled_4ae8febd", (void*)godot_icall_PopupMenu_set_item_shortcut_disabled_4ae8febd},
	{"Godot.NativeCalls::godot_icall_PopupMenu_toggle_item_checked_e1ae93bc", (void*)godot_icall_PopupMenu_toggle_item_checked_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_PopupMenu_toggle_item_multistate_e1ae93bc", (void*)godot_icall_PopupMenu_toggle_item_multistate_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_PopupMenu_get_item_text_44fc4c5a", (void*)godot_icall_PopupMenu_get_item_text_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_PopupMenu_get_item_icon_561b2831", (void*)godot_icall_PopupMenu_get_item_icon_561b2831},
	{"Godot.NativeCalls::godot_icall_PopupMenu_is_item_checked_7f690926", (void*)godot_icall_PopupMenu_is_item_checked_7f690926},
	{"Godot.NativeCalls::godot_icall_PopupMenu_get_item_id_b835dea5", (void*)godot_icall_PopupMenu_get_item_id_b835dea5},
	{"Godot.NativeCalls::godot_icall_PopupMenu_get_item_index_b835dea5", (void*)godot_icall_PopupMenu_get_item_index_b835dea5},
	{"Godot.NativeCalls::godot_icall_PopupMenu_get_item_accelerator_52dccd8b", (void*)godot_icall_PopupMenu_get_item_accelerator_52dccd8b},
	{"Godot.NativeCalls::godot_icall_PopupMenu_get_item_metadata_a9b2673d", (void*)godot_icall_PopupMenu_get_item_metadata_a9b2673d},
	{"Godot.NativeCalls::godot_icall_PopupMenu_is_item_disabled_7f690926", (void*)godot_icall_PopupMenu_is_item_disabled_7f690926},
	{"Godot.NativeCalls::godot_icall_PopupMenu_get_item_submenu_44fc4c5a", (void*)godot_icall_PopupMenu_get_item_submenu_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_PopupMenu_is_item_separator_7f690926", (void*)godot_icall_PopupMenu_is_item_separator_7f690926},
	{"Godot.NativeCalls::godot_icall_PopupMenu_is_item_checkable_7f690926", (void*)godot_icall_PopupMenu_is_item_checkable_7f690926},
	{"Godot.NativeCalls::godot_icall_PopupMenu_is_item_radio_checkable_7f690926", (void*)godot_icall_PopupMenu_is_item_radio_checkable_7f690926},
	{"Godot.NativeCalls::godot_icall_PopupMenu_is_item_shortcut_disabled_7f690926", (void*)godot_icall_PopupMenu_is_item_shortcut_disabled_7f690926},
	{"Godot.NativeCalls::godot_icall_PopupMenu_get_item_tooltip_44fc4c5a", (void*)godot_icall_PopupMenu_get_item_tooltip_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_PopupMenu_get_item_shortcut_7e5ddc5f", (void*)godot_icall_PopupMenu_get_item_shortcut_7e5ddc5f},
	{"Godot.NativeCalls::godot_icall_PopupMenu_get_item_count_1f886eb0", (void*)godot_icall_PopupMenu_get_item_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PopupMenu_remove_item_e1ae93bc", (void*)godot_icall_PopupMenu_remove_item_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_PopupMenu_add_separator_2f29e819", (void*)godot_icall_PopupMenu_add_separator_2f29e819},
	{"Godot.NativeCalls::godot_icall_PopupMenu_clear_c8e54a7b", (void*)godot_icall_PopupMenu_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_PopupMenu__set_items_2923a790", (void*)godot_icall_PopupMenu__set_items_2923a790},
	{"Godot.NativeCalls::godot_icall_PopupMenu__get_items_d80382d4", (void*)godot_icall_PopupMenu__get_items_d80382d4},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_hide_on_item_selection_ba24800b", (void*)godot_icall_PopupMenu_set_hide_on_item_selection_ba24800b},
	{"Godot.NativeCalls::godot_icall_PopupMenu_is_hide_on_item_selection_68fe5f59", (void*)godot_icall_PopupMenu_is_hide_on_item_selection_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_hide_on_checkable_item_selection_ba24800b", (void*)godot_icall_PopupMenu_set_hide_on_checkable_item_selection_ba24800b},
	{"Godot.NativeCalls::godot_icall_PopupMenu_is_hide_on_checkable_item_selection_68fe5f59", (void*)godot_icall_PopupMenu_is_hide_on_checkable_item_selection_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_hide_on_state_item_selection_ba24800b", (void*)godot_icall_PopupMenu_set_hide_on_state_item_selection_ba24800b},
	{"Godot.NativeCalls::godot_icall_PopupMenu_is_hide_on_state_item_selection_68fe5f59", (void*)godot_icall_PopupMenu_is_hide_on_state_item_selection_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_submenu_popup_delay_904508bb", (void*)godot_icall_PopupMenu_set_submenu_popup_delay_904508bb},
	{"Godot.NativeCalls::godot_icall_PopupMenu_get_submenu_popup_delay_4edcd7a9", (void*)godot_icall_PopupMenu_get_submenu_popup_delay_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_hide_on_window_lose_focus_ba24800b", (void*)godot_icall_PopupMenu_set_hide_on_window_lose_focus_ba24800b},
	{"Godot.NativeCalls::godot_icall_PopupMenu_is_hide_on_window_lose_focus_68fe5f59", (void*)godot_icall_PopupMenu_is_hide_on_window_lose_focus_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PopupMenu_set_allow_search_ba24800b", (void*)godot_icall_PopupMenu_set_allow_search_ba24800b},
	{"Godot.NativeCalls::godot_icall_PopupMenu_get_allow_search_68fe5f59", (void*)godot_icall_PopupMenu_get_allow_search_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Position2D__set_gizmo_extents_904508bb", (void*)godot_icall_Position2D__set_gizmo_extents_904508bb},
	{"Godot.NativeCalls::godot_icall_Position2D__get_gizmo_extents_4edcd7a9", (void*)godot_icall_Position2D__get_gizmo_extents_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PrimitiveMesh_set_material_be2d0ec2", (void*)godot_icall_PrimitiveMesh_set_material_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_PrimitiveMesh_get_material_6d04d9a2", (void*)godot_icall_PrimitiveMesh_get_material_6d04d9a2},
	{"Godot.NativeCalls::godot_icall_PrimitiveMesh_get_mesh_arrays_d80382d4", (void*)godot_icall_PrimitiveMesh_get_mesh_arrays_d80382d4},
	{"Godot.NativeCalls::godot_icall_PrimitiveMesh_set_custom_aabb_ff67b409", (void*)godot_icall_PrimitiveMesh_set_custom_aabb_ff67b409},
	{"Godot.NativeCalls::godot_icall_PrimitiveMesh_get_custom_aabb_2dbf935b", (void*)godot_icall_PrimitiveMesh_get_custom_aabb_2dbf935b},
	{"Godot.NativeCalls::godot_icall_PrimitiveMesh_set_flip_faces_ba24800b", (void*)godot_icall_PrimitiveMesh_set_flip_faces_ba24800b},
	{"Godot.NativeCalls::godot_icall_PrimitiveMesh_get_flip_faces_68fe5f59", (void*)godot_icall_PrimitiveMesh_get_flip_faces_68fe5f59},
	{"Godot.NativeCalls::godot_icall_PrismMesh_set_left_to_right_904508bb", (void*)godot_icall_PrismMesh_set_left_to_right_904508bb},
	{"Godot.NativeCalls::godot_icall_PrismMesh_get_left_to_right_4edcd7a9", (void*)godot_icall_PrismMesh_get_left_to_right_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_PrismMesh_set_size_6df7471d", (void*)godot_icall_PrismMesh_set_size_6df7471d},
	{"Godot.NativeCalls::godot_icall_PrismMesh_get_size_9b4ea24f", (void*)godot_icall_PrismMesh_get_size_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_PrismMesh_set_subdivide_width_e1ae93bc", (void*)godot_icall_PrismMesh_set_subdivide_width_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_PrismMesh_get_subdivide_width_1f886eb0", (void*)godot_icall_PrismMesh_get_subdivide_width_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PrismMesh_set_subdivide_height_e1ae93bc", (void*)godot_icall_PrismMesh_set_subdivide_height_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_PrismMesh_get_subdivide_height_1f886eb0", (void*)godot_icall_PrismMesh_get_subdivide_height_1f886eb0},
	{"Godot.NativeCalls::godot_icall_PrismMesh_set_subdivide_depth_e1ae93bc", (void*)godot_icall_PrismMesh_set_subdivide_depth_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_PrismMesh_get_subdivide_depth_1f886eb0", (void*)godot_icall_PrismMesh_get_subdivide_depth_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_sky_top_color_f2e3b5aa", (void*)godot_icall_ProceduralSky_set_sky_top_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_sky_top_color_304394ba", (void*)godot_icall_ProceduralSky_get_sky_top_color_304394ba},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_sky_horizon_color_f2e3b5aa", (void*)godot_icall_ProceduralSky_set_sky_horizon_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_sky_horizon_color_304394ba", (void*)godot_icall_ProceduralSky_get_sky_horizon_color_304394ba},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_sky_curve_904508bb", (void*)godot_icall_ProceduralSky_set_sky_curve_904508bb},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_sky_curve_4edcd7a9", (void*)godot_icall_ProceduralSky_get_sky_curve_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_sky_energy_904508bb", (void*)godot_icall_ProceduralSky_set_sky_energy_904508bb},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_sky_energy_4edcd7a9", (void*)godot_icall_ProceduralSky_get_sky_energy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_ground_bottom_color_f2e3b5aa", (void*)godot_icall_ProceduralSky_set_ground_bottom_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_ground_bottom_color_304394ba", (void*)godot_icall_ProceduralSky_get_ground_bottom_color_304394ba},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_ground_horizon_color_f2e3b5aa", (void*)godot_icall_ProceduralSky_set_ground_horizon_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_ground_horizon_color_304394ba", (void*)godot_icall_ProceduralSky_get_ground_horizon_color_304394ba},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_ground_curve_904508bb", (void*)godot_icall_ProceduralSky_set_ground_curve_904508bb},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_ground_curve_4edcd7a9", (void*)godot_icall_ProceduralSky_get_ground_curve_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_ground_energy_904508bb", (void*)godot_icall_ProceduralSky_set_ground_energy_904508bb},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_ground_energy_4edcd7a9", (void*)godot_icall_ProceduralSky_get_ground_energy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_sun_color_f2e3b5aa", (void*)godot_icall_ProceduralSky_set_sun_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_sun_color_304394ba", (void*)godot_icall_ProceduralSky_get_sun_color_304394ba},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_sun_latitude_904508bb", (void*)godot_icall_ProceduralSky_set_sun_latitude_904508bb},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_sun_latitude_4edcd7a9", (void*)godot_icall_ProceduralSky_get_sun_latitude_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_sun_longitude_904508bb", (void*)godot_icall_ProceduralSky_set_sun_longitude_904508bb},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_sun_longitude_4edcd7a9", (void*)godot_icall_ProceduralSky_get_sun_longitude_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_sun_angle_min_904508bb", (void*)godot_icall_ProceduralSky_set_sun_angle_min_904508bb},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_sun_angle_min_4edcd7a9", (void*)godot_icall_ProceduralSky_get_sun_angle_min_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_sun_angle_max_904508bb", (void*)godot_icall_ProceduralSky_set_sun_angle_max_904508bb},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_sun_angle_max_4edcd7a9", (void*)godot_icall_ProceduralSky_get_sun_angle_max_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_sun_curve_904508bb", (void*)godot_icall_ProceduralSky_set_sun_curve_904508bb},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_sun_curve_4edcd7a9", (void*)godot_icall_ProceduralSky_get_sun_curve_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_sun_energy_904508bb", (void*)godot_icall_ProceduralSky_set_sun_energy_904508bb},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_sun_energy_4edcd7a9", (void*)godot_icall_ProceduralSky_get_sun_energy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_set_texture_size_b73b85a5", (void*)godot_icall_ProceduralSky_set_texture_size_b73b85a5},
	{"Godot.NativeCalls::godot_icall_ProceduralSky_get_texture_size_adb543e0", (void*)godot_icall_ProceduralSky_get_texture_size_adb543e0},
	{"Godot.NativeCalls::godot_icall_ProgressBar_set_percent_visible_ba24800b", (void*)godot_icall_ProgressBar_set_percent_visible_ba24800b},
	{"Godot.NativeCalls::godot_icall_ProgressBar_is_percent_visible_68fe5f59", (void*)godot_icall_ProgressBar_is_percent_visible_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_has_setting_bee64043", (void*)godot_icall_ProjectSettings_has_setting_bee64043},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_set_setting_3a208116", (void*)godot_icall_ProjectSettings_set_setting_3a208116},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_get_setting_6732bfd8", (void*)godot_icall_ProjectSettings_get_setting_6732bfd8},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_set_order_bb2d80b6", (void*)godot_icall_ProjectSettings_set_order_bb2d80b6},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_get_order_79b61600", (void*)godot_icall_ProjectSettings_get_order_79b61600},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_set_initial_value_3a208116", (void*)godot_icall_ProjectSettings_set_initial_value_3a208116},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_add_property_info_e472adcf", (void*)godot_icall_ProjectSettings_add_property_info_e472adcf},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_clear_2f29e819", (void*)godot_icall_ProjectSettings_clear_2f29e819},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_localize_path_98465fb", (void*)godot_icall_ProjectSettings_localize_path_98465fb},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_globalize_path_98465fb", (void*)godot_icall_ProjectSettings_globalize_path_98465fb},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_save_f04570f5", (void*)godot_icall_ProjectSettings_save_f04570f5},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_load_resource_pack_4c6b6f39", (void*)godot_icall_ProjectSettings_load_resource_pack_4c6b6f39},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_property_can_revert_8a7120b9", (void*)godot_icall_ProjectSettings_property_can_revert_8a7120b9},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_property_get_revert_74ba5e9e", (void*)godot_icall_ProjectSettings_property_get_revert_74ba5e9e},
	{"Godot.NativeCalls::godot_icall_ProjectSettings_save_custom_2660dbb2", (void*)godot_icall_ProjectSettings_save_custom_2660dbb2},
	{"Godot.NativeCalls::godot_icall_ProximityGroup_set_group_name_2f29e819", (void*)godot_icall_ProximityGroup_set_group_name_2f29e819},
	{"Godot.NativeCalls::godot_icall_ProximityGroup_get_group_name_97be4a2e", (void*)godot_icall_ProximityGroup_get_group_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_ProximityGroup_set_dispatch_mode_93c07036", (void*)godot_icall_ProximityGroup_set_dispatch_mode_93c07036},
	{"Godot.NativeCalls::godot_icall_ProximityGroup_get_dispatch_mode_21b30f61", (void*)godot_icall_ProximityGroup_get_dispatch_mode_21b30f61},
	{"Godot.NativeCalls::godot_icall_ProximityGroup_set_grid_radius_6df7471d", (void*)godot_icall_ProximityGroup_set_grid_radius_6df7471d},
	{"Godot.NativeCalls::godot_icall_ProximityGroup_get_grid_radius_9b4ea24f", (void*)godot_icall_ProximityGroup_get_grid_radius_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_ProximityGroup_broadcast_4a9ec68e", (void*)godot_icall_ProximityGroup_broadcast_4a9ec68e},
	{"Godot.NativeCalls::godot_icall_ProxyTexture_set_base_7eecd31a", (void*)godot_icall_ProxyTexture_set_base_7eecd31a},
	{"Godot.NativeCalls::godot_icall_ProxyTexture_get_base_ac462e4a", (void*)godot_icall_ProxyTexture_get_base_ac462e4a},
	{"Godot.NativeCalls::godot_icall_QuadMesh_set_size_6df7471e", (void*)godot_icall_QuadMesh_set_size_6df7471e},
	{"Godot.NativeCalls::godot_icall_QuadMesh_get_size_9b4ea24e", (void*)godot_icall_QuadMesh_get_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_RandomNumberGenerator_set_seed_9d9e6424", (void*)godot_icall_RandomNumberGenerator_set_seed_9d9e6424},
	{"Godot.NativeCalls::godot_icall_RandomNumberGenerator_get_seed_4bb7c348", (void*)godot_icall_RandomNumberGenerator_get_seed_4bb7c348},
	{"Godot.NativeCalls::godot_icall_RandomNumberGenerator_randi_54cc76d5", (void*)godot_icall_RandomNumberGenerator_randi_54cc76d5},
	{"Godot.NativeCalls::godot_icall_RandomNumberGenerator_randf_4edcd7a9", (void*)godot_icall_RandomNumberGenerator_randf_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RandomNumberGenerator_randfn_14e8e20e", (void*)godot_icall_RandomNumberGenerator_randfn_14e8e20e},
	{"Godot.NativeCalls::godot_icall_RandomNumberGenerator_randf_range_14e8e20e", (void*)godot_icall_RandomNumberGenerator_randf_range_14e8e20e},
	{"Godot.NativeCalls::godot_icall_RandomNumberGenerator_randi_range_4170d7f7", (void*)godot_icall_RandomNumberGenerator_randi_range_4170d7f7},
	{"Godot.NativeCalls::godot_icall_RandomNumberGenerator_randomize_c8e54a7b", (void*)godot_icall_RandomNumberGenerator_randomize_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Range_get_value_4edcd7a9", (void*)godot_icall_Range_get_value_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Range_get_min_4edcd7a9", (void*)godot_icall_Range_get_min_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Range_get_max_4edcd7a9", (void*)godot_icall_Range_get_max_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Range_get_step_4edcd7a9", (void*)godot_icall_Range_get_step_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Range_get_page_4edcd7a9", (void*)godot_icall_Range_get_page_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Range_get_as_ratio_4edcd7a9", (void*)godot_icall_Range_get_as_ratio_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Range_set_value_904508bb", (void*)godot_icall_Range_set_value_904508bb},
	{"Godot.NativeCalls::godot_icall_Range_set_min_904508bb", (void*)godot_icall_Range_set_min_904508bb},
	{"Godot.NativeCalls::godot_icall_Range_set_max_904508bb", (void*)godot_icall_Range_set_max_904508bb},
	{"Godot.NativeCalls::godot_icall_Range_set_step_904508bb", (void*)godot_icall_Range_set_step_904508bb},
	{"Godot.NativeCalls::godot_icall_Range_set_page_904508bb", (void*)godot_icall_Range_set_page_904508bb},
	{"Godot.NativeCalls::godot_icall_Range_set_as_ratio_904508bb", (void*)godot_icall_Range_set_as_ratio_904508bb},
	{"Godot.NativeCalls::godot_icall_Range_set_use_rounded_values_ba24800b", (void*)godot_icall_Range_set_use_rounded_values_ba24800b},
	{"Godot.NativeCalls::godot_icall_Range_is_using_rounded_values_68fe5f59", (void*)godot_icall_Range_is_using_rounded_values_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Range_set_exp_ratio_ba24800b", (void*)godot_icall_Range_set_exp_ratio_ba24800b},
	{"Godot.NativeCalls::godot_icall_Range_is_ratio_exp_68fe5f59", (void*)godot_icall_Range_is_ratio_exp_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Range_set_allow_greater_ba24800b", (void*)godot_icall_Range_set_allow_greater_ba24800b},
	{"Godot.NativeCalls::godot_icall_Range_is_greater_allowed_68fe5f59", (void*)godot_icall_Range_is_greater_allowed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Range_set_allow_lesser_ba24800b", (void*)godot_icall_Range_set_allow_lesser_ba24800b},
	{"Godot.NativeCalls::godot_icall_Range_is_lesser_allowed_68fe5f59", (void*)godot_icall_Range_is_lesser_allowed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Range_share_598860a7", (void*)godot_icall_Range_share_598860a7},
	{"Godot.NativeCalls::godot_icall_Range_unshare_c8e54a7b", (void*)godot_icall_Range_unshare_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RayCast_set_enabled_ba24800b", (void*)godot_icall_RayCast_set_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_RayCast_is_enabled_68fe5f59", (void*)godot_icall_RayCast_is_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RayCast_set_cast_to_6df7471d", (void*)godot_icall_RayCast_set_cast_to_6df7471d},
	{"Godot.NativeCalls::godot_icall_RayCast_get_cast_to_9b4ea24f", (void*)godot_icall_RayCast_get_cast_to_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_RayCast_is_colliding_68fe5f59", (void*)godot_icall_RayCast_is_colliding_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RayCast_force_raycast_update_c8e54a7b", (void*)godot_icall_RayCast_force_raycast_update_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RayCast_get_collider_5bd95814", (void*)godot_icall_RayCast_get_collider_5bd95814},
	{"Godot.NativeCalls::godot_icall_RayCast_get_collider_shape_1f886eb0", (void*)godot_icall_RayCast_get_collider_shape_1f886eb0},
	{"Godot.NativeCalls::godot_icall_RayCast_get_collision_point_9b4ea24f", (void*)godot_icall_RayCast_get_collision_point_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_RayCast_get_collision_normal_9b4ea24f", (void*)godot_icall_RayCast_get_collision_normal_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_RayCast_add_exception_rid_a7039b4e", (void*)godot_icall_RayCast_add_exception_rid_a7039b4e},
	{"Godot.NativeCalls::godot_icall_RayCast_add_exception_ad798950", (void*)godot_icall_RayCast_add_exception_ad798950},
	{"Godot.NativeCalls::godot_icall_RayCast_remove_exception_rid_a7039b4e", (void*)godot_icall_RayCast_remove_exception_rid_a7039b4e},
	{"Godot.NativeCalls::godot_icall_RayCast_remove_exception_ad798950", (void*)godot_icall_RayCast_remove_exception_ad798950},
	{"Godot.NativeCalls::godot_icall_RayCast_clear_exceptions_c8e54a7b", (void*)godot_icall_RayCast_clear_exceptions_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RayCast_set_collision_mask_966aab97", (void*)godot_icall_RayCast_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_RayCast_get_collision_mask_54cc76d5", (void*)godot_icall_RayCast_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_RayCast_set_collision_mask_bit_4ae8febd", (void*)godot_icall_RayCast_set_collision_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_RayCast_get_collision_mask_bit_7f690926", (void*)godot_icall_RayCast_get_collision_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_RayCast_set_exclude_parent_body_ba24800b", (void*)godot_icall_RayCast_set_exclude_parent_body_ba24800b},
	{"Godot.NativeCalls::godot_icall_RayCast_get_exclude_parent_body_68fe5f59", (void*)godot_icall_RayCast_get_exclude_parent_body_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RayCast_set_collide_with_areas_ba24800b", (void*)godot_icall_RayCast_set_collide_with_areas_ba24800b},
	{"Godot.NativeCalls::godot_icall_RayCast_is_collide_with_areas_enabled_68fe5f59", (void*)godot_icall_RayCast_is_collide_with_areas_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RayCast_set_collide_with_bodies_ba24800b", (void*)godot_icall_RayCast_set_collide_with_bodies_ba24800b},
	{"Godot.NativeCalls::godot_icall_RayCast_is_collide_with_bodies_enabled_68fe5f59", (void*)godot_icall_RayCast_is_collide_with_bodies_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RayCast2D_set_enabled_ba24800b", (void*)godot_icall_RayCast2D_set_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_RayCast2D_is_enabled_68fe5f59", (void*)godot_icall_RayCast2D_is_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RayCast2D_set_cast_to_6df7471e", (void*)godot_icall_RayCast2D_set_cast_to_6df7471e},
	{"Godot.NativeCalls::godot_icall_RayCast2D_get_cast_to_9b4ea24e", (void*)godot_icall_RayCast2D_get_cast_to_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_RayCast2D_is_colliding_68fe5f59", (void*)godot_icall_RayCast2D_is_colliding_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RayCast2D_force_raycast_update_c8e54a7b", (void*)godot_icall_RayCast2D_force_raycast_update_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RayCast2D_get_collider_5bd95814", (void*)godot_icall_RayCast2D_get_collider_5bd95814},
	{"Godot.NativeCalls::godot_icall_RayCast2D_get_collider_shape_1f886eb0", (void*)godot_icall_RayCast2D_get_collider_shape_1f886eb0},
	{"Godot.NativeCalls::godot_icall_RayCast2D_get_collision_point_9b4ea24e", (void*)godot_icall_RayCast2D_get_collision_point_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_RayCast2D_get_collision_normal_9b4ea24e", (void*)godot_icall_RayCast2D_get_collision_normal_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_RayCast2D_add_exception_rid_a7039b4e", (void*)godot_icall_RayCast2D_add_exception_rid_a7039b4e},
	{"Godot.NativeCalls::godot_icall_RayCast2D_add_exception_ad798950", (void*)godot_icall_RayCast2D_add_exception_ad798950},
	{"Godot.NativeCalls::godot_icall_RayCast2D_remove_exception_rid_a7039b4e", (void*)godot_icall_RayCast2D_remove_exception_rid_a7039b4e},
	{"Godot.NativeCalls::godot_icall_RayCast2D_remove_exception_ad798950", (void*)godot_icall_RayCast2D_remove_exception_ad798950},
	{"Godot.NativeCalls::godot_icall_RayCast2D_clear_exceptions_c8e54a7b", (void*)godot_icall_RayCast2D_clear_exceptions_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RayCast2D_set_collision_mask_966aab97", (void*)godot_icall_RayCast2D_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_RayCast2D_get_collision_mask_54cc76d5", (void*)godot_icall_RayCast2D_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_RayCast2D_set_collision_mask_bit_4ae8febd", (void*)godot_icall_RayCast2D_set_collision_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_RayCast2D_get_collision_mask_bit_7f690926", (void*)godot_icall_RayCast2D_get_collision_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_RayCast2D_set_exclude_parent_body_ba24800b", (void*)godot_icall_RayCast2D_set_exclude_parent_body_ba24800b},
	{"Godot.NativeCalls::godot_icall_RayCast2D_get_exclude_parent_body_68fe5f59", (void*)godot_icall_RayCast2D_get_exclude_parent_body_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RayCast2D_set_collide_with_areas_ba24800b", (void*)godot_icall_RayCast2D_set_collide_with_areas_ba24800b},
	{"Godot.NativeCalls::godot_icall_RayCast2D_is_collide_with_areas_enabled_68fe5f59", (void*)godot_icall_RayCast2D_is_collide_with_areas_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RayCast2D_set_collide_with_bodies_ba24800b", (void*)godot_icall_RayCast2D_set_collide_with_bodies_ba24800b},
	{"Godot.NativeCalls::godot_icall_RayCast2D_is_collide_with_bodies_enabled_68fe5f59", (void*)godot_icall_RayCast2D_is_collide_with_bodies_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RayShape_set_length_904508bb", (void*)godot_icall_RayShape_set_length_904508bb},
	{"Godot.NativeCalls::godot_icall_RayShape_get_length_4edcd7a9", (void*)godot_icall_RayShape_get_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RayShape_set_slips_on_slope_ba24800b", (void*)godot_icall_RayShape_set_slips_on_slope_ba24800b},
	{"Godot.NativeCalls::godot_icall_RayShape_get_slips_on_slope_68fe5f59", (void*)godot_icall_RayShape_get_slips_on_slope_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RayShape2D_set_length_904508bb", (void*)godot_icall_RayShape2D_set_length_904508bb},
	{"Godot.NativeCalls::godot_icall_RayShape2D_get_length_4edcd7a9", (void*)godot_icall_RayShape2D_get_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RayShape2D_set_slips_on_slope_ba24800b", (void*)godot_icall_RayShape2D_set_slips_on_slope_ba24800b},
	{"Godot.NativeCalls::godot_icall_RayShape2D_get_slips_on_slope_68fe5f59", (void*)godot_icall_RayShape2D_get_slips_on_slope_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RectangleShape2D_set_extents_6df7471e", (void*)godot_icall_RectangleShape2D_set_extents_6df7471e},
	{"Godot.NativeCalls::godot_icall_RectangleShape2D_get_extents_9b4ea24e", (void*)godot_icall_RectangleShape2D_get_extents_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_RefCounted_init_ref_68fe5f59", (void*)godot_icall_RefCounted_init_ref_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RefCounted_reference_68fe5f59", (void*)godot_icall_RefCounted_reference_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RefCounted_unreference_68fe5f59", (void*)godot_icall_RefCounted_unreference_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ReferenceRect_get_border_color_304394ba", (void*)godot_icall_ReferenceRect_get_border_color_304394ba},
	{"Godot.NativeCalls::godot_icall_ReferenceRect_set_border_color_f2e3b5aa", (void*)godot_icall_ReferenceRect_set_border_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ReferenceRect_get_editor_only_68fe5f59", (void*)godot_icall_ReferenceRect_get_editor_only_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ReferenceRect_set_editor_only_ba24800b", (void*)godot_icall_ReferenceRect_set_editor_only_ba24800b},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_set_intensity_904508bb", (void*)godot_icall_ReflectionProbe_set_intensity_904508bb},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_get_intensity_4edcd7a9", (void*)godot_icall_ReflectionProbe_get_intensity_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_set_interior_ambient_f2e3b5aa", (void*)godot_icall_ReflectionProbe_set_interior_ambient_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_get_interior_ambient_304394ba", (void*)godot_icall_ReflectionProbe_get_interior_ambient_304394ba},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_set_interior_ambient_energy_904508bb", (void*)godot_icall_ReflectionProbe_set_interior_ambient_energy_904508bb},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_get_interior_ambient_energy_4edcd7a9", (void*)godot_icall_ReflectionProbe_get_interior_ambient_energy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_set_interior_ambient_probe_contribution_904508bb", (void*)godot_icall_ReflectionProbe_set_interior_ambient_probe_contribution_904508bb},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_get_interior_ambient_probe_contribution_4edcd7a9", (void*)godot_icall_ReflectionProbe_get_interior_ambient_probe_contribution_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_set_max_distance_904508bb", (void*)godot_icall_ReflectionProbe_set_max_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_get_max_distance_4edcd7a9", (void*)godot_icall_ReflectionProbe_get_max_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_set_extents_6df7471d", (void*)godot_icall_ReflectionProbe_set_extents_6df7471d},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_get_extents_9b4ea24f", (void*)godot_icall_ReflectionProbe_get_extents_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_set_origin_offset_6df7471d", (void*)godot_icall_ReflectionProbe_set_origin_offset_6df7471d},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_get_origin_offset_9b4ea24f", (void*)godot_icall_ReflectionProbe_get_origin_offset_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_set_as_interior_ba24800b", (void*)godot_icall_ReflectionProbe_set_as_interior_ba24800b},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_is_set_as_interior_68fe5f59", (void*)godot_icall_ReflectionProbe_is_set_as_interior_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_set_enable_box_projection_ba24800b", (void*)godot_icall_ReflectionProbe_set_enable_box_projection_ba24800b},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_is_box_projection_enabled_68fe5f59", (void*)godot_icall_ReflectionProbe_is_box_projection_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_set_enable_shadows_ba24800b", (void*)godot_icall_ReflectionProbe_set_enable_shadows_ba24800b},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_are_shadows_enabled_68fe5f59", (void*)godot_icall_ReflectionProbe_are_shadows_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_set_cull_mask_966aab97", (void*)godot_icall_ReflectionProbe_set_cull_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_get_cull_mask_54cc76d5", (void*)godot_icall_ReflectionProbe_get_cull_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_set_update_mode_69d4d73c", (void*)godot_icall_ReflectionProbe_set_update_mode_69d4d73c},
	{"Godot.NativeCalls::godot_icall_ReflectionProbe_get_update_mode_7fa6cd9f", (void*)godot_icall_ReflectionProbe_get_update_mode_7fa6cd9f},
	{"Godot.NativeCalls::godot_icall_RegEx_clear_c8e54a7b", (void*)godot_icall_RegEx_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RegEx_compile_73262d91", (void*)godot_icall_RegEx_compile_73262d91},
	{"Godot.NativeCalls::godot_icall_RegEx_search_4900fe29", (void*)godot_icall_RegEx_search_4900fe29},
	{"Godot.NativeCalls::godot_icall_RegEx_search_all_b63565b6", (void*)godot_icall_RegEx_search_all_b63565b6},
	{"Godot.NativeCalls::godot_icall_RegEx_sub_7152c05", (void*)godot_icall_RegEx_sub_7152c05},
	{"Godot.NativeCalls::godot_icall_RegEx_is_valid_68fe5f59", (void*)godot_icall_RegEx_is_valid_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RegEx_get_pattern_97be4a2e", (void*)godot_icall_RegEx_get_pattern_97be4a2e},
	{"Godot.NativeCalls::godot_icall_RegEx_get_group_count_1f886eb0", (void*)godot_icall_RegEx_get_group_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_RegEx_get_names_d80382d4", (void*)godot_icall_RegEx_get_names_d80382d4},
	{"Godot.NativeCalls::godot_icall_RegExMatch_get_subject_97be4a2e", (void*)godot_icall_RegExMatch_get_subject_97be4a2e},
	{"Godot.NativeCalls::godot_icall_RegExMatch_get_group_count_1f886eb0", (void*)godot_icall_RegExMatch_get_group_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_RegExMatch_get_names_22d47c9d", (void*)godot_icall_RegExMatch_get_names_22d47c9d},
	{"Godot.NativeCalls::godot_icall_RegExMatch_get_strings_d80382d4", (void*)godot_icall_RegExMatch_get_strings_d80382d4},
	{"Godot.NativeCalls::godot_icall_RegExMatch_get_string_c3f94cfa", (void*)godot_icall_RegExMatch_get_string_c3f94cfa},
	{"Godot.NativeCalls::godot_icall_RegExMatch_get_start_374adec5", (void*)godot_icall_RegExMatch_get_start_374adec5},
	{"Godot.NativeCalls::godot_icall_RegExMatch_get_end_374adec5", (void*)godot_icall_RegExMatch_get_end_374adec5},
	{"Godot.NativeCalls::godot_icall_RemoteTransform_set_remote_node_1e08804", (void*)godot_icall_RemoteTransform_set_remote_node_1e08804},
	{"Godot.NativeCalls::godot_icall_RemoteTransform_get_remote_node_bf425768", (void*)godot_icall_RemoteTransform_get_remote_node_bf425768},
	{"Godot.NativeCalls::godot_icall_RemoteTransform_force_update_cache_c8e54a7b", (void*)godot_icall_RemoteTransform_force_update_cache_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RemoteTransform_set_use_global_coordinates_ba24800b", (void*)godot_icall_RemoteTransform_set_use_global_coordinates_ba24800b},
	{"Godot.NativeCalls::godot_icall_RemoteTransform_get_use_global_coordinates_68fe5f59", (void*)godot_icall_RemoteTransform_get_use_global_coordinates_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RemoteTransform_set_update_position_ba24800b", (void*)godot_icall_RemoteTransform_set_update_position_ba24800b},
	{"Godot.NativeCalls::godot_icall_RemoteTransform_get_update_position_68fe5f59", (void*)godot_icall_RemoteTransform_get_update_position_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RemoteTransform_set_update_rotation_ba24800b", (void*)godot_icall_RemoteTransform_set_update_rotation_ba24800b},
	{"Godot.NativeCalls::godot_icall_RemoteTransform_get_update_rotation_68fe5f59", (void*)godot_icall_RemoteTransform_get_update_rotation_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RemoteTransform_set_update_scale_ba24800b", (void*)godot_icall_RemoteTransform_set_update_scale_ba24800b},
	{"Godot.NativeCalls::godot_icall_RemoteTransform_get_update_scale_68fe5f59", (void*)godot_icall_RemoteTransform_get_update_scale_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RemoteTransform2D_set_remote_node_1e08804", (void*)godot_icall_RemoteTransform2D_set_remote_node_1e08804},
	{"Godot.NativeCalls::godot_icall_RemoteTransform2D_get_remote_node_bf425768", (void*)godot_icall_RemoteTransform2D_get_remote_node_bf425768},
	{"Godot.NativeCalls::godot_icall_RemoteTransform2D_force_update_cache_c8e54a7b", (void*)godot_icall_RemoteTransform2D_force_update_cache_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RemoteTransform2D_set_use_global_coordinates_ba24800b", (void*)godot_icall_RemoteTransform2D_set_use_global_coordinates_ba24800b},
	{"Godot.NativeCalls::godot_icall_RemoteTransform2D_get_use_global_coordinates_68fe5f59", (void*)godot_icall_RemoteTransform2D_get_use_global_coordinates_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RemoteTransform2D_set_update_position_ba24800b", (void*)godot_icall_RemoteTransform2D_set_update_position_ba24800b},
	{"Godot.NativeCalls::godot_icall_RemoteTransform2D_get_update_position_68fe5f59", (void*)godot_icall_RemoteTransform2D_get_update_position_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RemoteTransform2D_set_update_rotation_ba24800b", (void*)godot_icall_RemoteTransform2D_set_update_rotation_ba24800b},
	{"Godot.NativeCalls::godot_icall_RemoteTransform2D_get_update_rotation_68fe5f59", (void*)godot_icall_RemoteTransform2D_get_update_rotation_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RemoteTransform2D_set_update_scale_ba24800b", (void*)godot_icall_RemoteTransform2D_set_update_scale_ba24800b},
	{"Godot.NativeCalls::godot_icall_RemoteTransform2D_get_update_scale_68fe5f59", (void*)godot_icall_RemoteTransform2D_get_update_scale_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Resource_set_path_3ca14953", (void*)godot_icall_Resource_set_path_3ca14953},
	{"Godot.NativeCalls::godot_icall_Resource_take_over_path_3ca14953", (void*)godot_icall_Resource_take_over_path_3ca14953},
	{"Godot.NativeCalls::godot_icall_Resource_get_path_97be4a2e", (void*)godot_icall_Resource_get_path_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Resource_set_name_3ca14953", (void*)godot_icall_Resource_set_name_3ca14953},
	{"Godot.NativeCalls::godot_icall_Resource_get_name_97be4a2e", (void*)godot_icall_Resource_get_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Resource_get_rid_6623661e", (void*)godot_icall_Resource_get_rid_6623661e},
	{"Godot.NativeCalls::godot_icall_Resource_set_local_to_scene_ba24800b", (void*)godot_icall_Resource_set_local_to_scene_ba24800b},
	{"Godot.NativeCalls::godot_icall_Resource_is_local_to_scene_68fe5f59", (void*)godot_icall_Resource_is_local_to_scene_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Resource_get_local_scene_87a9bfc5", (void*)godot_icall_Resource_get_local_scene_87a9bfc5},
	{"Godot.NativeCalls::godot_icall_Resource_setup_local_to_scene_c8e54a7b", (void*)godot_icall_Resource_setup_local_to_scene_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Resource_duplicate_571ccc89", (void*)godot_icall_Resource_duplicate_571ccc89},
	{"Godot.NativeCalls::godot_icall_ResourceInteractiveLoader_get_resource_c567ae79", (void*)godot_icall_ResourceInteractiveLoader_get_resource_c567ae79},
	{"Godot.NativeCalls::godot_icall_ResourceInteractiveLoader_poll_f04570f5", (void*)godot_icall_ResourceInteractiveLoader_poll_f04570f5},
	{"Godot.NativeCalls::godot_icall_ResourceInteractiveLoader_wait_f04570f5", (void*)godot_icall_ResourceInteractiveLoader_wait_f04570f5},
	{"Godot.NativeCalls::godot_icall_ResourceInteractiveLoader_get_stage_1f886eb0", (void*)godot_icall_ResourceInteractiveLoader_get_stage_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ResourceInteractiveLoader_get_stage_count_1f886eb0", (void*)godot_icall_ResourceInteractiveLoader_get_stage_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ResourcePreloader__set_resources_2923a790", (void*)godot_icall_ResourcePreloader__set_resources_2923a790},
	{"Godot.NativeCalls::godot_icall_ResourcePreloader__get_resources_d80382d4", (void*)godot_icall_ResourcePreloader__get_resources_d80382d4},
	{"Godot.NativeCalls::godot_icall_ResourcePreloader_add_resource_16ca4061", (void*)godot_icall_ResourcePreloader_add_resource_16ca4061},
	{"Godot.NativeCalls::godot_icall_ResourcePreloader_remove_resource_2f29e819", (void*)godot_icall_ResourcePreloader_remove_resource_2f29e819},
	{"Godot.NativeCalls::godot_icall_ResourcePreloader_rename_resource_7dacd953", (void*)godot_icall_ResourcePreloader_rename_resource_7dacd953},
	{"Godot.NativeCalls::godot_icall_ResourcePreloader_has_resource_bee64043", (void*)godot_icall_ResourcePreloader_has_resource_bee64043},
	{"Godot.NativeCalls::godot_icall_ResourcePreloader_get_resource_c2e1949b", (void*)godot_icall_ResourcePreloader_get_resource_c2e1949b},
	{"Godot.NativeCalls::godot_icall_ResourcePreloader_get_resource_list_4cc8f2a7", (void*)godot_icall_ResourcePreloader_get_resource_list_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_get_text_97be4a2e", (void*)godot_icall_RichTextLabel_get_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_add_text_3ca14953", (void*)godot_icall_RichTextLabel_add_text_3ca14953},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_text_3ca14953", (void*)godot_icall_RichTextLabel_set_text_3ca14953},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_add_image_6e5fd163", (void*)godot_icall_RichTextLabel_add_image_6e5fd163},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_newline_c8e54a7b", (void*)godot_icall_RichTextLabel_newline_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_remove_line_7f690926", (void*)godot_icall_RichTextLabel_remove_line_7f690926},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_font_ea9e5ee2", (void*)godot_icall_RichTextLabel_push_font_ea9e5ee2},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_normal_c8e54a7b", (void*)godot_icall_RichTextLabel_push_normal_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_bold_c8e54a7b", (void*)godot_icall_RichTextLabel_push_bold_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_bold_italics_c8e54a7b", (void*)godot_icall_RichTextLabel_push_bold_italics_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_italics_c8e54a7b", (void*)godot_icall_RichTextLabel_push_italics_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_mono_c8e54a7b", (void*)godot_icall_RichTextLabel_push_mono_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_color_f2e3b5aa", (void*)godot_icall_RichTextLabel_push_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_align_d1cbb6bb", (void*)godot_icall_RichTextLabel_push_align_d1cbb6bb},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_indent_e1ae93bc", (void*)godot_icall_RichTextLabel_push_indent_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_list_6a9e6e22", (void*)godot_icall_RichTextLabel_push_list_6a9e6e22},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_meta_62b5905c", (void*)godot_icall_RichTextLabel_push_meta_62b5905c},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_underline_c8e54a7b", (void*)godot_icall_RichTextLabel_push_underline_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_strikethrough_c8e54a7b", (void*)godot_icall_RichTextLabel_push_strikethrough_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_table_e1ae93bc", (void*)godot_icall_RichTextLabel_push_table_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_table_column_expand_c05129e5", (void*)godot_icall_RichTextLabel_set_table_column_expand_c05129e5},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_push_cell_c8e54a7b", (void*)godot_icall_RichTextLabel_push_cell_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_pop_c8e54a7b", (void*)godot_icall_RichTextLabel_pop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_clear_c8e54a7b", (void*)godot_icall_RichTextLabel_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_meta_underline_ba24800b", (void*)godot_icall_RichTextLabel_set_meta_underline_ba24800b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_is_meta_underlined_68fe5f59", (void*)godot_icall_RichTextLabel_is_meta_underlined_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_override_selected_font_color_ba24800b", (void*)godot_icall_RichTextLabel_set_override_selected_font_color_ba24800b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_is_overriding_selected_font_color_68fe5f59", (void*)godot_icall_RichTextLabel_is_overriding_selected_font_color_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_scroll_active_ba24800b", (void*)godot_icall_RichTextLabel_set_scroll_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_is_scroll_active_68fe5f59", (void*)godot_icall_RichTextLabel_is_scroll_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_scroll_follow_ba24800b", (void*)godot_icall_RichTextLabel_set_scroll_follow_ba24800b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_is_scroll_following_68fe5f59", (void*)godot_icall_RichTextLabel_is_scroll_following_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_get_v_scroll_37ab5951", (void*)godot_icall_RichTextLabel_get_v_scroll_37ab5951},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_scroll_to_line_e1ae93bc", (void*)godot_icall_RichTextLabel_scroll_to_line_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_tab_size_e1ae93bc", (void*)godot_icall_RichTextLabel_set_tab_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_get_tab_size_1f886eb0", (void*)godot_icall_RichTextLabel_get_tab_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_selection_enabled_ba24800b", (void*)godot_icall_RichTextLabel_set_selection_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_is_selection_enabled_68fe5f59", (void*)godot_icall_RichTextLabel_is_selection_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_parse_bbcode_2660dbb2", (void*)godot_icall_RichTextLabel_parse_bbcode_2660dbb2},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_append_bbcode_2660dbb2", (void*)godot_icall_RichTextLabel_append_bbcode_2660dbb2},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_bbcode_3ca14953", (void*)godot_icall_RichTextLabel_set_bbcode_3ca14953},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_get_bbcode_97be4a2e", (void*)godot_icall_RichTextLabel_get_bbcode_97be4a2e},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_visible_characters_e1ae93bc", (void*)godot_icall_RichTextLabel_set_visible_characters_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_get_visible_characters_1f886eb0", (void*)godot_icall_RichTextLabel_get_visible_characters_1f886eb0},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_percent_visible_904508bb", (void*)godot_icall_RichTextLabel_set_percent_visible_904508bb},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_get_percent_visible_4edcd7a9", (void*)godot_icall_RichTextLabel_get_percent_visible_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_get_total_character_count_1f886eb0", (void*)godot_icall_RichTextLabel_get_total_character_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_use_bbcode_ba24800b", (void*)godot_icall_RichTextLabel_set_use_bbcode_ba24800b},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_is_using_bbcode_68fe5f59", (void*)godot_icall_RichTextLabel_is_using_bbcode_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_get_line_count_1f886eb0", (void*)godot_icall_RichTextLabel_get_line_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_get_visible_line_count_1f886eb0", (void*)godot_icall_RichTextLabel_get_visible_line_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_get_content_height_1f886eb0", (void*)godot_icall_RichTextLabel_get_content_height_1f886eb0},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_parse_expressions_for_values_8a00ce5a", (void*)godot_icall_RichTextLabel_parse_expressions_for_values_8a00ce5a},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_set_effects_2923a790", (void*)godot_icall_RichTextLabel_set_effects_2923a790},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_get_effects_d80382d4", (void*)godot_icall_RichTextLabel_get_effects_d80382d4},
	{"Godot.NativeCalls::godot_icall_RichTextLabel_install_effect_62b5905c", (void*)godot_icall_RichTextLabel_install_effect_62b5905c},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_mode_50f23ea3", (void*)godot_icall_RigidBody_set_mode_50f23ea3},
	{"Godot.NativeCalls::godot_icall_RigidBody_get_mode_8b96c86e", (void*)godot_icall_RigidBody_get_mode_8b96c86e},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_mass_904508bb", (void*)godot_icall_RigidBody_set_mass_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody_get_mass_4edcd7a9", (void*)godot_icall_RigidBody_get_mass_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_weight_904508bb", (void*)godot_icall_RigidBody_set_weight_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody_get_weight_4edcd7a9", (void*)godot_icall_RigidBody_get_weight_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_physics_material_override_e4d5a435", (void*)godot_icall_RigidBody_set_physics_material_override_e4d5a435},
	{"Godot.NativeCalls::godot_icall_RigidBody_get_physics_material_override_226d8337", (void*)godot_icall_RigidBody_get_physics_material_override_226d8337},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_linear_velocity_6df7471d", (void*)godot_icall_RigidBody_set_linear_velocity_6df7471d},
	{"Godot.NativeCalls::godot_icall_RigidBody_get_linear_velocity_9b4ea24f", (void*)godot_icall_RigidBody_get_linear_velocity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_angular_velocity_6df7471d", (void*)godot_icall_RigidBody_set_angular_velocity_6df7471d},
	{"Godot.NativeCalls::godot_icall_RigidBody_get_angular_velocity_9b4ea24f", (void*)godot_icall_RigidBody_get_angular_velocity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_gravity_scale_904508bb", (void*)godot_icall_RigidBody_set_gravity_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody_get_gravity_scale_4edcd7a9", (void*)godot_icall_RigidBody_get_gravity_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_linear_damp_904508bb", (void*)godot_icall_RigidBody_set_linear_damp_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody_get_linear_damp_4edcd7a9", (void*)godot_icall_RigidBody_get_linear_damp_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_angular_damp_904508bb", (void*)godot_icall_RigidBody_set_angular_damp_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody_get_angular_damp_4edcd7a9", (void*)godot_icall_RigidBody_get_angular_damp_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_max_contacts_reported_e1ae93bc", (void*)godot_icall_RigidBody_set_max_contacts_reported_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_RigidBody_get_max_contacts_reported_1f886eb0", (void*)godot_icall_RigidBody_get_max_contacts_reported_1f886eb0},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_use_custom_integrator_ba24800b", (void*)godot_icall_RigidBody_set_use_custom_integrator_ba24800b},
	{"Godot.NativeCalls::godot_icall_RigidBody_is_using_custom_integrator_68fe5f59", (void*)godot_icall_RigidBody_is_using_custom_integrator_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_contact_monitor_ba24800b", (void*)godot_icall_RigidBody_set_contact_monitor_ba24800b},
	{"Godot.NativeCalls::godot_icall_RigidBody_is_contact_monitor_enabled_68fe5f59", (void*)godot_icall_RigidBody_is_contact_monitor_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_use_continuous_collision_detection_ba24800b", (void*)godot_icall_RigidBody_set_use_continuous_collision_detection_ba24800b},
	{"Godot.NativeCalls::godot_icall_RigidBody_is_using_continuous_collision_detection_68fe5f59", (void*)godot_icall_RigidBody_is_using_continuous_collision_detection_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_axis_velocity_6df7471d", (void*)godot_icall_RigidBody_set_axis_velocity_6df7471d},
	{"Godot.NativeCalls::godot_icall_RigidBody_add_central_force_6df7471d", (void*)godot_icall_RigidBody_add_central_force_6df7471d},
	{"Godot.NativeCalls::godot_icall_RigidBody_add_force_bf22f212", (void*)godot_icall_RigidBody_add_force_bf22f212},
	{"Godot.NativeCalls::godot_icall_RigidBody_add_torque_6df7471d", (void*)godot_icall_RigidBody_add_torque_6df7471d},
	{"Godot.NativeCalls::godot_icall_RigidBody_apply_central_impulse_6df7471d", (void*)godot_icall_RigidBody_apply_central_impulse_6df7471d},
	{"Godot.NativeCalls::godot_icall_RigidBody_apply_impulse_bf22f212", (void*)godot_icall_RigidBody_apply_impulse_bf22f212},
	{"Godot.NativeCalls::godot_icall_RigidBody_apply_torque_impulse_6df7471d", (void*)godot_icall_RigidBody_apply_torque_impulse_6df7471d},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_sleeping_ba24800b", (void*)godot_icall_RigidBody_set_sleeping_ba24800b},
	{"Godot.NativeCalls::godot_icall_RigidBody_is_sleeping_68fe5f59", (void*)godot_icall_RigidBody_is_sleeping_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_can_sleep_ba24800b", (void*)godot_icall_RigidBody_set_can_sleep_ba24800b},
	{"Godot.NativeCalls::godot_icall_RigidBody_is_able_to_sleep_68fe5f59", (void*)godot_icall_RigidBody_is_able_to_sleep_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RigidBody_set_axis_lock_cb8f1f44", (void*)godot_icall_RigidBody_set_axis_lock_cb8f1f44},
	{"Godot.NativeCalls::godot_icall_RigidBody_get_axis_lock_81481178", (void*)godot_icall_RigidBody_get_axis_lock_81481178},
	{"Godot.NativeCalls::godot_icall_RigidBody_get_colliding_bodies_d80382d4", (void*)godot_icall_RigidBody_get_colliding_bodies_d80382d4},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_mode_edbe7609", (void*)godot_icall_RigidBody2D_set_mode_edbe7609},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_mode_d0de29e4", (void*)godot_icall_RigidBody2D_get_mode_d0de29e4},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_mass_904508bb", (void*)godot_icall_RigidBody2D_set_mass_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_mass_4edcd7a9", (void*)godot_icall_RigidBody2D_get_mass_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_inertia_4edcd7a9", (void*)godot_icall_RigidBody2D_get_inertia_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_inertia_904508bb", (void*)godot_icall_RigidBody2D_set_inertia_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_weight_904508bb", (void*)godot_icall_RigidBody2D_set_weight_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_weight_4edcd7a9", (void*)godot_icall_RigidBody2D_get_weight_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_physics_material_override_e4d5a435", (void*)godot_icall_RigidBody2D_set_physics_material_override_e4d5a435},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_physics_material_override_226d8337", (void*)godot_icall_RigidBody2D_get_physics_material_override_226d8337},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_gravity_scale_904508bb", (void*)godot_icall_RigidBody2D_set_gravity_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_gravity_scale_4edcd7a9", (void*)godot_icall_RigidBody2D_get_gravity_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_linear_damp_904508bb", (void*)godot_icall_RigidBody2D_set_linear_damp_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_linear_damp_4edcd7a9", (void*)godot_icall_RigidBody2D_get_linear_damp_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_angular_damp_904508bb", (void*)godot_icall_RigidBody2D_set_angular_damp_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_angular_damp_4edcd7a9", (void*)godot_icall_RigidBody2D_get_angular_damp_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_linear_velocity_6df7471e", (void*)godot_icall_RigidBody2D_set_linear_velocity_6df7471e},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_linear_velocity_9b4ea24e", (void*)godot_icall_RigidBody2D_get_linear_velocity_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_angular_velocity_904508bb", (void*)godot_icall_RigidBody2D_set_angular_velocity_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_angular_velocity_4edcd7a9", (void*)godot_icall_RigidBody2D_get_angular_velocity_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_max_contacts_reported_e1ae93bc", (void*)godot_icall_RigidBody2D_set_max_contacts_reported_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_max_contacts_reported_1f886eb0", (void*)godot_icall_RigidBody2D_get_max_contacts_reported_1f886eb0},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_use_custom_integrator_ba24800b", (void*)godot_icall_RigidBody2D_set_use_custom_integrator_ba24800b},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_is_using_custom_integrator_68fe5f59", (void*)godot_icall_RigidBody2D_is_using_custom_integrator_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_contact_monitor_ba24800b", (void*)godot_icall_RigidBody2D_set_contact_monitor_ba24800b},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_is_contact_monitor_enabled_68fe5f59", (void*)godot_icall_RigidBody2D_is_contact_monitor_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_continuous_collision_detection_mode_dff0902f", (void*)godot_icall_RigidBody2D_set_continuous_collision_detection_mode_dff0902f},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_continuous_collision_detection_mode_d526f3d", (void*)godot_icall_RigidBody2D_get_continuous_collision_detection_mode_d526f3d},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_axis_velocity_6df7471e", (void*)godot_icall_RigidBody2D_set_axis_velocity_6df7471e},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_apply_central_impulse_6df7471e", (void*)godot_icall_RigidBody2D_apply_central_impulse_6df7471e},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_apply_impulse_bf22f250", (void*)godot_icall_RigidBody2D_apply_impulse_bf22f250},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_apply_torque_impulse_904508bb", (void*)godot_icall_RigidBody2D_apply_torque_impulse_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_applied_force_6df7471e", (void*)godot_icall_RigidBody2D_set_applied_force_6df7471e},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_applied_force_9b4ea24e", (void*)godot_icall_RigidBody2D_get_applied_force_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_applied_torque_904508bb", (void*)godot_icall_RigidBody2D_set_applied_torque_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_applied_torque_4edcd7a9", (void*)godot_icall_RigidBody2D_get_applied_torque_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_add_central_force_6df7471e", (void*)godot_icall_RigidBody2D_add_central_force_6df7471e},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_add_force_bf22f250", (void*)godot_icall_RigidBody2D_add_force_bf22f250},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_add_torque_904508bb", (void*)godot_icall_RigidBody2D_add_torque_904508bb},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_sleeping_ba24800b", (void*)godot_icall_RigidBody2D_set_sleeping_ba24800b},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_is_sleeping_68fe5f59", (void*)godot_icall_RigidBody2D_is_sleeping_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_set_can_sleep_ba24800b", (void*)godot_icall_RigidBody2D_set_can_sleep_ba24800b},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_is_able_to_sleep_68fe5f59", (void*)godot_icall_RigidBody2D_is_able_to_sleep_68fe5f59},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_test_motion_78775b33", (void*)godot_icall_RigidBody2D_test_motion_78775b33},
	{"Godot.NativeCalls::godot_icall_RigidBody2D_get_colliding_bodies_d80382d4", (void*)godot_icall_RigidBody2D_get_colliding_bodies_d80382d4},
	{"Godot.NativeCalls::godot_icall_SceneState_get_node_count_1f886eb0", (void*)godot_icall_SceneState_get_node_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SceneState_get_node_type_44fc4c5a", (void*)godot_icall_SceneState_get_node_type_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_SceneState_get_node_name_44fc4c5a", (void*)godot_icall_SceneState_get_node_name_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_SceneState_get_node_path_61f6a8b7", (void*)godot_icall_SceneState_get_node_path_61f6a8b7},
	{"Godot.NativeCalls::godot_icall_SceneState_get_node_owner_path_1640f2b", (void*)godot_icall_SceneState_get_node_owner_path_1640f2b},
	{"Godot.NativeCalls::godot_icall_SceneState_is_node_instance_placeholder_7f690926", (void*)godot_icall_SceneState_is_node_instance_placeholder_7f690926},
	{"Godot.NativeCalls::godot_icall_SceneState_get_node_instance_placeholder_44fc4c5a", (void*)godot_icall_SceneState_get_node_instance_placeholder_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_SceneState_get_node_instance_81818a46", (void*)godot_icall_SceneState_get_node_instance_81818a46},
	{"Godot.NativeCalls::godot_icall_SceneState_get_node_groups_4fe63c75", (void*)godot_icall_SceneState_get_node_groups_4fe63c75},
	{"Godot.NativeCalls::godot_icall_SceneState_get_node_index_b835dea5", (void*)godot_icall_SceneState_get_node_index_b835dea5},
	{"Godot.NativeCalls::godot_icall_SceneState_get_node_property_count_b835dea5", (void*)godot_icall_SceneState_get_node_property_count_b835dea5},
	{"Godot.NativeCalls::godot_icall_SceneState_get_node_property_name_4aee5da5", (void*)godot_icall_SceneState_get_node_property_name_4aee5da5},
	{"Godot.NativeCalls::godot_icall_SceneState_get_node_property_value_fd743645", (void*)godot_icall_SceneState_get_node_property_value_fd743645},
	{"Godot.NativeCalls::godot_icall_SceneState_get_connection_count_1f886eb0", (void*)godot_icall_SceneState_get_connection_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SceneState_get_connection_source_1640f2b", (void*)godot_icall_SceneState_get_connection_source_1640f2b},
	{"Godot.NativeCalls::godot_icall_SceneState_get_connection_signal_44fc4c5a", (void*)godot_icall_SceneState_get_connection_signal_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_SceneState_get_connection_target_1640f2b", (void*)godot_icall_SceneState_get_connection_target_1640f2b},
	{"Godot.NativeCalls::godot_icall_SceneState_get_connection_method_44fc4c5a", (void*)godot_icall_SceneState_get_connection_method_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_SceneState_get_connection_flags_b835dea5", (void*)godot_icall_SceneState_get_connection_flags_b835dea5},
	{"Godot.NativeCalls::godot_icall_SceneState_get_connection_binds_2ca2fcca", (void*)godot_icall_SceneState_get_connection_binds_2ca2fcca},
	{"Godot.NativeCalls::godot_icall_SceneTree_get_root_16d0f927", (void*)godot_icall_SceneTree_get_root_16d0f927},
	{"Godot.NativeCalls::godot_icall_SceneTree_has_group_bee64043", (void*)godot_icall_SceneTree_has_group_bee64043},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_auto_accept_quit_ba24800b", (void*)godot_icall_SceneTree_set_auto_accept_quit_ba24800b},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_quit_on_go_back_ba24800b", (void*)godot_icall_SceneTree_set_quit_on_go_back_ba24800b},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_debug_collisions_hint_ba24800b", (void*)godot_icall_SceneTree_set_debug_collisions_hint_ba24800b},
	{"Godot.NativeCalls::godot_icall_SceneTree_is_debugging_collisions_hint_68fe5f59", (void*)godot_icall_SceneTree_is_debugging_collisions_hint_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_debug_navigation_hint_ba24800b", (void*)godot_icall_SceneTree_set_debug_navigation_hint_ba24800b},
	{"Godot.NativeCalls::godot_icall_SceneTree_is_debugging_navigation_hint_68fe5f59", (void*)godot_icall_SceneTree_is_debugging_navigation_hint_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_edited_scene_root_598860a7", (void*)godot_icall_SceneTree_set_edited_scene_root_598860a7},
	{"Godot.NativeCalls::godot_icall_SceneTree_get_edited_scene_root_87a9bfc5", (void*)godot_icall_SceneTree_get_edited_scene_root_87a9bfc5},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_pause_ba24800b", (void*)godot_icall_SceneTree_set_pause_ba24800b},
	{"Godot.NativeCalls::godot_icall_SceneTree_is_paused_68fe5f59", (void*)godot_icall_SceneTree_is_paused_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_input_as_handled_c8e54a7b", (void*)godot_icall_SceneTree_set_input_as_handled_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_SceneTree_is_input_handled_68fe5f59", (void*)godot_icall_SceneTree_is_input_handled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SceneTree_create_timer_97631d5c", (void*)godot_icall_SceneTree_create_timer_97631d5c},
	{"Godot.NativeCalls::godot_icall_SceneTree_get_node_count_1f886eb0", (void*)godot_icall_SceneTree_get_node_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SceneTree_get_frame_282fe8d3", (void*)godot_icall_SceneTree_get_frame_282fe8d3},
	{"Godot.NativeCalls::godot_icall_SceneTree_quit_e1ae93bc", (void*)godot_icall_SceneTree_quit_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_screen_stretch_ee35f6b8", (void*)godot_icall_SceneTree_set_screen_stretch_ee35f6b8},
	{"Godot.NativeCalls::godot_icall_SceneTree_queue_delete_ad798950", (void*)godot_icall_SceneTree_queue_delete_ad798950},
	{"Godot.NativeCalls::godot_icall_SceneTree_call_group_flags_d792278f", (void*)godot_icall_SceneTree_call_group_flags_d792278f},
	{"Godot.NativeCalls::godot_icall_SceneTree_notify_group_flags_9595846", (void*)godot_icall_SceneTree_notify_group_flags_9595846},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_group_flags_6f454979", (void*)godot_icall_SceneTree_set_group_flags_6f454979},
	{"Godot.NativeCalls::godot_icall_SceneTree_call_group_f1b3fbca", (void*)godot_icall_SceneTree_call_group_f1b3fbca},
	{"Godot.NativeCalls::godot_icall_SceneTree_notify_group_bb2d80b6", (void*)godot_icall_SceneTree_notify_group_bb2d80b6},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_group_b4caaa8e", (void*)godot_icall_SceneTree_set_group_b4caaa8e},
	{"Godot.NativeCalls::godot_icall_SceneTree_get_nodes_in_group_6b21c46d", (void*)godot_icall_SceneTree_get_nodes_in_group_6b21c46d},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_current_scene_598860a7", (void*)godot_icall_SceneTree_set_current_scene_598860a7},
	{"Godot.NativeCalls::godot_icall_SceneTree_get_current_scene_87a9bfc5", (void*)godot_icall_SceneTree_get_current_scene_87a9bfc5},
	{"Godot.NativeCalls::godot_icall_SceneTree_change_scene_2660dbb2", (void*)godot_icall_SceneTree_change_scene_2660dbb2},
	{"Godot.NativeCalls::godot_icall_SceneTree_change_scene_to_19e77c9c", (void*)godot_icall_SceneTree_change_scene_to_19e77c9c},
	{"Godot.NativeCalls::godot_icall_SceneTree_reload_current_scene_f04570f5", (void*)godot_icall_SceneTree_reload_current_scene_f04570f5},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_multiplayer_ca78cf97", (void*)godot_icall_SceneTree_set_multiplayer_ca78cf97},
	{"Godot.NativeCalls::godot_icall_SceneTree_get_multiplayer_f8da1ad5", (void*)godot_icall_SceneTree_get_multiplayer_f8da1ad5},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_multiplayer_poll_enabled_ba24800b", (void*)godot_icall_SceneTree_set_multiplayer_poll_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_SceneTree_is_multiplayer_poll_enabled_68fe5f59", (void*)godot_icall_SceneTree_is_multiplayer_poll_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_network_peer_6a099e0a", (void*)godot_icall_SceneTree_set_network_peer_6a099e0a},
	{"Godot.NativeCalls::godot_icall_SceneTree_get_network_peer_9929695a", (void*)godot_icall_SceneTree_get_network_peer_9929695a},
	{"Godot.NativeCalls::godot_icall_SceneTree_is_network_server_68fe5f59", (void*)godot_icall_SceneTree_is_network_server_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SceneTree_has_network_peer_68fe5f59", (void*)godot_icall_SceneTree_has_network_peer_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SceneTree_get_network_connected_peers_2a166acd", (void*)godot_icall_SceneTree_get_network_connected_peers_2a166acd},
	{"Godot.NativeCalls::godot_icall_SceneTree_get_network_unique_id_1f886eb0", (void*)godot_icall_SceneTree_get_network_unique_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SceneTree_get_rpc_sender_id_1f886eb0", (void*)godot_icall_SceneTree_get_rpc_sender_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_refuse_new_network_connections_ba24800b", (void*)godot_icall_SceneTree_set_refuse_new_network_connections_ba24800b},
	{"Godot.NativeCalls::godot_icall_SceneTree_is_refusing_new_network_connections_68fe5f59", (void*)godot_icall_SceneTree_is_refusing_new_network_connections_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SceneTree_set_use_font_oversampling_ba24800b", (void*)godot_icall_SceneTree_set_use_font_oversampling_ba24800b},
	{"Godot.NativeCalls::godot_icall_SceneTree_is_using_font_oversampling_68fe5f59", (void*)godot_icall_SceneTree_is_using_font_oversampling_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SceneTreeTimer_set_time_left_904508bb", (void*)godot_icall_SceneTreeTimer_set_time_left_904508bb},
	{"Godot.NativeCalls::godot_icall_SceneTreeTimer_get_time_left_4edcd7a9", (void*)godot_icall_SceneTreeTimer_get_time_left_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Script_can_instance_68fe5f59", (void*)godot_icall_Script_can_instance_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Script_instance_has_3b1660ba", (void*)godot_icall_Script_instance_has_3b1660ba},
	{"Godot.NativeCalls::godot_icall_Script_has_source_code_68fe5f59", (void*)godot_icall_Script_has_source_code_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Script_get_source_code_97be4a2e", (void*)godot_icall_Script_get_source_code_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Script_set_source_code_6964ff3e", (void*)godot_icall_Script_set_source_code_6964ff3e},
	{"Godot.NativeCalls::godot_icall_Script_reload_a4e6027a", (void*)godot_icall_Script_reload_a4e6027a},
	{"Godot.NativeCalls::godot_icall_Script_get_base_script_cb4d4ff8", (void*)godot_icall_Script_get_base_script_cb4d4ff8},
	{"Godot.NativeCalls::godot_icall_Script_get_instance_base_type_97be4a2e", (void*)godot_icall_Script_get_instance_base_type_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Script_has_script_signal_bee64043", (void*)godot_icall_Script_has_script_signal_bee64043},
	{"Godot.NativeCalls::godot_icall_Script_get_script_property_list_d80382d4", (void*)godot_icall_Script_get_script_property_list_d80382d4},
	{"Godot.NativeCalls::godot_icall_Script_get_script_method_list_d80382d4", (void*)godot_icall_Script_get_script_method_list_d80382d4},
	{"Godot.NativeCalls::godot_icall_Script_get_script_signal_list_d80382d4", (void*)godot_icall_Script_get_script_signal_list_d80382d4},
	{"Godot.NativeCalls::godot_icall_Script_get_script_constant_map_22d47c9d", (void*)godot_icall_Script_get_script_constant_map_22d47c9d},
	{"Godot.NativeCalls::godot_icall_Script_get_property_default_value_6732bfd8", (void*)godot_icall_Script_get_property_default_value_6732bfd8},
	{"Godot.NativeCalls::godot_icall_Script_is_tool_68fe5f59", (void*)godot_icall_Script_is_tool_68fe5f59},
#ifdef TOOLS_ENABLED
	{"Godot.EditorNativeCalls::godot_icall_ScriptCreateDialog_config_899d9058", (void*)godot_icall_ScriptCreateDialog_config_899d9058},
	{"Godot.EditorNativeCalls::godot_icall_ScriptEditor_get_drag_data_fw_d0abbc24", (void*)godot_icall_ScriptEditor_get_drag_data_fw_d0abbc24},
	{"Godot.EditorNativeCalls::godot_icall_ScriptEditor_can_drop_data_fw_6c2b897e", (void*)godot_icall_ScriptEditor_can_drop_data_fw_6c2b897e},
	{"Godot.EditorNativeCalls::godot_icall_ScriptEditor_drop_data_fw_85f514c2", (void*)godot_icall_ScriptEditor_drop_data_fw_85f514c2},
	{"Godot.EditorNativeCalls::godot_icall_ScriptEditor_goto_line_e1ae93bc", (void*)godot_icall_ScriptEditor_goto_line_e1ae93bc},
	{"Godot.EditorNativeCalls::godot_icall_ScriptEditor_get_current_script_cb4d4ff8", (void*)godot_icall_ScriptEditor_get_current_script_cb4d4ff8},
	{"Godot.EditorNativeCalls::godot_icall_ScriptEditor_get_open_scripts_d80382d4", (void*)godot_icall_ScriptEditor_get_open_scripts_d80382d4},
	{"Godot.EditorNativeCalls::godot_icall_ScriptEditor_open_script_create_dialog_fc93f18d", (void*)godot_icall_ScriptEditor_open_script_create_dialog_fc93f18d},
#endif
	{"Godot.NativeCalls::godot_icall_ScrollBar_set_custom_step_904508bb", (void*)godot_icall_ScrollBar_set_custom_step_904508bb},
	{"Godot.NativeCalls::godot_icall_ScrollBar_get_custom_step_4edcd7a9", (void*)godot_icall_ScrollBar_get_custom_step_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_set_enable_h_scroll_ba24800b", (void*)godot_icall_ScrollContainer_set_enable_h_scroll_ba24800b},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_is_h_scroll_enabled_68fe5f59", (void*)godot_icall_ScrollContainer_is_h_scroll_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_set_enable_v_scroll_ba24800b", (void*)godot_icall_ScrollContainer_set_enable_v_scroll_ba24800b},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_is_v_scroll_enabled_68fe5f59", (void*)godot_icall_ScrollContainer_is_v_scroll_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_set_h_scroll_e1ae93bc", (void*)godot_icall_ScrollContainer_set_h_scroll_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_get_h_scroll_1f886eb0", (void*)godot_icall_ScrollContainer_get_h_scroll_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_set_v_scroll_e1ae93bc", (void*)godot_icall_ScrollContainer_set_v_scroll_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_get_v_scroll_1f886eb0", (void*)godot_icall_ScrollContainer_get_v_scroll_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_set_deadzone_e1ae93bc", (void*)godot_icall_ScrollContainer_set_deadzone_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_get_deadzone_1f886eb0", (void*)godot_icall_ScrollContainer_get_deadzone_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_set_follow_focus_ba24800b", (void*)godot_icall_ScrollContainer_set_follow_focus_ba24800b},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_is_following_focus_68fe5f59", (void*)godot_icall_ScrollContainer_is_following_focus_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_get_h_scrollbar_2a5f1c93", (void*)godot_icall_ScrollContainer_get_h_scrollbar_2a5f1c93},
	{"Godot.NativeCalls::godot_icall_ScrollContainer_get_v_scrollbar_37ab5951", (void*)godot_icall_ScrollContainer_get_v_scrollbar_37ab5951},
	{"Godot.NativeCalls::godot_icall_SegmentShape2D_set_a_6df7471e", (void*)godot_icall_SegmentShape2D_set_a_6df7471e},
	{"Godot.NativeCalls::godot_icall_SegmentShape2D_get_a_9b4ea24e", (void*)godot_icall_SegmentShape2D_get_a_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_SegmentShape2D_set_b_6df7471e", (void*)godot_icall_SegmentShape2D_set_b_6df7471e},
	{"Godot.NativeCalls::godot_icall_SegmentShape2D_get_b_9b4ea24e", (void*)godot_icall_SegmentShape2D_get_b_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Shader_get_mode_1f886eb0", (void*)godot_icall_Shader_get_mode_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Shader_set_code_6964ff3e", (void*)godot_icall_Shader_set_code_6964ff3e},
	{"Godot.NativeCalls::godot_icall_Shader_get_code_97be4a2e", (void*)godot_icall_Shader_get_code_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Shader_set_default_texture_param_16ca4061", (void*)godot_icall_Shader_set_default_texture_param_16ca4061},
	{"Godot.NativeCalls::godot_icall_Shader_get_default_texture_param_c2e1949b", (void*)godot_icall_Shader_get_default_texture_param_c2e1949b},
	{"Godot.NativeCalls::godot_icall_Shader_has_param_bee64043", (void*)godot_icall_Shader_has_param_bee64043},
	{"Godot.NativeCalls::godot_icall_ShaderMaterial_set_shader_abc8f6ee", (void*)godot_icall_ShaderMaterial_set_shader_abc8f6ee},
	{"Godot.NativeCalls::godot_icall_ShaderMaterial_get_shader_596a517e", (void*)godot_icall_ShaderMaterial_get_shader_596a517e},
	{"Godot.NativeCalls::godot_icall_ShaderMaterial_set_shader_param_3a208116", (void*)godot_icall_ShaderMaterial_set_shader_param_3a208116},
	{"Godot.NativeCalls::godot_icall_ShaderMaterial_get_shader_param_6732bfd8", (void*)godot_icall_ShaderMaterial_get_shader_param_6732bfd8},
	{"Godot.NativeCalls::godot_icall_ShaderMaterial_property_can_revert_bee64043", (void*)godot_icall_ShaderMaterial_property_can_revert_bee64043},
	{"Godot.NativeCalls::godot_icall_ShaderMaterial_property_get_revert_6732bfd8", (void*)godot_icall_ShaderMaterial_property_get_revert_6732bfd8},
	{"Godot.NativeCalls::godot_icall_Shape_set_margin_904508bb", (void*)godot_icall_Shape_set_margin_904508bb},
	{"Godot.NativeCalls::godot_icall_Shape_get_margin_4edcd7a9", (void*)godot_icall_Shape_get_margin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Shape2D_set_custom_solver_bias_904508bb", (void*)godot_icall_Shape2D_set_custom_solver_bias_904508bb},
	{"Godot.NativeCalls::godot_icall_Shape2D_get_custom_solver_bias_4edcd7a9", (void*)godot_icall_Shape2D_get_custom_solver_bias_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Shape2D_collide_abafdbaf", (void*)godot_icall_Shape2D_collide_abafdbaf},
	{"Godot.NativeCalls::godot_icall_Shape2D_collide_with_motion_a01c87fc", (void*)godot_icall_Shape2D_collide_with_motion_a01c87fc},
	{"Godot.NativeCalls::godot_icall_Shape2D_collide_and_get_contacts_df683537", (void*)godot_icall_Shape2D_collide_and_get_contacts_df683537},
	{"Godot.NativeCalls::godot_icall_Shape2D_collide_with_motion_and_get_contacts_d54a283c", (void*)godot_icall_Shape2D_collide_with_motion_and_get_contacts_d54a283c},
	{"Godot.NativeCalls::godot_icall_ShortCut_set_shortcut_7ac4986f", (void*)godot_icall_ShortCut_set_shortcut_7ac4986f},
	{"Godot.NativeCalls::godot_icall_ShortCut_get_shortcut_a85e66fd", (void*)godot_icall_ShortCut_get_shortcut_a85e66fd},
	{"Godot.NativeCalls::godot_icall_ShortCut_is_valid_68fe5f59", (void*)godot_icall_ShortCut_is_valid_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ShortCut_is_shortcut_c8931195", (void*)godot_icall_ShortCut_is_shortcut_c8931195},
	{"Godot.NativeCalls::godot_icall_ShortCut_get_as_text_97be4a2e", (void*)godot_icall_ShortCut_get_as_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Skeleton_add_bone_3ca14953", (void*)godot_icall_Skeleton_add_bone_3ca14953},
	{"Godot.NativeCalls::godot_icall_Skeleton_find_bone_6d3db7c6", (void*)godot_icall_Skeleton_find_bone_6d3db7c6},
	{"Godot.NativeCalls::godot_icall_Skeleton_get_bone_name_44fc4c5a", (void*)godot_icall_Skeleton_get_bone_name_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_Skeleton_get_bone_parent_b835dea5", (void*)godot_icall_Skeleton_get_bone_parent_b835dea5},
	{"Godot.NativeCalls::godot_icall_Skeleton_set_bone_parent_807eefe4", (void*)godot_icall_Skeleton_set_bone_parent_807eefe4},
	{"Godot.NativeCalls::godot_icall_Skeleton_get_bone_count_1f886eb0", (void*)godot_icall_Skeleton_get_bone_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Skeleton_unparent_bone_and_rest_e1ae93bc", (void*)godot_icall_Skeleton_unparent_bone_and_rest_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Skeleton_get_bone_rest_466c8cd4", (void*)godot_icall_Skeleton_get_bone_rest_466c8cd4},
	{"Godot.NativeCalls::godot_icall_Skeleton_set_bone_rest_7ede1ff", (void*)godot_icall_Skeleton_set_bone_rest_7ede1ff},
	{"Godot.NativeCalls::godot_icall_Skeleton_register_skin_dde4542e", (void*)godot_icall_Skeleton_register_skin_dde4542e},
	{"Godot.NativeCalls::godot_icall_Skeleton_localize_rests_c8e54a7b", (void*)godot_icall_Skeleton_localize_rests_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Skeleton_set_bone_disable_rest_4ae8febd", (void*)godot_icall_Skeleton_set_bone_disable_rest_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Skeleton_is_bone_rest_disabled_7f690926", (void*)godot_icall_Skeleton_is_bone_rest_disabled_7f690926},
	{"Godot.NativeCalls::godot_icall_Skeleton_bind_child_node_to_bone_285f5ed1", (void*)godot_icall_Skeleton_bind_child_node_to_bone_285f5ed1},
	{"Godot.NativeCalls::godot_icall_Skeleton_unbind_child_node_from_bone_285f5ed1", (void*)godot_icall_Skeleton_unbind_child_node_from_bone_285f5ed1},
	{"Godot.NativeCalls::godot_icall_Skeleton_get_bound_child_nodes_to_bone_2ca2fcca", (void*)godot_icall_Skeleton_get_bound_child_nodes_to_bone_2ca2fcca},
	{"Godot.NativeCalls::godot_icall_Skeleton_clear_bones_c8e54a7b", (void*)godot_icall_Skeleton_clear_bones_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Skeleton_get_bone_pose_466c8cd4", (void*)godot_icall_Skeleton_get_bone_pose_466c8cd4},
	{"Godot.NativeCalls::godot_icall_Skeleton_set_bone_pose_7ede1ff", (void*)godot_icall_Skeleton_set_bone_pose_7ede1ff},
	{"Godot.NativeCalls::godot_icall_Skeleton_set_bone_global_pose_override_769cf2f7", (void*)godot_icall_Skeleton_set_bone_global_pose_override_769cf2f7},
	{"Godot.NativeCalls::godot_icall_Skeleton_get_bone_global_pose_466c8cd4", (void*)godot_icall_Skeleton_get_bone_global_pose_466c8cd4},
	{"Godot.NativeCalls::godot_icall_Skeleton_get_bone_custom_pose_466c8cd4", (void*)godot_icall_Skeleton_get_bone_custom_pose_466c8cd4},
	{"Godot.NativeCalls::godot_icall_Skeleton_set_bone_custom_pose_7ede1ff", (void*)godot_icall_Skeleton_set_bone_custom_pose_7ede1ff},
	{"Godot.NativeCalls::godot_icall_Skeleton_physical_bones_stop_simulation_c8e54a7b", (void*)godot_icall_Skeleton_physical_bones_stop_simulation_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Skeleton_physical_bones_start_simulation_2923a790", (void*)godot_icall_Skeleton_physical_bones_start_simulation_2923a790},
	{"Godot.NativeCalls::godot_icall_Skeleton_physical_bones_add_collision_exception_a7039b4e", (void*)godot_icall_Skeleton_physical_bones_add_collision_exception_a7039b4e},
	{"Godot.NativeCalls::godot_icall_Skeleton_physical_bones_remove_collision_exception_a7039b4e", (void*)godot_icall_Skeleton_physical_bones_remove_collision_exception_a7039b4e},
	{"Godot.NativeCalls::godot_icall_Skeleton2D_get_bone_count_1f886eb0", (void*)godot_icall_Skeleton2D_get_bone_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Skeleton2D_get_bone_13543d24", (void*)godot_icall_Skeleton2D_get_bone_13543d24},
	{"Godot.NativeCalls::godot_icall_Skeleton2D_get_skeleton_6623661e", (void*)godot_icall_Skeleton2D_get_skeleton_6623661e},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_set_root_bone_2f29e819", (void*)godot_icall_SkeletonIK_set_root_bone_2f29e819},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_get_root_bone_97be4a2e", (void*)godot_icall_SkeletonIK_get_root_bone_97be4a2e},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_set_tip_bone_2f29e819", (void*)godot_icall_SkeletonIK_set_tip_bone_2f29e819},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_get_tip_bone_97be4a2e", (void*)godot_icall_SkeletonIK_get_tip_bone_97be4a2e},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_set_interpolation_904508bb", (void*)godot_icall_SkeletonIK_set_interpolation_904508bb},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_get_interpolation_4edcd7a9", (void*)godot_icall_SkeletonIK_get_interpolation_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_set_target_transform_655b85c9", (void*)godot_icall_SkeletonIK_set_target_transform_655b85c9},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_get_target_transform_a3fb649b", (void*)godot_icall_SkeletonIK_get_target_transform_a3fb649b},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_set_target_node_1e08804", (void*)godot_icall_SkeletonIK_set_target_node_1e08804},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_get_target_node_bf425768", (void*)godot_icall_SkeletonIK_get_target_node_bf425768},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_set_override_tip_basis_ba24800b", (void*)godot_icall_SkeletonIK_set_override_tip_basis_ba24800b},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_is_override_tip_basis_68fe5f59", (void*)godot_icall_SkeletonIK_is_override_tip_basis_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_set_use_magnet_ba24800b", (void*)godot_icall_SkeletonIK_set_use_magnet_ba24800b},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_is_using_magnet_68fe5f59", (void*)godot_icall_SkeletonIK_is_using_magnet_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_set_magnet_position_6df7471d", (void*)godot_icall_SkeletonIK_set_magnet_position_6df7471d},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_get_magnet_position_9b4ea24f", (void*)godot_icall_SkeletonIK_get_magnet_position_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_get_parent_skeleton_e6ae7d08", (void*)godot_icall_SkeletonIK_get_parent_skeleton_e6ae7d08},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_is_running_68fe5f59", (void*)godot_icall_SkeletonIK_is_running_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_set_min_distance_904508bb", (void*)godot_icall_SkeletonIK_set_min_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_get_min_distance_4edcd7a9", (void*)godot_icall_SkeletonIK_get_min_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_set_max_iterations_e1ae93bc", (void*)godot_icall_SkeletonIK_set_max_iterations_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_get_max_iterations_1f886eb0", (void*)godot_icall_SkeletonIK_get_max_iterations_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_start_ba24800b", (void*)godot_icall_SkeletonIK_start_ba24800b},
	{"Godot.NativeCalls::godot_icall_SkeletonIK_stop_c8e54a7b", (void*)godot_icall_SkeletonIK_stop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Skin_set_bind_count_e1ae93bc", (void*)godot_icall_Skin_set_bind_count_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Skin_get_bind_count_1f886eb0", (void*)godot_icall_Skin_get_bind_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Skin_add_bind_7ede1ff", (void*)godot_icall_Skin_add_bind_7ede1ff},
	{"Godot.NativeCalls::godot_icall_Skin_set_bind_pose_7ede1ff", (void*)godot_icall_Skin_set_bind_pose_7ede1ff},
	{"Godot.NativeCalls::godot_icall_Skin_get_bind_pose_466c8cd4", (void*)godot_icall_Skin_get_bind_pose_466c8cd4},
	{"Godot.NativeCalls::godot_icall_Skin_set_bind_bone_807eefe4", (void*)godot_icall_Skin_set_bind_bone_807eefe4},
	{"Godot.NativeCalls::godot_icall_Skin_get_bind_bone_b835dea5", (void*)godot_icall_Skin_get_bind_bone_b835dea5},
	{"Godot.NativeCalls::godot_icall_Skin_clear_binds_c8e54a7b", (void*)godot_icall_Skin_clear_binds_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_SkinReference_get_skeleton_6623661e", (void*)godot_icall_SkinReference_get_skeleton_6623661e},
	{"Godot.NativeCalls::godot_icall_SkinReference_get_skin_938dc832", (void*)godot_icall_SkinReference_get_skin_938dc832},
	{"Godot.NativeCalls::godot_icall_Sky_set_radiance_size_da42fcee", (void*)godot_icall_Sky_set_radiance_size_da42fcee},
	{"Godot.NativeCalls::godot_icall_Sky_get_radiance_size_b6d220e9", (void*)godot_icall_Sky_get_radiance_size_b6d220e9},
	{"Godot.NativeCalls::godot_icall_Slider_set_ticks_e1ae93bc", (void*)godot_icall_Slider_set_ticks_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Slider_get_ticks_1f886eb0", (void*)godot_icall_Slider_get_ticks_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Slider_get_ticks_on_borders_68fe5f59", (void*)godot_icall_Slider_get_ticks_on_borders_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Slider_set_ticks_on_borders_ba24800b", (void*)godot_icall_Slider_set_ticks_on_borders_ba24800b},
	{"Godot.NativeCalls::godot_icall_Slider_set_editable_ba24800b", (void*)godot_icall_Slider_set_editable_ba24800b},
	{"Godot.NativeCalls::godot_icall_Slider_is_editable_68fe5f59", (void*)godot_icall_Slider_is_editable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Slider_set_scrollable_ba24800b", (void*)godot_icall_Slider_set_scrollable_ba24800b},
	{"Godot.NativeCalls::godot_icall_Slider_is_scrollable_68fe5f59", (void*)godot_icall_Slider_is_scrollable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SliderJoint_set_param_1b52038e", (void*)godot_icall_SliderJoint_set_param_1b52038e},
	{"Godot.NativeCalls::godot_icall_SliderJoint_get_param_c1ceba83", (void*)godot_icall_SliderJoint_get_param_c1ceba83},
	{"Godot.NativeCalls::godot_icall_SliderJoint__set_upper_limit_angular_904508bb", (void*)godot_icall_SliderJoint__set_upper_limit_angular_904508bb},
	{"Godot.NativeCalls::godot_icall_SliderJoint__get_upper_limit_angular_4edcd7a9", (void*)godot_icall_SliderJoint__get_upper_limit_angular_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SliderJoint__set_lower_limit_angular_904508bb", (void*)godot_icall_SliderJoint__set_lower_limit_angular_904508bb},
	{"Godot.NativeCalls::godot_icall_SliderJoint__get_lower_limit_angular_4edcd7a9", (void*)godot_icall_SliderJoint__get_lower_limit_angular_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_collision_mask_966aab97", (void*)godot_icall_SoftBody_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_collision_mask_54cc76d5", (void*)godot_icall_SoftBody_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_collision_layer_966aab97", (void*)godot_icall_SoftBody_set_collision_layer_966aab97},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_collision_layer_54cc76d5", (void*)godot_icall_SoftBody_get_collision_layer_54cc76d5},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_collision_mask_bit_4ae8febd", (void*)godot_icall_SoftBody_set_collision_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_collision_mask_bit_7f690926", (void*)godot_icall_SoftBody_get_collision_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_collision_layer_bit_4ae8febd", (void*)godot_icall_SoftBody_set_collision_layer_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_collision_layer_bit_7f690926", (void*)godot_icall_SoftBody_get_collision_layer_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_parent_collision_ignore_1e08804", (void*)godot_icall_SoftBody_set_parent_collision_ignore_1e08804},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_parent_collision_ignore_bf425768", (void*)godot_icall_SoftBody_get_parent_collision_ignore_bf425768},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_collision_exceptions_d80382d4", (void*)godot_icall_SoftBody_get_collision_exceptions_d80382d4},
	{"Godot.NativeCalls::godot_icall_SoftBody_add_collision_exception_with_598860a7", (void*)godot_icall_SoftBody_add_collision_exception_with_598860a7},
	{"Godot.NativeCalls::godot_icall_SoftBody_remove_collision_exception_with_598860a7", (void*)godot_icall_SoftBody_remove_collision_exception_with_598860a7},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_simulation_precision_e1ae93bc", (void*)godot_icall_SoftBody_set_simulation_precision_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_simulation_precision_1f886eb0", (void*)godot_icall_SoftBody_get_simulation_precision_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_total_mass_904508bb", (void*)godot_icall_SoftBody_set_total_mass_904508bb},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_total_mass_4edcd7a9", (void*)godot_icall_SoftBody_get_total_mass_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_linear_stiffness_904508bb", (void*)godot_icall_SoftBody_set_linear_stiffness_904508bb},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_linear_stiffness_4edcd7a9", (void*)godot_icall_SoftBody_get_linear_stiffness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_areaAngular_stiffness_904508bb", (void*)godot_icall_SoftBody_set_areaAngular_stiffness_904508bb},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_areaAngular_stiffness_4edcd7a9", (void*)godot_icall_SoftBody_get_areaAngular_stiffness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_volume_stiffness_904508bb", (void*)godot_icall_SoftBody_set_volume_stiffness_904508bb},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_volume_stiffness_4edcd7a9", (void*)godot_icall_SoftBody_get_volume_stiffness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_pressure_coefficient_904508bb", (void*)godot_icall_SoftBody_set_pressure_coefficient_904508bb},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_pressure_coefficient_4edcd7a9", (void*)godot_icall_SoftBody_get_pressure_coefficient_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_pose_matching_coefficient_904508bb", (void*)godot_icall_SoftBody_set_pose_matching_coefficient_904508bb},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_pose_matching_coefficient_4edcd7a9", (void*)godot_icall_SoftBody_get_pose_matching_coefficient_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_damping_coefficient_904508bb", (void*)godot_icall_SoftBody_set_damping_coefficient_904508bb},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_damping_coefficient_4edcd7a9", (void*)godot_icall_SoftBody_get_damping_coefficient_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_drag_coefficient_904508bb", (void*)godot_icall_SoftBody_set_drag_coefficient_904508bb},
	{"Godot.NativeCalls::godot_icall_SoftBody_get_drag_coefficient_4edcd7a9", (void*)godot_icall_SoftBody_get_drag_coefficient_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SoftBody_set_ray_pickable_ba24800b", (void*)godot_icall_SoftBody_set_ray_pickable_ba24800b},
	{"Godot.NativeCalls::godot_icall_SoftBody_is_ray_pickable_68fe5f59", (void*)godot_icall_SoftBody_is_ray_pickable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Spatial_set_transform_655b85c9", (void*)godot_icall_Spatial_set_transform_655b85c9},
	{"Godot.NativeCalls::godot_icall_Spatial_get_transform_a3fb649b", (void*)godot_icall_Spatial_get_transform_a3fb649b},
	{"Godot.NativeCalls::godot_icall_Spatial_set_translation_6df7471d", (void*)godot_icall_Spatial_set_translation_6df7471d},
	{"Godot.NativeCalls::godot_icall_Spatial_get_translation_9b4ea24f", (void*)godot_icall_Spatial_get_translation_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Spatial_set_rotation_6df7471d", (void*)godot_icall_Spatial_set_rotation_6df7471d},
	{"Godot.NativeCalls::godot_icall_Spatial_get_rotation_9b4ea24f", (void*)godot_icall_Spatial_get_rotation_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Spatial_set_rotation_degrees_6df7471d", (void*)godot_icall_Spatial_set_rotation_degrees_6df7471d},
	{"Godot.NativeCalls::godot_icall_Spatial_get_rotation_degrees_9b4ea24f", (void*)godot_icall_Spatial_get_rotation_degrees_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Spatial_set_scale_6df7471d", (void*)godot_icall_Spatial_set_scale_6df7471d},
	{"Godot.NativeCalls::godot_icall_Spatial_get_scale_9b4ea24f", (void*)godot_icall_Spatial_get_scale_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_Spatial_set_global_transform_655b85c9", (void*)godot_icall_Spatial_set_global_transform_655b85c9},
	{"Godot.NativeCalls::godot_icall_Spatial_get_global_transform_a3fb649b", (void*)godot_icall_Spatial_get_global_transform_a3fb649b},
	{"Godot.NativeCalls::godot_icall_Spatial_get_parent_spatial_5ca237df", (void*)godot_icall_Spatial_get_parent_spatial_5ca237df},
	{"Godot.NativeCalls::godot_icall_Spatial_set_ignore_transform_notification_ba24800b", (void*)godot_icall_Spatial_set_ignore_transform_notification_ba24800b},
	{"Godot.NativeCalls::godot_icall_Spatial_set_as_toplevel_ba24800b", (void*)godot_icall_Spatial_set_as_toplevel_ba24800b},
	{"Godot.NativeCalls::godot_icall_Spatial_is_set_as_toplevel_68fe5f59", (void*)godot_icall_Spatial_is_set_as_toplevel_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Spatial_set_disable_scale_ba24800b", (void*)godot_icall_Spatial_set_disable_scale_ba24800b},
	{"Godot.NativeCalls::godot_icall_Spatial_is_scale_disabled_68fe5f59", (void*)godot_icall_Spatial_is_scale_disabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Spatial_get_world_1e353b0f", (void*)godot_icall_Spatial_get_world_1e353b0f},
	{"Godot.NativeCalls::godot_icall_Spatial_force_update_transform_c8e54a7b", (void*)godot_icall_Spatial_force_update_transform_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Spatial_update_gizmo_c8e54a7b", (void*)godot_icall_Spatial_update_gizmo_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Spatial_set_gizmo_b6a1956d", (void*)godot_icall_Spatial_set_gizmo_b6a1956d},
	{"Godot.NativeCalls::godot_icall_Spatial_get_gizmo_748173ff", (void*)godot_icall_Spatial_get_gizmo_748173ff},
	{"Godot.NativeCalls::godot_icall_Spatial_set_visible_ba24800b", (void*)godot_icall_Spatial_set_visible_ba24800b},
	{"Godot.NativeCalls::godot_icall_Spatial_is_visible_68fe5f59", (void*)godot_icall_Spatial_is_visible_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Spatial_is_visible_in_tree_68fe5f59", (void*)godot_icall_Spatial_is_visible_in_tree_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Spatial_show_c8e54a7b", (void*)godot_icall_Spatial_show_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Spatial_hide_c8e54a7b", (void*)godot_icall_Spatial_hide_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Spatial_set_notify_local_transform_ba24800b", (void*)godot_icall_Spatial_set_notify_local_transform_ba24800b},
	{"Godot.NativeCalls::godot_icall_Spatial_is_local_transform_notification_enabled_68fe5f59", (void*)godot_icall_Spatial_is_local_transform_notification_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Spatial_set_notify_transform_ba24800b", (void*)godot_icall_Spatial_set_notify_transform_ba24800b},
	{"Godot.NativeCalls::godot_icall_Spatial_is_transform_notification_enabled_68fe5f59", (void*)godot_icall_Spatial_is_transform_notification_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Spatial_rotate_eb94ad74", (void*)godot_icall_Spatial_rotate_eb94ad74},
	{"Godot.NativeCalls::godot_icall_Spatial_global_rotate_eb94ad74", (void*)godot_icall_Spatial_global_rotate_eb94ad74},
	{"Godot.NativeCalls::godot_icall_Spatial_global_scale_6df7471d", (void*)godot_icall_Spatial_global_scale_6df7471d},
	{"Godot.NativeCalls::godot_icall_Spatial_global_translate_6df7471d", (void*)godot_icall_Spatial_global_translate_6df7471d},
	{"Godot.NativeCalls::godot_icall_Spatial_rotate_object_local_eb94ad74", (void*)godot_icall_Spatial_rotate_object_local_eb94ad74},
	{"Godot.NativeCalls::godot_icall_Spatial_scale_object_local_6df7471d", (void*)godot_icall_Spatial_scale_object_local_6df7471d},
	{"Godot.NativeCalls::godot_icall_Spatial_translate_object_local_6df7471d", (void*)godot_icall_Spatial_translate_object_local_6df7471d},
	{"Godot.NativeCalls::godot_icall_Spatial_rotate_x_904508bb", (void*)godot_icall_Spatial_rotate_x_904508bb},
	{"Godot.NativeCalls::godot_icall_Spatial_rotate_y_904508bb", (void*)godot_icall_Spatial_rotate_y_904508bb},
	{"Godot.NativeCalls::godot_icall_Spatial_rotate_z_904508bb", (void*)godot_icall_Spatial_rotate_z_904508bb},
	{"Godot.NativeCalls::godot_icall_Spatial_translate_6df7471d", (void*)godot_icall_Spatial_translate_6df7471d},
	{"Godot.NativeCalls::godot_icall_Spatial_orthonormalize_c8e54a7b", (void*)godot_icall_Spatial_orthonormalize_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Spatial_set_identity_c8e54a7b", (void*)godot_icall_Spatial_set_identity_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Spatial_look_at_bf22f212", (void*)godot_icall_Spatial_look_at_bf22f212},
	{"Godot.NativeCalls::godot_icall_Spatial_look_at_from_position_8d29af1e", (void*)godot_icall_Spatial_look_at_from_position_8d29af1e},
	{"Godot.NativeCalls::godot_icall_Spatial_to_local_af4cfa14", (void*)godot_icall_Spatial_to_local_af4cfa14},
	{"Godot.NativeCalls::godot_icall_Spatial_to_global_af4cfa14", (void*)godot_icall_Spatial_to_global_af4cfa14},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_albedo_f2e3b5aa", (void*)godot_icall_SpatialMaterial_set_albedo_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_albedo_304394ba", (void*)godot_icall_SpatialMaterial_get_albedo_304394ba},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_specular_904508bb", (void*)godot_icall_SpatialMaterial_set_specular_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_specular_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_specular_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_metallic_904508bb", (void*)godot_icall_SpatialMaterial_set_metallic_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_metallic_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_metallic_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_roughness_904508bb", (void*)godot_icall_SpatialMaterial_set_roughness_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_roughness_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_roughness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_emission_f2e3b5aa", (void*)godot_icall_SpatialMaterial_set_emission_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_emission_304394ba", (void*)godot_icall_SpatialMaterial_get_emission_304394ba},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_emission_energy_904508bb", (void*)godot_icall_SpatialMaterial_set_emission_energy_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_emission_energy_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_emission_energy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_normal_scale_904508bb", (void*)godot_icall_SpatialMaterial_set_normal_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_normal_scale_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_normal_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_rim_904508bb", (void*)godot_icall_SpatialMaterial_set_rim_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_rim_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_rim_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_rim_tint_904508bb", (void*)godot_icall_SpatialMaterial_set_rim_tint_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_rim_tint_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_rim_tint_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_clearcoat_904508bb", (void*)godot_icall_SpatialMaterial_set_clearcoat_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_clearcoat_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_clearcoat_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_clearcoat_gloss_904508bb", (void*)godot_icall_SpatialMaterial_set_clearcoat_gloss_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_clearcoat_gloss_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_clearcoat_gloss_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_anisotropy_904508bb", (void*)godot_icall_SpatialMaterial_set_anisotropy_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_anisotropy_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_anisotropy_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_depth_scale_904508bb", (void*)godot_icall_SpatialMaterial_set_depth_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_depth_scale_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_depth_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_subsurface_scattering_strength_904508bb", (void*)godot_icall_SpatialMaterial_set_subsurface_scattering_strength_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_subsurface_scattering_strength_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_subsurface_scattering_strength_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_transmission_f2e3b5aa", (void*)godot_icall_SpatialMaterial_set_transmission_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_transmission_304394ba", (void*)godot_icall_SpatialMaterial_get_transmission_304394ba},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_refraction_904508bb", (void*)godot_icall_SpatialMaterial_set_refraction_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_refraction_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_refraction_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_line_width_904508bb", (void*)godot_icall_SpatialMaterial_set_line_width_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_line_width_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_line_width_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_point_size_904508bb", (void*)godot_icall_SpatialMaterial_set_point_size_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_point_size_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_point_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_detail_uv_a024e460", (void*)godot_icall_SpatialMaterial_set_detail_uv_a024e460},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_detail_uv_5efe4304", (void*)godot_icall_SpatialMaterial_get_detail_uv_5efe4304},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_blend_mode_c5b84632", (void*)godot_icall_SpatialMaterial_set_blend_mode_c5b84632},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_blend_mode_399a132", (void*)godot_icall_SpatialMaterial_get_blend_mode_399a132},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_depth_draw_mode_31803d22", (void*)godot_icall_SpatialMaterial_set_depth_draw_mode_31803d22},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_depth_draw_mode_efa20c42", (void*)godot_icall_SpatialMaterial_get_depth_draw_mode_efa20c42},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_cull_mode_ce9116b1", (void*)godot_icall_SpatialMaterial_set_cull_mode_ce9116b1},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_cull_mode_fcb0f1b3", (void*)godot_icall_SpatialMaterial_get_cull_mode_fcb0f1b3},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_diffuse_mode_c07a8ff3", (void*)godot_icall_SpatialMaterial_set_diffuse_mode_c07a8ff3},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_diffuse_mode_fedc5a71", (void*)godot_icall_SpatialMaterial_get_diffuse_mode_fedc5a71},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_specular_mode_2557830c", (void*)godot_icall_SpatialMaterial_set_specular_mode_2557830c},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_specular_mode_e3ef5e60", (void*)godot_icall_SpatialMaterial_get_specular_mode_e3ef5e60},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_flag_3cbc5e5c", (void*)godot_icall_SpatialMaterial_set_flag_3cbc5e5c},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_flag_96c571a7", (void*)godot_icall_SpatialMaterial_get_flag_96c571a7},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_feature_1a6b640c", (void*)godot_icall_SpatialMaterial_set_feature_1a6b640c},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_feature_3a7ae32", (void*)godot_icall_SpatialMaterial_get_feature_3a7ae32},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_texture_b251c09e", (void*)godot_icall_SpatialMaterial_set_texture_b251c09e},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_texture_83038d6b", (void*)godot_icall_SpatialMaterial_get_texture_83038d6b},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_detail_blend_mode_c5b84632", (void*)godot_icall_SpatialMaterial_set_detail_blend_mode_c5b84632},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_detail_blend_mode_399a132", (void*)godot_icall_SpatialMaterial_get_detail_blend_mode_399a132},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_uv1_scale_6df7471d", (void*)godot_icall_SpatialMaterial_set_uv1_scale_6df7471d},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_uv1_scale_9b4ea24f", (void*)godot_icall_SpatialMaterial_get_uv1_scale_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_uv1_offset_6df7471d", (void*)godot_icall_SpatialMaterial_set_uv1_offset_6df7471d},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_uv1_offset_9b4ea24f", (void*)godot_icall_SpatialMaterial_get_uv1_offset_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_uv1_triplanar_blend_sharpness_904508bb", (void*)godot_icall_SpatialMaterial_set_uv1_triplanar_blend_sharpness_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_uv1_triplanar_blend_sharpness_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_uv1_triplanar_blend_sharpness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_uv2_scale_6df7471d", (void*)godot_icall_SpatialMaterial_set_uv2_scale_6df7471d},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_uv2_scale_9b4ea24f", (void*)godot_icall_SpatialMaterial_get_uv2_scale_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_uv2_offset_6df7471d", (void*)godot_icall_SpatialMaterial_set_uv2_offset_6df7471d},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_uv2_offset_9b4ea24f", (void*)godot_icall_SpatialMaterial_get_uv2_offset_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_uv2_triplanar_blend_sharpness_904508bb", (void*)godot_icall_SpatialMaterial_set_uv2_triplanar_blend_sharpness_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_uv2_triplanar_blend_sharpness_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_uv2_triplanar_blend_sharpness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_billboard_mode_20a3461a", (void*)godot_icall_SpatialMaterial_set_billboard_mode_20a3461a},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_billboard_mode_de82a14a", (void*)godot_icall_SpatialMaterial_get_billboard_mode_de82a14a},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_particles_anim_h_frames_e1ae93bc", (void*)godot_icall_SpatialMaterial_set_particles_anim_h_frames_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_particles_anim_h_frames_1f886eb0", (void*)godot_icall_SpatialMaterial_get_particles_anim_h_frames_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_particles_anim_v_frames_e1ae93bc", (void*)godot_icall_SpatialMaterial_set_particles_anim_v_frames_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_particles_anim_v_frames_1f886eb0", (void*)godot_icall_SpatialMaterial_get_particles_anim_v_frames_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_particles_anim_loop_ba24800b", (void*)godot_icall_SpatialMaterial_set_particles_anim_loop_ba24800b},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_particles_anim_loop_68fe5f59", (void*)godot_icall_SpatialMaterial_get_particles_anim_loop_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_depth_deep_parallax_ba24800b", (void*)godot_icall_SpatialMaterial_set_depth_deep_parallax_ba24800b},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_is_depth_deep_parallax_enabled_68fe5f59", (void*)godot_icall_SpatialMaterial_is_depth_deep_parallax_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_depth_deep_parallax_min_layers_e1ae93bc", (void*)godot_icall_SpatialMaterial_set_depth_deep_parallax_min_layers_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_depth_deep_parallax_min_layers_1f886eb0", (void*)godot_icall_SpatialMaterial_get_depth_deep_parallax_min_layers_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_depth_deep_parallax_max_layers_e1ae93bc", (void*)godot_icall_SpatialMaterial_set_depth_deep_parallax_max_layers_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_depth_deep_parallax_max_layers_1f886eb0", (void*)godot_icall_SpatialMaterial_get_depth_deep_parallax_max_layers_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_depth_deep_parallax_flip_tangent_ba24800b", (void*)godot_icall_SpatialMaterial_set_depth_deep_parallax_flip_tangent_ba24800b},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_depth_deep_parallax_flip_tangent_68fe5f59", (void*)godot_icall_SpatialMaterial_get_depth_deep_parallax_flip_tangent_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_depth_deep_parallax_flip_binormal_ba24800b", (void*)godot_icall_SpatialMaterial_set_depth_deep_parallax_flip_binormal_ba24800b},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_depth_deep_parallax_flip_binormal_68fe5f59", (void*)godot_icall_SpatialMaterial_get_depth_deep_parallax_flip_binormal_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_grow_904508bb", (void*)godot_icall_SpatialMaterial_set_grow_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_grow_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_grow_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_emission_operator_e9a43bc9", (void*)godot_icall_SpatialMaterial_set_emission_operator_e9a43bc9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_emission_operator_4dd88324", (void*)godot_icall_SpatialMaterial_get_emission_operator_4dd88324},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_ao_light_affect_904508bb", (void*)godot_icall_SpatialMaterial_set_ao_light_affect_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_ao_light_affect_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_ao_light_affect_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_alpha_scissor_threshold_904508bb", (void*)godot_icall_SpatialMaterial_set_alpha_scissor_threshold_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_alpha_scissor_threshold_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_alpha_scissor_threshold_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_grow_enabled_ba24800b", (void*)godot_icall_SpatialMaterial_set_grow_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_is_grow_enabled_68fe5f59", (void*)godot_icall_SpatialMaterial_is_grow_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_metallic_texture_channel_2380fd08", (void*)godot_icall_SpatialMaterial_set_metallic_texture_channel_2380fd08},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_metallic_texture_channel_e1a24c5c", (void*)godot_icall_SpatialMaterial_get_metallic_texture_channel_e1a24c5c},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_roughness_texture_channel_2380fd08", (void*)godot_icall_SpatialMaterial_set_roughness_texture_channel_2380fd08},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_roughness_texture_channel_e1a24c5c", (void*)godot_icall_SpatialMaterial_get_roughness_texture_channel_e1a24c5c},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_ao_texture_channel_2380fd08", (void*)godot_icall_SpatialMaterial_set_ao_texture_channel_2380fd08},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_ao_texture_channel_e1a24c5c", (void*)godot_icall_SpatialMaterial_get_ao_texture_channel_e1a24c5c},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_refraction_texture_channel_2380fd08", (void*)godot_icall_SpatialMaterial_set_refraction_texture_channel_2380fd08},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_refraction_texture_channel_e1a24c5c", (void*)godot_icall_SpatialMaterial_get_refraction_texture_channel_e1a24c5c},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_proximity_fade_ba24800b", (void*)godot_icall_SpatialMaterial_set_proximity_fade_ba24800b},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_is_proximity_fade_enabled_68fe5f59", (void*)godot_icall_SpatialMaterial_is_proximity_fade_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_proximity_fade_distance_904508bb", (void*)godot_icall_SpatialMaterial_set_proximity_fade_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_proximity_fade_distance_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_proximity_fade_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_distance_fade_4a404934", (void*)godot_icall_SpatialMaterial_set_distance_fade_4a404934},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_distance_fade_493167e7", (void*)godot_icall_SpatialMaterial_get_distance_fade_493167e7},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_distance_fade_max_distance_904508bb", (void*)godot_icall_SpatialMaterial_set_distance_fade_max_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_distance_fade_max_distance_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_distance_fade_max_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_set_distance_fade_min_distance_904508bb", (void*)godot_icall_SpatialMaterial_set_distance_fade_min_distance_904508bb},
	{"Godot.NativeCalls::godot_icall_SpatialMaterial_get_distance_fade_min_distance_4edcd7a9", (void*)godot_icall_SpatialMaterial_get_distance_fade_min_distance_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpatialVelocityTracker_set_track_physics_step_ba24800b", (void*)godot_icall_SpatialVelocityTracker_set_track_physics_step_ba24800b},
	{"Godot.NativeCalls::godot_icall_SpatialVelocityTracker_is_tracking_physics_step_68fe5f59", (void*)godot_icall_SpatialVelocityTracker_is_tracking_physics_step_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SpatialVelocityTracker_update_position_6df7471d", (void*)godot_icall_SpatialVelocityTracker_update_position_6df7471d},
	{"Godot.NativeCalls::godot_icall_SpatialVelocityTracker_get_tracked_linear_velocity_9b4ea24f", (void*)godot_icall_SpatialVelocityTracker_get_tracked_linear_velocity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_SpatialVelocityTracker_reset_6df7471d", (void*)godot_icall_SpatialVelocityTracker_reset_6df7471d},
	{"Godot.NativeCalls::godot_icall_SphereMesh_set_radius_904508bb", (void*)godot_icall_SphereMesh_set_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_SphereMesh_get_radius_4edcd7a9", (void*)godot_icall_SphereMesh_get_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SphereMesh_set_height_904508bb", (void*)godot_icall_SphereMesh_set_height_904508bb},
	{"Godot.NativeCalls::godot_icall_SphereMesh_get_height_4edcd7a9", (void*)godot_icall_SphereMesh_get_height_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SphereMesh_set_radial_segments_e1ae93bc", (void*)godot_icall_SphereMesh_set_radial_segments_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_SphereMesh_get_radial_segments_1f886eb0", (void*)godot_icall_SphereMesh_get_radial_segments_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SphereMesh_set_rings_e1ae93bc", (void*)godot_icall_SphereMesh_set_rings_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_SphereMesh_get_rings_1f886eb0", (void*)godot_icall_SphereMesh_get_rings_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SphereMesh_set_is_hemisphere_ba24800b", (void*)godot_icall_SphereMesh_set_is_hemisphere_ba24800b},
	{"Godot.NativeCalls::godot_icall_SphereMesh_get_is_hemisphere_68fe5f59", (void*)godot_icall_SphereMesh_get_is_hemisphere_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SphereShape_set_radius_904508bb", (void*)godot_icall_SphereShape_set_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_SphereShape_get_radius_4edcd7a9", (void*)godot_icall_SphereShape_get_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpinBox_set_align_e83a8d0a", (void*)godot_icall_SpinBox_set_align_e83a8d0a},
	{"Godot.NativeCalls::godot_icall_SpinBox_get_align_3e41aa45", (void*)godot_icall_SpinBox_get_align_3e41aa45},
	{"Godot.NativeCalls::godot_icall_SpinBox_set_suffix_6964ff3e", (void*)godot_icall_SpinBox_set_suffix_6964ff3e},
	{"Godot.NativeCalls::godot_icall_SpinBox_get_suffix_97be4a2e", (void*)godot_icall_SpinBox_get_suffix_97be4a2e},
	{"Godot.NativeCalls::godot_icall_SpinBox_set_prefix_3ca14953", (void*)godot_icall_SpinBox_set_prefix_3ca14953},
	{"Godot.NativeCalls::godot_icall_SpinBox_get_prefix_97be4a2e", (void*)godot_icall_SpinBox_get_prefix_97be4a2e},
	{"Godot.NativeCalls::godot_icall_SpinBox_set_editable_ba24800b", (void*)godot_icall_SpinBox_set_editable_ba24800b},
	{"Godot.NativeCalls::godot_icall_SpinBox_is_editable_68fe5f59", (void*)godot_icall_SpinBox_is_editable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SpinBox_apply_c8e54a7b", (void*)godot_icall_SpinBox_apply_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_SpinBox_get_line_edit_3297ede3", (void*)godot_icall_SpinBox_get_line_edit_3297ede3},
	{"Godot.NativeCalls::godot_icall_SplitContainer_set_split_offset_e1ae93bc", (void*)godot_icall_SplitContainer_set_split_offset_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_SplitContainer_get_split_offset_1f886eb0", (void*)godot_icall_SplitContainer_get_split_offset_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SplitContainer_clamp_split_offset_c8e54a7b", (void*)godot_icall_SplitContainer_clamp_split_offset_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_SplitContainer_set_collapsed_ba24800b", (void*)godot_icall_SplitContainer_set_collapsed_ba24800b},
	{"Godot.NativeCalls::godot_icall_SplitContainer_is_collapsed_68fe5f59", (void*)godot_icall_SplitContainer_is_collapsed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SplitContainer_set_dragger_visibility_939602ae", (void*)godot_icall_SplitContainer_set_dragger_visibility_939602ae},
	{"Godot.NativeCalls::godot_icall_SplitContainer_get_dragger_visibility_bceaa729", (void*)godot_icall_SplitContainer_get_dragger_visibility_bceaa729},
	{"Godot.NativeCalls::godot_icall_SpringArm_get_hit_length_4edcd7a9", (void*)godot_icall_SpringArm_get_hit_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpringArm_set_length_904508bb", (void*)godot_icall_SpringArm_set_length_904508bb},
	{"Godot.NativeCalls::godot_icall_SpringArm_get_length_4edcd7a9", (void*)godot_icall_SpringArm_get_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpringArm_set_shape_f51cd014", (void*)godot_icall_SpringArm_set_shape_f51cd014},
	{"Godot.NativeCalls::godot_icall_SpringArm_get_shape_34362f58", (void*)godot_icall_SpringArm_get_shape_34362f58},
	{"Godot.NativeCalls::godot_icall_SpringArm_add_excluded_object_a7039b4e", (void*)godot_icall_SpringArm_add_excluded_object_a7039b4e},
	{"Godot.NativeCalls::godot_icall_SpringArm_remove_excluded_object_36cc12b4", (void*)godot_icall_SpringArm_remove_excluded_object_36cc12b4},
	{"Godot.NativeCalls::godot_icall_SpringArm_clear_excluded_objects_c8e54a7b", (void*)godot_icall_SpringArm_clear_excluded_objects_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_SpringArm_set_collision_mask_966aab97", (void*)godot_icall_SpringArm_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_SpringArm_get_collision_mask_54cc76d5", (void*)godot_icall_SpringArm_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_SpringArm_set_margin_904508bb", (void*)godot_icall_SpringArm_set_margin_904508bb},
	{"Godot.NativeCalls::godot_icall_SpringArm_get_margin_4edcd7a9", (void*)godot_icall_SpringArm_get_margin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Sprite_set_texture_7eecd31a", (void*)godot_icall_Sprite_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_Sprite_get_texture_ac462e4a", (void*)godot_icall_Sprite_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_Sprite_set_normal_map_7eecd31a", (void*)godot_icall_Sprite_set_normal_map_7eecd31a},
	{"Godot.NativeCalls::godot_icall_Sprite_get_normal_map_ac462e4a", (void*)godot_icall_Sprite_get_normal_map_ac462e4a},
	{"Godot.NativeCalls::godot_icall_Sprite_set_centered_ba24800b", (void*)godot_icall_Sprite_set_centered_ba24800b},
	{"Godot.NativeCalls::godot_icall_Sprite_is_centered_68fe5f59", (void*)godot_icall_Sprite_is_centered_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Sprite_set_offset_6df7471e", (void*)godot_icall_Sprite_set_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_Sprite_get_offset_9b4ea24e", (void*)godot_icall_Sprite_get_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Sprite_set_flip_h_ba24800b", (void*)godot_icall_Sprite_set_flip_h_ba24800b},
	{"Godot.NativeCalls::godot_icall_Sprite_is_flipped_h_68fe5f59", (void*)godot_icall_Sprite_is_flipped_h_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Sprite_set_flip_v_ba24800b", (void*)godot_icall_Sprite_set_flip_v_ba24800b},
	{"Godot.NativeCalls::godot_icall_Sprite_is_flipped_v_68fe5f59", (void*)godot_icall_Sprite_is_flipped_v_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Sprite_set_region_ba24800b", (void*)godot_icall_Sprite_set_region_ba24800b},
	{"Godot.NativeCalls::godot_icall_Sprite_is_region_68fe5f59", (void*)godot_icall_Sprite_is_region_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Sprite_is_pixel_opaque_fba3d544", (void*)godot_icall_Sprite_is_pixel_opaque_fba3d544},
	{"Godot.NativeCalls::godot_icall_Sprite_set_region_rect_a5ed61f1", (void*)godot_icall_Sprite_set_region_rect_a5ed61f1},
	{"Godot.NativeCalls::godot_icall_Sprite_get_region_rect_6344c073", (void*)godot_icall_Sprite_get_region_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_Sprite_set_region_filter_clip_ba24800b", (void*)godot_icall_Sprite_set_region_filter_clip_ba24800b},
	{"Godot.NativeCalls::godot_icall_Sprite_is_region_filter_clip_enabled_68fe5f59", (void*)godot_icall_Sprite_is_region_filter_clip_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Sprite_set_frame_e1ae93bc", (void*)godot_icall_Sprite_set_frame_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Sprite_get_frame_1f886eb0", (void*)godot_icall_Sprite_get_frame_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Sprite_set_frame_coords_6df7471e", (void*)godot_icall_Sprite_set_frame_coords_6df7471e},
	{"Godot.NativeCalls::godot_icall_Sprite_get_frame_coords_9b4ea24e", (void*)godot_icall_Sprite_get_frame_coords_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Sprite_set_vframes_e1ae93bc", (void*)godot_icall_Sprite_set_vframes_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Sprite_get_vframes_1f886eb0", (void*)godot_icall_Sprite_get_vframes_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Sprite_set_hframes_e1ae93bc", (void*)godot_icall_Sprite_set_hframes_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Sprite_get_hframes_1f886eb0", (void*)godot_icall_Sprite_get_hframes_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Sprite_get_rect_6344c073", (void*)godot_icall_Sprite_get_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_Sprite3D_set_texture_7eecd31a", (void*)godot_icall_Sprite3D_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_Sprite3D_get_texture_ac462e4a", (void*)godot_icall_Sprite3D_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_Sprite3D_set_region_ba24800b", (void*)godot_icall_Sprite3D_set_region_ba24800b},
	{"Godot.NativeCalls::godot_icall_Sprite3D_is_region_68fe5f59", (void*)godot_icall_Sprite3D_is_region_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Sprite3D_set_region_rect_a5ed61f1", (void*)godot_icall_Sprite3D_set_region_rect_a5ed61f1},
	{"Godot.NativeCalls::godot_icall_Sprite3D_get_region_rect_6344c073", (void*)godot_icall_Sprite3D_get_region_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_Sprite3D_set_frame_e1ae93bc", (void*)godot_icall_Sprite3D_set_frame_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Sprite3D_get_frame_1f886eb0", (void*)godot_icall_Sprite3D_get_frame_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Sprite3D_set_frame_coords_6df7471e", (void*)godot_icall_Sprite3D_set_frame_coords_6df7471e},
	{"Godot.NativeCalls::godot_icall_Sprite3D_get_frame_coords_9b4ea24e", (void*)godot_icall_Sprite3D_get_frame_coords_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Sprite3D_set_vframes_e1ae93bc", (void*)godot_icall_Sprite3D_set_vframes_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Sprite3D_get_vframes_1f886eb0", (void*)godot_icall_Sprite3D_get_vframes_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Sprite3D_set_hframes_e1ae93bc", (void*)godot_icall_Sprite3D_set_hframes_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Sprite3D_get_hframes_1f886eb0", (void*)godot_icall_Sprite3D_get_hframes_1f886eb0},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_set_centered_ba24800b", (void*)godot_icall_SpriteBase3D_set_centered_ba24800b},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_is_centered_68fe5f59", (void*)godot_icall_SpriteBase3D_is_centered_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_set_offset_6df7471e", (void*)godot_icall_SpriteBase3D_set_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_get_offset_9b4ea24e", (void*)godot_icall_SpriteBase3D_get_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_set_flip_h_ba24800b", (void*)godot_icall_SpriteBase3D_set_flip_h_ba24800b},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_is_flipped_h_68fe5f59", (void*)godot_icall_SpriteBase3D_is_flipped_h_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_set_flip_v_ba24800b", (void*)godot_icall_SpriteBase3D_set_flip_v_ba24800b},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_is_flipped_v_68fe5f59", (void*)godot_icall_SpriteBase3D_is_flipped_v_68fe5f59},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_set_modulate_f2e3b5aa", (void*)godot_icall_SpriteBase3D_set_modulate_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_get_modulate_304394ba", (void*)godot_icall_SpriteBase3D_get_modulate_304394ba},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_set_opacity_904508bb", (void*)godot_icall_SpriteBase3D_set_opacity_904508bb},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_get_opacity_4edcd7a9", (void*)godot_icall_SpriteBase3D_get_opacity_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_set_pixel_size_904508bb", (void*)godot_icall_SpriteBase3D_set_pixel_size_904508bb},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_get_pixel_size_4edcd7a9", (void*)godot_icall_SpriteBase3D_get_pixel_size_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_set_axis_90db7b14", (void*)godot_icall_SpriteBase3D_set_axis_90db7b14},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_get_axis_4e7ac658", (void*)godot_icall_SpriteBase3D_get_axis_4e7ac658},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_set_draw_flag_d1f8608b", (void*)godot_icall_SpriteBase3D_set_draw_flag_d1f8608b},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_get_draw_flag_cdf2e5e1", (void*)godot_icall_SpriteBase3D_get_draw_flag_cdf2e5e1},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_set_alpha_cut_mode_29e715b5", (void*)godot_icall_SpriteBase3D_set_alpha_cut_mode_29e715b5},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_get_alpha_cut_mode_d73ef4b7", (void*)godot_icall_SpriteBase3D_get_alpha_cut_mode_d73ef4b7},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_set_billboard_mode_20a3461a", (void*)godot_icall_SpriteBase3D_set_billboard_mode_20a3461a},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_get_billboard_mode_de82a14a", (void*)godot_icall_SpriteBase3D_get_billboard_mode_de82a14a},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_get_item_rect_6344c073", (void*)godot_icall_SpriteBase3D_get_item_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_SpriteBase3D_generate_triangle_mesh_c1c0bb02", (void*)godot_icall_SpriteBase3D_generate_triangle_mesh_c1c0bb02},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_add_animation_2f29e819", (void*)godot_icall_SpriteFrames_add_animation_2f29e819},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_has_animation_bee64043", (void*)godot_icall_SpriteFrames_has_animation_bee64043},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_remove_animation_2f29e819", (void*)godot_icall_SpriteFrames_remove_animation_2f29e819},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_rename_animation_7dacd953", (void*)godot_icall_SpriteFrames_rename_animation_7dacd953},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_get_animation_names_4cc8f2a7", (void*)godot_icall_SpriteFrames_get_animation_names_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_set_animation_speed_ec7139b1", (void*)godot_icall_SpriteFrames_set_animation_speed_ec7139b1},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_get_animation_speed_9f10687", (void*)godot_icall_SpriteFrames_get_animation_speed_9f10687},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_set_animation_loop_f253b141", (void*)godot_icall_SpriteFrames_set_animation_loop_f253b141},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_get_animation_loop_bee64043", (void*)godot_icall_SpriteFrames_get_animation_loop_bee64043},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_add_frame_b3412c2d", (void*)godot_icall_SpriteFrames_add_frame_b3412c2d},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_get_frame_count_79b61600", (void*)godot_icall_SpriteFrames_get_frame_count_79b61600},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_get_frame_fd44d69c", (void*)godot_icall_SpriteFrames_get_frame_fd44d69c},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_set_frame_ff84b506", (void*)godot_icall_SpriteFrames_set_frame_ff84b506},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_remove_frame_bb2d80b6", (void*)godot_icall_SpriteFrames_remove_frame_bb2d80b6},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_clear_2f29e819", (void*)godot_icall_SpriteFrames_clear_2f29e819},
	{"Godot.NativeCalls::godot_icall_SpriteFrames_clear_all_c8e54a7b", (void*)godot_icall_SpriteFrames_clear_all_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_SpriteFrames__set_frames_2923a790", (void*)godot_icall_SpriteFrames__set_frames_2923a790},
	{"Godot.NativeCalls::godot_icall_SpriteFrames__get_frames_d80382d4", (void*)godot_icall_SpriteFrames__get_frames_d80382d4},
	{"Godot.NativeCalls::godot_icall_SpriteFrames__set_animations_2923a790", (void*)godot_icall_SpriteFrames__set_animations_2923a790},
	{"Godot.NativeCalls::godot_icall_SpriteFrames__get_animations_d80382d4", (void*)godot_icall_SpriteFrames__get_animations_d80382d4},
	{"Godot.NativeCalls::godot_icall_StaticBody_set_constant_linear_velocity_6df7471d", (void*)godot_icall_StaticBody_set_constant_linear_velocity_6df7471d},
	{"Godot.NativeCalls::godot_icall_StaticBody_set_constant_angular_velocity_6df7471d", (void*)godot_icall_StaticBody_set_constant_angular_velocity_6df7471d},
	{"Godot.NativeCalls::godot_icall_StaticBody_get_constant_linear_velocity_9b4ea24f", (void*)godot_icall_StaticBody_get_constant_linear_velocity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_StaticBody_get_constant_angular_velocity_9b4ea24f", (void*)godot_icall_StaticBody_get_constant_angular_velocity_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_StaticBody_set_physics_material_override_e4d5a435", (void*)godot_icall_StaticBody_set_physics_material_override_e4d5a435},
	{"Godot.NativeCalls::godot_icall_StaticBody_get_physics_material_override_226d8337", (void*)godot_icall_StaticBody_get_physics_material_override_226d8337},
	{"Godot.NativeCalls::godot_icall_StaticBody2D_set_constant_linear_velocity_6df7471e", (void*)godot_icall_StaticBody2D_set_constant_linear_velocity_6df7471e},
	{"Godot.NativeCalls::godot_icall_StaticBody2D_set_constant_angular_velocity_904508bb", (void*)godot_icall_StaticBody2D_set_constant_angular_velocity_904508bb},
	{"Godot.NativeCalls::godot_icall_StaticBody2D_get_constant_linear_velocity_9b4ea24e", (void*)godot_icall_StaticBody2D_get_constant_linear_velocity_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_StaticBody2D_get_constant_angular_velocity_4edcd7a9", (void*)godot_icall_StaticBody2D_get_constant_angular_velocity_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_StaticBody2D_set_physics_material_override_e4d5a435", (void*)godot_icall_StaticBody2D_set_physics_material_override_e4d5a435},
	{"Godot.NativeCalls::godot_icall_StaticBody2D_get_physics_material_override_226d8337", (void*)godot_icall_StaticBody2D_get_physics_material_override_226d8337},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_data_7c32072c", (void*)godot_icall_StreamPeer_put_data_7c32072c},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_partial_data_ade8f6c5", (void*)godot_icall_StreamPeer_put_partial_data_ade8f6c5},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_data_2ca2fcca", (void*)godot_icall_StreamPeer_get_data_2ca2fcca},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_partial_data_2ca2fcca", (void*)godot_icall_StreamPeer_get_partial_data_2ca2fcca},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_available_bytes_1f886eb0", (void*)godot_icall_StreamPeer_get_available_bytes_1f886eb0},
	{"Godot.NativeCalls::godot_icall_StreamPeer_set_big_endian_ba24800b", (void*)godot_icall_StreamPeer_set_big_endian_ba24800b},
	{"Godot.NativeCalls::godot_icall_StreamPeer_is_big_endian_enabled_68fe5f59", (void*)godot_icall_StreamPeer_is_big_endian_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_8_d0aaf02a", (void*)godot_icall_StreamPeer_put_8_d0aaf02a},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_u8_a31c261d", (void*)godot_icall_StreamPeer_put_u8_a31c261d},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_16_6b3fd69f", (void*)godot_icall_StreamPeer_put_16_6b3fd69f},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_u16_2b2eae4", (void*)godot_icall_StreamPeer_put_u16_2b2eae4},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_32_e1ae93bc", (void*)godot_icall_StreamPeer_put_32_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_u32_966aab97", (void*)godot_icall_StreamPeer_put_u32_966aab97},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_64_f9161991", (void*)godot_icall_StreamPeer_put_64_f9161991},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_u64_9d9e6424", (void*)godot_icall_StreamPeer_put_u64_9d9e6424},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_float_904508bb", (void*)godot_icall_StreamPeer_put_float_904508bb},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_double_f96f5126", (void*)godot_icall_StreamPeer_put_double_f96f5126},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_string_3ca14953", (void*)godot_icall_StreamPeer_put_string_3ca14953},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_utf8_string_3ca14953", (void*)godot_icall_StreamPeer_put_utf8_string_3ca14953},
	{"Godot.NativeCalls::godot_icall_StreamPeer_put_var_aff2c475", (void*)godot_icall_StreamPeer_put_var_aff2c475},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_8_e8c4f3a", (void*)godot_icall_StreamPeer_get_8_e8c4f3a},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_u8_6236014f", (void*)godot_icall_StreamPeer_get_u8_6236014f},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_16_9a1731cd", (void*)godot_icall_StreamPeer_get_16_9a1731cd},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_u16_c0943588", (void*)godot_icall_StreamPeer_get_u16_c0943588},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_32_1f886eb0", (void*)godot_icall_StreamPeer_get_32_1f886eb0},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_u32_54cc76d5", (void*)godot_icall_StreamPeer_get_u32_54cc76d5},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_64_282fe8d3", (void*)godot_icall_StreamPeer_get_64_282fe8d3},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_u64_4bb7c348", (void*)godot_icall_StreamPeer_get_u64_4bb7c348},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_float_4edcd7a9", (void*)godot_icall_StreamPeer_get_float_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_double_27c6b046", (void*)godot_icall_StreamPeer_get_double_27c6b046},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_string_44fc4c5a", (void*)godot_icall_StreamPeer_get_string_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_StreamPeer_get_var_f23997c6", (void*)godot_icall_StreamPeer_get_var_f23997c6},
	{"Godot.NativeCalls::godot_icall_StreamPeerBuffer_seek_e1ae93bc", (void*)godot_icall_StreamPeerBuffer_seek_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_StreamPeerBuffer_get_size_1f886eb0", (void*)godot_icall_StreamPeerBuffer_get_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_StreamPeerBuffer_get_position_1f886eb0", (void*)godot_icall_StreamPeerBuffer_get_position_1f886eb0},
	{"Godot.NativeCalls::godot_icall_StreamPeerBuffer_resize_e1ae93bc", (void*)godot_icall_StreamPeerBuffer_resize_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_StreamPeerBuffer_set_data_array_627085c1", (void*)godot_icall_StreamPeerBuffer_set_data_array_627085c1},
	{"Godot.NativeCalls::godot_icall_StreamPeerBuffer_get_data_array_8edaba4", (void*)godot_icall_StreamPeerBuffer_get_data_array_8edaba4},
	{"Godot.NativeCalls::godot_icall_StreamPeerBuffer_clear_c8e54a7b", (void*)godot_icall_StreamPeerBuffer_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_StreamPeerBuffer_duplicate_42e72ff7", (void*)godot_icall_StreamPeerBuffer_duplicate_42e72ff7},
	{"Godot.NativeCalls::godot_icall_StreamPeerSSL_poll_c8e54a7b", (void*)godot_icall_StreamPeerSSL_poll_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_StreamPeerSSL_accept_stream_372072", (void*)godot_icall_StreamPeerSSL_accept_stream_372072},
	{"Godot.NativeCalls::godot_icall_StreamPeerSSL_connect_to_stream_b8532bf8", (void*)godot_icall_StreamPeerSSL_connect_to_stream_b8532bf8},
	{"Godot.NativeCalls::godot_icall_StreamPeerSSL_get_status_56023443", (void*)godot_icall_StreamPeerSSL_get_status_56023443},
	{"Godot.NativeCalls::godot_icall_StreamPeerSSL_disconnect_from_stream_c8e54a7b", (void*)godot_icall_StreamPeerSSL_disconnect_from_stream_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_StreamPeerSSL_set_blocking_handshake_enabled_ba24800b", (void*)godot_icall_StreamPeerSSL_set_blocking_handshake_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_StreamPeerSSL_is_blocking_handshake_enabled_68fe5f59", (void*)godot_icall_StreamPeerSSL_is_blocking_handshake_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_StreamPeerTCP_connect_to_host_79efd067", (void*)godot_icall_StreamPeerTCP_connect_to_host_79efd067},
	{"Godot.NativeCalls::godot_icall_StreamPeerTCP_is_connected_to_host_68fe5f59", (void*)godot_icall_StreamPeerTCP_is_connected_to_host_68fe5f59},
	{"Godot.NativeCalls::godot_icall_StreamPeerTCP_get_status_3d4e458a", (void*)godot_icall_StreamPeerTCP_get_status_3d4e458a},
	{"Godot.NativeCalls::godot_icall_StreamPeerTCP_get_connected_host_97be4a2e", (void*)godot_icall_StreamPeerTCP_get_connected_host_97be4a2e},
	{"Godot.NativeCalls::godot_icall_StreamPeerTCP_get_connected_port_c0943588", (void*)godot_icall_StreamPeerTCP_get_connected_port_c0943588},
	{"Godot.NativeCalls::godot_icall_StreamPeerTCP_disconnect_from_host_c8e54a7b", (void*)godot_icall_StreamPeerTCP_disconnect_from_host_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_StreamPeerTCP_set_no_delay_ba24800b", (void*)godot_icall_StreamPeerTCP_set_no_delay_ba24800b},
	{"Godot.NativeCalls::godot_icall_StreamTexture_load_2660dbb2", (void*)godot_icall_StreamTexture_load_2660dbb2},
	{"Godot.NativeCalls::godot_icall_StreamTexture_get_load_path_97be4a2e", (void*)godot_icall_StreamTexture_get_load_path_97be4a2e},
	{"Godot.NativeCalls::godot_icall_StyleBox_test_mask_d2f95539", (void*)godot_icall_StyleBox_test_mask_d2f95539},
	{"Godot.NativeCalls::godot_icall_StyleBox_set_default_margin_86b3589f", (void*)godot_icall_StyleBox_set_default_margin_86b3589f},
	{"Godot.NativeCalls::godot_icall_StyleBox_get_default_margin_cb96d2bf", (void*)godot_icall_StyleBox_get_default_margin_cb96d2bf},
	{"Godot.NativeCalls::godot_icall_StyleBox_get_margin_cb96d2bf", (void*)godot_icall_StyleBox_get_margin_cb96d2bf},
	{"Godot.NativeCalls::godot_icall_StyleBox_get_minimum_size_9b4ea24e", (void*)godot_icall_StyleBox_get_minimum_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_StyleBox_get_center_size_9b4ea24e", (void*)godot_icall_StyleBox_get_center_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_StyleBox_get_offset_9b4ea24e", (void*)godot_icall_StyleBox_get_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_StyleBox_get_current_item_drawn_da29fc04", (void*)godot_icall_StyleBox_get_current_item_drawn_da29fc04},
	{"Godot.NativeCalls::godot_icall_StyleBox_draw_4b206f31", (void*)godot_icall_StyleBox_draw_4b206f31},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_bg_color_f2e3b5aa", (void*)godot_icall_StyleBoxFlat_set_bg_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_get_bg_color_304394ba", (void*)godot_icall_StyleBoxFlat_get_bg_color_304394ba},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_border_color_f2e3b5aa", (void*)godot_icall_StyleBoxFlat_set_border_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_get_border_color_304394ba", (void*)godot_icall_StyleBoxFlat_get_border_color_304394ba},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_border_width_all_e1ae93bc", (void*)godot_icall_StyleBoxFlat_set_border_width_all_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_get_border_width_min_1f886eb0", (void*)godot_icall_StyleBoxFlat_get_border_width_min_1f886eb0},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_border_width_d167c784", (void*)godot_icall_StyleBoxFlat_set_border_width_d167c784},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_get_border_width_bbd2c228", (void*)godot_icall_StyleBoxFlat_get_border_width_bbd2c228},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_border_blend_ba24800b", (void*)godot_icall_StyleBoxFlat_set_border_blend_ba24800b},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_get_border_blend_68fe5f59", (void*)godot_icall_StyleBoxFlat_get_border_blend_68fe5f59},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_corner_radius_individual_2b70940c", (void*)godot_icall_StyleBoxFlat_set_corner_radius_individual_2b70940c},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_corner_radius_all_e1ae93bc", (void*)godot_icall_StyleBoxFlat_set_corner_radius_all_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_corner_radius_766ac35f", (void*)godot_icall_StyleBoxFlat_set_corner_radius_766ac35f},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_get_corner_radius_b371a287", (void*)godot_icall_StyleBoxFlat_get_corner_radius_b371a287},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_expand_margin_86b3589f", (void*)godot_icall_StyleBoxFlat_set_expand_margin_86b3589f},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_expand_margin_all_904508bb", (void*)godot_icall_StyleBoxFlat_set_expand_margin_all_904508bb},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_expand_margin_individual_1ce1c818", (void*)godot_icall_StyleBoxFlat_set_expand_margin_individual_1ce1c818},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_get_expand_margin_cb96d2bf", (void*)godot_icall_StyleBoxFlat_get_expand_margin_cb96d2bf},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_draw_center_ba24800b", (void*)godot_icall_StyleBoxFlat_set_draw_center_ba24800b},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_is_draw_center_enabled_68fe5f59", (void*)godot_icall_StyleBoxFlat_is_draw_center_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_shadow_color_f2e3b5aa", (void*)godot_icall_StyleBoxFlat_set_shadow_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_get_shadow_color_304394ba", (void*)godot_icall_StyleBoxFlat_get_shadow_color_304394ba},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_shadow_size_e1ae93bc", (void*)godot_icall_StyleBoxFlat_set_shadow_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_get_shadow_size_1f886eb0", (void*)godot_icall_StyleBoxFlat_get_shadow_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_shadow_offset_6df7471e", (void*)godot_icall_StyleBoxFlat_set_shadow_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_get_shadow_offset_9b4ea24e", (void*)godot_icall_StyleBoxFlat_get_shadow_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_anti_aliased_ba24800b", (void*)godot_icall_StyleBoxFlat_set_anti_aliased_ba24800b},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_is_anti_aliased_68fe5f59", (void*)godot_icall_StyleBoxFlat_is_anti_aliased_68fe5f59},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_aa_size_e1ae93bc", (void*)godot_icall_StyleBoxFlat_set_aa_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_get_aa_size_1f886eb0", (void*)godot_icall_StyleBoxFlat_get_aa_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_set_corner_detail_e1ae93bc", (void*)godot_icall_StyleBoxFlat_set_corner_detail_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_StyleBoxFlat_get_corner_detail_1f886eb0", (void*)godot_icall_StyleBoxFlat_get_corner_detail_1f886eb0},
	{"Godot.NativeCalls::godot_icall_StyleBoxLine_set_color_f2e3b5aa", (void*)godot_icall_StyleBoxLine_set_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_StyleBoxLine_get_color_304394ba", (void*)godot_icall_StyleBoxLine_get_color_304394ba},
	{"Godot.NativeCalls::godot_icall_StyleBoxLine_set_thickness_e1ae93bc", (void*)godot_icall_StyleBoxLine_set_thickness_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_StyleBoxLine_get_thickness_1f886eb0", (void*)godot_icall_StyleBoxLine_get_thickness_1f886eb0},
	{"Godot.NativeCalls::godot_icall_StyleBoxLine_set_grow_begin_904508bb", (void*)godot_icall_StyleBoxLine_set_grow_begin_904508bb},
	{"Godot.NativeCalls::godot_icall_StyleBoxLine_get_grow_begin_4edcd7a9", (void*)godot_icall_StyleBoxLine_get_grow_begin_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_StyleBoxLine_set_grow_end_904508bb", (void*)godot_icall_StyleBoxLine_set_grow_end_904508bb},
	{"Godot.NativeCalls::godot_icall_StyleBoxLine_get_grow_end_4edcd7a9", (void*)godot_icall_StyleBoxLine_get_grow_end_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_StyleBoxLine_set_vertical_ba24800b", (void*)godot_icall_StyleBoxLine_set_vertical_ba24800b},
	{"Godot.NativeCalls::godot_icall_StyleBoxLine_is_vertical_68fe5f59", (void*)godot_icall_StyleBoxLine_is_vertical_68fe5f59},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_set_texture_7eecd31a", (void*)godot_icall_StyleBoxTexture_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_get_texture_ac462e4a", (void*)godot_icall_StyleBoxTexture_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_set_normal_map_7eecd31a", (void*)godot_icall_StyleBoxTexture_set_normal_map_7eecd31a},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_get_normal_map_ac462e4a", (void*)godot_icall_StyleBoxTexture_get_normal_map_ac462e4a},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_set_margin_size_86b3589f", (void*)godot_icall_StyleBoxTexture_set_margin_size_86b3589f},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_get_margin_size_cb96d2bf", (void*)godot_icall_StyleBoxTexture_get_margin_size_cb96d2bf},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_set_expand_margin_size_86b3589f", (void*)godot_icall_StyleBoxTexture_set_expand_margin_size_86b3589f},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_set_expand_margin_all_904508bb", (void*)godot_icall_StyleBoxTexture_set_expand_margin_all_904508bb},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_set_expand_margin_individual_1ce1c818", (void*)godot_icall_StyleBoxTexture_set_expand_margin_individual_1ce1c818},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_get_expand_margin_size_cb96d2bf", (void*)godot_icall_StyleBoxTexture_get_expand_margin_size_cb96d2bf},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_set_region_rect_a5ed61f1", (void*)godot_icall_StyleBoxTexture_set_region_rect_a5ed61f1},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_get_region_rect_6344c073", (void*)godot_icall_StyleBoxTexture_get_region_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_set_draw_center_ba24800b", (void*)godot_icall_StyleBoxTexture_set_draw_center_ba24800b},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_is_draw_center_enabled_68fe5f59", (void*)godot_icall_StyleBoxTexture_is_draw_center_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_set_modulate_f2e3b5aa", (void*)godot_icall_StyleBoxTexture_set_modulate_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_get_modulate_304394ba", (void*)godot_icall_StyleBoxTexture_get_modulate_304394ba},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_set_h_axis_stretch_mode_76e9d12f", (void*)godot_icall_StyleBoxTexture_set_h_axis_stretch_mode_76e9d12f},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_get_h_axis_stretch_mode_b449303d", (void*)godot_icall_StyleBoxTexture_get_h_axis_stretch_mode_b449303d},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_set_v_axis_stretch_mode_76e9d12f", (void*)godot_icall_StyleBoxTexture_set_v_axis_stretch_mode_76e9d12f},
	{"Godot.NativeCalls::godot_icall_StyleBoxTexture_get_v_axis_stretch_mode_b449303d", (void*)godot_icall_StyleBoxTexture_get_v_axis_stretch_mode_b449303d},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_begin_f37c6b05", (void*)godot_icall_SurfaceTool_begin_f37c6b05},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_add_vertex_6df7471d", (void*)godot_icall_SurfaceTool_add_vertex_6df7471d},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_add_color_f2e3b5aa", (void*)godot_icall_SurfaceTool_add_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_add_normal_6df7471d", (void*)godot_icall_SurfaceTool_add_normal_6df7471d},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_add_tangent_582036ef", (void*)godot_icall_SurfaceTool_add_tangent_582036ef},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_add_uv_6df7471e", (void*)godot_icall_SurfaceTool_add_uv_6df7471e},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_add_uv2_6df7471e", (void*)godot_icall_SurfaceTool_add_uv2_6df7471e},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_add_bones_6b64efb8", (void*)godot_icall_SurfaceTool_add_bones_6b64efb8},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_add_weights_da080d07", (void*)godot_icall_SurfaceTool_add_weights_da080d07},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_add_smooth_group_ba24800b", (void*)godot_icall_SurfaceTool_add_smooth_group_ba24800b},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_add_triangle_fan_88f248d8", (void*)godot_icall_SurfaceTool_add_triangle_fan_88f248d8},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_add_index_e1ae93bc", (void*)godot_icall_SurfaceTool_add_index_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_index_c8e54a7b", (void*)godot_icall_SurfaceTool_index_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_deindex_c8e54a7b", (void*)godot_icall_SurfaceTool_deindex_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_generate_normals_ba24800b", (void*)godot_icall_SurfaceTool_generate_normals_ba24800b},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_generate_tangents_c8e54a7b", (void*)godot_icall_SurfaceTool_generate_tangents_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_set_material_be2d0ec2", (void*)godot_icall_SurfaceTool_set_material_be2d0ec2},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_clear_c8e54a7b", (void*)godot_icall_SurfaceTool_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_create_from_b225a3ec", (void*)godot_icall_SurfaceTool_create_from_b225a3ec},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_create_from_blend_shape_8016b713", (void*)godot_icall_SurfaceTool_create_from_blend_shape_8016b713},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_append_from_4a00e1a3", (void*)godot_icall_SurfaceTool_append_from_4a00e1a3},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_commit_5ae3e369", (void*)godot_icall_SurfaceTool_commit_5ae3e369},
	{"Godot.NativeCalls::godot_icall_SurfaceTool_commit_to_arrays_d80382d4", (void*)godot_icall_SurfaceTool_commit_to_arrays_d80382d4},
	{"Godot.NativeCalls::godot_icall_TCP_Server_is_connection_available_68fe5f59", (void*)godot_icall_TCP_Server_is_connection_available_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TCP_Server_is_listening_68fe5f59", (void*)godot_icall_TCP_Server_is_listening_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TCP_Server_take_connection_3934ae26", (void*)godot_icall_TCP_Server_take_connection_3934ae26},
	{"Godot.NativeCalls::godot_icall_TCP_Server_stop_c8e54a7b", (void*)godot_icall_TCP_Server_stop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TCP_Server_listen_305edcf2", (void*)godot_icall_TCP_Server_listen_305edcf2},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_tab_count_1f886eb0", (void*)godot_icall_TabContainer_get_tab_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TabContainer_set_current_tab_e1ae93bc", (void*)godot_icall_TabContainer_set_current_tab_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_current_tab_1f886eb0", (void*)godot_icall_TabContainer_get_current_tab_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_previous_tab_1f886eb0", (void*)godot_icall_TabContainer_get_previous_tab_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_current_tab_control_eb752350", (void*)godot_icall_TabContainer_get_current_tab_control_eb752350},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_tab_control_3e93266d", (void*)godot_icall_TabContainer_get_tab_control_3e93266d},
	{"Godot.NativeCalls::godot_icall_TabContainer_set_tab_align_a0f70dc5", (void*)godot_icall_TabContainer_set_tab_align_a0f70dc5},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_tab_align_1c44ef00", (void*)godot_icall_TabContainer_get_tab_align_1c44ef00},
	{"Godot.NativeCalls::godot_icall_TabContainer_set_tabs_visible_ba24800b", (void*)godot_icall_TabContainer_set_tabs_visible_ba24800b},
	{"Godot.NativeCalls::godot_icall_TabContainer_are_tabs_visible_68fe5f59", (void*)godot_icall_TabContainer_are_tabs_visible_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TabContainer_set_tab_title_c1ffd74f", (void*)godot_icall_TabContainer_set_tab_title_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_tab_title_44fc4c5a", (void*)godot_icall_TabContainer_get_tab_title_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_TabContainer_set_tab_icon_f20a84e", (void*)godot_icall_TabContainer_set_tab_icon_f20a84e},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_tab_icon_561b2831", (void*)godot_icall_TabContainer_get_tab_icon_561b2831},
	{"Godot.NativeCalls::godot_icall_TabContainer_set_tab_disabled_4ae8febd", (void*)godot_icall_TabContainer_set_tab_disabled_4ae8febd},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_tab_disabled_7f690926", (void*)godot_icall_TabContainer_get_tab_disabled_7f690926},
	{"Godot.NativeCalls::godot_icall_TabContainer_set_popup_598860a7", (void*)godot_icall_TabContainer_set_popup_598860a7},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_popup_fec44d35", (void*)godot_icall_TabContainer_get_popup_fec44d35},
	{"Godot.NativeCalls::godot_icall_TabContainer_set_drag_to_rearrange_enabled_ba24800b", (void*)godot_icall_TabContainer_set_drag_to_rearrange_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_drag_to_rearrange_enabled_68fe5f59", (void*)godot_icall_TabContainer_get_drag_to_rearrange_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TabContainer_set_tabs_rearrange_group_e1ae93bc", (void*)godot_icall_TabContainer_set_tabs_rearrange_group_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_tabs_rearrange_group_1f886eb0", (void*)godot_icall_TabContainer_get_tabs_rearrange_group_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TabContainer_set_use_hidden_tabs_for_min_size_ba24800b", (void*)godot_icall_TabContainer_set_use_hidden_tabs_for_min_size_ba24800b},
	{"Godot.NativeCalls::godot_icall_TabContainer_get_use_hidden_tabs_for_min_size_68fe5f59", (void*)godot_icall_TabContainer_get_use_hidden_tabs_for_min_size_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tabs_get_tab_count_1f886eb0", (void*)godot_icall_Tabs_get_tab_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Tabs_set_current_tab_e1ae93bc", (void*)godot_icall_Tabs_set_current_tab_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Tabs_get_current_tab_1f886eb0", (void*)godot_icall_Tabs_get_current_tab_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Tabs_set_tab_title_c1ffd74f", (void*)godot_icall_Tabs_set_tab_title_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_Tabs_get_tab_title_44fc4c5a", (void*)godot_icall_Tabs_get_tab_title_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_Tabs_set_tab_icon_f20a84e", (void*)godot_icall_Tabs_set_tab_icon_f20a84e},
	{"Godot.NativeCalls::godot_icall_Tabs_get_tab_icon_561b2831", (void*)godot_icall_Tabs_get_tab_icon_561b2831},
	{"Godot.NativeCalls::godot_icall_Tabs_set_tab_disabled_4ae8febd", (void*)godot_icall_Tabs_set_tab_disabled_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Tabs_get_tab_disabled_7f690926", (void*)godot_icall_Tabs_get_tab_disabled_7f690926},
	{"Godot.NativeCalls::godot_icall_Tabs_remove_tab_e1ae93bc", (void*)godot_icall_Tabs_remove_tab_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Tabs_add_tab_febc050", (void*)godot_icall_Tabs_add_tab_febc050},
	{"Godot.NativeCalls::godot_icall_Tabs_set_tab_align_b3fa70bb", (void*)godot_icall_Tabs_set_tab_align_b3fa70bb},
	{"Godot.NativeCalls::godot_icall_Tabs_get_tab_align_9f426976", (void*)godot_icall_Tabs_get_tab_align_9f426976},
	{"Godot.NativeCalls::godot_icall_Tabs_get_tab_offset_1f886eb0", (void*)godot_icall_Tabs_get_tab_offset_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Tabs_get_offset_buttons_visible_68fe5f59", (void*)godot_icall_Tabs_get_offset_buttons_visible_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tabs_ensure_tab_visible_e1ae93bc", (void*)godot_icall_Tabs_ensure_tab_visible_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Tabs_get_tab_rect_c485f536", (void*)godot_icall_Tabs_get_tab_rect_c485f536},
	{"Godot.NativeCalls::godot_icall_Tabs_move_tab_807eefe4", (void*)godot_icall_Tabs_move_tab_807eefe4},
	{"Godot.NativeCalls::godot_icall_Tabs_set_tab_close_display_policy_62aaf7bf", (void*)godot_icall_Tabs_set_tab_close_display_policy_62aaf7bf},
	{"Godot.NativeCalls::godot_icall_Tabs_get_tab_close_display_policy_a08c52ad", (void*)godot_icall_Tabs_get_tab_close_display_policy_a08c52ad},
	{"Godot.NativeCalls::godot_icall_Tabs_set_scrolling_enabled_ba24800b", (void*)godot_icall_Tabs_set_scrolling_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Tabs_get_scrolling_enabled_68fe5f59", (void*)godot_icall_Tabs_get_scrolling_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tabs_set_drag_to_rearrange_enabled_ba24800b", (void*)godot_icall_Tabs_set_drag_to_rearrange_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_Tabs_get_drag_to_rearrange_enabled_68fe5f59", (void*)godot_icall_Tabs_get_drag_to_rearrange_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tabs_set_tabs_rearrange_group_e1ae93bc", (void*)godot_icall_Tabs_set_tabs_rearrange_group_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Tabs_get_tabs_rearrange_group_1f886eb0", (void*)godot_icall_Tabs_get_tabs_rearrange_group_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Tabs_set_select_with_rmb_ba24800b", (void*)godot_icall_Tabs_set_select_with_rmb_ba24800b},
	{"Godot.NativeCalls::godot_icall_Tabs_get_select_with_rmb_68fe5f59", (void*)godot_icall_Tabs_get_select_with_rmb_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_text_3ca14953", (void*)godot_icall_TextEdit_set_text_3ca14953},
	{"Godot.NativeCalls::godot_icall_TextEdit_insert_text_at_cursor_3ca14953", (void*)godot_icall_TextEdit_insert_text_at_cursor_3ca14953},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_line_count_1f886eb0", (void*)godot_icall_TextEdit_get_line_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_text_97be4a2e", (void*)godot_icall_TextEdit_get_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_line_44fc4c5a", (void*)godot_icall_TextEdit_get_line_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_TextEdit_center_viewport_to_cursor_c8e54a7b", (void*)godot_icall_TextEdit_center_viewport_to_cursor_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_cursor_set_column_4ae8febd", (void*)godot_icall_TextEdit_cursor_set_column_4ae8febd},
	{"Godot.NativeCalls::godot_icall_TextEdit_cursor_set_line_9f853a4", (void*)godot_icall_TextEdit_cursor_set_line_9f853a4},
	{"Godot.NativeCalls::godot_icall_TextEdit_cursor_get_column_1f886eb0", (void*)godot_icall_TextEdit_cursor_get_column_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TextEdit_cursor_get_line_1f886eb0", (void*)godot_icall_TextEdit_cursor_get_line_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TextEdit_cursor_set_blink_enabled_ba24800b", (void*)godot_icall_TextEdit_cursor_set_blink_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_cursor_get_blink_enabled_68fe5f59", (void*)godot_icall_TextEdit_cursor_get_blink_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_cursor_set_blink_speed_904508bb", (void*)godot_icall_TextEdit_cursor_set_blink_speed_904508bb},
	{"Godot.NativeCalls::godot_icall_TextEdit_cursor_get_blink_speed_4edcd7a9", (void*)godot_icall_TextEdit_cursor_get_blink_speed_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_TextEdit_cursor_set_block_mode_ba24800b", (void*)godot_icall_TextEdit_cursor_set_block_mode_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_cursor_is_block_mode_68fe5f59", (void*)godot_icall_TextEdit_cursor_is_block_mode_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_right_click_moves_caret_ba24800b", (void*)godot_icall_TextEdit_set_right_click_moves_caret_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_right_click_moving_caret_68fe5f59", (void*)godot_icall_TextEdit_is_right_click_moving_caret_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_readonly_ba24800b", (void*)godot_icall_TextEdit_set_readonly_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_readonly_68fe5f59", (void*)godot_icall_TextEdit_is_readonly_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_wrap_enabled_ba24800b", (void*)godot_icall_TextEdit_set_wrap_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_wrap_enabled_68fe5f59", (void*)godot_icall_TextEdit_is_wrap_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_context_menu_enabled_ba24800b", (void*)godot_icall_TextEdit_set_context_menu_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_context_menu_enabled_68fe5f59", (void*)godot_icall_TextEdit_is_context_menu_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_shortcut_keys_enabled_ba24800b", (void*)godot_icall_TextEdit_set_shortcut_keys_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_shortcut_keys_enabled_68fe5f59", (void*)godot_icall_TextEdit_is_shortcut_keys_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_selecting_enabled_ba24800b", (void*)godot_icall_TextEdit_set_selecting_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_selecting_enabled_68fe5f59", (void*)godot_icall_TextEdit_is_selecting_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_cut_c8e54a7b", (void*)godot_icall_TextEdit_cut_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_copy_c8e54a7b", (void*)godot_icall_TextEdit_copy_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_paste_c8e54a7b", (void*)godot_icall_TextEdit_paste_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_select_2b70940c", (void*)godot_icall_TextEdit_select_2b70940c},
	{"Godot.NativeCalls::godot_icall_TextEdit_select_all_c8e54a7b", (void*)godot_icall_TextEdit_select_all_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_deselect_c8e54a7b", (void*)godot_icall_TextEdit_deselect_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_selection_active_68fe5f59", (void*)godot_icall_TextEdit_is_selection_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_selection_from_line_1f886eb0", (void*)godot_icall_TextEdit_get_selection_from_line_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_selection_from_column_1f886eb0", (void*)godot_icall_TextEdit_get_selection_from_column_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_selection_to_line_1f886eb0", (void*)godot_icall_TextEdit_get_selection_to_line_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_selection_to_column_1f886eb0", (void*)godot_icall_TextEdit_get_selection_to_column_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_selection_text_97be4a2e", (void*)godot_icall_TextEdit_get_selection_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_word_under_cursor_97be4a2e", (void*)godot_icall_TextEdit_get_word_under_cursor_97be4a2e},
	{"Godot.NativeCalls::godot_icall_TextEdit_search_828871db", (void*)godot_icall_TextEdit_search_828871db},
	{"Godot.NativeCalls::godot_icall_TextEdit_undo_c8e54a7b", (void*)godot_icall_TextEdit_undo_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_redo_c8e54a7b", (void*)godot_icall_TextEdit_redo_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_clear_undo_history_c8e54a7b", (void*)godot_icall_TextEdit_clear_undo_history_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_show_line_numbers_ba24800b", (void*)godot_icall_TextEdit_set_show_line_numbers_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_show_line_numbers_enabled_68fe5f59", (void*)godot_icall_TextEdit_is_show_line_numbers_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_draw_tabs_ba24800b", (void*)godot_icall_TextEdit_set_draw_tabs_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_drawing_tabs_68fe5f59", (void*)godot_icall_TextEdit_is_drawing_tabs_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_draw_spaces_ba24800b", (void*)godot_icall_TextEdit_set_draw_spaces_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_drawing_spaces_68fe5f59", (void*)godot_icall_TextEdit_is_drawing_spaces_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_breakpoint_gutter_enabled_ba24800b", (void*)godot_icall_TextEdit_set_breakpoint_gutter_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_breakpoint_gutter_enabled_68fe5f59", (void*)godot_icall_TextEdit_is_breakpoint_gutter_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_draw_fold_gutter_ba24800b", (void*)godot_icall_TextEdit_set_draw_fold_gutter_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_drawing_fold_gutter_68fe5f59", (void*)godot_icall_TextEdit_is_drawing_fold_gutter_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_hiding_enabled_ba24800b", (void*)godot_icall_TextEdit_set_hiding_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_hiding_enabled_68fe5f59", (void*)godot_icall_TextEdit_is_hiding_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_line_as_hidden_4ae8febd", (void*)godot_icall_TextEdit_set_line_as_hidden_4ae8febd},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_line_hidden_7f690926", (void*)godot_icall_TextEdit_is_line_hidden_7f690926},
	{"Godot.NativeCalls::godot_icall_TextEdit_fold_all_lines_c8e54a7b", (void*)godot_icall_TextEdit_fold_all_lines_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_unhide_all_lines_c8e54a7b", (void*)godot_icall_TextEdit_unhide_all_lines_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_fold_line_e1ae93bc", (void*)godot_icall_TextEdit_fold_line_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TextEdit_unfold_line_e1ae93bc", (void*)godot_icall_TextEdit_unfold_line_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TextEdit_toggle_fold_line_e1ae93bc", (void*)godot_icall_TextEdit_toggle_fold_line_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TextEdit_can_fold_7f690926", (void*)godot_icall_TextEdit_can_fold_7f690926},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_folded_7f690926", (void*)godot_icall_TextEdit_is_folded_7f690926},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_highlight_all_occurrences_ba24800b", (void*)godot_icall_TextEdit_set_highlight_all_occurrences_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_highlight_all_occurrences_enabled_68fe5f59", (void*)godot_icall_TextEdit_is_highlight_all_occurrences_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_override_selected_font_color_ba24800b", (void*)godot_icall_TextEdit_set_override_selected_font_color_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_overriding_selected_font_color_68fe5f59", (void*)godot_icall_TextEdit_is_overriding_selected_font_color_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_syntax_coloring_ba24800b", (void*)godot_icall_TextEdit_set_syntax_coloring_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_syntax_coloring_enabled_68fe5f59", (void*)godot_icall_TextEdit_is_syntax_coloring_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_highlight_current_line_ba24800b", (void*)godot_icall_TextEdit_set_highlight_current_line_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_highlight_current_line_enabled_68fe5f59", (void*)godot_icall_TextEdit_is_highlight_current_line_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_smooth_scroll_enable_ba24800b", (void*)godot_icall_TextEdit_set_smooth_scroll_enable_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_smooth_scroll_enabled_68fe5f59", (void*)godot_icall_TextEdit_is_smooth_scroll_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_v_scroll_speed_904508bb", (void*)godot_icall_TextEdit_set_v_scroll_speed_904508bb},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_v_scroll_speed_4edcd7a9", (void*)godot_icall_TextEdit_get_v_scroll_speed_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_v_scroll_f96f5126", (void*)godot_icall_TextEdit_set_v_scroll_f96f5126},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_v_scroll_27c6b046", (void*)godot_icall_TextEdit_get_v_scroll_27c6b046},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_h_scroll_e1ae93bc", (void*)godot_icall_TextEdit_set_h_scroll_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_h_scroll_1f886eb0", (void*)godot_icall_TextEdit_get_h_scroll_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TextEdit_add_keyword_color_3954fcd4", (void*)godot_icall_TextEdit_add_keyword_color_3954fcd4},
	{"Godot.NativeCalls::godot_icall_TextEdit_has_keyword_color_8a7120b9", (void*)godot_icall_TextEdit_has_keyword_color_8a7120b9},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_keyword_color_95edb1c2", (void*)godot_icall_TextEdit_get_keyword_color_95edb1c2},
	{"Godot.NativeCalls::godot_icall_TextEdit_add_color_region_70ae3823", (void*)godot_icall_TextEdit_add_color_region_70ae3823},
	{"Godot.NativeCalls::godot_icall_TextEdit_clear_colors_c8e54a7b", (void*)godot_icall_TextEdit_clear_colors_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_menu_option_e1ae93bc", (void*)godot_icall_TextEdit_menu_option_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_menu_d0a780e0", (void*)godot_icall_TextEdit_get_menu_d0a780e0},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_breakpoints_d80382d4", (void*)godot_icall_TextEdit_get_breakpoints_d80382d4},
	{"Godot.NativeCalls::godot_icall_TextEdit_remove_breakpoints_c8e54a7b", (void*)godot_icall_TextEdit_remove_breakpoints_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_draw_minimap_ba24800b", (void*)godot_icall_TextEdit_set_draw_minimap_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextEdit_is_drawing_minimap_68fe5f59", (void*)godot_icall_TextEdit_is_drawing_minimap_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextEdit_set_minimap_width_e1ae93bc", (void*)godot_icall_TextEdit_set_minimap_width_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TextEdit_get_minimap_width_1f886eb0", (void*)godot_icall_TextEdit_get_minimap_width_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Texture_get_width_1f886eb0", (void*)godot_icall_Texture_get_width_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Texture_get_height_1f886eb0", (void*)godot_icall_Texture_get_height_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Texture_get_size_9b4ea24e", (void*)godot_icall_Texture_get_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Texture_has_alpha_68fe5f59", (void*)godot_icall_Texture_has_alpha_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Texture_set_flags_966aab97", (void*)godot_icall_Texture_set_flags_966aab97},
	{"Godot.NativeCalls::godot_icall_Texture_get_flags_54cc76d5", (void*)godot_icall_Texture_get_flags_54cc76d5},
	{"Godot.NativeCalls::godot_icall_Texture_draw_a53038c6", (void*)godot_icall_Texture_draw_a53038c6},
	{"Godot.NativeCalls::godot_icall_Texture_draw_rect_7aa5210b", (void*)godot_icall_Texture_draw_rect_7aa5210b},
	{"Godot.NativeCalls::godot_icall_Texture_draw_rect_region_62108b19", (void*)godot_icall_Texture_draw_rect_region_62108b19},
	{"Godot.NativeCalls::godot_icall_Texture_get_data_20b1d94c", (void*)godot_icall_Texture_get_data_20b1d94c},
	{"Godot.NativeCalls::godot_icall_TextureButton_set_normal_texture_7eecd31a", (void*)godot_icall_TextureButton_set_normal_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_TextureButton_set_pressed_texture_7eecd31a", (void*)godot_icall_TextureButton_set_pressed_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_TextureButton_set_hover_texture_7eecd31a", (void*)godot_icall_TextureButton_set_hover_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_TextureButton_set_disabled_texture_7eecd31a", (void*)godot_icall_TextureButton_set_disabled_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_TextureButton_set_focused_texture_7eecd31a", (void*)godot_icall_TextureButton_set_focused_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_TextureButton_set_click_mask_bbda8618", (void*)godot_icall_TextureButton_set_click_mask_bbda8618},
	{"Godot.NativeCalls::godot_icall_TextureButton_set_expand_ba24800b", (void*)godot_icall_TextureButton_set_expand_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextureButton_set_stretch_mode_aefc984e", (void*)godot_icall_TextureButton_set_stretch_mode_aefc984e},
	{"Godot.NativeCalls::godot_icall_TextureButton_get_normal_texture_ac462e4a", (void*)godot_icall_TextureButton_get_normal_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_TextureButton_get_pressed_texture_ac462e4a", (void*)godot_icall_TextureButton_get_pressed_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_TextureButton_get_hover_texture_ac462e4a", (void*)godot_icall_TextureButton_get_hover_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_TextureButton_get_disabled_texture_ac462e4a", (void*)godot_icall_TextureButton_get_disabled_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_TextureButton_get_focused_texture_ac462e4a", (void*)godot_icall_TextureButton_get_focused_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_TextureButton_get_click_mask_697c614c", (void*)godot_icall_TextureButton_get_click_mask_697c614c},
	{"Godot.NativeCalls::godot_icall_TextureButton_get_expand_68fe5f59", (void*)godot_icall_TextureButton_get_expand_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextureButton_get_stretch_mode_c86cfcc9", (void*)godot_icall_TextureButton_get_stretch_mode_c86cfcc9},
	{"Godot.NativeCalls::godot_icall_TextureLayered_set_flags_966aab97", (void*)godot_icall_TextureLayered_set_flags_966aab97},
	{"Godot.NativeCalls::godot_icall_TextureLayered_get_flags_54cc76d5", (void*)godot_icall_TextureLayered_get_flags_54cc76d5},
	{"Godot.NativeCalls::godot_icall_TextureLayered_get_format_648eb81f", (void*)godot_icall_TextureLayered_get_format_648eb81f},
	{"Godot.NativeCalls::godot_icall_TextureLayered_get_width_54cc76d5", (void*)godot_icall_TextureLayered_get_width_54cc76d5},
	{"Godot.NativeCalls::godot_icall_TextureLayered_get_height_54cc76d5", (void*)godot_icall_TextureLayered_get_height_54cc76d5},
	{"Godot.NativeCalls::godot_icall_TextureLayered_get_depth_54cc76d5", (void*)godot_icall_TextureLayered_get_depth_54cc76d5},
	{"Godot.NativeCalls::godot_icall_TextureLayered_create_be7361d6", (void*)godot_icall_TextureLayered_create_be7361d6},
	{"Godot.NativeCalls::godot_icall_TextureLayered_set_layer_data_78f77ff7", (void*)godot_icall_TextureLayered_set_layer_data_78f77ff7},
	{"Godot.NativeCalls::godot_icall_TextureLayered_get_layer_data_d2d368f0", (void*)godot_icall_TextureLayered_get_layer_data_d2d368f0},
	{"Godot.NativeCalls::godot_icall_TextureLayered_set_data_partial_72823ad0", (void*)godot_icall_TextureLayered_set_data_partial_72823ad0},
	{"Godot.NativeCalls::godot_icall_TextureLayered__set_data_e472adcf", (void*)godot_icall_TextureLayered__set_data_e472adcf},
	{"Godot.NativeCalls::godot_icall_TextureLayered__get_data_22d47c9d", (void*)godot_icall_TextureLayered__get_data_22d47c9d},
	{"Godot.NativeCalls::godot_icall_TextureProgress_set_under_texture_7eecd31a", (void*)godot_icall_TextureProgress_set_under_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_TextureProgress_get_under_texture_ac462e4a", (void*)godot_icall_TextureProgress_get_under_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_TextureProgress_set_progress_texture_7eecd31a", (void*)godot_icall_TextureProgress_set_progress_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_TextureProgress_get_progress_texture_ac462e4a", (void*)godot_icall_TextureProgress_get_progress_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_TextureProgress_set_over_texture_7eecd31a", (void*)godot_icall_TextureProgress_set_over_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_TextureProgress_get_over_texture_ac462e4a", (void*)godot_icall_TextureProgress_get_over_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_TextureProgress_set_fill_mode_e1ae93bc", (void*)godot_icall_TextureProgress_set_fill_mode_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TextureProgress_get_fill_mode_1f886eb0", (void*)godot_icall_TextureProgress_get_fill_mode_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TextureProgress_set_tint_under_f2e3b5aa", (void*)godot_icall_TextureProgress_set_tint_under_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_TextureProgress_get_tint_under_304394ba", (void*)godot_icall_TextureProgress_get_tint_under_304394ba},
	{"Godot.NativeCalls::godot_icall_TextureProgress_set_tint_progress_f2e3b5aa", (void*)godot_icall_TextureProgress_set_tint_progress_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_TextureProgress_get_tint_progress_304394ba", (void*)godot_icall_TextureProgress_get_tint_progress_304394ba},
	{"Godot.NativeCalls::godot_icall_TextureProgress_set_tint_over_f2e3b5aa", (void*)godot_icall_TextureProgress_set_tint_over_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_TextureProgress_get_tint_over_304394ba", (void*)godot_icall_TextureProgress_get_tint_over_304394ba},
	{"Godot.NativeCalls::godot_icall_TextureProgress_set_radial_initial_angle_904508bb", (void*)godot_icall_TextureProgress_set_radial_initial_angle_904508bb},
	{"Godot.NativeCalls::godot_icall_TextureProgress_get_radial_initial_angle_4edcd7a9", (void*)godot_icall_TextureProgress_get_radial_initial_angle_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_TextureProgress_set_radial_center_offset_6df7471e", (void*)godot_icall_TextureProgress_set_radial_center_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_TextureProgress_get_radial_center_offset_9b4ea24e", (void*)godot_icall_TextureProgress_get_radial_center_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_TextureProgress_set_fill_degrees_904508bb", (void*)godot_icall_TextureProgress_set_fill_degrees_904508bb},
	{"Godot.NativeCalls::godot_icall_TextureProgress_get_fill_degrees_4edcd7a9", (void*)godot_icall_TextureProgress_get_fill_degrees_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_TextureProgress_set_stretch_margin_d167c784", (void*)godot_icall_TextureProgress_set_stretch_margin_d167c784},
	{"Godot.NativeCalls::godot_icall_TextureProgress_get_stretch_margin_bbd2c228", (void*)godot_icall_TextureProgress_get_stretch_margin_bbd2c228},
	{"Godot.NativeCalls::godot_icall_TextureProgress_set_nine_patch_stretch_ba24800b", (void*)godot_icall_TextureProgress_set_nine_patch_stretch_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextureProgress_get_nine_patch_stretch_68fe5f59", (void*)godot_icall_TextureProgress_get_nine_patch_stretch_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextureRect_set_texture_7eecd31a", (void*)godot_icall_TextureRect_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_TextureRect_get_texture_ac462e4a", (void*)godot_icall_TextureRect_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_TextureRect_set_expand_ba24800b", (void*)godot_icall_TextureRect_set_expand_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextureRect_has_expand_68fe5f59", (void*)godot_icall_TextureRect_has_expand_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextureRect_set_flip_h_ba24800b", (void*)godot_icall_TextureRect_set_flip_h_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextureRect_is_flipped_h_68fe5f59", (void*)godot_icall_TextureRect_is_flipped_h_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextureRect_set_flip_v_ba24800b", (void*)godot_icall_TextureRect_set_flip_v_ba24800b},
	{"Godot.NativeCalls::godot_icall_TextureRect_is_flipped_v_68fe5f59", (void*)godot_icall_TextureRect_is_flipped_v_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TextureRect_set_stretch_mode_d1b19090", (void*)godot_icall_TextureRect_set_stretch_mode_d1b19090},
	{"Godot.NativeCalls::godot_icall_TextureRect_get_stretch_mode_8e9a34e3", (void*)godot_icall_TextureRect_get_stretch_mode_8e9a34e3},
	{"Godot.NativeCalls::godot_icall_Theme_set_icon_a8b3ea44", (void*)godot_icall_Theme_set_icon_a8b3ea44},
	{"Godot.NativeCalls::godot_icall_Theme_get_icon_bcfbe107", (void*)godot_icall_Theme_get_icon_bcfbe107},
	{"Godot.NativeCalls::godot_icall_Theme_has_icon_db6c1197", (void*)godot_icall_Theme_has_icon_db6c1197},
	{"Godot.NativeCalls::godot_icall_Theme_clear_icon_7dacd953", (void*)godot_icall_Theme_clear_icon_7dacd953},
	{"Godot.NativeCalls::godot_icall_Theme_get_icon_list_37ac58f7", (void*)godot_icall_Theme_get_icon_list_37ac58f7},
	{"Godot.NativeCalls::godot_icall_Theme_set_stylebox_b8b65953", (void*)godot_icall_Theme_set_stylebox_b8b65953},
	{"Godot.NativeCalls::godot_icall_Theme_get_stylebox_ac08e40f", (void*)godot_icall_Theme_get_stylebox_ac08e40f},
	{"Godot.NativeCalls::godot_icall_Theme_has_stylebox_db6c1197", (void*)godot_icall_Theme_has_stylebox_db6c1197},
	{"Godot.NativeCalls::godot_icall_Theme_clear_stylebox_7dacd953", (void*)godot_icall_Theme_clear_stylebox_7dacd953},
	{"Godot.NativeCalls::godot_icall_Theme_get_stylebox_list_37ac58f7", (void*)godot_icall_Theme_get_stylebox_list_37ac58f7},
	{"Godot.NativeCalls::godot_icall_Theme_get_stylebox_types_4cc8f2a7", (void*)godot_icall_Theme_get_stylebox_types_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_Theme_set_font_3c3c771c", (void*)godot_icall_Theme_set_font_3c3c771c},
	{"Godot.NativeCalls::godot_icall_Theme_get_font_4abe4d7b", (void*)godot_icall_Theme_get_font_4abe4d7b},
	{"Godot.NativeCalls::godot_icall_Theme_has_font_db6c1197", (void*)godot_icall_Theme_has_font_db6c1197},
	{"Godot.NativeCalls::godot_icall_Theme_clear_font_7dacd953", (void*)godot_icall_Theme_clear_font_7dacd953},
	{"Godot.NativeCalls::godot_icall_Theme_get_font_list_37ac58f7", (void*)godot_icall_Theme_get_font_list_37ac58f7},
	{"Godot.NativeCalls::godot_icall_Theme_set_color_24b040d4", (void*)godot_icall_Theme_set_color_24b040d4},
	{"Godot.NativeCalls::godot_icall_Theme_get_color_aa87570e", (void*)godot_icall_Theme_get_color_aa87570e},
	{"Godot.NativeCalls::godot_icall_Theme_has_color_db6c1197", (void*)godot_icall_Theme_has_color_db6c1197},
	{"Godot.NativeCalls::godot_icall_Theme_clear_color_7dacd953", (void*)godot_icall_Theme_clear_color_7dacd953},
	{"Godot.NativeCalls::godot_icall_Theme_get_color_list_37ac58f7", (void*)godot_icall_Theme_get_color_list_37ac58f7},
	{"Godot.NativeCalls::godot_icall_Theme_set_constant_35cdaa2e", (void*)godot_icall_Theme_set_constant_35cdaa2e},
	{"Godot.NativeCalls::godot_icall_Theme_get_constant_7185a084", (void*)godot_icall_Theme_get_constant_7185a084},
	{"Godot.NativeCalls::godot_icall_Theme_has_constant_db6c1197", (void*)godot_icall_Theme_has_constant_db6c1197},
	{"Godot.NativeCalls::godot_icall_Theme_clear_constant_7dacd953", (void*)godot_icall_Theme_clear_constant_7dacd953},
	{"Godot.NativeCalls::godot_icall_Theme_get_constant_list_37ac58f7", (void*)godot_icall_Theme_get_constant_list_37ac58f7},
	{"Godot.NativeCalls::godot_icall_Theme_clear_c8e54a7b", (void*)godot_icall_Theme_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Theme_set_default_font_ea9e5ee2", (void*)godot_icall_Theme_set_default_font_ea9e5ee2},
	{"Godot.NativeCalls::godot_icall_Theme_get_default_font_18b7a982", (void*)godot_icall_Theme_get_default_font_18b7a982},
	{"Godot.NativeCalls::godot_icall_Theme_get_type_list_82ee0a94", (void*)godot_icall_Theme_get_type_list_82ee0a94},
	{"Godot.NativeCalls::godot_icall_Theme_copy_default_theme_c8e54a7b", (void*)godot_icall_Theme_copy_default_theme_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Theme_copy_theme_77a4d7dc", (void*)godot_icall_Theme_copy_theme_77a4d7dc},
	{"Godot.NativeCalls::godot_icall_TileMap_set_tileset_cc0bfa01", (void*)godot_icall_TileMap_set_tileset_cc0bfa01},
	{"Godot.NativeCalls::godot_icall_TileMap_get_tileset_fb2b4563", (void*)godot_icall_TileMap_get_tileset_fb2b4563},
	{"Godot.NativeCalls::godot_icall_TileMap_set_mode_da9f57d4", (void*)godot_icall_TileMap_set_mode_da9f57d4},
	{"Godot.NativeCalls::godot_icall_TileMap_get_mode_1b20b807", (void*)godot_icall_TileMap_get_mode_1b20b807},
	{"Godot.NativeCalls::godot_icall_TileMap_set_half_offset_ec3fb535", (void*)godot_icall_TileMap_set_half_offset_ec3fb535},
	{"Godot.NativeCalls::godot_icall_TileMap_get_half_offset_1b179437", (void*)godot_icall_TileMap_get_half_offset_1b179437},
	{"Godot.NativeCalls::godot_icall_TileMap_set_custom_transform_dfe2915f", (void*)godot_icall_TileMap_set_custom_transform_dfe2915f},
	{"Godot.NativeCalls::godot_icall_TileMap_get_custom_transform_d44700d", (void*)godot_icall_TileMap_get_custom_transform_d44700d},
	{"Godot.NativeCalls::godot_icall_TileMap_set_cell_size_6df7471e", (void*)godot_icall_TileMap_set_cell_size_6df7471e},
	{"Godot.NativeCalls::godot_icall_TileMap_get_cell_size_9b4ea24e", (void*)godot_icall_TileMap_get_cell_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_TileMap_set_quadrant_size_e1ae93bc", (void*)godot_icall_TileMap_set_quadrant_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TileMap_get_quadrant_size_1f886eb0", (void*)godot_icall_TileMap_get_quadrant_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TileMap_set_tile_origin_24d7be65", (void*)godot_icall_TileMap_set_tile_origin_24d7be65},
	{"Godot.NativeCalls::godot_icall_TileMap_get_tile_origin_e26f8907", (void*)godot_icall_TileMap_get_tile_origin_e26f8907},
	{"Godot.NativeCalls::godot_icall_TileMap_set_clip_uv_ba24800b", (void*)godot_icall_TileMap_set_clip_uv_ba24800b},
	{"Godot.NativeCalls::godot_icall_TileMap_get_clip_uv_68fe5f59", (void*)godot_icall_TileMap_get_clip_uv_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TileMap_set_y_sort_mode_ba24800b", (void*)godot_icall_TileMap_set_y_sort_mode_ba24800b},
	{"Godot.NativeCalls::godot_icall_TileMap_is_y_sort_mode_enabled_68fe5f59", (void*)godot_icall_TileMap_is_y_sort_mode_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TileMap_set_compatibility_mode_ba24800b", (void*)godot_icall_TileMap_set_compatibility_mode_ba24800b},
	{"Godot.NativeCalls::godot_icall_TileMap_is_compatibility_mode_enabled_68fe5f59", (void*)godot_icall_TileMap_is_compatibility_mode_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TileMap_set_centered_textures_ba24800b", (void*)godot_icall_TileMap_set_centered_textures_ba24800b},
	{"Godot.NativeCalls::godot_icall_TileMap_is_centered_textures_enabled_68fe5f59", (void*)godot_icall_TileMap_is_centered_textures_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TileMap_set_collision_use_kinematic_ba24800b", (void*)godot_icall_TileMap_set_collision_use_kinematic_ba24800b},
	{"Godot.NativeCalls::godot_icall_TileMap_get_collision_use_kinematic_68fe5f59", (void*)godot_icall_TileMap_get_collision_use_kinematic_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TileMap_set_collision_use_parent_ba24800b", (void*)godot_icall_TileMap_set_collision_use_parent_ba24800b},
	{"Godot.NativeCalls::godot_icall_TileMap_get_collision_use_parent_68fe5f59", (void*)godot_icall_TileMap_get_collision_use_parent_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TileMap_set_collision_layer_966aab97", (void*)godot_icall_TileMap_set_collision_layer_966aab97},
	{"Godot.NativeCalls::godot_icall_TileMap_get_collision_layer_54cc76d5", (void*)godot_icall_TileMap_get_collision_layer_54cc76d5},
	{"Godot.NativeCalls::godot_icall_TileMap_set_collision_mask_966aab97", (void*)godot_icall_TileMap_set_collision_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_TileMap_get_collision_mask_54cc76d5", (void*)godot_icall_TileMap_get_collision_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_TileMap_set_collision_layer_bit_4ae8febd", (void*)godot_icall_TileMap_set_collision_layer_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_TileMap_get_collision_layer_bit_7f690926", (void*)godot_icall_TileMap_get_collision_layer_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_TileMap_set_collision_mask_bit_4ae8febd", (void*)godot_icall_TileMap_set_collision_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_TileMap_get_collision_mask_bit_7f690926", (void*)godot_icall_TileMap_get_collision_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_TileMap_set_collision_friction_904508bb", (void*)godot_icall_TileMap_set_collision_friction_904508bb},
	{"Godot.NativeCalls::godot_icall_TileMap_get_collision_friction_4edcd7a9", (void*)godot_icall_TileMap_get_collision_friction_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_TileMap_set_collision_bounce_904508bb", (void*)godot_icall_TileMap_set_collision_bounce_904508bb},
	{"Godot.NativeCalls::godot_icall_TileMap_get_collision_bounce_4edcd7a9", (void*)godot_icall_TileMap_get_collision_bounce_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_TileMap_set_occluder_light_mask_e1ae93bc", (void*)godot_icall_TileMap_set_occluder_light_mask_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TileMap_get_occluder_light_mask_1f886eb0", (void*)godot_icall_TileMap_get_occluder_light_mask_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TileMap_set_cell_ddae4890", (void*)godot_icall_TileMap_set_cell_ddae4890},
	{"Godot.NativeCalls::godot_icall_TileMap_set_cellv_25f115ce", (void*)godot_icall_TileMap_set_cellv_25f115ce},
	{"Godot.NativeCalls::godot_icall_TileMap_get_cell_4170d7f7", (void*)godot_icall_TileMap_get_cell_4170d7f7},
	{"Godot.NativeCalls::godot_icall_TileMap_get_cellv_3c0b8d03", (void*)godot_icall_TileMap_get_cellv_3c0b8d03},
	{"Godot.NativeCalls::godot_icall_TileMap_is_cell_x_flipped_c8b57d14", (void*)godot_icall_TileMap_is_cell_x_flipped_c8b57d14},
	{"Godot.NativeCalls::godot_icall_TileMap_is_cell_y_flipped_c8b57d14", (void*)godot_icall_TileMap_is_cell_y_flipped_c8b57d14},
	{"Godot.NativeCalls::godot_icall_TileMap_is_cell_transposed_c8b57d14", (void*)godot_icall_TileMap_is_cell_transposed_c8b57d14},
	{"Godot.NativeCalls::godot_icall_TileMap_get_cell_autotile_coord_804c9047", (void*)godot_icall_TileMap_get_cell_autotile_coord_804c9047},
	{"Godot.NativeCalls::godot_icall_TileMap_fix_invalid_tiles_c8e54a7b", (void*)godot_icall_TileMap_fix_invalid_tiles_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TileMap_clear_c8e54a7b", (void*)godot_icall_TileMap_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TileMap_get_used_cells_d80382d4", (void*)godot_icall_TileMap_get_used_cells_d80382d4},
	{"Godot.NativeCalls::godot_icall_TileMap_get_used_cells_by_id_2ca2fcca", (void*)godot_icall_TileMap_get_used_cells_by_id_2ca2fcca},
	{"Godot.NativeCalls::godot_icall_TileMap_get_used_rect_6344c073", (void*)godot_icall_TileMap_get_used_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_TileMap_map_to_world_a90b56f3", (void*)godot_icall_TileMap_map_to_world_a90b56f3},
	{"Godot.NativeCalls::godot_icall_TileMap_world_to_map_af4cfa54", (void*)godot_icall_TileMap_world_to_map_af4cfa54},
	{"Godot.NativeCalls::godot_icall_TileMap_update_dirty_quadrants_c8e54a7b", (void*)godot_icall_TileMap_update_dirty_quadrants_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TileMap_update_bitmask_area_6df7471e", (void*)godot_icall_TileMap_update_bitmask_area_6df7471e},
	{"Godot.NativeCalls::godot_icall_TileMap_update_bitmask_region_bf22f250", (void*)godot_icall_TileMap_update_bitmask_region_bf22f250},
	{"Godot.NativeCalls::godot_icall_TileSet_create_tile_e1ae93bc", (void*)godot_icall_TileSet_create_tile_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_clear_bitmask_map_e1ae93bc", (void*)godot_icall_TileSet_autotile_clear_bitmask_map_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_set_icon_coordinate_3c383c4a", (void*)godot_icall_TileSet_autotile_set_icon_coordinate_3c383c4a},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_get_icon_coordinate_23728632", (void*)godot_icall_TileSet_autotile_get_icon_coordinate_23728632},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_set_subtile_priority_e6e535b1", (void*)godot_icall_TileSet_autotile_set_subtile_priority_e6e535b1},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_get_subtile_priority_cd3ee255", (void*)godot_icall_TileSet_autotile_get_subtile_priority_cd3ee255},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_set_z_index_e6e535b1", (void*)godot_icall_TileSet_autotile_set_z_index_e6e535b1},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_get_z_index_cd3ee255", (void*)godot_icall_TileSet_autotile_get_z_index_cd3ee255},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_set_light_occluder_92cac33f", (void*)godot_icall_TileSet_autotile_set_light_occluder_92cac33f},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_get_light_occluder_ea81765", (void*)godot_icall_TileSet_autotile_get_light_occluder_ea81765},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_set_navigation_polygon_403be5a0", (void*)godot_icall_TileSet_autotile_set_navigation_polygon_403be5a0},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_get_navigation_polygon_ee39918d", (void*)godot_icall_TileSet_autotile_get_navigation_polygon_ee39918d},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_set_bitmask_2c192e6a", (void*)godot_icall_TileSet_autotile_set_bitmask_2c192e6a},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_get_bitmask_57ac7fa2", (void*)godot_icall_TileSet_autotile_get_bitmask_57ac7fa2},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_set_bitmask_mode_fe915cd", (void*)godot_icall_TileSet_autotile_set_bitmask_mode_fe915cd},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_get_bitmask_mode_43628012", (void*)godot_icall_TileSet_autotile_get_bitmask_mode_43628012},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_set_spacing_807eefe4", (void*)godot_icall_TileSet_autotile_set_spacing_807eefe4},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_get_spacing_b835dea5", (void*)godot_icall_TileSet_autotile_get_spacing_b835dea5},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_set_size_3c383c4a", (void*)godot_icall_TileSet_autotile_set_size_3c383c4a},
	{"Godot.NativeCalls::godot_icall_TileSet_autotile_get_size_23728632", (void*)godot_icall_TileSet_autotile_get_size_23728632},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_name_cd663605", (void*)godot_icall_TileSet_tile_set_name_cd663605},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_name_44fc4c5a", (void*)godot_icall_TileSet_tile_get_name_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_texture_f20a84e", (void*)godot_icall_TileSet_tile_set_texture_f20a84e},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_texture_561b2831", (void*)godot_icall_TileSet_tile_get_texture_561b2831},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_normal_map_f20a84e", (void*)godot_icall_TileSet_tile_set_normal_map_f20a84e},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_normal_map_561b2831", (void*)godot_icall_TileSet_tile_get_normal_map_561b2831},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_material_cc3e65d1", (void*)godot_icall_TileSet_tile_set_material_cc3e65d1},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_material_2184bb1f", (void*)godot_icall_TileSet_tile_get_material_2184bb1f},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_modulate_932531de", (void*)godot_icall_TileSet_tile_set_modulate_932531de},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_modulate_eaf668ad", (void*)godot_icall_TileSet_tile_get_modulate_eaf668ad},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_texture_offset_3c383c4a", (void*)godot_icall_TileSet_tile_set_texture_offset_3c383c4a},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_texture_offset_23728632", (void*)godot_icall_TileSet_tile_get_texture_offset_23728632},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_region_44225da7", (void*)godot_icall_TileSet_tile_set_region_44225da7},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_region_c485f536", (void*)godot_icall_TileSet_tile_get_region_c485f536},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_shape_3bf237d8", (void*)godot_icall_TileSet_tile_set_shape_3bf237d8},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_shape_13324318", (void*)godot_icall_TileSet_tile_get_shape_13324318},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_shape_offset_f91f3ee4", (void*)godot_icall_TileSet_tile_set_shape_offset_f91f3ee4},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_shape_offset_804c9047", (void*)godot_icall_TileSet_tile_get_shape_offset_804c9047},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_shape_transform_6b29715b", (void*)godot_icall_TileSet_tile_set_shape_transform_6b29715b},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_shape_transform_80915930", (void*)godot_icall_TileSet_tile_get_shape_transform_80915930},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_shape_one_way_c76f61ef", (void*)godot_icall_TileSet_tile_set_shape_one_way_c76f61ef},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_shape_one_way_c8b57d14", (void*)godot_icall_TileSet_tile_get_shape_one_way_c8b57d14},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_shape_one_way_margin_ac8ee9bf", (void*)godot_icall_TileSet_tile_set_shape_one_way_margin_ac8ee9bf},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_shape_one_way_margin_4da5f18d", (void*)godot_icall_TileSet_tile_get_shape_one_way_margin_4da5f18d},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_add_shape_8d82ab0e", (void*)godot_icall_TileSet_tile_add_shape_8d82ab0e},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_shape_count_b835dea5", (void*)godot_icall_TileSet_tile_get_shape_count_b835dea5},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_shapes_fbe503c0", (void*)godot_icall_TileSet_tile_set_shapes_fbe503c0},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_shapes_2ca2fcca", (void*)godot_icall_TileSet_tile_get_shapes_2ca2fcca},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_tile_mode_18d899c6", (void*)godot_icall_TileSet_tile_set_tile_mode_18d899c6},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_tile_mode_2760cf", (void*)godot_icall_TileSet_tile_get_tile_mode_2760cf},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_navigation_polygon_89b66733", (void*)godot_icall_TileSet_tile_set_navigation_polygon_89b66733},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_navigation_polygon_1ebd3d05", (void*)godot_icall_TileSet_tile_get_navigation_polygon_1ebd3d05},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_navigation_polygon_offset_3c383c4a", (void*)godot_icall_TileSet_tile_set_navigation_polygon_offset_3c383c4a},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_navigation_polygon_offset_23728632", (void*)godot_icall_TileSet_tile_get_navigation_polygon_offset_23728632},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_light_occluder_4a339960", (void*)godot_icall_TileSet_tile_set_light_occluder_4a339960},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_light_occluder_44008982", (void*)godot_icall_TileSet_tile_get_light_occluder_44008982},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_occluder_offset_3c383c4a", (void*)godot_icall_TileSet_tile_set_occluder_offset_3c383c4a},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_occluder_offset_23728632", (void*)godot_icall_TileSet_tile_get_occluder_offset_23728632},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_set_z_index_807eefe4", (void*)godot_icall_TileSet_tile_set_z_index_807eefe4},
	{"Godot.NativeCalls::godot_icall_TileSet_tile_get_z_index_b835dea5", (void*)godot_icall_TileSet_tile_get_z_index_b835dea5},
	{"Godot.NativeCalls::godot_icall_TileSet_remove_tile_e1ae93bc", (void*)godot_icall_TileSet_remove_tile_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TileSet_clear_c8e54a7b", (void*)godot_icall_TileSet_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TileSet_get_last_unused_tile_id_1f886eb0", (void*)godot_icall_TileSet_get_last_unused_tile_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TileSet_find_tile_by_name_6d3db7c6", (void*)godot_icall_TileSet_find_tile_by_name_6d3db7c6},
	{"Godot.NativeCalls::godot_icall_TileSet_get_tiles_ids_d80382d4", (void*)godot_icall_TileSet_get_tiles_ids_d80382d4},
	{"Godot.NativeCalls::godot_icall_Timer_set_wait_time_904508bb", (void*)godot_icall_Timer_set_wait_time_904508bb},
	{"Godot.NativeCalls::godot_icall_Timer_get_wait_time_4edcd7a9", (void*)godot_icall_Timer_get_wait_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Timer_set_one_shot_ba24800b", (void*)godot_icall_Timer_set_one_shot_ba24800b},
	{"Godot.NativeCalls::godot_icall_Timer_is_one_shot_68fe5f59", (void*)godot_icall_Timer_is_one_shot_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Timer_set_autostart_ba24800b", (void*)godot_icall_Timer_set_autostart_ba24800b},
	{"Godot.NativeCalls::godot_icall_Timer_has_autostart_68fe5f59", (void*)godot_icall_Timer_has_autostart_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Timer_start_904508bb", (void*)godot_icall_Timer_start_904508bb},
	{"Godot.NativeCalls::godot_icall_Timer_stop_c8e54a7b", (void*)godot_icall_Timer_stop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Timer_set_paused_ba24800b", (void*)godot_icall_Timer_set_paused_ba24800b},
	{"Godot.NativeCalls::godot_icall_Timer_is_paused_68fe5f59", (void*)godot_icall_Timer_is_paused_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Timer_is_stopped_68fe5f59", (void*)godot_icall_Timer_is_stopped_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Timer_get_time_left_4edcd7a9", (void*)godot_icall_Timer_get_time_left_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Timer_set_timer_process_mode_93342f87", (void*)godot_icall_Timer_set_timer_process_mode_93342f87},
	{"Godot.NativeCalls::godot_icall_Timer_get_timer_process_mode_520dfae5", (void*)godot_icall_Timer_get_timer_process_mode_520dfae5},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_set_texture_7eecd31a", (void*)godot_icall_TouchScreenButton_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_get_texture_ac462e4a", (void*)godot_icall_TouchScreenButton_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_set_texture_pressed_7eecd31a", (void*)godot_icall_TouchScreenButton_set_texture_pressed_7eecd31a},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_get_texture_pressed_ac462e4a", (void*)godot_icall_TouchScreenButton_get_texture_pressed_ac462e4a},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_set_bitmask_bbda8618", (void*)godot_icall_TouchScreenButton_set_bitmask_bbda8618},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_get_bitmask_697c614c", (void*)godot_icall_TouchScreenButton_get_bitmask_697c614c},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_set_shape_2fd85eda", (void*)godot_icall_TouchScreenButton_set_shape_2fd85eda},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_get_shape_dd79a98a", (void*)godot_icall_TouchScreenButton_get_shape_dd79a98a},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_set_shape_centered_ba24800b", (void*)godot_icall_TouchScreenButton_set_shape_centered_ba24800b},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_is_shape_centered_68fe5f59", (void*)godot_icall_TouchScreenButton_is_shape_centered_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_set_shape_visible_ba24800b", (void*)godot_icall_TouchScreenButton_set_shape_visible_ba24800b},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_is_shape_visible_68fe5f59", (void*)godot_icall_TouchScreenButton_is_shape_visible_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_set_action_2f29e819", (void*)godot_icall_TouchScreenButton_set_action_2f29e819},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_get_action_97be4a2e", (void*)godot_icall_TouchScreenButton_get_action_97be4a2e},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_set_visibility_mode_6547695b", (void*)godot_icall_TouchScreenButton_set_visibility_mode_6547695b},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_get_visibility_mode_e2427616", (void*)godot_icall_TouchScreenButton_get_visibility_mode_e2427616},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_set_passby_press_ba24800b", (void*)godot_icall_TouchScreenButton_set_passby_press_ba24800b},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_is_passby_press_enabled_68fe5f59", (void*)godot_icall_TouchScreenButton_is_passby_press_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TouchScreenButton_is_pressed_68fe5f59", (void*)godot_icall_TouchScreenButton_is_pressed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Translation_set_locale_3ca14953", (void*)godot_icall_Translation_set_locale_3ca14953},
	{"Godot.NativeCalls::godot_icall_Translation_get_locale_97be4a2e", (void*)godot_icall_Translation_get_locale_97be4a2e},
	{"Godot.NativeCalls::godot_icall_Translation_add_message_7dacd953", (void*)godot_icall_Translation_add_message_7dacd953},
	{"Godot.NativeCalls::godot_icall_Translation_get_message_67c8521", (void*)godot_icall_Translation_get_message_67c8521},
	{"Godot.NativeCalls::godot_icall_Translation_erase_message_2f29e819", (void*)godot_icall_Translation_erase_message_2f29e819},
	{"Godot.NativeCalls::godot_icall_Translation_get_message_list_4cc8f2a7", (void*)godot_icall_Translation_get_message_list_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_Translation_get_message_count_1f886eb0", (void*)godot_icall_Translation_get_message_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Translation__set_messages_9e6917c5", (void*)godot_icall_Translation__set_messages_9e6917c5},
	{"Godot.NativeCalls::godot_icall_Translation__get_messages_4cc8f2a7", (void*)godot_icall_Translation__get_messages_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall_TranslationServer_set_locale_3ca14953", (void*)godot_icall_TranslationServer_set_locale_3ca14953},
	{"Godot.NativeCalls::godot_icall_TranslationServer_get_locale_97be4a2e", (void*)godot_icall_TranslationServer_get_locale_97be4a2e},
	{"Godot.NativeCalls::godot_icall_TranslationServer_get_locale_name_98465fb", (void*)godot_icall_TranslationServer_get_locale_name_98465fb},
	{"Godot.NativeCalls::godot_icall_TranslationServer_translate_67c8521", (void*)godot_icall_TranslationServer_translate_67c8521},
	{"Godot.NativeCalls::godot_icall_TranslationServer_add_translation_96eab132", (void*)godot_icall_TranslationServer_add_translation_96eab132},
	{"Godot.NativeCalls::godot_icall_TranslationServer_remove_translation_96eab132", (void*)godot_icall_TranslationServer_remove_translation_96eab132},
	{"Godot.NativeCalls::godot_icall_TranslationServer_clear_c8e54a7b", (void*)godot_icall_TranslationServer_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TranslationServer_get_loaded_locales_d80382d4", (void*)godot_icall_TranslationServer_get_loaded_locales_d80382d4},
	{"Godot.NativeCalls::godot_icall_Tree_clear_c8e54a7b", (void*)godot_icall_Tree_clear_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Tree_create_item_daa9ce5e", (void*)godot_icall_Tree_create_item_daa9ce5e},
	{"Godot.NativeCalls::godot_icall_Tree_get_root_cfc68b6c", (void*)godot_icall_Tree_get_root_cfc68b6c},
	{"Godot.NativeCalls::godot_icall_Tree_set_column_min_width_807eefe4", (void*)godot_icall_Tree_set_column_min_width_807eefe4},
	{"Godot.NativeCalls::godot_icall_Tree_set_column_expand_4ae8febd", (void*)godot_icall_Tree_set_column_expand_4ae8febd},
	{"Godot.NativeCalls::godot_icall_Tree_get_column_width_b835dea5", (void*)godot_icall_Tree_get_column_width_b835dea5},
	{"Godot.NativeCalls::godot_icall_Tree_set_hide_root_ba24800b", (void*)godot_icall_Tree_set_hide_root_ba24800b},
	{"Godot.NativeCalls::godot_icall_Tree_is_root_hidden_68fe5f59", (void*)godot_icall_Tree_is_root_hidden_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tree_get_next_selected_d063c4c4", (void*)godot_icall_Tree_get_next_selected_d063c4c4},
	{"Godot.NativeCalls::godot_icall_Tree_get_selected_cfc68b6c", (void*)godot_icall_Tree_get_selected_cfc68b6c},
	{"Godot.NativeCalls::godot_icall_Tree_get_selected_column_1f886eb0", (void*)godot_icall_Tree_get_selected_column_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Tree_get_pressed_button_1f886eb0", (void*)godot_icall_Tree_get_pressed_button_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Tree_set_select_mode_1724f4bc", (void*)godot_icall_Tree_set_select_mode_1724f4bc},
	{"Godot.NativeCalls::godot_icall_Tree_get_select_mode_e177871f", (void*)godot_icall_Tree_get_select_mode_e177871f},
	{"Godot.NativeCalls::godot_icall_Tree_set_columns_e1ae93bc", (void*)godot_icall_Tree_set_columns_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Tree_get_columns_1f886eb0", (void*)godot_icall_Tree_get_columns_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Tree_get_edited_cfc68b6c", (void*)godot_icall_Tree_get_edited_cfc68b6c},
	{"Godot.NativeCalls::godot_icall_Tree_get_edited_column_1f886eb0", (void*)godot_icall_Tree_get_edited_column_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Tree_get_custom_popup_rect_6344c073", (void*)godot_icall_Tree_get_custom_popup_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_Tree_get_item_area_rect_321b8845", (void*)godot_icall_Tree_get_item_area_rect_321b8845},
	{"Godot.NativeCalls::godot_icall_Tree_get_item_at_position_90dc128e", (void*)godot_icall_Tree_get_item_at_position_90dc128e},
	{"Godot.NativeCalls::godot_icall_Tree_get_column_at_position_3c0b8d03", (void*)godot_icall_Tree_get_column_at_position_3c0b8d03},
	{"Godot.NativeCalls::godot_icall_Tree_get_drop_section_at_position_3c0b8d03", (void*)godot_icall_Tree_get_drop_section_at_position_3c0b8d03},
	{"Godot.NativeCalls::godot_icall_Tree_ensure_cursor_is_visible_c8e54a7b", (void*)godot_icall_Tree_ensure_cursor_is_visible_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Tree_set_column_titles_visible_ba24800b", (void*)godot_icall_Tree_set_column_titles_visible_ba24800b},
	{"Godot.NativeCalls::godot_icall_Tree_are_column_titles_visible_68fe5f59", (void*)godot_icall_Tree_are_column_titles_visible_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tree_set_column_title_c1ffd74f", (void*)godot_icall_Tree_set_column_title_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_Tree_get_column_title_44fc4c5a", (void*)godot_icall_Tree_get_column_title_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_Tree_get_scroll_9b4ea24e", (void*)godot_icall_Tree_get_scroll_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Tree_set_hide_folding_ba24800b", (void*)godot_icall_Tree_set_hide_folding_ba24800b},
	{"Godot.NativeCalls::godot_icall_Tree_is_folding_hidden_68fe5f59", (void*)godot_icall_Tree_is_folding_hidden_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tree_set_drop_mode_flags_e1ae93bc", (void*)godot_icall_Tree_set_drop_mode_flags_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Tree_get_drop_mode_flags_1f886eb0", (void*)godot_icall_Tree_get_drop_mode_flags_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Tree_set_allow_rmb_select_ba24800b", (void*)godot_icall_Tree_set_allow_rmb_select_ba24800b},
	{"Godot.NativeCalls::godot_icall_Tree_get_allow_rmb_select_68fe5f59", (void*)godot_icall_Tree_get_allow_rmb_select_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tree_set_allow_reselect_ba24800b", (void*)godot_icall_Tree_set_allow_reselect_ba24800b},
	{"Godot.NativeCalls::godot_icall_Tree_get_allow_reselect_68fe5f59", (void*)godot_icall_Tree_get_allow_reselect_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_cell_mode_ed860e57", (void*)godot_icall_TreeItem_set_cell_mode_ed860e57},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_cell_mode_a1bc8d7a", (void*)godot_icall_TreeItem_get_cell_mode_a1bc8d7a},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_checked_4ae8febd", (void*)godot_icall_TreeItem_set_checked_4ae8febd},
	{"Godot.NativeCalls::godot_icall_TreeItem_is_checked_7f690926", (void*)godot_icall_TreeItem_is_checked_7f690926},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_text_c1ffd74f", (void*)godot_icall_TreeItem_set_text_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_text_44fc4c5a", (void*)godot_icall_TreeItem_get_text_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_icon_f20a84e", (void*)godot_icall_TreeItem_set_icon_f20a84e},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_icon_561b2831", (void*)godot_icall_TreeItem_get_icon_561b2831},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_icon_region_44225da7", (void*)godot_icall_TreeItem_set_icon_region_44225da7},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_icon_region_c485f536", (void*)godot_icall_TreeItem_get_icon_region_c485f536},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_icon_max_width_807eefe4", (void*)godot_icall_TreeItem_set_icon_max_width_807eefe4},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_icon_max_width_b835dea5", (void*)godot_icall_TreeItem_get_icon_max_width_b835dea5},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_icon_modulate_932531de", (void*)godot_icall_TreeItem_set_icon_modulate_932531de},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_icon_modulate_eaf668ad", (void*)godot_icall_TreeItem_get_icon_modulate_eaf668ad},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_range_8ba02e52", (void*)godot_icall_TreeItem_set_range_8ba02e52},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_range_9e9b15bc", (void*)godot_icall_TreeItem_get_range_9e9b15bc},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_range_config_2248655b", (void*)godot_icall_TreeItem_set_range_config_2248655b},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_range_config_5940524d", (void*)godot_icall_TreeItem_get_range_config_5940524d},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_metadata_37bef04", (void*)godot_icall_TreeItem_set_metadata_37bef04},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_metadata_a9b2673d", (void*)godot_icall_TreeItem_get_metadata_a9b2673d},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_custom_draw_ffadd884", (void*)godot_icall_TreeItem_set_custom_draw_ffadd884},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_collapsed_ba24800b", (void*)godot_icall_TreeItem_set_collapsed_ba24800b},
	{"Godot.NativeCalls::godot_icall_TreeItem_is_collapsed_68fe5f59", (void*)godot_icall_TreeItem_is_collapsed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_custom_minimum_height_e1ae93bc", (void*)godot_icall_TreeItem_set_custom_minimum_height_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_custom_minimum_height_1f886eb0", (void*)godot_icall_TreeItem_get_custom_minimum_height_1f886eb0},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_next_cfc68b6c", (void*)godot_icall_TreeItem_get_next_cfc68b6c},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_prev_cfc68b6c", (void*)godot_icall_TreeItem_get_prev_cfc68b6c},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_parent_cfc68b6c", (void*)godot_icall_TreeItem_get_parent_cfc68b6c},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_children_cfc68b6c", (void*)godot_icall_TreeItem_get_children_cfc68b6c},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_next_visible_e30cdd81", (void*)godot_icall_TreeItem_get_next_visible_e30cdd81},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_prev_visible_e30cdd81", (void*)godot_icall_TreeItem_get_prev_visible_e30cdd81},
	{"Godot.NativeCalls::godot_icall_TreeItem_remove_child_ad798950", (void*)godot_icall_TreeItem_remove_child_ad798950},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_selectable_4ae8febd", (void*)godot_icall_TreeItem_set_selectable_4ae8febd},
	{"Godot.NativeCalls::godot_icall_TreeItem_is_selectable_7f690926", (void*)godot_icall_TreeItem_is_selectable_7f690926},
	{"Godot.NativeCalls::godot_icall_TreeItem_is_selected_7f690926", (void*)godot_icall_TreeItem_is_selected_7f690926},
	{"Godot.NativeCalls::godot_icall_TreeItem_select_e1ae93bc", (void*)godot_icall_TreeItem_select_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TreeItem_deselect_e1ae93bc", (void*)godot_icall_TreeItem_deselect_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_editable_4ae8febd", (void*)godot_icall_TreeItem_set_editable_4ae8febd},
	{"Godot.NativeCalls::godot_icall_TreeItem_is_editable_7f690926", (void*)godot_icall_TreeItem_is_editable_7f690926},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_custom_color_932531de", (void*)godot_icall_TreeItem_set_custom_color_932531de},
	{"Godot.NativeCalls::godot_icall_TreeItem_clear_custom_color_e1ae93bc", (void*)godot_icall_TreeItem_clear_custom_color_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_custom_color_eaf668ad", (void*)godot_icall_TreeItem_get_custom_color_eaf668ad},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_custom_bg_color_666eacd7", (void*)godot_icall_TreeItem_set_custom_bg_color_666eacd7},
	{"Godot.NativeCalls::godot_icall_TreeItem_clear_custom_bg_color_e1ae93bc", (void*)godot_icall_TreeItem_clear_custom_bg_color_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_custom_bg_color_eaf668ad", (void*)godot_icall_TreeItem_get_custom_bg_color_eaf668ad},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_custom_as_button_4ae8febd", (void*)godot_icall_TreeItem_set_custom_as_button_4ae8febd},
	{"Godot.NativeCalls::godot_icall_TreeItem_is_custom_set_as_button_7f690926", (void*)godot_icall_TreeItem_is_custom_set_as_button_7f690926},
	{"Godot.NativeCalls::godot_icall_TreeItem_add_button_c0fab81b", (void*)godot_icall_TreeItem_add_button_c0fab81b},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_button_count_b835dea5", (void*)godot_icall_TreeItem_get_button_count_b835dea5},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_button_tooltip_4aee5da5", (void*)godot_icall_TreeItem_get_button_tooltip_4aee5da5},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_button_c0b9684", (void*)godot_icall_TreeItem_get_button_c0b9684},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_button_a27b318", (void*)godot_icall_TreeItem_set_button_a27b318},
	{"Godot.NativeCalls::godot_icall_TreeItem_erase_button_807eefe4", (void*)godot_icall_TreeItem_erase_button_807eefe4},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_button_disabled_c76f61ef", (void*)godot_icall_TreeItem_set_button_disabled_c76f61ef},
	{"Godot.NativeCalls::godot_icall_TreeItem_is_button_disabled_c8b57d14", (void*)godot_icall_TreeItem_is_button_disabled_c8b57d14},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_expand_right_4ae8febd", (void*)godot_icall_TreeItem_set_expand_right_4ae8febd},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_expand_right_7f690926", (void*)godot_icall_TreeItem_get_expand_right_7f690926},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_tooltip_c1ffd74f", (void*)godot_icall_TreeItem_set_tooltip_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_tooltip_44fc4c5a", (void*)godot_icall_TreeItem_get_tooltip_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_text_align_c1b2ee66", (void*)godot_icall_TreeItem_set_text_align_c1b2ee66},
	{"Godot.NativeCalls::godot_icall_TreeItem_get_text_align_b78560c7", (void*)godot_icall_TreeItem_get_text_align_b78560c7},
	{"Godot.NativeCalls::godot_icall_TreeItem_move_to_top_c8e54a7b", (void*)godot_icall_TreeItem_move_to_top_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TreeItem_move_to_bottom_c8e54a7b", (void*)godot_icall_TreeItem_move_to_bottom_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_TreeItem_set_disable_folding_ba24800b", (void*)godot_icall_TreeItem_set_disable_folding_ba24800b},
	{"Godot.NativeCalls::godot_icall_TreeItem_is_folding_disabled_68fe5f59", (void*)godot_icall_TreeItem_is_folding_disabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_TreeItem_call_recursive_a1852e0c", (void*)godot_icall_TreeItem_call_recursive_a1852e0c},
	{"Godot.NativeCalls::godot_icall_Tween_is_active_68fe5f59", (void*)godot_icall_Tween_is_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tween_set_active_ba24800b", (void*)godot_icall_Tween_set_active_ba24800b},
	{"Godot.NativeCalls::godot_icall_Tween_is_repeat_68fe5f59", (void*)godot_icall_Tween_is_repeat_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tween_set_repeat_ba24800b", (void*)godot_icall_Tween_set_repeat_ba24800b},
	{"Godot.NativeCalls::godot_icall_Tween_set_speed_scale_904508bb", (void*)godot_icall_Tween_set_speed_scale_904508bb},
	{"Godot.NativeCalls::godot_icall_Tween_get_speed_scale_4edcd7a9", (void*)godot_icall_Tween_get_speed_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Tween_set_tween_process_mode_2dfc3ab3", (void*)godot_icall_Tween_set_tween_process_mode_2dfc3ab3},
	{"Godot.NativeCalls::godot_icall_Tween_get_tween_process_mode_db5605b1", (void*)godot_icall_Tween_get_tween_process_mode_db5605b1},
	{"Godot.NativeCalls::godot_icall_Tween_start_68fe5f59", (void*)godot_icall_Tween_start_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tween_reset_6b881708", (void*)godot_icall_Tween_reset_6b881708},
	{"Godot.NativeCalls::godot_icall_Tween_reset_all_68fe5f59", (void*)godot_icall_Tween_reset_all_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tween_stop_6b881708", (void*)godot_icall_Tween_stop_6b881708},
	{"Godot.NativeCalls::godot_icall_Tween_stop_all_68fe5f59", (void*)godot_icall_Tween_stop_all_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tween_resume_6b881708", (void*)godot_icall_Tween_resume_6b881708},
	{"Godot.NativeCalls::godot_icall_Tween_resume_all_68fe5f59", (void*)godot_icall_Tween_resume_all_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tween_remove_6b881708", (void*)godot_icall_Tween_remove_6b881708},
	{"Godot.NativeCalls::godot_icall_Tween_remove_all_68fe5f59", (void*)godot_icall_Tween_remove_all_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Tween_seek_2e15e021", (void*)godot_icall_Tween_seek_2e15e021},
	{"Godot.NativeCalls::godot_icall_Tween_tell_4edcd7a9", (void*)godot_icall_Tween_tell_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Tween_get_runtime_4edcd7a9", (void*)godot_icall_Tween_get_runtime_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_Tween_interpolate_property_3170f345", (void*)godot_icall_Tween_interpolate_property_3170f345},
	{"Godot.NativeCalls::godot_icall_Tween_interpolate_method_75b1d34d", (void*)godot_icall_Tween_interpolate_method_75b1d34d},
	{"Godot.NativeCalls::godot_icall_Tween_interpolate_callback_76f1ec4d", (void*)godot_icall_Tween_interpolate_callback_76f1ec4d},
	{"Godot.NativeCalls::godot_icall_Tween_interpolate_deferred_callback_76f1ec4d", (void*)godot_icall_Tween_interpolate_deferred_callback_76f1ec4d},
	{"Godot.NativeCalls::godot_icall_Tween_follow_property_e54614ab", (void*)godot_icall_Tween_follow_property_e54614ab},
	{"Godot.NativeCalls::godot_icall_Tween_follow_method_3753ab0c", (void*)godot_icall_Tween_follow_method_3753ab0c},
	{"Godot.NativeCalls::godot_icall_Tween_targeting_property_15fff0ba", (void*)godot_icall_Tween_targeting_property_15fff0ba},
	{"Godot.NativeCalls::godot_icall_Tween_targeting_method_909d0a9c", (void*)godot_icall_Tween_targeting_method_909d0a9c},
	{"Godot.NativeCalls::godot_icall_UPNP_get_device_count_1f886eb0", (void*)godot_icall_UPNP_get_device_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_UPNP_get_device_6dca64f9", (void*)godot_icall_UPNP_get_device_6dca64f9},
	{"Godot.NativeCalls::godot_icall_UPNP_add_device_88e11eba", (void*)godot_icall_UPNP_add_device_88e11eba},
	{"Godot.NativeCalls::godot_icall_UPNP_set_device_992664ee", (void*)godot_icall_UPNP_set_device_992664ee},
	{"Godot.NativeCalls::godot_icall_UPNP_remove_device_e1ae93bc", (void*)godot_icall_UPNP_remove_device_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_UPNP_clear_devices_c8e54a7b", (void*)godot_icall_UPNP_clear_devices_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_UPNP_get_gateway_3640e9aa", (void*)godot_icall_UPNP_get_gateway_3640e9aa},
	{"Godot.NativeCalls::godot_icall_UPNP_discover_b43a9270", (void*)godot_icall_UPNP_discover_b43a9270},
	{"Godot.NativeCalls::godot_icall_UPNP_query_external_address_97be4a2e", (void*)godot_icall_UPNP_query_external_address_97be4a2e},
	{"Godot.NativeCalls::godot_icall_UPNP_add_port_mapping_3bffc24b", (void*)godot_icall_UPNP_add_port_mapping_3bffc24b},
	{"Godot.NativeCalls::godot_icall_UPNP_delete_port_mapping_7c08ec16", (void*)godot_icall_UPNP_delete_port_mapping_7c08ec16},
	{"Godot.NativeCalls::godot_icall_UPNP_set_discover_multicast_if_3ca14953", (void*)godot_icall_UPNP_set_discover_multicast_if_3ca14953},
	{"Godot.NativeCalls::godot_icall_UPNP_get_discover_multicast_if_97be4a2e", (void*)godot_icall_UPNP_get_discover_multicast_if_97be4a2e},
	{"Godot.NativeCalls::godot_icall_UPNP_set_discover_local_port_e1ae93bc", (void*)godot_icall_UPNP_set_discover_local_port_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_UPNP_get_discover_local_port_1f886eb0", (void*)godot_icall_UPNP_get_discover_local_port_1f886eb0},
	{"Godot.NativeCalls::godot_icall_UPNP_set_discover_ipv6_ba24800b", (void*)godot_icall_UPNP_set_discover_ipv6_ba24800b},
	{"Godot.NativeCalls::godot_icall_UPNP_is_discover_ipv6_68fe5f59", (void*)godot_icall_UPNP_is_discover_ipv6_68fe5f59},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_is_valid_gateway_68fe5f59", (void*)godot_icall_UPNPDevice_is_valid_gateway_68fe5f59},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_query_external_address_97be4a2e", (void*)godot_icall_UPNPDevice_query_external_address_97be4a2e},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_add_port_mapping_3bffc24b", (void*)godot_icall_UPNPDevice_add_port_mapping_3bffc24b},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_delete_port_mapping_7c08ec16", (void*)godot_icall_UPNPDevice_delete_port_mapping_7c08ec16},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_set_description_url_6964ff3e", (void*)godot_icall_UPNPDevice_set_description_url_6964ff3e},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_get_description_url_97be4a2e", (void*)godot_icall_UPNPDevice_get_description_url_97be4a2e},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_set_service_type_6964ff3e", (void*)godot_icall_UPNPDevice_set_service_type_6964ff3e},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_get_service_type_97be4a2e", (void*)godot_icall_UPNPDevice_get_service_type_97be4a2e},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_set_igd_control_url_6964ff3e", (void*)godot_icall_UPNPDevice_set_igd_control_url_6964ff3e},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_get_igd_control_url_97be4a2e", (void*)godot_icall_UPNPDevice_get_igd_control_url_97be4a2e},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_set_igd_service_type_6964ff3e", (void*)godot_icall_UPNPDevice_set_igd_service_type_6964ff3e},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_get_igd_service_type_97be4a2e", (void*)godot_icall_UPNPDevice_get_igd_service_type_97be4a2e},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_set_igd_our_addr_6964ff3e", (void*)godot_icall_UPNPDevice_set_igd_our_addr_6964ff3e},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_get_igd_our_addr_97be4a2e", (void*)godot_icall_UPNPDevice_get_igd_our_addr_97be4a2e},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_set_igd_status_49809a86", (void*)godot_icall_UPNPDevice_set_igd_status_49809a86},
	{"Godot.NativeCalls::godot_icall_UPNPDevice_get_igd_status_77a265e6", (void*)godot_icall_UPNPDevice_get_igd_status_77a265e6},
	{"Godot.NativeCalls::godot_icall_UndoRedo_create_action_2a07168a", (void*)godot_icall_UndoRedo_create_action_2a07168a},
	{"Godot.NativeCalls::godot_icall_UndoRedo_commit_action_c8e54a7b", (void*)godot_icall_UndoRedo_commit_action_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_UndoRedo_is_commiting_action_68fe5f59", (void*)godot_icall_UndoRedo_is_commiting_action_68fe5f59},
	{"Godot.NativeCalls::godot_icall_UndoRedo_add_do_method_a0841b08", (void*)godot_icall_UndoRedo_add_do_method_a0841b08},
	{"Godot.NativeCalls::godot_icall_UndoRedo_add_undo_method_a0841b08", (void*)godot_icall_UndoRedo_add_undo_method_a0841b08},
	{"Godot.NativeCalls::godot_icall_UndoRedo_add_do_property_91d4cdd2", (void*)godot_icall_UndoRedo_add_do_property_91d4cdd2},
	{"Godot.NativeCalls::godot_icall_UndoRedo_add_undo_property_91d4cdd2", (void*)godot_icall_UndoRedo_add_undo_property_91d4cdd2},
	{"Godot.NativeCalls::godot_icall_UndoRedo_add_do_reference_ad798950", (void*)godot_icall_UndoRedo_add_do_reference_ad798950},
	{"Godot.NativeCalls::godot_icall_UndoRedo_add_undo_reference_ad798950", (void*)godot_icall_UndoRedo_add_undo_reference_ad798950},
	{"Godot.NativeCalls::godot_icall_UndoRedo_clear_history_ba24800b", (void*)godot_icall_UndoRedo_clear_history_ba24800b},
	{"Godot.NativeCalls::godot_icall_UndoRedo_get_current_action_name_97be4a2e", (void*)godot_icall_UndoRedo_get_current_action_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_UndoRedo_has_undo_68fe5f59", (void*)godot_icall_UndoRedo_has_undo_68fe5f59},
	{"Godot.NativeCalls::godot_icall_UndoRedo_has_redo_68fe5f59", (void*)godot_icall_UndoRedo_has_redo_68fe5f59},
	{"Godot.NativeCalls::godot_icall_UndoRedo_get_version_4bb7c348", (void*)godot_icall_UndoRedo_get_version_4bb7c348},
	{"Godot.NativeCalls::godot_icall_UndoRedo_redo_68fe5f59", (void*)godot_icall_UndoRedo_redo_68fe5f59},
	{"Godot.NativeCalls::godot_icall_UndoRedo_undo_68fe5f59", (void*)godot_icall_UndoRedo_undo_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VehicleBody_set_engine_force_904508bb", (void*)godot_icall_VehicleBody_set_engine_force_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleBody_get_engine_force_4edcd7a9", (void*)godot_icall_VehicleBody_get_engine_force_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleBody_set_brake_904508bb", (void*)godot_icall_VehicleBody_set_brake_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleBody_get_brake_4edcd7a9", (void*)godot_icall_VehicleBody_get_brake_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleBody_set_steering_904508bb", (void*)godot_icall_VehicleBody_set_steering_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleBody_get_steering_4edcd7a9", (void*)godot_icall_VehicleBody_get_steering_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_radius_904508bb", (void*)godot_icall_VehicleWheel_set_radius_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_radius_4edcd7a9", (void*)godot_icall_VehicleWheel_get_radius_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_suspension_rest_length_904508bb", (void*)godot_icall_VehicleWheel_set_suspension_rest_length_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_suspension_rest_length_4edcd7a9", (void*)godot_icall_VehicleWheel_get_suspension_rest_length_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_suspension_travel_904508bb", (void*)godot_icall_VehicleWheel_set_suspension_travel_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_suspension_travel_4edcd7a9", (void*)godot_icall_VehicleWheel_get_suspension_travel_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_suspension_stiffness_904508bb", (void*)godot_icall_VehicleWheel_set_suspension_stiffness_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_suspension_stiffness_4edcd7a9", (void*)godot_icall_VehicleWheel_get_suspension_stiffness_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_suspension_max_force_904508bb", (void*)godot_icall_VehicleWheel_set_suspension_max_force_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_suspension_max_force_4edcd7a9", (void*)godot_icall_VehicleWheel_get_suspension_max_force_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_damping_compression_904508bb", (void*)godot_icall_VehicleWheel_set_damping_compression_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_damping_compression_4edcd7a9", (void*)godot_icall_VehicleWheel_get_damping_compression_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_damping_relaxation_904508bb", (void*)godot_icall_VehicleWheel_set_damping_relaxation_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_damping_relaxation_4edcd7a9", (void*)godot_icall_VehicleWheel_get_damping_relaxation_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_use_as_traction_ba24800b", (void*)godot_icall_VehicleWheel_set_use_as_traction_ba24800b},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_is_used_as_traction_68fe5f59", (void*)godot_icall_VehicleWheel_is_used_as_traction_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_use_as_steering_ba24800b", (void*)godot_icall_VehicleWheel_set_use_as_steering_ba24800b},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_is_used_as_steering_68fe5f59", (void*)godot_icall_VehicleWheel_is_used_as_steering_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_friction_slip_904508bb", (void*)godot_icall_VehicleWheel_set_friction_slip_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_friction_slip_4edcd7a9", (void*)godot_icall_VehicleWheel_get_friction_slip_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_is_in_contact_68fe5f59", (void*)godot_icall_VehicleWheel_is_in_contact_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_roll_influence_904508bb", (void*)godot_icall_VehicleWheel_set_roll_influence_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_roll_influence_4edcd7a9", (void*)godot_icall_VehicleWheel_get_roll_influence_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_skidinfo_4edcd7a9", (void*)godot_icall_VehicleWheel_get_skidinfo_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_rpm_4edcd7a9", (void*)godot_icall_VehicleWheel_get_rpm_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_engine_force_904508bb", (void*)godot_icall_VehicleWheel_set_engine_force_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_engine_force_4edcd7a9", (void*)godot_icall_VehicleWheel_get_engine_force_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_brake_904508bb", (void*)godot_icall_VehicleWheel_set_brake_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_brake_4edcd7a9", (void*)godot_icall_VehicleWheel_get_brake_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_set_steering_904508bb", (void*)godot_icall_VehicleWheel_set_steering_904508bb},
	{"Godot.NativeCalls::godot_icall_VehicleWheel_get_steering_4edcd7a9", (void*)godot_icall_VehicleWheel_get_steering_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_set_stream_b4bbe12e", (void*)godot_icall_VideoPlayer_set_stream_b4bbe12e},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_get_stream_729b403e", (void*)godot_icall_VideoPlayer_get_stream_729b403e},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_play_c8e54a7b", (void*)godot_icall_VideoPlayer_play_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_stop_c8e54a7b", (void*)godot_icall_VideoPlayer_stop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_is_playing_68fe5f59", (void*)godot_icall_VideoPlayer_is_playing_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_set_paused_ba24800b", (void*)godot_icall_VideoPlayer_set_paused_ba24800b},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_is_paused_68fe5f59", (void*)godot_icall_VideoPlayer_is_paused_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_set_volume_904508bb", (void*)godot_icall_VideoPlayer_set_volume_904508bb},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_get_volume_4edcd7a9", (void*)godot_icall_VideoPlayer_get_volume_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_set_volume_db_904508bb", (void*)godot_icall_VideoPlayer_set_volume_db_904508bb},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_get_volume_db_4edcd7a9", (void*)godot_icall_VideoPlayer_get_volume_db_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_set_audio_track_e1ae93bc", (void*)godot_icall_VideoPlayer_set_audio_track_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_get_audio_track_1f886eb0", (void*)godot_icall_VideoPlayer_get_audio_track_1f886eb0},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_get_stream_name_97be4a2e", (void*)godot_icall_VideoPlayer_get_stream_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_set_stream_position_904508bb", (void*)godot_icall_VideoPlayer_set_stream_position_904508bb},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_get_stream_position_4edcd7a9", (void*)godot_icall_VideoPlayer_get_stream_position_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_set_autoplay_ba24800b", (void*)godot_icall_VideoPlayer_set_autoplay_ba24800b},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_has_autoplay_68fe5f59", (void*)godot_icall_VideoPlayer_has_autoplay_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_set_expand_ba24800b", (void*)godot_icall_VideoPlayer_set_expand_ba24800b},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_has_expand_68fe5f59", (void*)godot_icall_VideoPlayer_has_expand_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_set_buffering_msec_e1ae93bc", (void*)godot_icall_VideoPlayer_set_buffering_msec_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_get_buffering_msec_1f886eb0", (void*)godot_icall_VideoPlayer_get_buffering_msec_1f886eb0},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_set_bus_2f29e819", (void*)godot_icall_VideoPlayer_set_bus_2f29e819},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_get_bus_97be4a2e", (void*)godot_icall_VideoPlayer_get_bus_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VideoPlayer_get_video_texture_ac462e4a", (void*)godot_icall_VideoPlayer_get_video_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_Viewport_set_use_arvr_ba24800b", (void*)godot_icall_Viewport_set_use_arvr_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_use_arvr_68fe5f59", (void*)godot_icall_Viewport_use_arvr_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_size_6df7471e", (void*)godot_icall_Viewport_set_size_6df7471e},
	{"Godot.NativeCalls::godot_icall_Viewport_get_size_9b4ea24e", (void*)godot_icall_Viewport_get_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Viewport_set_world_2d_453eac2b", (void*)godot_icall_Viewport_set_world_2d_453eac2b},
	{"Godot.NativeCalls::godot_icall_Viewport_get_world_2d_84187b39", (void*)godot_icall_Viewport_get_world_2d_84187b39},
	{"Godot.NativeCalls::godot_icall_Viewport_find_world_2d_84187b39", (void*)godot_icall_Viewport_find_world_2d_84187b39},
	{"Godot.NativeCalls::godot_icall_Viewport_set_world_ef1dec5d", (void*)godot_icall_Viewport_set_world_ef1dec5d},
	{"Godot.NativeCalls::godot_icall_Viewport_get_world_1e353b0f", (void*)godot_icall_Viewport_get_world_1e353b0f},
	{"Godot.NativeCalls::godot_icall_Viewport_find_world_1e353b0f", (void*)godot_icall_Viewport_find_world_1e353b0f},
	{"Godot.NativeCalls::godot_icall_Viewport_set_canvas_transform_dfe2915f", (void*)godot_icall_Viewport_set_canvas_transform_dfe2915f},
	{"Godot.NativeCalls::godot_icall_Viewport_get_canvas_transform_d44700d", (void*)godot_icall_Viewport_get_canvas_transform_d44700d},
	{"Godot.NativeCalls::godot_icall_Viewport_set_global_canvas_transform_dfe2915f", (void*)godot_icall_Viewport_set_global_canvas_transform_dfe2915f},
	{"Godot.NativeCalls::godot_icall_Viewport_get_global_canvas_transform_d44700d", (void*)godot_icall_Viewport_get_global_canvas_transform_d44700d},
	{"Godot.NativeCalls::godot_icall_Viewport_get_final_transform_d44700d", (void*)godot_icall_Viewport_get_final_transform_d44700d},
	{"Godot.NativeCalls::godot_icall_Viewport_get_visible_rect_6344c073", (void*)godot_icall_Viewport_get_visible_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_Viewport_set_transparent_background_ba24800b", (void*)godot_icall_Viewport_set_transparent_background_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_has_transparent_background_68fe5f59", (void*)godot_icall_Viewport_has_transparent_background_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_size_override_443302f5", (void*)godot_icall_Viewport_set_size_override_443302f5},
	{"Godot.NativeCalls::godot_icall_Viewport_get_size_override_9b4ea24e", (void*)godot_icall_Viewport_get_size_override_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Viewport_is_size_override_enabled_68fe5f59", (void*)godot_icall_Viewport_is_size_override_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_size_override_stretch_ba24800b", (void*)godot_icall_Viewport_set_size_override_stretch_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_is_size_override_stretch_enabled_68fe5f59", (void*)godot_icall_Viewport_is_size_override_stretch_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_vflip_ba24800b", (void*)godot_icall_Viewport_set_vflip_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_get_vflip_68fe5f59", (void*)godot_icall_Viewport_get_vflip_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_clear_mode_8d1ec28d", (void*)godot_icall_Viewport_set_clear_mode_8d1ec28d},
	{"Godot.NativeCalls::godot_icall_Viewport_get_clear_mode_3c381ddf", (void*)godot_icall_Viewport_get_clear_mode_3c381ddf},
	{"Godot.NativeCalls::godot_icall_Viewport_set_update_mode_94511153", (void*)godot_icall_Viewport_set_update_mode_94511153},
	{"Godot.NativeCalls::godot_icall_Viewport_get_update_mode_52f0f011", (void*)godot_icall_Viewport_get_update_mode_52f0f011},
	{"Godot.NativeCalls::godot_icall_Viewport_set_msaa_6330ff9f", (void*)godot_icall_Viewport_set_msaa_6330ff9f},
	{"Godot.NativeCalls::godot_icall_Viewport_get_msaa_a2124acd", (void*)godot_icall_Viewport_get_msaa_a2124acd},
	{"Godot.NativeCalls::godot_icall_Viewport_set_hdr_ba24800b", (void*)godot_icall_Viewport_set_hdr_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_get_hdr_68fe5f59", (void*)godot_icall_Viewport_get_hdr_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_usage_f6077388", (void*)godot_icall_Viewport_set_usage_f6077388},
	{"Godot.NativeCalls::godot_icall_Viewport_get_usage_7a2c1beb", (void*)godot_icall_Viewport_get_usage_7a2c1beb},
	{"Godot.NativeCalls::godot_icall_Viewport_set_debug_draw_6864315a", (void*)godot_icall_Viewport_set_debug_draw_6864315a},
	{"Godot.NativeCalls::godot_icall_Viewport_get_debug_draw_46b3ea95", (void*)godot_icall_Viewport_get_debug_draw_46b3ea95},
	{"Godot.NativeCalls::godot_icall_Viewport_get_render_info_3cb8fde0", (void*)godot_icall_Viewport_get_render_info_3cb8fde0},
	{"Godot.NativeCalls::godot_icall_Viewport_get_texture_c987223c", (void*)godot_icall_Viewport_get_texture_c987223c},
	{"Godot.NativeCalls::godot_icall_Viewport_set_physics_object_picking_ba24800b", (void*)godot_icall_Viewport_set_physics_object_picking_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_get_physics_object_picking_68fe5f59", (void*)godot_icall_Viewport_get_physics_object_picking_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_get_viewport_rid_6623661e", (void*)godot_icall_Viewport_get_viewport_rid_6623661e},
	{"Godot.NativeCalls::godot_icall_Viewport_input_7ac4986f", (void*)godot_icall_Viewport_input_7ac4986f},
	{"Godot.NativeCalls::godot_icall_Viewport_unhandled_input_7ac4986f", (void*)godot_icall_Viewport_unhandled_input_7ac4986f},
	{"Godot.NativeCalls::godot_icall_Viewport_update_worlds_c8e54a7b", (void*)godot_icall_Viewport_update_worlds_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Viewport_set_use_own_world_ba24800b", (void*)godot_icall_Viewport_set_use_own_world_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_is_using_own_world_68fe5f59", (void*)godot_icall_Viewport_is_using_own_world_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_get_camera_b804d7b0", (void*)godot_icall_Viewport_get_camera_b804d7b0},
	{"Godot.NativeCalls::godot_icall_Viewport_set_as_audio_listener_ba24800b", (void*)godot_icall_Viewport_set_as_audio_listener_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_is_audio_listener_68fe5f59", (void*)godot_icall_Viewport_is_audio_listener_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_as_audio_listener_2d_ba24800b", (void*)godot_icall_Viewport_set_as_audio_listener_2d_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_is_audio_listener_2d_68fe5f59", (void*)godot_icall_Viewport_is_audio_listener_2d_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_attach_to_screen_rect_a5ed61f1", (void*)godot_icall_Viewport_set_attach_to_screen_rect_a5ed61f1},
	{"Godot.NativeCalls::godot_icall_Viewport_set_use_render_direct_to_screen_ba24800b", (void*)godot_icall_Viewport_set_use_render_direct_to_screen_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_is_using_render_direct_to_screen_68fe5f59", (void*)godot_icall_Viewport_is_using_render_direct_to_screen_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_get_mouse_position_9b4ea24e", (void*)godot_icall_Viewport_get_mouse_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_Viewport_warp_mouse_6df7471e", (void*)godot_icall_Viewport_warp_mouse_6df7471e},
	{"Godot.NativeCalls::godot_icall_Viewport_gui_has_modal_stack_68fe5f59", (void*)godot_icall_Viewport_gui_has_modal_stack_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_gui_get_drag_data_a08d6f10", (void*)godot_icall_Viewport_gui_get_drag_data_a08d6f10},
	{"Godot.NativeCalls::godot_icall_Viewport_gui_is_dragging_68fe5f59", (void*)godot_icall_Viewport_gui_is_dragging_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_get_modal_stack_top_eb752350", (void*)godot_icall_Viewport_get_modal_stack_top_eb752350},
	{"Godot.NativeCalls::godot_icall_Viewport_set_disable_input_ba24800b", (void*)godot_icall_Viewport_set_disable_input_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_is_input_disabled_68fe5f59", (void*)godot_icall_Viewport_is_input_disabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_disable_3d_ba24800b", (void*)godot_icall_Viewport_set_disable_3d_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_is_3d_disabled_68fe5f59", (void*)godot_icall_Viewport_is_3d_disabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_keep_3d_linear_ba24800b", (void*)godot_icall_Viewport_set_keep_3d_linear_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_get_keep_3d_linear_68fe5f59", (void*)godot_icall_Viewport_get_keep_3d_linear_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_shadow_atlas_size_e1ae93bc", (void*)godot_icall_Viewport_set_shadow_atlas_size_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_Viewport_get_shadow_atlas_size_1f886eb0", (void*)godot_icall_Viewport_get_shadow_atlas_size_1f886eb0},
	{"Godot.NativeCalls::godot_icall_Viewport_set_snap_controls_to_pixels_ba24800b", (void*)godot_icall_Viewport_set_snap_controls_to_pixels_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_is_snap_controls_to_pixels_enabled_68fe5f59", (void*)godot_icall_Viewport_is_snap_controls_to_pixels_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_shadow_atlas_quadrant_subdiv_fdf743f", (void*)godot_icall_Viewport_set_shadow_atlas_quadrant_subdiv_fdf743f},
	{"Godot.NativeCalls::godot_icall_Viewport_get_shadow_atlas_quadrant_subdiv_5f690c44", (void*)godot_icall_Viewport_get_shadow_atlas_quadrant_subdiv_5f690c44},
	{"Godot.NativeCalls::godot_icall_Viewport_set_input_as_handled_c8e54a7b", (void*)godot_icall_Viewport_set_input_as_handled_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_Viewport_is_input_handled_68fe5f59", (void*)godot_icall_Viewport_is_input_handled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_Viewport_set_handle_input_locally_ba24800b", (void*)godot_icall_Viewport_set_handle_input_locally_ba24800b},
	{"Godot.NativeCalls::godot_icall_Viewport_is_handling_input_locally_68fe5f59", (void*)godot_icall_Viewport_is_handling_input_locally_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ViewportContainer_set_stretch_ba24800b", (void*)godot_icall_ViewportContainer_set_stretch_ba24800b},
	{"Godot.NativeCalls::godot_icall_ViewportContainer_is_stretch_enabled_68fe5f59", (void*)godot_icall_ViewportContainer_is_stretch_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_ViewportContainer_set_stretch_shrink_e1ae93bc", (void*)godot_icall_ViewportContainer_set_stretch_shrink_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_ViewportContainer_get_stretch_shrink_1f886eb0", (void*)godot_icall_ViewportContainer_get_stretch_shrink_1f886eb0},
	{"Godot.NativeCalls::godot_icall_ViewportTexture_set_viewport_path_in_scene_1e08804", (void*)godot_icall_ViewportTexture_set_viewport_path_in_scene_1e08804},
	{"Godot.NativeCalls::godot_icall_ViewportTexture_get_viewport_path_in_scene_bf425768", (void*)godot_icall_ViewportTexture_get_viewport_path_in_scene_bf425768},
	{"Godot.NativeCalls::godot_icall_VisibilityEnabler_set_enabler_138f911d", (void*)godot_icall_VisibilityEnabler_set_enabler_138f911d},
	{"Godot.NativeCalls::godot_icall_VisibilityEnabler_is_enabler_enabled_3911799", (void*)godot_icall_VisibilityEnabler_is_enabler_enabled_3911799},
	{"Godot.NativeCalls::godot_icall_VisibilityEnabler2D_set_enabler_c56a5206", (void*)godot_icall_VisibilityEnabler2D_set_enabler_c56a5206},
	{"Godot.NativeCalls::godot_icall_VisibilityEnabler2D_is_enabler_enabled_ebb3e32f", (void*)godot_icall_VisibilityEnabler2D_is_enabler_enabled_ebb3e32f},
	{"Godot.NativeCalls::godot_icall_VisibilityNotifier_set_aabb_ff67b409", (void*)godot_icall_VisibilityNotifier_set_aabb_ff67b409},
	{"Godot.NativeCalls::godot_icall_VisibilityNotifier_get_aabb_2dbf935b", (void*)godot_icall_VisibilityNotifier_get_aabb_2dbf935b},
	{"Godot.NativeCalls::godot_icall_VisibilityNotifier_is_on_screen_68fe5f59", (void*)godot_icall_VisibilityNotifier_is_on_screen_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VisibilityNotifier2D_set_rect_a5ed61f1", (void*)godot_icall_VisibilityNotifier2D_set_rect_a5ed61f1},
	{"Godot.NativeCalls::godot_icall_VisibilityNotifier2D_get_rect_6344c073", (void*)godot_icall_VisibilityNotifier2D_get_rect_6344c073},
	{"Godot.NativeCalls::godot_icall_VisibilityNotifier2D_is_on_screen_68fe5f59", (void*)godot_icall_VisibilityNotifier2D_is_on_screen_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VisualInstance_set_base_a7039b4e", (void*)godot_icall_VisualInstance_set_base_a7039b4e},
	{"Godot.NativeCalls::godot_icall_VisualInstance_get_base_6623661e", (void*)godot_icall_VisualInstance_get_base_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualInstance_get_instance_6623661e", (void*)godot_icall_VisualInstance_get_instance_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualInstance_set_layer_mask_966aab97", (void*)godot_icall_VisualInstance_set_layer_mask_966aab97},
	{"Godot.NativeCalls::godot_icall_VisualInstance_get_layer_mask_54cc76d5", (void*)godot_icall_VisualInstance_get_layer_mask_54cc76d5},
	{"Godot.NativeCalls::godot_icall_VisualInstance_set_layer_mask_bit_4ae8febd", (void*)godot_icall_VisualInstance_set_layer_mask_bit_4ae8febd},
	{"Godot.NativeCalls::godot_icall_VisualInstance_get_layer_mask_bit_7f690926", (void*)godot_icall_VisualInstance_get_layer_mask_bit_7f690926},
	{"Godot.NativeCalls::godot_icall_VisualInstance_get_transformed_aabb_2dbf935b", (void*)godot_icall_VisualInstance_get_transformed_aabb_2dbf935b},
	{"Godot.NativeCalls::godot_icall_VisualInstance_get_aabb_2dbf935b", (void*)godot_icall_VisualInstance_get_aabb_2dbf935b},
	{"Godot.NativeCalls::godot_icall_VisualScript_add_function_2f29e819", (void*)godot_icall_VisualScript_add_function_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScript_has_function_bee64043", (void*)godot_icall_VisualScript_has_function_bee64043},
	{"Godot.NativeCalls::godot_icall_VisualScript_remove_function_2f29e819", (void*)godot_icall_VisualScript_remove_function_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScript_rename_function_7dacd953", (void*)godot_icall_VisualScript_rename_function_7dacd953},
	{"Godot.NativeCalls::godot_icall_VisualScript_set_function_scroll_20e37454", (void*)godot_icall_VisualScript_set_function_scroll_20e37454},
	{"Godot.NativeCalls::godot_icall_VisualScript_get_function_scroll_edf24f59", (void*)godot_icall_VisualScript_get_function_scroll_edf24f59},
	{"Godot.NativeCalls::godot_icall_VisualScript_add_node_fd47592b", (void*)godot_icall_VisualScript_add_node_fd47592b},
	{"Godot.NativeCalls::godot_icall_VisualScript_remove_node_bb2d80b6", (void*)godot_icall_VisualScript_remove_node_bb2d80b6},
	{"Godot.NativeCalls::godot_icall_VisualScript_get_function_node_id_79b61600", (void*)godot_icall_VisualScript_get_function_node_id_79b61600},
	{"Godot.NativeCalls::godot_icall_VisualScript_get_node_cbdb98ee", (void*)godot_icall_VisualScript_get_node_cbdb98ee},
	{"Godot.NativeCalls::godot_icall_VisualScript_has_node_19efc97a", (void*)godot_icall_VisualScript_has_node_19efc97a},
	{"Godot.NativeCalls::godot_icall_VisualScript_set_node_position_889c2902", (void*)godot_icall_VisualScript_set_node_position_889c2902},
	{"Godot.NativeCalls::godot_icall_VisualScript_get_node_position_98221d26", (void*)godot_icall_VisualScript_get_node_position_98221d26},
	{"Godot.NativeCalls::godot_icall_VisualScript_sequence_connect_fe69b8b1", (void*)godot_icall_VisualScript_sequence_connect_fe69b8b1},
	{"Godot.NativeCalls::godot_icall_VisualScript_sequence_disconnect_fe69b8b1", (void*)godot_icall_VisualScript_sequence_disconnect_fe69b8b1},
	{"Godot.NativeCalls::godot_icall_VisualScript_has_sequence_connection_1d6d8385", (void*)godot_icall_VisualScript_has_sequence_connection_1d6d8385},
	{"Godot.NativeCalls::godot_icall_VisualScript_data_connect_69a13a64", (void*)godot_icall_VisualScript_data_connect_69a13a64},
	{"Godot.NativeCalls::godot_icall_VisualScript_data_disconnect_69a13a64", (void*)godot_icall_VisualScript_data_disconnect_69a13a64},
	{"Godot.NativeCalls::godot_icall_VisualScript_has_data_connection_3d11a90f", (void*)godot_icall_VisualScript_has_data_connection_3d11a90f},
	{"Godot.NativeCalls::godot_icall_VisualScript_add_variable_a7febfc1", (void*)godot_icall_VisualScript_add_variable_a7febfc1},
	{"Godot.NativeCalls::godot_icall_VisualScript_has_variable_bee64043", (void*)godot_icall_VisualScript_has_variable_bee64043},
	{"Godot.NativeCalls::godot_icall_VisualScript_remove_variable_2f29e819", (void*)godot_icall_VisualScript_remove_variable_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScript_set_variable_default_value_3a208116", (void*)godot_icall_VisualScript_set_variable_default_value_3a208116},
	{"Godot.NativeCalls::godot_icall_VisualScript_get_variable_default_value_6732bfd8", (void*)godot_icall_VisualScript_get_variable_default_value_6732bfd8},
	{"Godot.NativeCalls::godot_icall_VisualScript_set_variable_info_b8799e85", (void*)godot_icall_VisualScript_set_variable_info_b8799e85},
	{"Godot.NativeCalls::godot_icall_VisualScript_get_variable_info_18c08bf6", (void*)godot_icall_VisualScript_get_variable_info_18c08bf6},
	{"Godot.NativeCalls::godot_icall_VisualScript_set_variable_export_f253b141", (void*)godot_icall_VisualScript_set_variable_export_f253b141},
	{"Godot.NativeCalls::godot_icall_VisualScript_get_variable_export_bee64043", (void*)godot_icall_VisualScript_get_variable_export_bee64043},
	{"Godot.NativeCalls::godot_icall_VisualScript_rename_variable_7dacd953", (void*)godot_icall_VisualScript_rename_variable_7dacd953},
	{"Godot.NativeCalls::godot_icall_VisualScript_add_custom_signal_2f29e819", (void*)godot_icall_VisualScript_add_custom_signal_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScript_has_custom_signal_bee64043", (void*)godot_icall_VisualScript_has_custom_signal_bee64043},
	{"Godot.NativeCalls::godot_icall_VisualScript_custom_signal_add_argument_6b96b493", (void*)godot_icall_VisualScript_custom_signal_add_argument_6b96b493},
	{"Godot.NativeCalls::godot_icall_VisualScript_custom_signal_set_argument_type_c9cc5858", (void*)godot_icall_VisualScript_custom_signal_set_argument_type_c9cc5858},
	{"Godot.NativeCalls::godot_icall_VisualScript_custom_signal_get_argument_type_926a3f4a", (void*)godot_icall_VisualScript_custom_signal_get_argument_type_926a3f4a},
	{"Godot.NativeCalls::godot_icall_VisualScript_custom_signal_set_argument_name_cd41be07", (void*)godot_icall_VisualScript_custom_signal_set_argument_name_cd41be07},
	{"Godot.NativeCalls::godot_icall_VisualScript_custom_signal_get_argument_name_58fcd4d0", (void*)godot_icall_VisualScript_custom_signal_get_argument_name_58fcd4d0},
	{"Godot.NativeCalls::godot_icall_VisualScript_custom_signal_remove_argument_bb2d80b6", (void*)godot_icall_VisualScript_custom_signal_remove_argument_bb2d80b6},
	{"Godot.NativeCalls::godot_icall_VisualScript_custom_signal_get_argument_count_79b61600", (void*)godot_icall_VisualScript_custom_signal_get_argument_count_79b61600},
	{"Godot.NativeCalls::godot_icall_VisualScript_custom_signal_swap_argument_cc6f6a0", (void*)godot_icall_VisualScript_custom_signal_swap_argument_cc6f6a0},
	{"Godot.NativeCalls::godot_icall_VisualScript_remove_custom_signal_2f29e819", (void*)godot_icall_VisualScript_remove_custom_signal_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScript_rename_custom_signal_7dacd953", (void*)godot_icall_VisualScript_rename_custom_signal_7dacd953},
	{"Godot.NativeCalls::godot_icall_VisualScript_set_instance_base_type_2f29e819", (void*)godot_icall_VisualScript_set_instance_base_type_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScript__set_data_e472adcf", (void*)godot_icall_VisualScript__set_data_e472adcf},
	{"Godot.NativeCalls::godot_icall_VisualScript__get_data_22d47c9d", (void*)godot_icall_VisualScript__get_data_22d47c9d},
	{"Godot.NativeCalls::godot_icall_VisualScriptBasicTypeConstant_set_basic_type_2ca776e4", (void*)godot_icall_VisualScriptBasicTypeConstant_set_basic_type_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptBasicTypeConstant_get_basic_type_da7ed188", (void*)godot_icall_VisualScriptBasicTypeConstant_get_basic_type_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptBasicTypeConstant_set_basic_type_constant_2f29e819", (void*)godot_icall_VisualScriptBasicTypeConstant_set_basic_type_constant_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptBasicTypeConstant_get_basic_type_constant_97be4a2e", (void*)godot_icall_VisualScriptBasicTypeConstant_get_basic_type_constant_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptBuiltinFunc_set_func_5b1d66da", (void*)godot_icall_VisualScriptBuiltinFunc_set_func_5b1d66da},
	{"Godot.NativeCalls::godot_icall_VisualScriptBuiltinFunc_get_func_8a34c18a", (void*)godot_icall_VisualScriptBuiltinFunc_get_func_8a34c18a},
	{"Godot.NativeCalls::godot_icall_VisualScriptClassConstant_set_class_constant_2f29e819", (void*)godot_icall_VisualScriptClassConstant_set_class_constant_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptClassConstant_get_class_constant_97be4a2e", (void*)godot_icall_VisualScriptClassConstant_get_class_constant_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptClassConstant_set_base_type_2f29e819", (void*)godot_icall_VisualScriptClassConstant_set_base_type_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptClassConstant_get_base_type_97be4a2e", (void*)godot_icall_VisualScriptClassConstant_get_base_type_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptComment_set_title_6964ff3e", (void*)godot_icall_VisualScriptComment_set_title_6964ff3e},
	{"Godot.NativeCalls::godot_icall_VisualScriptComment_get_title_97be4a2e", (void*)godot_icall_VisualScriptComment_get_title_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptComment_set_description_6964ff3e", (void*)godot_icall_VisualScriptComment_set_description_6964ff3e},
	{"Godot.NativeCalls::godot_icall_VisualScriptComment_get_description_97be4a2e", (void*)godot_icall_VisualScriptComment_get_description_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptComment_set_size_6df7471e", (void*)godot_icall_VisualScriptComment_set_size_6df7471e},
	{"Godot.NativeCalls::godot_icall_VisualScriptComment_get_size_9b4ea24e", (void*)godot_icall_VisualScriptComment_get_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_VisualScriptConstant_set_constant_type_2ca776e4", (void*)godot_icall_VisualScriptConstant_set_constant_type_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptConstant_get_constant_type_da7ed188", (void*)godot_icall_VisualScriptConstant_get_constant_type_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptConstant_set_constant_value_62b5905c", (void*)godot_icall_VisualScriptConstant_set_constant_value_62b5905c},
	{"Godot.NativeCalls::godot_icall_VisualScriptConstant_get_constant_value_a08d6f10", (void*)godot_icall_VisualScriptConstant_get_constant_value_a08d6f10},
	{"Godot.NativeCalls::godot_icall_VisualScriptConstructor_set_constructor_type_2ca776e4", (void*)godot_icall_VisualScriptConstructor_set_constructor_type_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptConstructor_get_constructor_type_da7ed188", (void*)godot_icall_VisualScriptConstructor_get_constructor_type_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptConstructor_set_constructor_e472adcf", (void*)godot_icall_VisualScriptConstructor_set_constructor_e472adcf},
	{"Godot.NativeCalls::godot_icall_VisualScriptConstructor_get_constructor_22d47c9d", (void*)godot_icall_VisualScriptConstructor_get_constructor_22d47c9d},
	{"Godot.NativeCalls::godot_icall_VisualScriptDeconstruct_set_deconstruct_type_2ca776e4", (void*)godot_icall_VisualScriptDeconstruct_set_deconstruct_type_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptDeconstruct_get_deconstruct_type_da7ed188", (void*)godot_icall_VisualScriptDeconstruct_get_deconstruct_type_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptDeconstruct__set_elem_cache_2923a790", (void*)godot_icall_VisualScriptDeconstruct__set_elem_cache_2923a790},
	{"Godot.NativeCalls::godot_icall_VisualScriptDeconstruct__get_elem_cache_d80382d4", (void*)godot_icall_VisualScriptDeconstruct__get_elem_cache_d80382d4},
	{"Godot.NativeCalls::godot_icall_VisualScriptEmitSignal_set_signal_2f29e819", (void*)godot_icall_VisualScriptEmitSignal_set_signal_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptEmitSignal_get_signal_97be4a2e", (void*)godot_icall_VisualScriptEmitSignal_get_signal_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptEngineSingleton_set_singleton_2f29e819", (void*)godot_icall_VisualScriptEngineSingleton_set_singleton_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptEngineSingleton_get_singleton_97be4a2e", (void*)godot_icall_VisualScriptEngineSingleton_get_singleton_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_set_base_type_2f29e819", (void*)godot_icall_VisualScriptFunctionCall_set_base_type_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_get_base_type_97be4a2e", (void*)godot_icall_VisualScriptFunctionCall_get_base_type_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_set_base_script_3ca14953", (void*)godot_icall_VisualScriptFunctionCall_set_base_script_3ca14953},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_get_base_script_97be4a2e", (void*)godot_icall_VisualScriptFunctionCall_get_base_script_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_set_basic_type_2ca776e4", (void*)godot_icall_VisualScriptFunctionCall_set_basic_type_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_get_basic_type_da7ed188", (void*)godot_icall_VisualScriptFunctionCall_get_basic_type_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_set_singleton_2f29e819", (void*)godot_icall_VisualScriptFunctionCall_set_singleton_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_get_singleton_97be4a2e", (void*)godot_icall_VisualScriptFunctionCall_get_singleton_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_set_function_2f29e819", (void*)godot_icall_VisualScriptFunctionCall_set_function_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_get_function_97be4a2e", (void*)godot_icall_VisualScriptFunctionCall_get_function_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_set_call_mode_1c3a0cd9", (void*)godot_icall_VisualScriptFunctionCall_set_call_mode_1c3a0cd9},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_get_call_mode_96c510f4", (void*)godot_icall_VisualScriptFunctionCall_get_call_mode_96c510f4},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_set_base_path_1e08804", (void*)godot_icall_VisualScriptFunctionCall_set_base_path_1e08804},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_get_base_path_bf425768", (void*)godot_icall_VisualScriptFunctionCall_get_base_path_bf425768},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_set_use_default_args_e1ae93bc", (void*)godot_icall_VisualScriptFunctionCall_set_use_default_args_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_get_use_default_args_1f886eb0", (void*)godot_icall_VisualScriptFunctionCall_get_use_default_args_1f886eb0},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall__set_argument_cache_e472adcf", (void*)godot_icall_VisualScriptFunctionCall__set_argument_cache_e472adcf},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall__get_argument_cache_22d47c9d", (void*)godot_icall_VisualScriptFunctionCall__get_argument_cache_22d47c9d},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_set_rpc_call_mode_899e69c2", (void*)godot_icall_VisualScriptFunctionCall_set_rpc_call_mode_899e69c2},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_get_rpc_call_mode_37b7b8a2", (void*)godot_icall_VisualScriptFunctionCall_get_rpc_call_mode_37b7b8a2},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_set_validate_ba24800b", (void*)godot_icall_VisualScriptFunctionCall_set_validate_ba24800b},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionCall_get_validate_68fe5f59", (void*)godot_icall_VisualScriptFunctionCall_get_validate_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionState_connect_to_signal_d94ae12e", (void*)godot_icall_VisualScriptFunctionState_connect_to_signal_d94ae12e},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionState_resume_61377341", (void*)godot_icall_VisualScriptFunctionState_resume_61377341},
	{"Godot.NativeCalls::godot_icall_VisualScriptFunctionState_is_valid_68fe5f59", (void*)godot_icall_VisualScriptFunctionState_is_valid_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VisualScriptGlobalConstant_set_global_constant_e1ae93bc", (void*)godot_icall_VisualScriptGlobalConstant_set_global_constant_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_VisualScriptGlobalConstant_get_global_constant_1f886eb0", (void*)godot_icall_VisualScriptGlobalConstant_get_global_constant_1f886eb0},
	{"Godot.NativeCalls::godot_icall_VisualScriptInputAction_set_action_name_2f29e819", (void*)godot_icall_VisualScriptInputAction_set_action_name_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptInputAction_get_action_name_97be4a2e", (void*)godot_icall_VisualScriptInputAction_get_action_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptInputAction_set_action_mode_88125a3f", (void*)godot_icall_VisualScriptInputAction_set_action_mode_88125a3f},
	{"Godot.NativeCalls::godot_icall_VisualScriptInputAction_get_action_mode_a057b28a", (void*)godot_icall_VisualScriptInputAction_get_action_mode_a057b28a},
	{"Godot.NativeCalls::godot_icall_VisualScriptLists_add_input_data_port_fce73ba6", (void*)godot_icall_VisualScriptLists_add_input_data_port_fce73ba6},
	{"Godot.NativeCalls::godot_icall_VisualScriptLists_set_input_data_port_name_c1ffd74f", (void*)godot_icall_VisualScriptLists_set_input_data_port_name_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_VisualScriptLists_set_input_data_port_type_fd684c8c", (void*)godot_icall_VisualScriptLists_set_input_data_port_type_fd684c8c},
	{"Godot.NativeCalls::godot_icall_VisualScriptLists_remove_input_data_port_e1ae93bc", (void*)godot_icall_VisualScriptLists_remove_input_data_port_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_VisualScriptLists_add_output_data_port_fce73ba6", (void*)godot_icall_VisualScriptLists_add_output_data_port_fce73ba6},
	{"Godot.NativeCalls::godot_icall_VisualScriptLists_set_output_data_port_name_c1ffd74f", (void*)godot_icall_VisualScriptLists_set_output_data_port_name_c1ffd74f},
	{"Godot.NativeCalls::godot_icall_VisualScriptLists_set_output_data_port_type_fd684c8c", (void*)godot_icall_VisualScriptLists_set_output_data_port_type_fd684c8c},
	{"Godot.NativeCalls::godot_icall_VisualScriptLists_remove_output_data_port_e1ae93bc", (void*)godot_icall_VisualScriptLists_remove_output_data_port_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_VisualScriptLocalVar_set_var_name_2f29e819", (void*)godot_icall_VisualScriptLocalVar_set_var_name_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptLocalVar_get_var_name_97be4a2e", (void*)godot_icall_VisualScriptLocalVar_get_var_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptLocalVar_set_var_type_2ca776e4", (void*)godot_icall_VisualScriptLocalVar_set_var_type_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptLocalVar_get_var_type_da7ed188", (void*)godot_icall_VisualScriptLocalVar_get_var_type_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptLocalVarSet_set_var_name_2f29e819", (void*)godot_icall_VisualScriptLocalVarSet_set_var_name_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptLocalVarSet_get_var_name_97be4a2e", (void*)godot_icall_VisualScriptLocalVarSet_get_var_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptLocalVarSet_set_var_type_2ca776e4", (void*)godot_icall_VisualScriptLocalVarSet_set_var_type_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptLocalVarSet_get_var_type_da7ed188", (void*)godot_icall_VisualScriptLocalVarSet_get_var_type_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptMathConstant_set_math_constant_9a056eb6", (void*)godot_icall_VisualScriptMathConstant_set_math_constant_9a056eb6},
	{"Godot.NativeCalls::godot_icall_VisualScriptMathConstant_get_math_constant_491cb9b6", (void*)godot_icall_VisualScriptMathConstant_get_math_constant_491cb9b6},
	{"Godot.NativeCalls::godot_icall_VisualScriptNode_get_visual_script_19e455ec", (void*)godot_icall_VisualScriptNode_get_visual_script_19e455ec},
	{"Godot.NativeCalls::godot_icall_VisualScriptNode_set_default_input_value_37bef04", (void*)godot_icall_VisualScriptNode_set_default_input_value_37bef04},
	{"Godot.NativeCalls::godot_icall_VisualScriptNode_get_default_input_value_a9b2673d", (void*)godot_icall_VisualScriptNode_get_default_input_value_a9b2673d},
	{"Godot.NativeCalls::godot_icall_VisualScriptNode_ports_changed_notify_c8e54a7b", (void*)godot_icall_VisualScriptNode_ports_changed_notify_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_VisualScriptNode__set_default_input_values_2923a790", (void*)godot_icall_VisualScriptNode__set_default_input_values_2923a790},
	{"Godot.NativeCalls::godot_icall_VisualScriptNode__get_default_input_values_d80382d4", (void*)godot_icall_VisualScriptNode__get_default_input_values_d80382d4},
	{"Godot.NativeCalls::godot_icall_VisualScriptOperator_set_operator_e062591e", (void*)godot_icall_VisualScriptOperator_set_operator_e062591e},
	{"Godot.NativeCalls::godot_icall_VisualScriptOperator_get_operator_1ec3a84e", (void*)godot_icall_VisualScriptOperator_get_operator_1ec3a84e},
	{"Godot.NativeCalls::godot_icall_VisualScriptOperator_set_typed_2ca776e4", (void*)godot_icall_VisualScriptOperator_set_typed_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptOperator_get_typed_da7ed188", (void*)godot_icall_VisualScriptOperator_get_typed_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptPreload_set_preload_7ce53eb", (void*)godot_icall_VisualScriptPreload_set_preload_7ce53eb},
	{"Godot.NativeCalls::godot_icall_VisualScriptPreload_get_preload_c567ae79", (void*)godot_icall_VisualScriptPreload_get_preload_c567ae79},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_set_base_type_2f29e819", (void*)godot_icall_VisualScriptPropertyGet_set_base_type_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_get_base_type_97be4a2e", (void*)godot_icall_VisualScriptPropertyGet_get_base_type_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_set_base_script_3ca14953", (void*)godot_icall_VisualScriptPropertyGet_set_base_script_3ca14953},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_get_base_script_97be4a2e", (void*)godot_icall_VisualScriptPropertyGet_get_base_script_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_set_basic_type_2ca776e4", (void*)godot_icall_VisualScriptPropertyGet_set_basic_type_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_get_basic_type_da7ed188", (void*)godot_icall_VisualScriptPropertyGet_get_basic_type_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet__set_type_cache_2ca776e4", (void*)godot_icall_VisualScriptPropertyGet__set_type_cache_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet__get_type_cache_da7ed188", (void*)godot_icall_VisualScriptPropertyGet__get_type_cache_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_set_property_2f29e819", (void*)godot_icall_VisualScriptPropertyGet_set_property_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_get_property_97be4a2e", (void*)godot_icall_VisualScriptPropertyGet_get_property_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_set_call_mode_399da78", (void*)godot_icall_VisualScriptPropertyGet_set_call_mode_399da78},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_get_call_mode_c1b924ec", (void*)godot_icall_VisualScriptPropertyGet_get_call_mode_c1b924ec},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_set_base_path_1e08804", (void*)godot_icall_VisualScriptPropertyGet_set_base_path_1e08804},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_get_base_path_bf425768", (void*)godot_icall_VisualScriptPropertyGet_get_base_path_bf425768},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_set_index_2f29e819", (void*)godot_icall_VisualScriptPropertyGet_set_index_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertyGet_get_index_97be4a2e", (void*)godot_icall_VisualScriptPropertyGet_get_index_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_set_base_type_2f29e819", (void*)godot_icall_VisualScriptPropertySet_set_base_type_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_get_base_type_97be4a2e", (void*)godot_icall_VisualScriptPropertySet_get_base_type_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_set_base_script_3ca14953", (void*)godot_icall_VisualScriptPropertySet_set_base_script_3ca14953},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_get_base_script_97be4a2e", (void*)godot_icall_VisualScriptPropertySet_get_base_script_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_set_basic_type_2ca776e4", (void*)godot_icall_VisualScriptPropertySet_set_basic_type_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_get_basic_type_da7ed188", (void*)godot_icall_VisualScriptPropertySet_get_basic_type_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet__set_type_cache_e472adcf", (void*)godot_icall_VisualScriptPropertySet__set_type_cache_e472adcf},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet__get_type_cache_22d47c9d", (void*)godot_icall_VisualScriptPropertySet__get_type_cache_22d47c9d},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_set_property_2f29e819", (void*)godot_icall_VisualScriptPropertySet_set_property_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_get_property_97be4a2e", (void*)godot_icall_VisualScriptPropertySet_get_property_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_set_call_mode_86c9a7c", (void*)godot_icall_VisualScriptPropertySet_set_call_mode_86c9a7c},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_get_call_mode_b6c664f0", (void*)godot_icall_VisualScriptPropertySet_get_call_mode_b6c664f0},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_set_base_path_1e08804", (void*)godot_icall_VisualScriptPropertySet_set_base_path_1e08804},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_get_base_path_bf425768", (void*)godot_icall_VisualScriptPropertySet_get_base_path_bf425768},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_set_index_2f29e819", (void*)godot_icall_VisualScriptPropertySet_set_index_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_get_index_97be4a2e", (void*)godot_icall_VisualScriptPropertySet_get_index_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_set_assign_op_e894e9b1", (void*)godot_icall_VisualScriptPropertySet_set_assign_op_e894e9b1},
	{"Godot.NativeCalls::godot_icall_VisualScriptPropertySet_get_assign_op_c37223fc", (void*)godot_icall_VisualScriptPropertySet_get_assign_op_c37223fc},
	{"Godot.NativeCalls::godot_icall_VisualScriptResourcePath_set_resource_path_3ca14953", (void*)godot_icall_VisualScriptResourcePath_set_resource_path_3ca14953},
	{"Godot.NativeCalls::godot_icall_VisualScriptResourcePath_get_resource_path_97be4a2e", (void*)godot_icall_VisualScriptResourcePath_get_resource_path_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptReturn_set_return_type_2ca776e4", (void*)godot_icall_VisualScriptReturn_set_return_type_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptReturn_get_return_type_da7ed188", (void*)godot_icall_VisualScriptReturn_get_return_type_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptReturn_set_enable_return_value_ba24800b", (void*)godot_icall_VisualScriptReturn_set_enable_return_value_ba24800b},
	{"Godot.NativeCalls::godot_icall_VisualScriptReturn_is_return_value_enabled_68fe5f59", (void*)godot_icall_VisualScriptReturn_is_return_value_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VisualScriptSceneNode_set_node_path_1e08804", (void*)godot_icall_VisualScriptSceneNode_set_node_path_1e08804},
	{"Godot.NativeCalls::godot_icall_VisualScriptSceneNode_get_node_path_bf425768", (void*)godot_icall_VisualScriptSceneNode_get_node_path_bf425768},
	{"Godot.NativeCalls::godot_icall_VisualScriptSelect_set_typed_2ca776e4", (void*)godot_icall_VisualScriptSelect_set_typed_2ca776e4},
	{"Godot.NativeCalls::godot_icall_VisualScriptSelect_get_typed_da7ed188", (void*)godot_icall_VisualScriptSelect_get_typed_da7ed188},
	{"Godot.NativeCalls::godot_icall_VisualScriptSequence_set_steps_e1ae93bc", (void*)godot_icall_VisualScriptSequence_set_steps_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_VisualScriptSequence_get_steps_1f886eb0", (void*)godot_icall_VisualScriptSequence_get_steps_1f886eb0},
	{"Godot.NativeCalls::godot_icall_VisualScriptTypeCast_set_base_type_2f29e819", (void*)godot_icall_VisualScriptTypeCast_set_base_type_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptTypeCast_get_base_type_97be4a2e", (void*)godot_icall_VisualScriptTypeCast_get_base_type_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptTypeCast_set_base_script_3ca14953", (void*)godot_icall_VisualScriptTypeCast_set_base_script_3ca14953},
	{"Godot.NativeCalls::godot_icall_VisualScriptTypeCast_get_base_script_97be4a2e", (void*)godot_icall_VisualScriptTypeCast_get_base_script_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptVariableGet_set_variable_2f29e819", (void*)godot_icall_VisualScriptVariableGet_set_variable_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptVariableGet_get_variable_97be4a2e", (void*)godot_icall_VisualScriptVariableGet_get_variable_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptVariableSet_set_variable_2f29e819", (void*)godot_icall_VisualScriptVariableSet_set_variable_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptVariableSet_get_variable_97be4a2e", (void*)godot_icall_VisualScriptVariableSet_get_variable_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptYield_set_yield_mode_9acc9a29", (void*)godot_icall_VisualScriptYield_set_yield_mode_9acc9a29},
	{"Godot.NativeCalls::godot_icall_VisualScriptYield_get_yield_mode_4866653b", (void*)godot_icall_VisualScriptYield_get_yield_mode_4866653b},
	{"Godot.NativeCalls::godot_icall_VisualScriptYield_set_wait_time_904508bb", (void*)godot_icall_VisualScriptYield_set_wait_time_904508bb},
	{"Godot.NativeCalls::godot_icall_VisualScriptYield_get_wait_time_4edcd7a9", (void*)godot_icall_VisualScriptYield_get_wait_time_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VisualScriptYieldSignal_set_base_type_2f29e819", (void*)godot_icall_VisualScriptYieldSignal_set_base_type_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptYieldSignal_get_base_type_97be4a2e", (void*)godot_icall_VisualScriptYieldSignal_get_base_type_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptYieldSignal_set_signal_2f29e819", (void*)godot_icall_VisualScriptYieldSignal_set_signal_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualScriptYieldSignal_get_signal_97be4a2e", (void*)godot_icall_VisualScriptYieldSignal_get_signal_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualScriptYieldSignal_set_call_mode_addb6322", (void*)godot_icall_VisualScriptYieldSignal_set_call_mode_addb6322},
	{"Godot.NativeCalls::godot_icall_VisualScriptYieldSignal_get_call_mode_e4d8928d", (void*)godot_icall_VisualScriptYieldSignal_get_call_mode_e4d8928d},
	{"Godot.NativeCalls::godot_icall_VisualScriptYieldSignal_set_base_path_1e08804", (void*)godot_icall_VisualScriptYieldSignal_set_base_path_1e08804},
	{"Godot.NativeCalls::godot_icall_VisualScriptYieldSignal_get_base_path_bf425768", (void*)godot_icall_VisualScriptYieldSignal_get_base_path_bf425768},
	{"Godot.NativeCalls::godot_icall_VisualServer_force_sync_c8e54a7b", (void*)godot_icall_VisualServer_force_sync_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_VisualServer_force_draw_c783ccca", (void*)godot_icall_VisualServer_force_draw_c783ccca},
	{"Godot.NativeCalls::godot_icall_VisualServer_sync_c8e54a7b", (void*)godot_icall_VisualServer_sync_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_VisualServer_draw_c783ccca", (void*)godot_icall_VisualServer_draw_c783ccca},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_create_6623661e", (void*)godot_icall_VisualServer_texture_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_create_from_image_c87a7b80", (void*)godot_icall_VisualServer_texture_create_from_image_c87a7b80},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_allocate_25a9ca24", (void*)godot_icall_VisualServer_texture_allocate_25a9ca24},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_set_data_68988578", (void*)godot_icall_VisualServer_texture_set_data_68988578},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_set_data_partial_ef9fd2e", (void*)godot_icall_VisualServer_texture_set_data_partial_ef9fd2e},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_get_data_cea36e64", (void*)godot_icall_VisualServer_texture_get_data_cea36e64},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_set_flags_7aa831af", (void*)godot_icall_VisualServer_texture_set_flags_7aa831af},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_get_flags_1867c419", (void*)godot_icall_VisualServer_texture_get_flags_1867c419},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_get_format_25a22d81", (void*)godot_icall_VisualServer_texture_get_format_25a22d81},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_get_type_f1d0c933", (void*)godot_icall_VisualServer_texture_get_type_f1d0c933},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_get_texid_1867c419", (void*)godot_icall_VisualServer_texture_get_texid_1867c419},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_get_width_1867c419", (void*)godot_icall_VisualServer_texture_get_width_1867c419},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_get_height_1867c419", (void*)godot_icall_VisualServer_texture_get_height_1867c419},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_get_depth_1867c419", (void*)godot_icall_VisualServer_texture_get_depth_1867c419},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_set_size_override_c1c02a59", (void*)godot_icall_VisualServer_texture_set_size_override_c1c02a59},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_set_path_d45c5753", (void*)godot_icall_VisualServer_texture_set_path_d45c5753},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_get_path_8e62b7cc", (void*)godot_icall_VisualServer_texture_get_path_8e62b7cc},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_set_shrink_all_x2_on_set_data_ba24800b", (void*)godot_icall_VisualServer_texture_set_shrink_all_x2_on_set_data_ba24800b},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_bind_7aa831af", (void*)godot_icall_VisualServer_texture_bind_7aa831af},
	{"Godot.NativeCalls::godot_icall_VisualServer_texture_debug_usage_d80382d4", (void*)godot_icall_VisualServer_texture_debug_usage_d80382d4},
	{"Godot.NativeCalls::godot_icall_VisualServer_textures_keep_original_ba24800b", (void*)godot_icall_VisualServer_textures_keep_original_ba24800b},
	{"Godot.NativeCalls::godot_icall_VisualServer_sky_create_6623661e", (void*)godot_icall_VisualServer_sky_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_sky_set_texture_980180a6", (void*)godot_icall_VisualServer_sky_set_texture_980180a6},
	{"Godot.NativeCalls::godot_icall_VisualServer_shader_create_6623661e", (void*)godot_icall_VisualServer_shader_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_shader_set_code_879ee574", (void*)godot_icall_VisualServer_shader_set_code_879ee574},
	{"Godot.NativeCalls::godot_icall_VisualServer_shader_get_code_8e62b7cc", (void*)godot_icall_VisualServer_shader_get_code_8e62b7cc},
	{"Godot.NativeCalls::godot_icall_VisualServer_shader_get_param_list_e33ff758", (void*)godot_icall_VisualServer_shader_get_param_list_e33ff758},
	{"Godot.NativeCalls::godot_icall_VisualServer_shader_set_default_texture_param_6e3a1204", (void*)godot_icall_VisualServer_shader_set_default_texture_param_6e3a1204},
	{"Godot.NativeCalls::godot_icall_VisualServer_shader_get_default_texture_param_136fcc74", (void*)godot_icall_VisualServer_shader_get_default_texture_param_136fcc74},
	{"Godot.NativeCalls::godot_icall_VisualServer_material_create_6623661e", (void*)godot_icall_VisualServer_material_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_material_set_shader_48010164", (void*)godot_icall_VisualServer_material_set_shader_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_material_get_shader_c09e26c0", (void*)godot_icall_VisualServer_material_get_shader_c09e26c0},
	{"Godot.NativeCalls::godot_icall_VisualServer_material_set_param_2bd01b16", (void*)godot_icall_VisualServer_material_set_param_2bd01b16},
	{"Godot.NativeCalls::godot_icall_VisualServer_material_get_param_626d676d", (void*)godot_icall_VisualServer_material_get_param_626d676d},
	{"Godot.NativeCalls::godot_icall_VisualServer_material_get_param_default_626d676d", (void*)godot_icall_VisualServer_material_get_param_default_626d676d},
	{"Godot.NativeCalls::godot_icall_VisualServer_material_set_render_priority_f6439f2", (void*)godot_icall_VisualServer_material_set_render_priority_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_material_set_line_width_70bf90fb", (void*)godot_icall_VisualServer_material_set_line_width_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_material_set_next_pass_48010164", (void*)godot_icall_VisualServer_material_set_next_pass_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_create_6623661e", (void*)godot_icall_VisualServer_mesh_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_format_offset_c7c8c828", (void*)godot_icall_VisualServer_mesh_surface_get_format_offset_c7c8c828},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_format_stride_d481a46b", (void*)godot_icall_VisualServer_mesh_surface_get_format_stride_d481a46b},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_add_surface_from_arrays_36892d9", (void*)godot_icall_VisualServer_mesh_add_surface_from_arrays_36892d9},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_set_blend_shape_count_f6439f2", (void*)godot_icall_VisualServer_mesh_set_blend_shape_count_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_get_blend_shape_count_f1d0c933", (void*)godot_icall_VisualServer_mesh_get_blend_shape_count_f1d0c933},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_set_blend_shape_mode_ae1981ce", (void*)godot_icall_VisualServer_mesh_set_blend_shape_mode_ae1981ce},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_get_blend_shape_mode_f1d0c933", (void*)godot_icall_VisualServer_mesh_get_blend_shape_mode_f1d0c933},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_update_region_a8abd755", (void*)godot_icall_VisualServer_mesh_surface_update_region_a8abd755},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_set_material_ee265321", (void*)godot_icall_VisualServer_mesh_surface_set_material_ee265321},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_material_d5ef04d9", (void*)godot_icall_VisualServer_mesh_surface_get_material_d5ef04d9},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_array_len_9fb6ae46", (void*)godot_icall_VisualServer_mesh_surface_get_array_len_9fb6ae46},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_array_index_len_9fb6ae46", (void*)godot_icall_VisualServer_mesh_surface_get_array_index_len_9fb6ae46},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_array_c14dbfe6", (void*)godot_icall_VisualServer_mesh_surface_get_array_c14dbfe6},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_index_array_c14dbfe6", (void*)godot_icall_VisualServer_mesh_surface_get_index_array_c14dbfe6},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_arrays_25b24b67", (void*)godot_icall_VisualServer_mesh_surface_get_arrays_25b24b67},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_blend_shape_arrays_25b24b67", (void*)godot_icall_VisualServer_mesh_surface_get_blend_shape_arrays_25b24b67},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_format_c5ad1bb6", (void*)godot_icall_VisualServer_mesh_surface_get_format_c5ad1bb6},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_primitive_type_9fb6ae46", (void*)godot_icall_VisualServer_mesh_surface_get_primitive_type_9fb6ae46},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_aabb_455ffc0", (void*)godot_icall_VisualServer_mesh_surface_get_aabb_455ffc0},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_surface_get_skeleton_aabb_25b24b67", (void*)godot_icall_VisualServer_mesh_surface_get_skeleton_aabb_25b24b67},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_remove_surface_f6439f2", (void*)godot_icall_VisualServer_mesh_remove_surface_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_get_surface_count_f1d0c933", (void*)godot_icall_VisualServer_mesh_get_surface_count_f1d0c933},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_set_custom_aabb_119d5c29", (void*)godot_icall_VisualServer_mesh_set_custom_aabb_119d5c29},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_get_custom_aabb_52100836", (void*)godot_icall_VisualServer_mesh_get_custom_aabb_52100836},
	{"Godot.NativeCalls::godot_icall_VisualServer_mesh_clear_a7039b4e", (void*)godot_icall_VisualServer_mesh_clear_a7039b4e},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_create_6623661e", (void*)godot_icall_VisualServer_multimesh_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_allocate_190d316c", (void*)godot_icall_VisualServer_multimesh_allocate_190d316c},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_get_instance_count_f1d0c933", (void*)godot_icall_VisualServer_multimesh_get_instance_count_f1d0c933},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_set_mesh_48010164", (void*)godot_icall_VisualServer_multimesh_set_mesh_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_instance_set_transform_107e50a2", (void*)godot_icall_VisualServer_multimesh_instance_set_transform_107e50a2},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_instance_set_transform_2d_87074d30", (void*)godot_icall_VisualServer_multimesh_instance_set_transform_2d_87074d30},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_instance_set_color_a406a09d", (void*)godot_icall_VisualServer_multimesh_instance_set_color_a406a09d},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_instance_set_custom_data_a406a09d", (void*)godot_icall_VisualServer_multimesh_instance_set_custom_data_a406a09d},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_get_mesh_c09e26c0", (void*)godot_icall_VisualServer_multimesh_get_mesh_c09e26c0},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_get_aabb_52100836", (void*)godot_icall_VisualServer_multimesh_get_aabb_52100836},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_instance_get_transform_5be89b94", (void*)godot_icall_VisualServer_multimesh_instance_get_transform_5be89b94},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_instance_get_transform_2d_61871ef9", (void*)godot_icall_VisualServer_multimesh_instance_get_transform_2d_61871ef9},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_instance_get_color_17cdf6c7", (void*)godot_icall_VisualServer_multimesh_instance_get_color_17cdf6c7},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_instance_get_custom_data_17cdf6c7", (void*)godot_icall_VisualServer_multimesh_instance_get_custom_data_17cdf6c7},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_set_visible_instances_f6439f2", (void*)godot_icall_VisualServer_multimesh_set_visible_instances_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_get_visible_instances_f1d0c933", (void*)godot_icall_VisualServer_multimesh_get_visible_instances_f1d0c933},
	{"Godot.NativeCalls::godot_icall_VisualServer_multimesh_set_as_bulk_array_5e60a868", (void*)godot_icall_VisualServer_multimesh_set_as_bulk_array_5e60a868},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_create_6623661e", (void*)godot_icall_VisualServer_immediate_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_begin_2979e38c", (void*)godot_icall_VisualServer_immediate_begin_2979e38c},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_vertex_832e4d15", (void*)godot_icall_VisualServer_immediate_vertex_832e4d15},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_vertex_2d_832e4d14", (void*)godot_icall_VisualServer_immediate_vertex_2d_832e4d14},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_normal_832e4d15", (void*)godot_icall_VisualServer_immediate_normal_832e4d15},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_tangent_a8e2dec7", (void*)godot_icall_VisualServer_immediate_tangent_a8e2dec7},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_color_1e215388", (void*)godot_icall_VisualServer_immediate_color_1e215388},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_uv_832e4d14", (void*)godot_icall_VisualServer_immediate_uv_832e4d14},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_uv2_832e4d14", (void*)godot_icall_VisualServer_immediate_uv2_832e4d14},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_end_a7039b4e", (void*)godot_icall_VisualServer_immediate_end_a7039b4e},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_clear_a7039b4e", (void*)godot_icall_VisualServer_immediate_clear_a7039b4e},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_set_material_48010164", (void*)godot_icall_VisualServer_immediate_set_material_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_immediate_get_material_c09e26c0", (void*)godot_icall_VisualServer_immediate_get_material_c09e26c0},
	{"Godot.NativeCalls::godot_icall_VisualServer_skeleton_create_6623661e", (void*)godot_icall_VisualServer_skeleton_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_skeleton_allocate_eb795dfc", (void*)godot_icall_VisualServer_skeleton_allocate_eb795dfc},
	{"Godot.NativeCalls::godot_icall_VisualServer_skeleton_get_bone_count_f1d0c933", (void*)godot_icall_VisualServer_skeleton_get_bone_count_f1d0c933},
	{"Godot.NativeCalls::godot_icall_VisualServer_skeleton_bone_set_transform_107e50a2", (void*)godot_icall_VisualServer_skeleton_bone_set_transform_107e50a2},
	{"Godot.NativeCalls::godot_icall_VisualServer_skeleton_bone_get_transform_5be89b94", (void*)godot_icall_VisualServer_skeleton_bone_get_transform_5be89b94},
	{"Godot.NativeCalls::godot_icall_VisualServer_skeleton_bone_set_transform_2d_87074d30", (void*)godot_icall_VisualServer_skeleton_bone_set_transform_2d_87074d30},
	{"Godot.NativeCalls::godot_icall_VisualServer_skeleton_bone_get_transform_2d_61871ef9", (void*)godot_icall_VisualServer_skeleton_bone_get_transform_2d_61871ef9},
	{"Godot.NativeCalls::godot_icall_VisualServer_directional_light_create_6623661e", (void*)godot_icall_VisualServer_directional_light_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_omni_light_create_6623661e", (void*)godot_icall_VisualServer_omni_light_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_spot_light_create_6623661e", (void*)godot_icall_VisualServer_spot_light_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_set_color_1e215388", (void*)godot_icall_VisualServer_light_set_color_1e215388},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_set_param_8508d4e6", (void*)godot_icall_VisualServer_light_set_param_8508d4e6},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_set_shadow_56de082b", (void*)godot_icall_VisualServer_light_set_shadow_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_set_shadow_color_1e215388", (void*)godot_icall_VisualServer_light_set_shadow_color_1e215388},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_set_projector_48010164", (void*)godot_icall_VisualServer_light_set_projector_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_set_negative_56de082b", (void*)godot_icall_VisualServer_light_set_negative_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_set_cull_mask_7aa831af", (void*)godot_icall_VisualServer_light_set_cull_mask_7aa831af},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_set_reverse_cull_face_mode_56de082b", (void*)godot_icall_VisualServer_light_set_reverse_cull_face_mode_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_set_use_gi_56de082b", (void*)godot_icall_VisualServer_light_set_use_gi_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_omni_set_shadow_mode_b4802e47", (void*)godot_icall_VisualServer_light_omni_set_shadow_mode_b4802e47},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_omni_set_shadow_detail_3763f70d", (void*)godot_icall_VisualServer_light_omni_set_shadow_detail_3763f70d},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_directional_set_shadow_mode_b83eebe", (void*)godot_icall_VisualServer_light_directional_set_shadow_mode_b83eebe},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_directional_set_blend_splits_56de082b", (void*)godot_icall_VisualServer_light_directional_set_blend_splits_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_light_directional_set_shadow_depth_range_mode_8a710de8", (void*)godot_icall_VisualServer_light_directional_set_shadow_depth_range_mode_8a710de8},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_create_6623661e", (void*)godot_icall_VisualServer_reflection_probe_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_set_update_mode_18f1538c", (void*)godot_icall_VisualServer_reflection_probe_set_update_mode_18f1538c},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_set_intensity_70bf90fb", (void*)godot_icall_VisualServer_reflection_probe_set_intensity_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_set_interior_ambient_1e215388", (void*)godot_icall_VisualServer_reflection_probe_set_interior_ambient_1e215388},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_set_interior_ambient_energy_70bf90fb", (void*)godot_icall_VisualServer_reflection_probe_set_interior_ambient_energy_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_set_interior_ambient_probe_contribution_70bf90fb", (void*)godot_icall_VisualServer_reflection_probe_set_interior_ambient_probe_contribution_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_set_max_distance_70bf90fb", (void*)godot_icall_VisualServer_reflection_probe_set_max_distance_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_set_extents_832e4d15", (void*)godot_icall_VisualServer_reflection_probe_set_extents_832e4d15},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_set_origin_offset_832e4d15", (void*)godot_icall_VisualServer_reflection_probe_set_origin_offset_832e4d15},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_set_as_interior_56de082b", (void*)godot_icall_VisualServer_reflection_probe_set_as_interior_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_set_enable_box_projection_56de082b", (void*)godot_icall_VisualServer_reflection_probe_set_enable_box_projection_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_set_enable_shadows_56de082b", (void*)godot_icall_VisualServer_reflection_probe_set_enable_shadows_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_reflection_probe_set_cull_mask_7aa831af", (void*)godot_icall_VisualServer_reflection_probe_set_cull_mask_7aa831af},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_create_6623661e", (void*)godot_icall_VisualServer_gi_probe_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_set_bounds_119d5c29", (void*)godot_icall_VisualServer_gi_probe_set_bounds_119d5c29},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_get_bounds_52100836", (void*)godot_icall_VisualServer_gi_probe_get_bounds_52100836},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_set_cell_size_70bf90fb", (void*)godot_icall_VisualServer_gi_probe_set_cell_size_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_get_cell_size_8194d7a8", (void*)godot_icall_VisualServer_gi_probe_get_cell_size_8194d7a8},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_set_to_cell_xform_8bd903e9", (void*)godot_icall_VisualServer_gi_probe_set_to_cell_xform_8bd903e9},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_get_to_cell_xform_8fc9bb26", (void*)godot_icall_VisualServer_gi_probe_get_to_cell_xform_8fc9bb26},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_set_dynamic_data_15f60597", (void*)godot_icall_VisualServer_gi_probe_set_dynamic_data_15f60597},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_get_dynamic_data_be6d4707", (void*)godot_icall_VisualServer_gi_probe_get_dynamic_data_be6d4707},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_set_dynamic_range_f6439f2", (void*)godot_icall_VisualServer_gi_probe_set_dynamic_range_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_get_dynamic_range_f1d0c933", (void*)godot_icall_VisualServer_gi_probe_get_dynamic_range_f1d0c933},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_set_energy_70bf90fb", (void*)godot_icall_VisualServer_gi_probe_set_energy_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_get_energy_8194d7a8", (void*)godot_icall_VisualServer_gi_probe_get_energy_8194d7a8},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_set_bias_70bf90fb", (void*)godot_icall_VisualServer_gi_probe_set_bias_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_get_bias_8194d7a8", (void*)godot_icall_VisualServer_gi_probe_get_bias_8194d7a8},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_set_normal_bias_70bf90fb", (void*)godot_icall_VisualServer_gi_probe_set_normal_bias_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_get_normal_bias_8194d7a8", (void*)godot_icall_VisualServer_gi_probe_get_normal_bias_8194d7a8},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_set_propagation_70bf90fb", (void*)godot_icall_VisualServer_gi_probe_set_propagation_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_get_propagation_8194d7a8", (void*)godot_icall_VisualServer_gi_probe_get_propagation_8194d7a8},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_set_interior_56de082b", (void*)godot_icall_VisualServer_gi_probe_set_interior_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_is_interior_36cc12b4", (void*)godot_icall_VisualServer_gi_probe_is_interior_36cc12b4},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_set_compress_56de082b", (void*)godot_icall_VisualServer_gi_probe_set_compress_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_gi_probe_is_compressed_36cc12b4", (void*)godot_icall_VisualServer_gi_probe_is_compressed_36cc12b4},
	{"Godot.NativeCalls::godot_icall_VisualServer_lightmap_capture_create_6623661e", (void*)godot_icall_VisualServer_lightmap_capture_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_lightmap_capture_set_bounds_119d5c29", (void*)godot_icall_VisualServer_lightmap_capture_set_bounds_119d5c29},
	{"Godot.NativeCalls::godot_icall_VisualServer_lightmap_capture_get_bounds_52100836", (void*)godot_icall_VisualServer_lightmap_capture_get_bounds_52100836},
	{"Godot.NativeCalls::godot_icall_VisualServer_lightmap_capture_set_octree_36cf44fe", (void*)godot_icall_VisualServer_lightmap_capture_set_octree_36cf44fe},
	{"Godot.NativeCalls::godot_icall_VisualServer_lightmap_capture_set_octree_cell_transform_8bd903e9", (void*)godot_icall_VisualServer_lightmap_capture_set_octree_cell_transform_8bd903e9},
	{"Godot.NativeCalls::godot_icall_VisualServer_lightmap_capture_get_octree_cell_transform_8fc9bb26", (void*)godot_icall_VisualServer_lightmap_capture_get_octree_cell_transform_8fc9bb26},
	{"Godot.NativeCalls::godot_icall_VisualServer_lightmap_capture_set_octree_cell_subdiv_f6439f2", (void*)godot_icall_VisualServer_lightmap_capture_set_octree_cell_subdiv_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_lightmap_capture_get_octree_cell_subdiv_f1d0c933", (void*)godot_icall_VisualServer_lightmap_capture_get_octree_cell_subdiv_f1d0c933},
	{"Godot.NativeCalls::godot_icall_VisualServer_lightmap_capture_get_octree_4aec9864", (void*)godot_icall_VisualServer_lightmap_capture_get_octree_4aec9864},
	{"Godot.NativeCalls::godot_icall_VisualServer_lightmap_capture_set_energy_70bf90fb", (void*)godot_icall_VisualServer_lightmap_capture_set_energy_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_lightmap_capture_get_energy_8194d7a8", (void*)godot_icall_VisualServer_lightmap_capture_get_energy_8194d7a8},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_create_6623661e", (void*)godot_icall_VisualServer_particles_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_emitting_56de082b", (void*)godot_icall_VisualServer_particles_set_emitting_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_get_emitting_36cc12b4", (void*)godot_icall_VisualServer_particles_get_emitting_36cc12b4},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_amount_f6439f2", (void*)godot_icall_VisualServer_particles_set_amount_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_lifetime_70bf90fb", (void*)godot_icall_VisualServer_particles_set_lifetime_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_one_shot_56de082b", (void*)godot_icall_VisualServer_particles_set_one_shot_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_pre_process_time_70bf90fb", (void*)godot_icall_VisualServer_particles_set_pre_process_time_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_explosiveness_ratio_70bf90fb", (void*)godot_icall_VisualServer_particles_set_explosiveness_ratio_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_randomness_ratio_70bf90fb", (void*)godot_icall_VisualServer_particles_set_randomness_ratio_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_custom_aabb_119d5c29", (void*)godot_icall_VisualServer_particles_set_custom_aabb_119d5c29},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_speed_scale_70bf90fb", (void*)godot_icall_VisualServer_particles_set_speed_scale_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_use_local_coordinates_56de082b", (void*)godot_icall_VisualServer_particles_set_use_local_coordinates_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_process_material_48010164", (void*)godot_icall_VisualServer_particles_set_process_material_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_fixed_fps_f6439f2", (void*)godot_icall_VisualServer_particles_set_fixed_fps_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_fractional_delta_56de082b", (void*)godot_icall_VisualServer_particles_set_fractional_delta_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_is_inactive_36cc12b4", (void*)godot_icall_VisualServer_particles_is_inactive_36cc12b4},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_request_process_a7039b4e", (void*)godot_icall_VisualServer_particles_request_process_a7039b4e},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_restart_a7039b4e", (void*)godot_icall_VisualServer_particles_restart_a7039b4e},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_draw_order_2116323a", (void*)godot_icall_VisualServer_particles_set_draw_order_2116323a},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_draw_passes_f6439f2", (void*)godot_icall_VisualServer_particles_set_draw_passes_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_draw_pass_mesh_ee265321", (void*)godot_icall_VisualServer_particles_set_draw_pass_mesh_ee265321},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_get_current_aabb_52100836", (void*)godot_icall_VisualServer_particles_get_current_aabb_52100836},
	{"Godot.NativeCalls::godot_icall_VisualServer_particles_set_emission_transform_8bd903e9", (void*)godot_icall_VisualServer_particles_set_emission_transform_8bd903e9},
	{"Godot.NativeCalls::godot_icall_VisualServer_camera_create_6623661e", (void*)godot_icall_VisualServer_camera_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_camera_set_perspective_2ce495d3", (void*)godot_icall_VisualServer_camera_set_perspective_2ce495d3},
	{"Godot.NativeCalls::godot_icall_VisualServer_camera_set_orthogonal_2ce495d3", (void*)godot_icall_VisualServer_camera_set_orthogonal_2ce495d3},
	{"Godot.NativeCalls::godot_icall_VisualServer_camera_set_frustum_4f380ef6", (void*)godot_icall_VisualServer_camera_set_frustum_4f380ef6},
	{"Godot.NativeCalls::godot_icall_VisualServer_camera_set_transform_8bd903e9", (void*)godot_icall_VisualServer_camera_set_transform_8bd903e9},
	{"Godot.NativeCalls::godot_icall_VisualServer_camera_set_cull_mask_7aa831af", (void*)godot_icall_VisualServer_camera_set_cull_mask_7aa831af},
	{"Godot.NativeCalls::godot_icall_VisualServer_camera_set_environment_48010164", (void*)godot_icall_VisualServer_camera_set_environment_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_camera_set_use_vertical_aspect_56de082b", (void*)godot_icall_VisualServer_camera_set_use_vertical_aspect_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_create_6623661e", (void*)godot_icall_VisualServer_viewport_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_use_arvr_56de082b", (void*)godot_icall_VisualServer_viewport_set_use_arvr_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_size_95c34a97", (void*)godot_icall_VisualServer_viewport_set_size_95c34a97},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_active_56de082b", (void*)godot_icall_VisualServer_viewport_set_active_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_parent_viewport_48010164", (void*)godot_icall_VisualServer_viewport_set_parent_viewport_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_attach_to_screen_d383bf44", (void*)godot_icall_VisualServer_viewport_attach_to_screen_d383bf44},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_render_direct_to_screen_56de082b", (void*)godot_icall_VisualServer_viewport_set_render_direct_to_screen_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_detach_a7039b4e", (void*)godot_icall_VisualServer_viewport_detach_a7039b4e},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_update_mode_bad8d8b7", (void*)godot_icall_VisualServer_viewport_set_update_mode_bad8d8b7},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_vflip_56de082b", (void*)godot_icall_VisualServer_viewport_set_vflip_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_clear_mode_1216a651", (void*)godot_icall_VisualServer_viewport_set_clear_mode_1216a651},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_get_texture_c09e26c0", (void*)godot_icall_VisualServer_viewport_get_texture_c09e26c0},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_hide_scenario_56de082b", (void*)godot_icall_VisualServer_viewport_set_hide_scenario_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_hide_canvas_56de082b", (void*)godot_icall_VisualServer_viewport_set_hide_canvas_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_disable_environment_56de082b", (void*)godot_icall_VisualServer_viewport_set_disable_environment_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_disable_3d_56de082b", (void*)godot_icall_VisualServer_viewport_set_disable_3d_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_attach_camera_48010164", (void*)godot_icall_VisualServer_viewport_attach_camera_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_scenario_48010164", (void*)godot_icall_VisualServer_viewport_set_scenario_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_attach_canvas_48010164", (void*)godot_icall_VisualServer_viewport_attach_canvas_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_remove_canvas_48010164", (void*)godot_icall_VisualServer_viewport_remove_canvas_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_canvas_transform_f5bd827b", (void*)godot_icall_VisualServer_viewport_set_canvas_transform_f5bd827b},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_transparent_background_56de082b", (void*)godot_icall_VisualServer_viewport_set_transparent_background_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_global_canvas_transform_31203f57", (void*)godot_icall_VisualServer_viewport_set_global_canvas_transform_31203f57},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_canvas_stacking_7c21f2b4", (void*)godot_icall_VisualServer_viewport_set_canvas_stacking_7c21f2b4},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_shadow_atlas_size_f6439f2", (void*)godot_icall_VisualServer_viewport_set_shadow_atlas_size_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_shadow_atlas_quadrant_subdivision_95c34a97", (void*)godot_icall_VisualServer_viewport_set_shadow_atlas_quadrant_subdivision_95c34a97},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_msaa_f70eaa53", (void*)godot_icall_VisualServer_viewport_set_msaa_f70eaa53},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_hdr_56de082b", (void*)godot_icall_VisualServer_viewport_set_hdr_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_usage_baeacd0a", (void*)godot_icall_VisualServer_viewport_set_usage_baeacd0a},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_get_render_info_2b622867", (void*)godot_icall_VisualServer_viewport_get_render_info_2b622867},
	{"Godot.NativeCalls::godot_icall_VisualServer_viewport_set_debug_draw_99186904", (void*)godot_icall_VisualServer_viewport_set_debug_draw_99186904},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_create_6623661e", (void*)godot_icall_VisualServer_environment_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_background_44fcf58b", (void*)godot_icall_VisualServer_environment_set_background_44fcf58b},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_sky_48010164", (void*)godot_icall_VisualServer_environment_set_sky_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_sky_custom_fov_70bf90fb", (void*)godot_icall_VisualServer_environment_set_sky_custom_fov_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_sky_orientation_77266e47", (void*)godot_icall_VisualServer_environment_set_sky_orientation_77266e47},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_bg_color_1e215388", (void*)godot_icall_VisualServer_environment_set_bg_color_1e215388},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_bg_energy_70bf90fb", (void*)godot_icall_VisualServer_environment_set_bg_energy_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_canvas_max_layer_f6439f2", (void*)godot_icall_VisualServer_environment_set_canvas_max_layer_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_ambient_light_db2fa099", (void*)godot_icall_VisualServer_environment_set_ambient_light_db2fa099},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_dof_blur_near_e2a0d508", (void*)godot_icall_VisualServer_environment_set_dof_blur_near_e2a0d508},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_dof_blur_far_e2a0d508", (void*)godot_icall_VisualServer_environment_set_dof_blur_far_e2a0d508},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_glow_992e7e68", (void*)godot_icall_VisualServer_environment_set_glow_992e7e68},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_tonemap_42b444ac", (void*)godot_icall_VisualServer_environment_set_tonemap_42b444ac},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_adjustment_4e39fe6d", (void*)godot_icall_VisualServer_environment_set_adjustment_4e39fe6d},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_ssr_9d280ac6", (void*)godot_icall_VisualServer_environment_set_ssr_9d280ac6},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_ssao_fef26a51", (void*)godot_icall_VisualServer_environment_set_ssao_fef26a51},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_fog_c4839c63", (void*)godot_icall_VisualServer_environment_set_fog_c4839c63},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_fog_depth_9c4190e4", (void*)godot_icall_VisualServer_environment_set_fog_depth_9c4190e4},
	{"Godot.NativeCalls::godot_icall_VisualServer_environment_set_fog_height_25765caf", (void*)godot_icall_VisualServer_environment_set_fog_height_25765caf},
	{"Godot.NativeCalls::godot_icall_VisualServer_scenario_create_6623661e", (void*)godot_icall_VisualServer_scenario_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_scenario_set_debug_35ba1cb3", (void*)godot_icall_VisualServer_scenario_set_debug_35ba1cb3},
	{"Godot.NativeCalls::godot_icall_VisualServer_scenario_set_environment_48010164", (void*)godot_icall_VisualServer_scenario_set_environment_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_scenario_set_reflection_atlas_size_95c34a97", (void*)godot_icall_VisualServer_scenario_set_reflection_atlas_size_95c34a97},
	{"Godot.NativeCalls::godot_icall_VisualServer_scenario_set_fallback_environment_48010164", (void*)godot_icall_VisualServer_scenario_set_fallback_environment_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_create2_9c923f47", (void*)godot_icall_VisualServer_instance_create2_9c923f47},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_create_6623661e", (void*)godot_icall_VisualServer_instance_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_set_base_48010164", (void*)godot_icall_VisualServer_instance_set_base_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_set_scenario_48010164", (void*)godot_icall_VisualServer_instance_set_scenario_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_set_layer_mask_7aa831af", (void*)godot_icall_VisualServer_instance_set_layer_mask_7aa831af},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_set_transform_8bd903e9", (void*)godot_icall_VisualServer_instance_set_transform_8bd903e9},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_attach_object_instance_id_73956c1a", (void*)godot_icall_VisualServer_instance_attach_object_instance_id_73956c1a},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_set_blend_shape_weight_c69fe5ac", (void*)godot_icall_VisualServer_instance_set_blend_shape_weight_c69fe5ac},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_set_surface_material_ee265321", (void*)godot_icall_VisualServer_instance_set_surface_material_ee265321},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_set_visible_56de082b", (void*)godot_icall_VisualServer_instance_set_visible_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_set_use_lightmap_5e9a7854", (void*)godot_icall_VisualServer_instance_set_use_lightmap_5e9a7854},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_set_custom_aabb_119d5c29", (void*)godot_icall_VisualServer_instance_set_custom_aabb_119d5c29},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_attach_skeleton_48010164", (void*)godot_icall_VisualServer_instance_attach_skeleton_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_set_extra_visibility_margin_70bf90fb", (void*)godot_icall_VisualServer_instance_set_extra_visibility_margin_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_geometry_set_flag_5bd5be2", (void*)godot_icall_VisualServer_instance_geometry_set_flag_5bd5be2},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_geometry_set_cast_shadows_setting_4480f47e", (void*)godot_icall_VisualServer_instance_geometry_set_cast_shadows_setting_4480f47e},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_geometry_set_material_override_48010164", (void*)godot_icall_VisualServer_instance_geometry_set_material_override_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_geometry_set_draw_range_1d967e45", (void*)godot_icall_VisualServer_instance_geometry_set_draw_range_1d967e45},
	{"Godot.NativeCalls::godot_icall_VisualServer_instance_geometry_set_as_instance_lod_48010164", (void*)godot_icall_VisualServer_instance_geometry_set_as_instance_lod_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_instances_cull_aabb_2b028f03", (void*)godot_icall_VisualServer_instances_cull_aabb_2b028f03},
	{"Godot.NativeCalls::godot_icall_VisualServer_instances_cull_ray_bf50cee2", (void*)godot_icall_VisualServer_instances_cull_ray_bf50cee2},
	{"Godot.NativeCalls::godot_icall_VisualServer_instances_cull_convex_1c79d9ea", (void*)godot_icall_VisualServer_instances_cull_convex_1c79d9ea},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_create_6623661e", (void*)godot_icall_VisualServer_canvas_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_set_item_mirroring_3c7b404", (void*)godot_icall_VisualServer_canvas_set_item_mirroring_3c7b404},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_set_modulate_1e215388", (void*)godot_icall_VisualServer_canvas_set_modulate_1e215388},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_create_6623661e", (void*)godot_icall_VisualServer_canvas_item_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_parent_48010164", (void*)godot_icall_VisualServer_canvas_item_set_parent_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_visible_56de082b", (void*)godot_icall_VisualServer_canvas_item_set_visible_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_light_mask_f6439f2", (void*)godot_icall_VisualServer_canvas_item_set_light_mask_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_transform_31203f57", (void*)godot_icall_VisualServer_canvas_item_set_transform_31203f57},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_clip_56de082b", (void*)godot_icall_VisualServer_canvas_item_set_clip_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_distance_field_mode_56de082b", (void*)godot_icall_VisualServer_canvas_item_set_distance_field_mode_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_custom_rect_986bcedd", (void*)godot_icall_VisualServer_canvas_item_set_custom_rect_986bcedd},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_modulate_1e215388", (void*)godot_icall_VisualServer_canvas_item_set_modulate_1e215388},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_self_modulate_1e215388", (void*)godot_icall_VisualServer_canvas_item_set_self_modulate_1e215388},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_draw_behind_parent_56de082b", (void*)godot_icall_VisualServer_canvas_item_set_draw_behind_parent_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_line_43ef7a80", (void*)godot_icall_VisualServer_canvas_item_add_line_43ef7a80},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_polyline_6e0e11b1", (void*)godot_icall_VisualServer_canvas_item_add_polyline_6e0e11b1},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_rect_e27e994e", (void*)godot_icall_VisualServer_canvas_item_add_rect_e27e994e},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_circle_2636f0ec", (void*)godot_icall_VisualServer_canvas_item_add_circle_2636f0ec},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_texture_rect_797e8552", (void*)godot_icall_VisualServer_canvas_item_add_texture_rect_797e8552},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_texture_rect_region_f589e103", (void*)godot_icall_VisualServer_canvas_item_add_texture_rect_region_f589e103},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_nine_patch_1c8b0919", (void*)godot_icall_VisualServer_canvas_item_add_nine_patch_1c8b0919},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_primitive_ddcd3815", (void*)godot_icall_VisualServer_canvas_item_add_primitive_ddcd3815},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_polygon_3746c075", (void*)godot_icall_VisualServer_canvas_item_add_polygon_3746c075},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_triangle_array_73226e70", (void*)godot_icall_VisualServer_canvas_item_add_triangle_array_73226e70},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_mesh_9aacf2fa", (void*)godot_icall_VisualServer_canvas_item_add_mesh_9aacf2fa},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_multimesh_9c05eab8", (void*)godot_icall_VisualServer_canvas_item_add_multimesh_9c05eab8},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_particles_9c05eab8", (void*)godot_icall_VisualServer_canvas_item_add_particles_9c05eab8},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_set_transform_31203f57", (void*)godot_icall_VisualServer_canvas_item_add_set_transform_31203f57},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_add_clip_ignore_56de082b", (void*)godot_icall_VisualServer_canvas_item_add_clip_ignore_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_sort_children_by_y_56de082b", (void*)godot_icall_VisualServer_canvas_item_set_sort_children_by_y_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_z_index_f6439f2", (void*)godot_icall_VisualServer_canvas_item_set_z_index_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_z_as_relative_to_parent_56de082b", (void*)godot_icall_VisualServer_canvas_item_set_z_as_relative_to_parent_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_copy_to_backbuffer_986bcedd", (void*)godot_icall_VisualServer_canvas_item_set_copy_to_backbuffer_986bcedd},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_clear_a7039b4e", (void*)godot_icall_VisualServer_canvas_item_clear_a7039b4e},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_draw_index_f6439f2", (void*)godot_icall_VisualServer_canvas_item_set_draw_index_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_material_48010164", (void*)godot_icall_VisualServer_canvas_item_set_material_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_item_set_use_parent_material_56de082b", (void*)godot_icall_VisualServer_canvas_item_set_use_parent_material_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_create_6623661e", (void*)godot_icall_VisualServer_canvas_light_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_attach_to_canvas_48010164", (void*)godot_icall_VisualServer_canvas_light_attach_to_canvas_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_enabled_56de082b", (void*)godot_icall_VisualServer_canvas_light_set_enabled_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_scale_70bf90fb", (void*)godot_icall_VisualServer_canvas_light_set_scale_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_transform_31203f57", (void*)godot_icall_VisualServer_canvas_light_set_transform_31203f57},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_texture_48010164", (void*)godot_icall_VisualServer_canvas_light_set_texture_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_texture_offset_832e4d14", (void*)godot_icall_VisualServer_canvas_light_set_texture_offset_832e4d14},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_color_1e215388", (void*)godot_icall_VisualServer_canvas_light_set_color_1e215388},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_height_70bf90fb", (void*)godot_icall_VisualServer_canvas_light_set_height_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_energy_70bf90fb", (void*)godot_icall_VisualServer_canvas_light_set_energy_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_z_range_95c34a97", (void*)godot_icall_VisualServer_canvas_light_set_z_range_95c34a97},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_layer_range_95c34a97", (void*)godot_icall_VisualServer_canvas_light_set_layer_range_95c34a97},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_item_cull_mask_f6439f2", (void*)godot_icall_VisualServer_canvas_light_set_item_cull_mask_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_item_shadow_cull_mask_f6439f2", (void*)godot_icall_VisualServer_canvas_light_set_item_shadow_cull_mask_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_mode_4bae9d4c", (void*)godot_icall_VisualServer_canvas_light_set_mode_4bae9d4c},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_shadow_enabled_56de082b", (void*)godot_icall_VisualServer_canvas_light_set_shadow_enabled_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_shadow_buffer_size_f6439f2", (void*)godot_icall_VisualServer_canvas_light_set_shadow_buffer_size_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_shadow_gradient_length_70bf90fb", (void*)godot_icall_VisualServer_canvas_light_set_shadow_gradient_length_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_shadow_filter_a083ca93", (void*)godot_icall_VisualServer_canvas_light_set_shadow_filter_a083ca93},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_shadow_color_1e215388", (void*)godot_icall_VisualServer_canvas_light_set_shadow_color_1e215388},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_set_shadow_smooth_70bf90fb", (void*)godot_icall_VisualServer_canvas_light_set_shadow_smooth_70bf90fb},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_occluder_create_6623661e", (void*)godot_icall_VisualServer_canvas_light_occluder_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_occluder_attach_to_canvas_48010164", (void*)godot_icall_VisualServer_canvas_light_occluder_attach_to_canvas_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_occluder_set_enabled_56de082b", (void*)godot_icall_VisualServer_canvas_light_occluder_set_enabled_56de082b},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_occluder_set_polygon_48010164", (void*)godot_icall_VisualServer_canvas_light_occluder_set_polygon_48010164},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_occluder_set_transform_31203f57", (void*)godot_icall_VisualServer_canvas_light_occluder_set_transform_31203f57},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_light_occluder_set_light_mask_f6439f2", (void*)godot_icall_VisualServer_canvas_light_occluder_set_light_mask_f6439f2},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_occluder_polygon_create_6623661e", (void*)godot_icall_VisualServer_canvas_occluder_polygon_create_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_occluder_polygon_set_shape_f698a253", (void*)godot_icall_VisualServer_canvas_occluder_polygon_set_shape_f698a253},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_occluder_polygon_set_shape_as_lines_c7e12dae", (void*)godot_icall_VisualServer_canvas_occluder_polygon_set_shape_as_lines_c7e12dae},
	{"Godot.NativeCalls::godot_icall_VisualServer_canvas_occluder_polygon_set_cull_mode_1096e63d", (void*)godot_icall_VisualServer_canvas_occluder_polygon_set_cull_mode_1096e63d},
	{"Godot.NativeCalls::godot_icall_VisualServer_black_bars_set_margins_2b70940c", (void*)godot_icall_VisualServer_black_bars_set_margins_2b70940c},
	{"Godot.NativeCalls::godot_icall_VisualServer_black_bars_set_images_9c05eab8", (void*)godot_icall_VisualServer_black_bars_set_images_9c05eab8},
	{"Godot.NativeCalls::godot_icall_VisualServer_free_rid_a7039b4e", (void*)godot_icall_VisualServer_free_rid_a7039b4e},
	{"Godot.NativeCalls::godot_icall_VisualServer_request_frame_drawn_callback_eca64843", (void*)godot_icall_VisualServer_request_frame_drawn_callback_eca64843},
	{"Godot.NativeCalls::godot_icall_VisualServer_has_changed_68fe5f59", (void*)godot_icall_VisualServer_has_changed_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VisualServer_init_c8e54a7b", (void*)godot_icall_VisualServer_init_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_VisualServer_finish_c8e54a7b", (void*)godot_icall_VisualServer_finish_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_VisualServer_get_render_info_c9bad872", (void*)godot_icall_VisualServer_get_render_info_c9bad872},
	{"Godot.NativeCalls::godot_icall_VisualServer_make_sphere_mesh_6732e4a6", (void*)godot_icall_VisualServer_make_sphere_mesh_6732e4a6},
	{"Godot.NativeCalls::godot_icall_VisualServer_get_test_cube_6623661e", (void*)godot_icall_VisualServer_get_test_cube_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_get_test_texture_6623661e", (void*)godot_icall_VisualServer_get_test_texture_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_get_white_texture_6623661e", (void*)godot_icall_VisualServer_get_white_texture_6623661e},
	{"Godot.NativeCalls::godot_icall_VisualServer_set_boot_image_f6359177", (void*)godot_icall_VisualServer_set_boot_image_f6359177},
	{"Godot.NativeCalls::godot_icall_VisualServer_set_default_clear_color_f2e3b5aa", (void*)godot_icall_VisualServer_set_default_clear_color_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_VisualServer_has_feature_d61c266", (void*)godot_icall_VisualServer_has_feature_d61c266},
	{"Godot.NativeCalls::godot_icall_VisualServer_has_os_feature_bee64043", (void*)godot_icall_VisualServer_has_os_feature_bee64043},
	{"Godot.NativeCalls::godot_icall_VisualServer_set_debug_generate_wireframes_ba24800b", (void*)godot_icall_VisualServer_set_debug_generate_wireframes_ba24800b},
	{"Godot.NativeCalls::godot_icall_VisualShader_set_mode_61668cc9", (void*)godot_icall_VisualShader_set_mode_61668cc9},
	{"Godot.NativeCalls::godot_icall_VisualShader_add_node_b2083941", (void*)godot_icall_VisualShader_add_node_b2083941},
	{"Godot.NativeCalls::godot_icall_VisualShader_get_node_81445b1a", (void*)godot_icall_VisualShader_get_node_81445b1a},
	{"Godot.NativeCalls::godot_icall_VisualShader_set_node_position_a00a70f9", (void*)godot_icall_VisualShader_set_node_position_a00a70f9},
	{"Godot.NativeCalls::godot_icall_VisualShader_get_node_position_f2f09061", (void*)godot_icall_VisualShader_get_node_position_f2f09061},
	{"Godot.NativeCalls::godot_icall_VisualShader_get_node_list_5d9314e9", (void*)godot_icall_VisualShader_get_node_list_5d9314e9},
	{"Godot.NativeCalls::godot_icall_VisualShader_get_valid_node_id_ceea996d", (void*)godot_icall_VisualShader_get_valid_node_id_ceea996d},
	{"Godot.NativeCalls::godot_icall_VisualShader_remove_node_f3746b92", (void*)godot_icall_VisualShader_remove_node_f3746b92},
	{"Godot.NativeCalls::godot_icall_VisualShader_is_node_connection_a2a4343", (void*)godot_icall_VisualShader_is_node_connection_a2a4343},
	{"Godot.NativeCalls::godot_icall_VisualShader_can_connect_nodes_a2a4343", (void*)godot_icall_VisualShader_can_connect_nodes_a2a4343},
	{"Godot.NativeCalls::godot_icall_VisualShader_connect_nodes_f669495b", (void*)godot_icall_VisualShader_connect_nodes_f669495b},
	{"Godot.NativeCalls::godot_icall_VisualShader_disconnect_nodes_658fa4ef", (void*)godot_icall_VisualShader_disconnect_nodes_658fa4ef},
	{"Godot.NativeCalls::godot_icall_VisualShader_connect_nodes_forced_658fa4ef", (void*)godot_icall_VisualShader_connect_nodes_forced_658fa4ef},
	{"Godot.NativeCalls::godot_icall_VisualShader_get_node_connections_c6454732", (void*)godot_icall_VisualShader_get_node_connections_c6454732},
	{"Godot.NativeCalls::godot_icall_VisualShader_set_graph_offset_6df7471e", (void*)godot_icall_VisualShader_set_graph_offset_6df7471e},
	{"Godot.NativeCalls::godot_icall_VisualShader_get_graph_offset_9b4ea24e", (void*)godot_icall_VisualShader_get_graph_offset_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNode_set_output_port_for_preview_e1ae93bc", (void*)godot_icall_VisualShaderNode_set_output_port_for_preview_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_VisualShaderNode_get_output_port_for_preview_1f886eb0", (void*)godot_icall_VisualShaderNode_get_output_port_for_preview_1f886eb0},
	{"Godot.NativeCalls::godot_icall_VisualShaderNode_set_input_port_default_value_37bef04", (void*)godot_icall_VisualShaderNode_set_input_port_default_value_37bef04},
	{"Godot.NativeCalls::godot_icall_VisualShaderNode_get_input_port_default_value_a9b2673d", (void*)godot_icall_VisualShaderNode_get_input_port_default_value_a9b2673d},
	{"Godot.NativeCalls::godot_icall_VisualShaderNode__set_default_input_values_2923a790", (void*)godot_icall_VisualShaderNode__set_default_input_values_2923a790},
	{"Godot.NativeCalls::godot_icall_VisualShaderNode__get_default_input_values_d80382d4", (void*)godot_icall_VisualShaderNode__get_default_input_values_d80382d4},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeBooleanConstant_set_constant_ba24800b", (void*)godot_icall_VisualShaderNodeBooleanConstant_set_constant_ba24800b},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeBooleanConstant_get_constant_68fe5f59", (void*)godot_icall_VisualShaderNodeBooleanConstant_get_constant_68fe5f59},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeColorConstant_set_constant_f2e3b5aa", (void*)godot_icall_VisualShaderNodeColorConstant_set_constant_f2e3b5aa},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeColorConstant_get_constant_304394ba", (void*)godot_icall_VisualShaderNodeColorConstant_get_constant_304394ba},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeColorFunc_set_function_b4d15653", (void*)godot_icall_VisualShaderNodeColorFunc_set_function_b4d15653},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeColorFunc_get_function_9f2d925e", (void*)godot_icall_VisualShaderNodeColorFunc_get_function_9f2d925e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeColorOp_set_operator_a2017d08", (void*)godot_icall_VisualShaderNodeColorOp_set_operator_a2017d08},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeColorOp_get_operator_75b0716b", (void*)godot_icall_VisualShaderNodeColorOp_get_operator_75b0716b},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCompare_set_comparison_type_998ecb8", (void*)godot_icall_VisualShaderNodeCompare_set_comparison_type_998ecb8},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCompare_get_comparison_type_b7ba3bac", (void*)godot_icall_VisualShaderNodeCompare_get_comparison_type_b7ba3bac},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCompare_set_function_139133a9", (void*)godot_icall_VisualShaderNodeCompare_set_function_139133a9},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCompare_get_function_6bc34884", (void*)godot_icall_VisualShaderNodeCompare_get_function_6bc34884},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCompare_set_condition_f995c042", (void*)godot_icall_VisualShaderNodeCompare_set_condition_f995c042},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCompare_get_condition_b2065d2d", (void*)godot_icall_VisualShaderNodeCompare_get_condition_b2065d2d},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCubeMap_set_source_4d9ad2a", (void*)godot_icall_VisualShaderNodeCubeMap_set_source_4d9ad2a},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCubeMap_get_source_520e41e5", (void*)godot_icall_VisualShaderNodeCubeMap_get_source_520e41e5},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCubeMap_set_cube_map_1060ecb0", (void*)godot_icall_VisualShaderNodeCubeMap_set_cube_map_1060ecb0},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCubeMap_get_cube_map_cec23bb4", (void*)godot_icall_VisualShaderNodeCubeMap_get_cube_map_cec23bb4},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCubeMap_set_texture_type_76fd5fae", (void*)godot_icall_VisualShaderNodeCubeMap_set_texture_type_76fd5fae},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeCubeMap_get_texture_type_144f4429", (void*)godot_icall_VisualShaderNodeCubeMap_get_texture_type_144f4429},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeExpression_set_expression_6964ff3e", (void*)godot_icall_VisualShaderNodeExpression_set_expression_6964ff3e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeExpression_get_expression_97be4a2e", (void*)godot_icall_VisualShaderNodeExpression_get_expression_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_set_size_6df7471e", (void*)godot_icall_VisualShaderNodeGroupBase_set_size_6df7471e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_get_size_9b4ea24e", (void*)godot_icall_VisualShaderNodeGroupBase_get_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_set_inputs_6964ff3e", (void*)godot_icall_VisualShaderNodeGroupBase_set_inputs_6964ff3e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_get_inputs_97be4a2e", (void*)godot_icall_VisualShaderNodeGroupBase_get_inputs_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_set_outputs_6964ff3e", (void*)godot_icall_VisualShaderNodeGroupBase_set_outputs_6964ff3e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_get_outputs_97be4a2e", (void*)godot_icall_VisualShaderNodeGroupBase_get_outputs_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_is_valid_port_name_e7336ea4", (void*)godot_icall_VisualShaderNodeGroupBase_is_valid_port_name_e7336ea4},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_add_input_port_f5af9704", (void*)godot_icall_VisualShaderNodeGroupBase_add_input_port_f5af9704},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_remove_input_port_e1ae93bc", (void*)godot_icall_VisualShaderNodeGroupBase_remove_input_port_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_get_input_port_count_1f886eb0", (void*)godot_icall_VisualShaderNodeGroupBase_get_input_port_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_has_input_port_7f690926", (void*)godot_icall_VisualShaderNodeGroupBase_has_input_port_7f690926},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_clear_input_ports_c8e54a7b", (void*)godot_icall_VisualShaderNodeGroupBase_clear_input_ports_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_add_output_port_f5af9704", (void*)godot_icall_VisualShaderNodeGroupBase_add_output_port_f5af9704},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_remove_output_port_e1ae93bc", (void*)godot_icall_VisualShaderNodeGroupBase_remove_output_port_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_get_output_port_count_1f886eb0", (void*)godot_icall_VisualShaderNodeGroupBase_get_output_port_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_has_output_port_7f690926", (void*)godot_icall_VisualShaderNodeGroupBase_has_output_port_7f690926},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_clear_output_ports_c8e54a7b", (void*)godot_icall_VisualShaderNodeGroupBase_clear_output_ports_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_set_input_port_name_3ba8c46a", (void*)godot_icall_VisualShaderNodeGroupBase_set_input_port_name_3ba8c46a},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_set_input_port_type_807eefe4", (void*)godot_icall_VisualShaderNodeGroupBase_set_input_port_type_807eefe4},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_set_output_port_name_3ba8c46a", (void*)godot_icall_VisualShaderNodeGroupBase_set_output_port_name_3ba8c46a},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_set_output_port_type_807eefe4", (void*)godot_icall_VisualShaderNodeGroupBase_set_output_port_type_807eefe4},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_get_free_input_port_id_1f886eb0", (void*)godot_icall_VisualShaderNodeGroupBase_get_free_input_port_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeGroupBase_get_free_output_port_id_1f886eb0", (void*)godot_icall_VisualShaderNodeGroupBase_get_free_output_port_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeInput_set_input_name_2f29e819", (void*)godot_icall_VisualShaderNodeInput_set_input_name_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeInput_get_input_name_97be4a2e", (void*)godot_icall_VisualShaderNodeInput_get_input_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeInput_get_input_real_name_97be4a2e", (void*)godot_icall_VisualShaderNodeInput_get_input_real_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeIs_set_function_dfa15874", (void*)godot_icall_VisualShaderNodeIs_set_function_dfa15874},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeIs_get_function_e0cc91a7", (void*)godot_icall_VisualShaderNodeIs_get_function_e0cc91a7},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarConstant_set_constant_904508bb", (void*)godot_icall_VisualShaderNodeScalarConstant_set_constant_904508bb},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarConstant_get_constant_4edcd7a9", (void*)godot_icall_VisualShaderNodeScalarConstant_get_constant_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarDerivativeFunc_set_function_14b3f72d", (void*)godot_icall_VisualShaderNodeScalarDerivativeFunc_set_function_14b3f72d},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarDerivativeFunc_get_function_b84f2bd8", (void*)godot_icall_VisualShaderNodeScalarDerivativeFunc_get_function_b84f2bd8},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarFunc_set_function_7a08afde", (void*)godot_icall_VisualShaderNodeScalarFunc_set_function_7a08afde},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarFunc_get_function_cb293e99", (void*)godot_icall_VisualShaderNodeScalarFunc_get_function_cb293e99},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarOp_set_operator_91af01f9", (void*)godot_icall_VisualShaderNodeScalarOp_set_operator_91af01f9},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarOp_get_operator_4f328214", (void*)godot_icall_VisualShaderNodeScalarOp_get_operator_4f328214},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarUniform_set_hint_e8b939b9", (void*)godot_icall_VisualShaderNodeScalarUniform_set_hint_e8b939b9},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarUniform_get_hint_dee4ff54", (void*)godot_icall_VisualShaderNodeScalarUniform_get_hint_dee4ff54},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarUniform_set_min_904508bb", (void*)godot_icall_VisualShaderNodeScalarUniform_set_min_904508bb},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarUniform_get_min_4edcd7a9", (void*)godot_icall_VisualShaderNodeScalarUniform_get_min_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarUniform_set_max_904508bb", (void*)godot_icall_VisualShaderNodeScalarUniform_set_max_904508bb},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarUniform_get_max_4edcd7a9", (void*)godot_icall_VisualShaderNodeScalarUniform_get_max_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarUniform_set_step_904508bb", (void*)godot_icall_VisualShaderNodeScalarUniform_set_step_904508bb},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeScalarUniform_get_step_4edcd7a9", (void*)godot_icall_VisualShaderNodeScalarUniform_get_step_4edcd7a9},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTexture_set_source_ed1e5f58", (void*)godot_icall_VisualShaderNodeTexture_set_source_ed1e5f58},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTexture_get_source_7c6576fb", (void*)godot_icall_VisualShaderNodeTexture_get_source_7c6576fb},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTexture_set_texture_7eecd31a", (void*)godot_icall_VisualShaderNodeTexture_set_texture_7eecd31a},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTexture_get_texture_ac462e4a", (void*)godot_icall_VisualShaderNodeTexture_get_texture_ac462e4a},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTexture_set_texture_type_4b749e4c", (void*)godot_icall_VisualShaderNodeTexture_set_texture_type_4b749e4c},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTexture_get_texture_type_9415d92f", (void*)godot_icall_VisualShaderNodeTexture_get_texture_type_9415d92f},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTextureUniform_set_texture_type_e6e6c5ba", (void*)godot_icall_VisualShaderNodeTextureUniform_set_texture_type_e6e6c5ba},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTextureUniform_get_texture_type_7a4baaf5", (void*)godot_icall_VisualShaderNodeTextureUniform_get_texture_type_7a4baaf5},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTextureUniform_set_color_default_d0089463", (void*)godot_icall_VisualShaderNodeTextureUniform_set_color_default_d0089463},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTextureUniform_get_color_default_e6d62cae", (void*)godot_icall_VisualShaderNodeTextureUniform_get_color_default_e6d62cae},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformConstant_set_constant_655b85c9", (void*)godot_icall_VisualShaderNodeTransformConstant_set_constant_655b85c9},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformConstant_get_constant_a3fb649b", (void*)godot_icall_VisualShaderNodeTransformConstant_get_constant_a3fb649b},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformFunc_set_function_c9eec626", (void*)godot_icall_VisualShaderNodeTransformFunc_set_function_c9eec626},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformFunc_get_function_8eefda91", (void*)godot_icall_VisualShaderNodeTransformFunc_get_function_8eefda91},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformMult_set_operator_35492466", (void*)godot_icall_VisualShaderNodeTransformMult_set_operator_35492466},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformMult_get_operator_c8117151", (void*)godot_icall_VisualShaderNodeTransformMult_get_operator_c8117151},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformVecMult_set_operator_f4c16934", (void*)godot_icall_VisualShaderNodeTransformVecMult_set_operator_f4c16934},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeTransformVecMult_get_operator_638287e7", (void*)godot_icall_VisualShaderNodeTransformVecMult_get_operator_638287e7},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeUniform_set_uniform_name_2f29e819", (void*)godot_icall_VisualShaderNodeUniform_set_uniform_name_2f29e819},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeUniform_get_uniform_name_97be4a2e", (void*)godot_icall_VisualShaderNodeUniform_get_uniform_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVec3Constant_set_constant_6df7471d", (void*)godot_icall_VisualShaderNodeVec3Constant_set_constant_6df7471d},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVec3Constant_get_constant_9b4ea24f", (void*)godot_icall_VisualShaderNodeVec3Constant_get_constant_9b4ea24f},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorDerivativeFunc_set_function_508eb658", (void*)godot_icall_VisualShaderNodeVectorDerivativeFunc_set_function_508eb658},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorDerivativeFunc_get_function_92bdcdfb", (void*)godot_icall_VisualShaderNodeVectorDerivativeFunc_get_function_92bdcdfb},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorFunc_set_function_defdcba7", (void*)godot_icall_VisualShaderNodeVectorFunc_set_function_defdcba7},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorFunc_get_function_5c74da02", (void*)godot_icall_VisualShaderNodeVectorFunc_get_function_5c74da02},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorOp_set_operator_9f193ec", (void*)godot_icall_VisualShaderNodeVectorOp_set_operator_9f193ec},
	{"Godot.NativeCalls::godot_icall_VisualShaderNodeVectorOp_get_operator_892e64f", (void*)godot_icall_VisualShaderNodeVectorOp_get_operator_892e64f},
	{"Godot.NativeCalls::godot_icall_WeakRef_get_ref_a08d6f10", (void*)godot_icall_WeakRef_get_ref_a08d6f10},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_poll_f04570f5", (void*)godot_icall_WebRTCDataChannel_poll_f04570f5},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_close_c8e54a7b", (void*)godot_icall_WebRTCDataChannel_close_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_was_string_packet_68fe5f59", (void*)godot_icall_WebRTCDataChannel_was_string_packet_68fe5f59},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_set_write_mode_9b123b57", (void*)godot_icall_WebRTCDataChannel_set_write_mode_9b123b57},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_get_write_mode_95aa6cf2", (void*)godot_icall_WebRTCDataChannel_get_write_mode_95aa6cf2},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_get_ready_state_e62958d3", (void*)godot_icall_WebRTCDataChannel_get_ready_state_e62958d3},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_get_label_97be4a2e", (void*)godot_icall_WebRTCDataChannel_get_label_97be4a2e},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_is_ordered_68fe5f59", (void*)godot_icall_WebRTCDataChannel_is_ordered_68fe5f59},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_get_id_1f886eb0", (void*)godot_icall_WebRTCDataChannel_get_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_get_max_packet_life_time_1f886eb0", (void*)godot_icall_WebRTCDataChannel_get_max_packet_life_time_1f886eb0},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_get_max_retransmits_1f886eb0", (void*)godot_icall_WebRTCDataChannel_get_max_retransmits_1f886eb0},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_get_protocol_97be4a2e", (void*)godot_icall_WebRTCDataChannel_get_protocol_97be4a2e},
	{"Godot.NativeCalls::godot_icall_WebRTCDataChannel_is_negotiated_68fe5f59", (void*)godot_icall_WebRTCDataChannel_is_negotiated_68fe5f59},
	{"Godot.NativeCalls::godot_icall_WebRTCMultiplayer_initialize_db24ab05", (void*)godot_icall_WebRTCMultiplayer_initialize_db24ab05},
	{"Godot.NativeCalls::godot_icall_WebRTCMultiplayer_add_peer_63055adf", (void*)godot_icall_WebRTCMultiplayer_add_peer_63055adf},
	{"Godot.NativeCalls::godot_icall_WebRTCMultiplayer_remove_peer_e1ae93bc", (void*)godot_icall_WebRTCMultiplayer_remove_peer_e1ae93bc},
	{"Godot.NativeCalls::godot_icall_WebRTCMultiplayer_has_peer_7f690926", (void*)godot_icall_WebRTCMultiplayer_has_peer_7f690926},
	{"Godot.NativeCalls::godot_icall_WebRTCMultiplayer_get_peer_5940524d", (void*)godot_icall_WebRTCMultiplayer_get_peer_5940524d},
	{"Godot.NativeCalls::godot_icall_WebRTCMultiplayer_get_peers_22d47c9d", (void*)godot_icall_WebRTCMultiplayer_get_peers_22d47c9d},
	{"Godot.NativeCalls::godot_icall_WebRTCMultiplayer_close_c8e54a7b", (void*)godot_icall_WebRTCMultiplayer_close_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_WebRTCPeerConnection_initialize_fe3cff26", (void*)godot_icall_WebRTCPeerConnection_initialize_fe3cff26},
	{"Godot.NativeCalls::godot_icall_WebRTCPeerConnection_create_data_channel_fbff6dff", (void*)godot_icall_WebRTCPeerConnection_create_data_channel_fbff6dff},
	{"Godot.NativeCalls::godot_icall_WebRTCPeerConnection_create_offer_f04570f5", (void*)godot_icall_WebRTCPeerConnection_create_offer_f04570f5},
	{"Godot.NativeCalls::godot_icall_WebRTCPeerConnection_set_local_description_ce7ee84", (void*)godot_icall_WebRTCPeerConnection_set_local_description_ce7ee84},
	{"Godot.NativeCalls::godot_icall_WebRTCPeerConnection_set_remote_description_ce7ee84", (void*)godot_icall_WebRTCPeerConnection_set_remote_description_ce7ee84},
	{"Godot.NativeCalls::godot_icall_WebRTCPeerConnection_add_ice_candidate_5ac7cfc4", (void*)godot_icall_WebRTCPeerConnection_add_ice_candidate_5ac7cfc4},
	{"Godot.NativeCalls::godot_icall_WebRTCPeerConnection_poll_f04570f5", (void*)godot_icall_WebRTCPeerConnection_poll_f04570f5},
	{"Godot.NativeCalls::godot_icall_WebRTCPeerConnection_close_c8e54a7b", (void*)godot_icall_WebRTCPeerConnection_close_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_WebRTCPeerConnection_get_connection_state_b9c7176b", (void*)godot_icall_WebRTCPeerConnection_get_connection_state_b9c7176b},
	{"Godot.NativeCalls::godot_icall_WebSocketClient_connect_to_url_b834df5c", (void*)godot_icall_WebSocketClient_connect_to_url_b834df5c},
	{"Godot.NativeCalls::godot_icall_WebSocketClient_disconnect_from_host_cd663605", (void*)godot_icall_WebSocketClient_disconnect_from_host_cd663605},
	{"Godot.NativeCalls::godot_icall_WebSocketClient_get_connected_host_97be4a2e", (void*)godot_icall_WebSocketClient_get_connected_host_97be4a2e},
	{"Godot.NativeCalls::godot_icall_WebSocketClient_get_connected_port_c0943588", (void*)godot_icall_WebSocketClient_get_connected_port_c0943588},
	{"Godot.NativeCalls::godot_icall_WebSocketClient_set_verify_ssl_enabled_ba24800b", (void*)godot_icall_WebSocketClient_set_verify_ssl_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_WebSocketClient_is_verify_ssl_enabled_68fe5f59", (void*)godot_icall_WebSocketClient_is_verify_ssl_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall_WebSocketMultiplayerPeer_set_buffers_88365f0", (void*)godot_icall_WebSocketMultiplayerPeer_set_buffers_88365f0},
	{"Godot.NativeCalls::godot_icall_WebSocketMultiplayerPeer_get_peer_ebe08193", (void*)godot_icall_WebSocketMultiplayerPeer_get_peer_ebe08193},
	{"Godot.NativeCalls::godot_icall_WebSocketPeer_get_write_mode_c680c0e0", (void*)godot_icall_WebSocketPeer_get_write_mode_c680c0e0},
	{"Godot.NativeCalls::godot_icall_WebSocketPeer_set_write_mode_18a1618c", (void*)godot_icall_WebSocketPeer_set_write_mode_18a1618c},
	{"Godot.NativeCalls::godot_icall_WebSocketPeer_is_connected_to_host_68fe5f59", (void*)godot_icall_WebSocketPeer_is_connected_to_host_68fe5f59},
	{"Godot.NativeCalls::godot_icall_WebSocketPeer_was_string_packet_68fe5f59", (void*)godot_icall_WebSocketPeer_was_string_packet_68fe5f59},
	{"Godot.NativeCalls::godot_icall_WebSocketPeer_close_cd663605", (void*)godot_icall_WebSocketPeer_close_cd663605},
	{"Godot.NativeCalls::godot_icall_WebSocketPeer_get_connected_host_97be4a2e", (void*)godot_icall_WebSocketPeer_get_connected_host_97be4a2e},
	{"Godot.NativeCalls::godot_icall_WebSocketPeer_get_connected_port_c0943588", (void*)godot_icall_WebSocketPeer_get_connected_port_c0943588},
	{"Godot.NativeCalls::godot_icall_WebSocketPeer_set_no_delay_ba24800b", (void*)godot_icall_WebSocketPeer_set_no_delay_ba24800b},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_is_listening_68fe5f59", (void*)godot_icall_WebSocketServer_is_listening_68fe5f59},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_listen_d9e26198", (void*)godot_icall_WebSocketServer_listen_d9e26198},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_stop_c8e54a7b", (void*)godot_icall_WebSocketServer_stop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_has_peer_7f690926", (void*)godot_icall_WebSocketServer_has_peer_7f690926},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_get_peer_address_44fc4c5a", (void*)godot_icall_WebSocketServer_get_peer_address_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_get_peer_port_b835dea5", (void*)godot_icall_WebSocketServer_get_peer_port_b835dea5},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_disconnect_peer_48ed2927", (void*)godot_icall_WebSocketServer_disconnect_peer_48ed2927},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_get_bind_ip_97be4a2e", (void*)godot_icall_WebSocketServer_get_bind_ip_97be4a2e},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_set_bind_ip_6964ff3e", (void*)godot_icall_WebSocketServer_set_bind_ip_6964ff3e},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_get_private_key_bd0a1107", (void*)godot_icall_WebSocketServer_get_private_key_bd0a1107},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_set_private_key_e283665", (void*)godot_icall_WebSocketServer_set_private_key_e283665},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_get_ssl_certificate_6d75c24e", (void*)godot_icall_WebSocketServer_get_ssl_certificate_6d75c24e},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_set_ssl_certificate_bfdc671e", (void*)godot_icall_WebSocketServer_set_ssl_certificate_bfdc671e},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_get_ca_chain_6d75c24e", (void*)godot_icall_WebSocketServer_get_ca_chain_6d75c24e},
	{"Godot.NativeCalls::godot_icall_WebSocketServer_set_ca_chain_bfdc671e", (void*)godot_icall_WebSocketServer_set_ca_chain_bfdc671e},
	{"Godot.NativeCalls::godot_icall_WindowDialog_set_title_2f29e819", (void*)godot_icall_WindowDialog_set_title_2f29e819},
	{"Godot.NativeCalls::godot_icall_WindowDialog_get_title_97be4a2e", (void*)godot_icall_WindowDialog_get_title_97be4a2e},
	{"Godot.NativeCalls::godot_icall_WindowDialog_set_resizable_ba24800b", (void*)godot_icall_WindowDialog_set_resizable_ba24800b},
	{"Godot.NativeCalls::godot_icall_WindowDialog_get_resizable_68fe5f59", (void*)godot_icall_WindowDialog_get_resizable_68fe5f59},
	{"Godot.NativeCalls::godot_icall_WindowDialog_get_close_button_d79e1b6a", (void*)godot_icall_WindowDialog_get_close_button_d79e1b6a},
	{"Godot.NativeCalls::godot_icall_World_get_space_6623661e", (void*)godot_icall_World_get_space_6623661e},
	{"Godot.NativeCalls::godot_icall_World_get_scenario_6623661e", (void*)godot_icall_World_get_scenario_6623661e},
	{"Godot.NativeCalls::godot_icall_World_set_environment_5a081814", (void*)godot_icall_World_set_environment_5a081814},
	{"Godot.NativeCalls::godot_icall_World_get_environment_8929e758", (void*)godot_icall_World_get_environment_8929e758},
	{"Godot.NativeCalls::godot_icall_World_set_fallback_environment_5a081814", (void*)godot_icall_World_set_fallback_environment_5a081814},
	{"Godot.NativeCalls::godot_icall_World_get_fallback_environment_8929e758", (void*)godot_icall_World_get_fallback_environment_8929e758},
	{"Godot.NativeCalls::godot_icall_World_get_direct_space_state_bfc60632", (void*)godot_icall_World_get_direct_space_state_bfc60632},
	{"Godot.NativeCalls::godot_icall_World2D_get_canvas_6623661e", (void*)godot_icall_World2D_get_canvas_6623661e},
	{"Godot.NativeCalls::godot_icall_World2D_get_space_6623661e", (void*)godot_icall_World2D_get_space_6623661e},
	{"Godot.NativeCalls::godot_icall_World2D_get_direct_space_state_f8934848", (void*)godot_icall_World2D_get_direct_space_state_f8934848},
	{"Godot.NativeCalls::godot_icall_WorldEnvironment_set_environment_5a081814", (void*)godot_icall_WorldEnvironment_set_environment_5a081814},
	{"Godot.NativeCalls::godot_icall_WorldEnvironment_get_environment_8929e758", (void*)godot_icall_WorldEnvironment_get_environment_8929e758},
	{"Godot.NativeCalls::godot_icall_X509Certificate_save_2660dbb2", (void*)godot_icall_X509Certificate_save_2660dbb2},
	{"Godot.NativeCalls::godot_icall_X509Certificate_load_2660dbb2", (void*)godot_icall_X509Certificate_load_2660dbb2},
	{"Godot.NativeCalls::godot_icall_XMLParser_read_f04570f5", (void*)godot_icall_XMLParser_read_f04570f5},
	{"Godot.NativeCalls::godot_icall_XMLParser_get_node_type_622cc76d", (void*)godot_icall_XMLParser_get_node_type_622cc76d},
	{"Godot.NativeCalls::godot_icall_XMLParser_get_node_name_97be4a2e", (void*)godot_icall_XMLParser_get_node_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall_XMLParser_get_node_data_97be4a2e", (void*)godot_icall_XMLParser_get_node_data_97be4a2e},
	{"Godot.NativeCalls::godot_icall_XMLParser_get_node_offset_4bb7c348", (void*)godot_icall_XMLParser_get_node_offset_4bb7c348},
	{"Godot.NativeCalls::godot_icall_XMLParser_get_attribute_count_1f886eb0", (void*)godot_icall_XMLParser_get_attribute_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall_XMLParser_get_attribute_name_44fc4c5a", (void*)godot_icall_XMLParser_get_attribute_name_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_XMLParser_get_attribute_value_44fc4c5a", (void*)godot_icall_XMLParser_get_attribute_value_44fc4c5a},
	{"Godot.NativeCalls::godot_icall_XMLParser_has_attribute_8a7120b9", (void*)godot_icall_XMLParser_has_attribute_8a7120b9},
	{"Godot.NativeCalls::godot_icall_XMLParser_get_named_attribute_value_98465fb", (void*)godot_icall_XMLParser_get_named_attribute_value_98465fb},
	{"Godot.NativeCalls::godot_icall_XMLParser_get_named_attribute_value_safe_98465fb", (void*)godot_icall_XMLParser_get_named_attribute_value_safe_98465fb},
	{"Godot.NativeCalls::godot_icall_XMLParser_is_empty_68fe5f59", (void*)godot_icall_XMLParser_is_empty_68fe5f59},
	{"Godot.NativeCalls::godot_icall_XMLParser_get_current_line_1f886eb0", (void*)godot_icall_XMLParser_get_current_line_1f886eb0},
	{"Godot.NativeCalls::godot_icall_XMLParser_skip_section_c8e54a7b", (void*)godot_icall_XMLParser_skip_section_c8e54a7b},
	{"Godot.NativeCalls::godot_icall_XMLParser_seek_c719a68b", (void*)godot_icall_XMLParser_seek_c719a68b},
	{"Godot.NativeCalls::godot_icall_XMLParser_open_2660dbb2", (void*)godot_icall_XMLParser_open_2660dbb2},
	{"Godot.NativeCalls::godot_icall_XMLParser_open_buffer_4d7ce2f", (void*)godot_icall_XMLParser_open_buffer_4d7ce2f},
	{"Godot.NativeCalls::godot_icall_YSort_set_sort_enabled_ba24800b", (void*)godot_icall_YSort_set_sort_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall_YSort_is_sort_enabled_68fe5f59", (void*)godot_icall_YSort_is_sort_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall__ClassDB_get_class_list_4cc8f2a7", (void*)godot_icall__ClassDB_get_class_list_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall__ClassDB_get_inheriters_from_class_8d6765ca", (void*)godot_icall__ClassDB_get_inheriters_from_class_8d6765ca},
	{"Godot.NativeCalls::godot_icall__ClassDB_get_parent_class_67c8521", (void*)godot_icall__ClassDB_get_parent_class_67c8521},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_exists_bee64043", (void*)godot_icall__ClassDB_class_exists_bee64043},
	{"Godot.NativeCalls::godot_icall__ClassDB_is_parent_class_db6c1197", (void*)godot_icall__ClassDB_is_parent_class_db6c1197},
	{"Godot.NativeCalls::godot_icall__ClassDB_can_instance_bee64043", (void*)godot_icall__ClassDB_can_instance_bee64043},
	{"Godot.NativeCalls::godot_icall__ClassDB_instance_6732bfd8", (void*)godot_icall__ClassDB_instance_6732bfd8},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_has_signal_db6c1197", (void*)godot_icall__ClassDB_class_has_signal_db6c1197},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_get_signal_aa535a77", (void*)godot_icall__ClassDB_class_get_signal_aa535a77},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_get_signal_list_814ea100", (void*)godot_icall__ClassDB_class_get_signal_list_814ea100},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_get_property_list_814ea100", (void*)godot_icall__ClassDB_class_get_property_list_814ea100},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_get_property_132a6665", (void*)godot_icall__ClassDB_class_get_property_132a6665},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_set_property_a1f236c0", (void*)godot_icall__ClassDB_class_set_property_a1f236c0},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_has_method_c27952a0", (void*)godot_icall__ClassDB_class_has_method_c27952a0},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_get_method_list_814ea100", (void*)godot_icall__ClassDB_class_get_method_list_814ea100},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_get_integer_constant_list_90e40ce", (void*)godot_icall__ClassDB_class_get_integer_constant_list_90e40ce},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_has_integer_constant_db6c1197", (void*)godot_icall__ClassDB_class_has_integer_constant_db6c1197},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_get_integer_constant_7185a084", (void*)godot_icall__ClassDB_class_get_integer_constant_7185a084},
	{"Godot.NativeCalls::godot_icall__ClassDB_class_get_category_67c8521", (void*)godot_icall__ClassDB_class_get_category_67c8521},
	{"Godot.NativeCalls::godot_icall__ClassDB_is_class_enabled_bee64043", (void*)godot_icall__ClassDB_is_class_enabled_bee64043},
	{"Godot.NativeCalls::godot_icall__Directory_open_2660dbb2", (void*)godot_icall__Directory_open_2660dbb2},
	{"Godot.NativeCalls::godot_icall__Directory_list_dir_begin_cd09fa4a", (void*)godot_icall__Directory_list_dir_begin_cd09fa4a},
	{"Godot.NativeCalls::godot_icall__Directory_get_next_97be4a2e", (void*)godot_icall__Directory_get_next_97be4a2e},
	{"Godot.NativeCalls::godot_icall__Directory_current_is_dir_68fe5f59", (void*)godot_icall__Directory_current_is_dir_68fe5f59},
	{"Godot.NativeCalls::godot_icall__Directory_list_dir_end_c8e54a7b", (void*)godot_icall__Directory_list_dir_end_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__Directory_get_drive_count_1f886eb0", (void*)godot_icall__Directory_get_drive_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall__Directory_get_drive_44fc4c5a", (void*)godot_icall__Directory_get_drive_44fc4c5a},
	{"Godot.NativeCalls::godot_icall__Directory_get_current_drive_1f886eb0", (void*)godot_icall__Directory_get_current_drive_1f886eb0},
	{"Godot.NativeCalls::godot_icall__Directory_change_dir_2660dbb2", (void*)godot_icall__Directory_change_dir_2660dbb2},
	{"Godot.NativeCalls::godot_icall__Directory_get_current_dir_97be4a2e", (void*)godot_icall__Directory_get_current_dir_97be4a2e},
	{"Godot.NativeCalls::godot_icall__Directory_make_dir_2660dbb2", (void*)godot_icall__Directory_make_dir_2660dbb2},
	{"Godot.NativeCalls::godot_icall__Directory_make_dir_recursive_2660dbb2", (void*)godot_icall__Directory_make_dir_recursive_2660dbb2},
	{"Godot.NativeCalls::godot_icall__Directory_file_exists_8a7120b9", (void*)godot_icall__Directory_file_exists_8a7120b9},
	{"Godot.NativeCalls::godot_icall__Directory_dir_exists_8a7120b9", (void*)godot_icall__Directory_dir_exists_8a7120b9},
	{"Godot.NativeCalls::godot_icall__Directory_get_space_left_1f886eb0", (void*)godot_icall__Directory_get_space_left_1f886eb0},
	{"Godot.NativeCalls::godot_icall__Directory_copy_ce7ee84", (void*)godot_icall__Directory_copy_ce7ee84},
	{"Godot.NativeCalls::godot_icall__Directory_rename_ce7ee84", (void*)godot_icall__Directory_rename_ce7ee84},
	{"Godot.NativeCalls::godot_icall__Directory_remove_2660dbb2", (void*)godot_icall__Directory_remove_2660dbb2},
	{"Godot.NativeCalls::godot_icall__Engine_set_iterations_per_second_e1ae93bc", (void*)godot_icall__Engine_set_iterations_per_second_e1ae93bc},
	{"Godot.NativeCalls::godot_icall__Engine_get_iterations_per_second_1f886eb0", (void*)godot_icall__Engine_get_iterations_per_second_1f886eb0},
	{"Godot.NativeCalls::godot_icall__Engine_set_physics_jitter_fix_904508bb", (void*)godot_icall__Engine_set_physics_jitter_fix_904508bb},
	{"Godot.NativeCalls::godot_icall__Engine_get_physics_jitter_fix_4edcd7a9", (void*)godot_icall__Engine_get_physics_jitter_fix_4edcd7a9},
	{"Godot.NativeCalls::godot_icall__Engine_get_physics_interpolation_fraction_4edcd7a9", (void*)godot_icall__Engine_get_physics_interpolation_fraction_4edcd7a9},
	{"Godot.NativeCalls::godot_icall__Engine_set_target_fps_e1ae93bc", (void*)godot_icall__Engine_set_target_fps_e1ae93bc},
	{"Godot.NativeCalls::godot_icall__Engine_get_target_fps_1f886eb0", (void*)godot_icall__Engine_get_target_fps_1f886eb0},
	{"Godot.NativeCalls::godot_icall__Engine_set_time_scale_904508bb", (void*)godot_icall__Engine_set_time_scale_904508bb},
	{"Godot.NativeCalls::godot_icall__Engine_get_time_scale_4edcd7a9", (void*)godot_icall__Engine_get_time_scale_4edcd7a9},
	{"Godot.NativeCalls::godot_icall__Engine_get_frames_drawn_1f886eb0", (void*)godot_icall__Engine_get_frames_drawn_1f886eb0},
	{"Godot.NativeCalls::godot_icall__Engine_get_frames_per_second_4edcd7a9", (void*)godot_icall__Engine_get_frames_per_second_4edcd7a9},
	{"Godot.NativeCalls::godot_icall__Engine_get_physics_frames_4bb7c348", (void*)godot_icall__Engine_get_physics_frames_4bb7c348},
	{"Godot.NativeCalls::godot_icall__Engine_get_idle_frames_4bb7c348", (void*)godot_icall__Engine_get_idle_frames_4bb7c348},
	{"Godot.NativeCalls::godot_icall__Engine_get_main_loop_6f099ddc", (void*)godot_icall__Engine_get_main_loop_6f099ddc},
	{"Godot.NativeCalls::godot_icall__Engine_get_version_info_22d47c9d", (void*)godot_icall__Engine_get_version_info_22d47c9d},
	{"Godot.NativeCalls::godot_icall__Engine_get_author_info_22d47c9d", (void*)godot_icall__Engine_get_author_info_22d47c9d},
	{"Godot.NativeCalls::godot_icall__Engine_get_copyright_info_d80382d4", (void*)godot_icall__Engine_get_copyright_info_d80382d4},
	{"Godot.NativeCalls::godot_icall__Engine_get_donor_info_22d47c9d", (void*)godot_icall__Engine_get_donor_info_22d47c9d},
	{"Godot.NativeCalls::godot_icall__Engine_get_license_info_22d47c9d", (void*)godot_icall__Engine_get_license_info_22d47c9d},
	{"Godot.NativeCalls::godot_icall__Engine_get_license_text_97be4a2e", (void*)godot_icall__Engine_get_license_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall__Engine_is_in_physics_frame_68fe5f59", (void*)godot_icall__Engine_is_in_physics_frame_68fe5f59},
	{"Godot.NativeCalls::godot_icall__Engine_has_singleton_8a7120b9", (void*)godot_icall__Engine_has_singleton_8a7120b9},
	{"Godot.NativeCalls::godot_icall__Engine_get_singleton_d254541d", (void*)godot_icall__Engine_get_singleton_d254541d},
	{"Godot.NativeCalls::godot_icall__Engine_set_editor_hint_ba24800b", (void*)godot_icall__Engine_set_editor_hint_ba24800b},
	{"Godot.NativeCalls::godot_icall__Engine_is_editor_hint_68fe5f59", (void*)godot_icall__Engine_is_editor_hint_68fe5f59},
	{"Godot.NativeCalls::godot_icall__File_open_encrypted_35d48b4b", (void*)godot_icall__File_open_encrypted_35d48b4b},
	{"Godot.NativeCalls::godot_icall__File_open_encrypted_with_pass_cc2b57d9", (void*)godot_icall__File_open_encrypted_with_pass_cc2b57d9},
	{"Godot.NativeCalls::godot_icall__File_open_compressed_f6661a0b", (void*)godot_icall__File_open_compressed_f6661a0b},
	{"Godot.NativeCalls::godot_icall__File_open_6ffc7fd9", (void*)godot_icall__File_open_6ffc7fd9},
	{"Godot.NativeCalls::godot_icall__File_close_c8e54a7b", (void*)godot_icall__File_close_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__File_get_path_97be4a2e", (void*)godot_icall__File_get_path_97be4a2e},
	{"Godot.NativeCalls::godot_icall__File_get_path_absolute_97be4a2e", (void*)godot_icall__File_get_path_absolute_97be4a2e},
	{"Godot.NativeCalls::godot_icall__File_is_open_68fe5f59", (void*)godot_icall__File_is_open_68fe5f59},
	{"Godot.NativeCalls::godot_icall__File_seek_f9161991", (void*)godot_icall__File_seek_f9161991},
	{"Godot.NativeCalls::godot_icall__File_seek_end_f9161991", (void*)godot_icall__File_seek_end_f9161991},
	{"Godot.NativeCalls::godot_icall__File_get_position_282fe8d3", (void*)godot_icall__File_get_position_282fe8d3},
	{"Godot.NativeCalls::godot_icall__File_get_len_282fe8d3", (void*)godot_icall__File_get_len_282fe8d3},
	{"Godot.NativeCalls::godot_icall__File_eof_reached_68fe5f59", (void*)godot_icall__File_eof_reached_68fe5f59},
	{"Godot.NativeCalls::godot_icall__File_get_8_6236014f", (void*)godot_icall__File_get_8_6236014f},
	{"Godot.NativeCalls::godot_icall__File_get_16_c0943588", (void*)godot_icall__File_get_16_c0943588},
	{"Godot.NativeCalls::godot_icall__File_get_32_54cc76d5", (void*)godot_icall__File_get_32_54cc76d5},
	{"Godot.NativeCalls::godot_icall__File_get_64_4bb7c348", (void*)godot_icall__File_get_64_4bb7c348},
	{"Godot.NativeCalls::godot_icall__File_get_float_4edcd7a9", (void*)godot_icall__File_get_float_4edcd7a9},
	{"Godot.NativeCalls::godot_icall__File_get_double_27c6b046", (void*)godot_icall__File_get_double_27c6b046},
	{"Godot.NativeCalls::godot_icall__File_get_real_4edcd7a9", (void*)godot_icall__File_get_real_4edcd7a9},
	{"Godot.NativeCalls::godot_icall__File_get_buffer_f38b97f6", (void*)godot_icall__File_get_buffer_f38b97f6},
	{"Godot.NativeCalls::godot_icall__File_get_line_97be4a2e", (void*)godot_icall__File_get_line_97be4a2e},
	{"Godot.NativeCalls::godot_icall__File_get_csv_line_befa5dfb", (void*)godot_icall__File_get_csv_line_befa5dfb},
	{"Godot.NativeCalls::godot_icall__File_get_as_text_97be4a2e", (void*)godot_icall__File_get_as_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall__File_get_md5_98465fb", (void*)godot_icall__File_get_md5_98465fb},
	{"Godot.NativeCalls::godot_icall__File_get_sha256_98465fb", (void*)godot_icall__File_get_sha256_98465fb},
	{"Godot.NativeCalls::godot_icall__File_get_endian_swap_68fe5f59", (void*)godot_icall__File_get_endian_swap_68fe5f59},
	{"Godot.NativeCalls::godot_icall__File_set_endian_swap_ba24800b", (void*)godot_icall__File_set_endian_swap_ba24800b},
	{"Godot.NativeCalls::godot_icall__File_get_error_f04570f5", (void*)godot_icall__File_get_error_f04570f5},
	{"Godot.NativeCalls::godot_icall__File_get_var_f23997c6", (void*)godot_icall__File_get_var_f23997c6},
	{"Godot.NativeCalls::godot_icall__File_store_8_a31c261d", (void*)godot_icall__File_store_8_a31c261d},
	{"Godot.NativeCalls::godot_icall__File_store_16_2b2eae4", (void*)godot_icall__File_store_16_2b2eae4},
	{"Godot.NativeCalls::godot_icall__File_store_32_966aab97", (void*)godot_icall__File_store_32_966aab97},
	{"Godot.NativeCalls::godot_icall__File_store_64_9d9e6424", (void*)godot_icall__File_store_64_9d9e6424},
	{"Godot.NativeCalls::godot_icall__File_store_float_904508bb", (void*)godot_icall__File_store_float_904508bb},
	{"Godot.NativeCalls::godot_icall__File_store_double_f96f5126", (void*)godot_icall__File_store_double_f96f5126},
	{"Godot.NativeCalls::godot_icall__File_store_real_904508bb", (void*)godot_icall__File_store_real_904508bb},
	{"Godot.NativeCalls::godot_icall__File_store_buffer_da545cc0", (void*)godot_icall__File_store_buffer_da545cc0},
	{"Godot.NativeCalls::godot_icall__File_store_line_3ca14953", (void*)godot_icall__File_store_line_3ca14953},
	{"Godot.NativeCalls::godot_icall__File_store_csv_line_f0cd17e1", (void*)godot_icall__File_store_csv_line_f0cd17e1},
	{"Godot.NativeCalls::godot_icall__File_store_string_3ca14953", (void*)godot_icall__File_store_string_3ca14953},
	{"Godot.NativeCalls::godot_icall__File_store_var_aff2c475", (void*)godot_icall__File_store_var_aff2c475},
	{"Godot.NativeCalls::godot_icall__File_store_pascal_string_3ca14953", (void*)godot_icall__File_store_pascal_string_3ca14953},
	{"Godot.NativeCalls::godot_icall__File_get_pascal_string_97be4a2e", (void*)godot_icall__File_get_pascal_string_97be4a2e},
	{"Godot.NativeCalls::godot_icall__File_file_exists_8a7120b9", (void*)godot_icall__File_file_exists_8a7120b9},
	{"Godot.NativeCalls::godot_icall__File_get_modified_time_c22117d4", (void*)godot_icall__File_get_modified_time_c22117d4},
	{"Godot.NativeCalls::godot_icall__Geometry_build_box_planes_a8643369", (void*)godot_icall__Geometry_build_box_planes_a8643369},
	{"Godot.NativeCalls::godot_icall__Geometry_build_cylinder_planes_595625c0", (void*)godot_icall__Geometry_build_cylinder_planes_595625c0},
	{"Godot.NativeCalls::godot_icall__Geometry_build_capsule_planes_969e84c3", (void*)godot_icall__Geometry_build_capsule_planes_969e84c3},
	{"Godot.NativeCalls::godot_icall__Geometry_segment_intersects_circle_8275e7e7", (void*)godot_icall__Geometry_segment_intersects_circle_8275e7e7},
	{"Godot.NativeCalls::godot_icall__Geometry_segment_intersects_segment_2d_ee12b892", (void*)godot_icall__Geometry_segment_intersects_segment_2d_ee12b892},
	{"Godot.NativeCalls::godot_icall__Geometry_line_intersects_line_2d_ee12b892", (void*)godot_icall__Geometry_line_intersects_line_2d_ee12b892},
	{"Godot.NativeCalls::godot_icall__Geometry_get_closest_points_between_segments_2d_bdafeef", (void*)godot_icall__Geometry_get_closest_points_between_segments_2d_bdafeef},
	{"Godot.NativeCalls::godot_icall__Geometry_get_closest_points_between_segments_2d045432", (void*)godot_icall__Geometry_get_closest_points_between_segments_2d045432},
	{"Godot.NativeCalls::godot_icall__Geometry_get_closest_point_to_segment_2d_c19946b1", (void*)godot_icall__Geometry_get_closest_point_to_segment_2d_c19946b1},
	{"Godot.NativeCalls::godot_icall__Geometry_get_closest_point_to_segment_c19d6e37", (void*)godot_icall__Geometry_get_closest_point_to_segment_c19d6e37},
	{"Godot.NativeCalls::godot_icall__Geometry_get_closest_point_to_segment_uncapped_2d_c19946b1", (void*)godot_icall__Geometry_get_closest_point_to_segment_uncapped_2d_c19946b1},
	{"Godot.NativeCalls::godot_icall__Geometry_get_closest_point_to_segment_uncapped_c19d6e37", (void*)godot_icall__Geometry_get_closest_point_to_segment_uncapped_c19d6e37},
	{"Godot.NativeCalls::godot_icall__Geometry_get_uv84_normal_bit_3c0b8d04", (void*)godot_icall__Geometry_get_uv84_normal_bit_3c0b8d04},
	{"Godot.NativeCalls::godot_icall__Geometry_ray_intersects_triangle_cd24de23", (void*)godot_icall__Geometry_ray_intersects_triangle_cd24de23},
	{"Godot.NativeCalls::godot_icall__Geometry_segment_intersects_triangle_cd24de23", (void*)godot_icall__Geometry_segment_intersects_triangle_cd24de23},
	{"Godot.NativeCalls::godot_icall__Geometry_segment_intersects_sphere_9e8a6e9c", (void*)godot_icall__Geometry_segment_intersects_sphere_9e8a6e9c},
	{"Godot.NativeCalls::godot_icall__Geometry_segment_intersects_cylinder_62988493", (void*)godot_icall__Geometry_segment_intersects_cylinder_62988493},
	{"Godot.NativeCalls::godot_icall__Geometry_segment_intersects_convex_21e13743", (void*)godot_icall__Geometry_segment_intersects_convex_21e13743},
	{"Godot.NativeCalls::godot_icall__Geometry_point_is_inside_triangle_1cbacda9", (void*)godot_icall__Geometry_point_is_inside_triangle_1cbacda9},
	{"Godot.NativeCalls::godot_icall__Geometry_is_polygon_clockwise_3666f620", (void*)godot_icall__Geometry_is_polygon_clockwise_3666f620},
	{"Godot.NativeCalls::godot_icall__Geometry_is_point_in_polygon_d73c54f0", (void*)godot_icall__Geometry_is_point_in_polygon_d73c54f0},
	{"Godot.NativeCalls::godot_icall__Geometry_triangulate_polygon_2c4d204d", (void*)godot_icall__Geometry_triangulate_polygon_2c4d204d},
	{"Godot.NativeCalls::godot_icall__Geometry_triangulate_delaunay_2d_2c4d204d", (void*)godot_icall__Geometry_triangulate_delaunay_2d_2c4d204d},
	{"Godot.NativeCalls::godot_icall__Geometry_convex_hull_2d_1dab5517", (void*)godot_icall__Geometry_convex_hull_2d_1dab5517},
	{"Godot.NativeCalls::godot_icall__Geometry_clip_polygon_b8c3916f", (void*)godot_icall__Geometry_clip_polygon_b8c3916f},
	{"Godot.NativeCalls::godot_icall__Geometry_merge_polygons_2d_c65fd09a", (void*)godot_icall__Geometry_merge_polygons_2d_c65fd09a},
	{"Godot.NativeCalls::godot_icall__Geometry_clip_polygons_2d_c65fd09a", (void*)godot_icall__Geometry_clip_polygons_2d_c65fd09a},
	{"Godot.NativeCalls::godot_icall__Geometry_intersect_polygons_2d_c65fd09a", (void*)godot_icall__Geometry_intersect_polygons_2d_c65fd09a},
	{"Godot.NativeCalls::godot_icall__Geometry_exclude_polygons_2d_c65fd09a", (void*)godot_icall__Geometry_exclude_polygons_2d_c65fd09a},
	{"Godot.NativeCalls::godot_icall__Geometry_clip_polyline_with_polygon_2d_c65fd09a", (void*)godot_icall__Geometry_clip_polyline_with_polygon_2d_c65fd09a},
	{"Godot.NativeCalls::godot_icall__Geometry_intersect_polyline_with_polygon_2d_c65fd09a", (void*)godot_icall__Geometry_intersect_polyline_with_polygon_2d_c65fd09a},
	{"Godot.NativeCalls::godot_icall__Geometry_offset_polygon_2d_5892e3d2", (void*)godot_icall__Geometry_offset_polygon_2d_5892e3d2},
	{"Godot.NativeCalls::godot_icall__Geometry_offset_polyline_2d_987095b2", (void*)godot_icall__Geometry_offset_polyline_2d_987095b2},
	{"Godot.NativeCalls::godot_icall__Geometry_make_atlas_e041fd57", (void*)godot_icall__Geometry_make_atlas_e041fd57},
	{"Godot.NativeCalls::godot_icall__GodotSharp_attach_thread_c8e54a7b", (void*)godot_icall__GodotSharp_attach_thread_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__GodotSharp_detach_thread_c8e54a7b", (void*)godot_icall__GodotSharp_detach_thread_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__GodotSharp_get_domain_id_1f886eb0", (void*)godot_icall__GodotSharp_get_domain_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall__GodotSharp_get_scripts_domain_id_1f886eb0", (void*)godot_icall__GodotSharp_get_scripts_domain_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall__GodotSharp_is_scripts_domain_loaded_68fe5f59", (void*)godot_icall__GodotSharp_is_scripts_domain_loaded_68fe5f59},
	{"Godot.NativeCalls::godot_icall__GodotSharp_is_domain_finalizing_for_unload_7f690926", (void*)godot_icall__GodotSharp_is_domain_finalizing_for_unload_7f690926},
	{"Godot.NativeCalls::godot_icall__GodotSharp_is_runtime_shutting_down_68fe5f59", (void*)godot_icall__GodotSharp_is_runtime_shutting_down_68fe5f59},
	{"Godot.NativeCalls::godot_icall__GodotSharp_is_runtime_initialized_68fe5f59", (void*)godot_icall__GodotSharp_is_runtime_initialized_68fe5f59},
	{"Godot.NativeCalls::godot_icall__JSON_print_599d1e1c", (void*)godot_icall__JSON_print_599d1e1c},
	{"Godot.NativeCalls::godot_icall__JSON_parse_eaebb7e9", (void*)godot_icall__JSON_parse_eaebb7e9},
	{"Godot.NativeCalls::godot_icall__Marshalls_variant_to_base64_f57e262a", (void*)godot_icall__Marshalls_variant_to_base64_f57e262a},
	{"Godot.NativeCalls::godot_icall__Marshalls_base64_to_variant_264646a7", (void*)godot_icall__Marshalls_base64_to_variant_264646a7},
	{"Godot.NativeCalls::godot_icall__Marshalls_raw_to_base64_2b190946", (void*)godot_icall__Marshalls_raw_to_base64_2b190946},
	{"Godot.NativeCalls::godot_icall__Marshalls_base64_to_raw_ceb3ce17", (void*)godot_icall__Marshalls_base64_to_raw_ceb3ce17},
	{"Godot.NativeCalls::godot_icall__Marshalls_utf8_to_base64_98465fb", (void*)godot_icall__Marshalls_utf8_to_base64_98465fb},
	{"Godot.NativeCalls::godot_icall__Marshalls_base64_to_utf8_98465fb", (void*)godot_icall__Marshalls_base64_to_utf8_98465fb},
	{"Godot.NativeCalls::godot_icall__Mutex_lock_c8e54a7b", (void*)godot_icall__Mutex_lock_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__Mutex_try_lock_f04570f5", (void*)godot_icall__Mutex_try_lock_f04570f5},
	{"Godot.NativeCalls::godot_icall__Mutex_unlock_c8e54a7b", (void*)godot_icall__Mutex_unlock_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__OS_set_clipboard_3ca14953", (void*)godot_icall__OS_set_clipboard_3ca14953},
	{"Godot.NativeCalls::godot_icall__OS_get_clipboard_97be4a2e", (void*)godot_icall__OS_get_clipboard_97be4a2e},
	{"Godot.NativeCalls::godot_icall__OS_global_menu_add_item_2a689c62", (void*)godot_icall__OS_global_menu_add_item_2a689c62},
	{"Godot.NativeCalls::godot_icall__OS_global_menu_add_separator_2f29e819", (void*)godot_icall__OS_global_menu_add_separator_2f29e819},
	{"Godot.NativeCalls::godot_icall__OS_global_menu_remove_item_bb2d80b6", (void*)godot_icall__OS_global_menu_remove_item_bb2d80b6},
	{"Godot.NativeCalls::godot_icall__OS_global_menu_clear_2f29e819", (void*)godot_icall__OS_global_menu_clear_2f29e819},
	{"Godot.NativeCalls::godot_icall__OS_get_video_driver_count_1f886eb0", (void*)godot_icall__OS_get_video_driver_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall__OS_get_video_driver_name_6df8797d", (void*)godot_icall__OS_get_video_driver_name_6df8797d},
	{"Godot.NativeCalls::godot_icall__OS_get_current_video_driver_468c9b8f", (void*)godot_icall__OS_get_current_video_driver_468c9b8f},
	{"Godot.NativeCalls::godot_icall__OS_get_audio_driver_count_1f886eb0", (void*)godot_icall__OS_get_audio_driver_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall__OS_get_audio_driver_name_44fc4c5a", (void*)godot_icall__OS_get_audio_driver_name_44fc4c5a},
	{"Godot.NativeCalls::godot_icall__OS_get_connected_midi_inputs_4cc8f2a7", (void*)godot_icall__OS_get_connected_midi_inputs_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall__OS_open_midi_inputs_c8e54a7b", (void*)godot_icall__OS_open_midi_inputs_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__OS_close_midi_inputs_c8e54a7b", (void*)godot_icall__OS_close_midi_inputs_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__OS_get_screen_count_1f886eb0", (void*)godot_icall__OS_get_screen_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall__OS_get_current_screen_1f886eb0", (void*)godot_icall__OS_get_current_screen_1f886eb0},
	{"Godot.NativeCalls::godot_icall__OS_set_current_screen_e1ae93bc", (void*)godot_icall__OS_set_current_screen_e1ae93bc},
	{"Godot.NativeCalls::godot_icall__OS_get_screen_position_23728632", (void*)godot_icall__OS_get_screen_position_23728632},
	{"Godot.NativeCalls::godot_icall__OS_get_screen_size_23728632", (void*)godot_icall__OS_get_screen_size_23728632},
	{"Godot.NativeCalls::godot_icall__OS_get_screen_dpi_b835dea5", (void*)godot_icall__OS_get_screen_dpi_b835dea5},
	{"Godot.NativeCalls::godot_icall__OS_get_window_position_9b4ea24e", (void*)godot_icall__OS_get_window_position_9b4ea24e},
	{"Godot.NativeCalls::godot_icall__OS_set_window_position_6df7471e", (void*)godot_icall__OS_set_window_position_6df7471e},
	{"Godot.NativeCalls::godot_icall__OS_get_window_size_9b4ea24e", (void*)godot_icall__OS_get_window_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall__OS_get_max_window_size_9b4ea24e", (void*)godot_icall__OS_get_max_window_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall__OS_get_min_window_size_9b4ea24e", (void*)godot_icall__OS_get_min_window_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall__OS_set_max_window_size_6df7471e", (void*)godot_icall__OS_set_max_window_size_6df7471e},
	{"Godot.NativeCalls::godot_icall__OS_set_min_window_size_6df7471e", (void*)godot_icall__OS_set_min_window_size_6df7471e},
	{"Godot.NativeCalls::godot_icall__OS_set_window_size_6df7471e", (void*)godot_icall__OS_set_window_size_6df7471e},
	{"Godot.NativeCalls::godot_icall__OS_get_window_safe_area_6344c073", (void*)godot_icall__OS_get_window_safe_area_6344c073},
	{"Godot.NativeCalls::godot_icall__OS_set_window_fullscreen_ba24800b", (void*)godot_icall__OS_set_window_fullscreen_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_is_window_fullscreen_68fe5f59", (void*)godot_icall__OS_is_window_fullscreen_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_set_window_resizable_ba24800b", (void*)godot_icall__OS_set_window_resizable_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_is_window_resizable_68fe5f59", (void*)godot_icall__OS_is_window_resizable_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_set_window_minimized_ba24800b", (void*)godot_icall__OS_set_window_minimized_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_is_window_minimized_68fe5f59", (void*)godot_icall__OS_is_window_minimized_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_set_window_maximized_ba24800b", (void*)godot_icall__OS_set_window_maximized_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_is_window_maximized_68fe5f59", (void*)godot_icall__OS_is_window_maximized_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_set_window_always_on_top_ba24800b", (void*)godot_icall__OS_set_window_always_on_top_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_is_window_always_on_top_68fe5f59", (void*)godot_icall__OS_is_window_always_on_top_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_is_window_focused_68fe5f59", (void*)godot_icall__OS_is_window_focused_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_request_attention_c8e54a7b", (void*)godot_icall__OS_request_attention_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__OS_get_real_window_size_9b4ea24e", (void*)godot_icall__OS_get_real_window_size_9b4ea24e},
	{"Godot.NativeCalls::godot_icall__OS_center_window_c8e54a7b", (void*)godot_icall__OS_center_window_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__OS_move_window_to_foreground_c8e54a7b", (void*)godot_icall__OS_move_window_to_foreground_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__OS_set_borderless_window_ba24800b", (void*)godot_icall__OS_set_borderless_window_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_get_borderless_window_68fe5f59", (void*)godot_icall__OS_get_borderless_window_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_get_window_per_pixel_transparency_enabled_68fe5f59", (void*)godot_icall__OS_get_window_per_pixel_transparency_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_set_window_per_pixel_transparency_enabled_ba24800b", (void*)godot_icall__OS_set_window_per_pixel_transparency_enabled_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_set_ime_active_ba24800b", (void*)godot_icall__OS_set_ime_active_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_set_ime_position_6df7471e", (void*)godot_icall__OS_set_ime_position_6df7471e},
	{"Godot.NativeCalls::godot_icall__OS_get_ime_selection_9b4ea24e", (void*)godot_icall__OS_get_ime_selection_9b4ea24e},
	{"Godot.NativeCalls::godot_icall__OS_get_ime_text_97be4a2e", (void*)godot_icall__OS_get_ime_text_97be4a2e},
	{"Godot.NativeCalls::godot_icall__OS_set_screen_orientation_22364936", (void*)godot_icall__OS_set_screen_orientation_22364936},
	{"Godot.NativeCalls::godot_icall__OS_get_screen_orientation_fcb46861", (void*)godot_icall__OS_get_screen_orientation_fcb46861},
	{"Godot.NativeCalls::godot_icall__OS_set_keep_screen_on_ba24800b", (void*)godot_icall__OS_set_keep_screen_on_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_is_keep_screen_on_68fe5f59", (void*)godot_icall__OS_is_keep_screen_on_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_has_touchscreen_ui_hint_68fe5f59", (void*)godot_icall__OS_has_touchscreen_ui_hint_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_set_window_title_6964ff3e", (void*)godot_icall__OS_set_window_title_6964ff3e},
	{"Godot.NativeCalls::godot_icall__OS_set_low_processor_usage_mode_ba24800b", (void*)godot_icall__OS_set_low_processor_usage_mode_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_is_in_low_processor_usage_mode_68fe5f59", (void*)godot_icall__OS_is_in_low_processor_usage_mode_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_set_low_processor_usage_mode_sleep_usec_e1ae93bc", (void*)godot_icall__OS_set_low_processor_usage_mode_sleep_usec_e1ae93bc},
	{"Godot.NativeCalls::godot_icall__OS_get_low_processor_usage_mode_sleep_usec_1f886eb0", (void*)godot_icall__OS_get_low_processor_usage_mode_sleep_usec_1f886eb0},
	{"Godot.NativeCalls::godot_icall__OS_get_processor_count_1f886eb0", (void*)godot_icall__OS_get_processor_count_1f886eb0},
	{"Godot.NativeCalls::godot_icall__OS_get_executable_path_97be4a2e", (void*)godot_icall__OS_get_executable_path_97be4a2e},
	{"Godot.NativeCalls::godot_icall__OS_execute_eacacb26", (void*)godot_icall__OS_execute_eacacb26},
	{"Godot.NativeCalls::godot_icall__OS_kill_fb68f113", (void*)godot_icall__OS_kill_fb68f113},
	{"Godot.NativeCalls::godot_icall__OS_shell_open_73262d91", (void*)godot_icall__OS_shell_open_73262d91},
	{"Godot.NativeCalls::godot_icall__OS_get_process_id_1f886eb0", (void*)godot_icall__OS_get_process_id_1f886eb0},
	{"Godot.NativeCalls::godot_icall__OS_get_environment_dcc9abdc", (void*)godot_icall__OS_get_environment_dcc9abdc},
	{"Godot.NativeCalls::godot_icall__OS_has_environment_e7336ea4", (void*)godot_icall__OS_has_environment_e7336ea4},
	{"Godot.NativeCalls::godot_icall__OS_get_name_97be4a2e", (void*)godot_icall__OS_get_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall__OS_get_cmdline_args_4cc8f2a7", (void*)godot_icall__OS_get_cmdline_args_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall__OS_get_datetime_e7de63e4", (void*)godot_icall__OS_get_datetime_e7de63e4},
	{"Godot.NativeCalls::godot_icall__OS_get_date_e7de63e4", (void*)godot_icall__OS_get_date_e7de63e4},
	{"Godot.NativeCalls::godot_icall__OS_get_time_e7de63e4", (void*)godot_icall__OS_get_time_e7de63e4},
	{"Godot.NativeCalls::godot_icall__OS_get_time_zone_info_22d47c9d", (void*)godot_icall__OS_get_time_zone_info_22d47c9d},
	{"Godot.NativeCalls::godot_icall__OS_get_unix_time_4bb7c348", (void*)godot_icall__OS_get_unix_time_4bb7c348},
	{"Godot.NativeCalls::godot_icall__OS_get_datetime_from_unix_time_a6efd46e", (void*)godot_icall__OS_get_datetime_from_unix_time_a6efd46e},
	{"Godot.NativeCalls::godot_icall__OS_get_unix_time_from_datetime_ff3dcd99", (void*)godot_icall__OS_get_unix_time_from_datetime_ff3dcd99},
	{"Godot.NativeCalls::godot_icall__OS_get_system_time_secs_4bb7c348", (void*)godot_icall__OS_get_system_time_secs_4bb7c348},
	{"Godot.NativeCalls::godot_icall__OS_get_system_time_msecs_4bb7c348", (void*)godot_icall__OS_get_system_time_msecs_4bb7c348},
	{"Godot.NativeCalls::godot_icall__OS_set_native_icon_6964ff3e", (void*)godot_icall__OS_set_native_icon_6964ff3e},
	{"Godot.NativeCalls::godot_icall__OS_set_icon_e2900e18", (void*)godot_icall__OS_set_icon_e2900e18},
	{"Godot.NativeCalls::godot_icall__OS_get_exit_code_1f886eb0", (void*)godot_icall__OS_get_exit_code_1f886eb0},
	{"Godot.NativeCalls::godot_icall__OS_set_exit_code_e1ae93bc", (void*)godot_icall__OS_set_exit_code_e1ae93bc},
	{"Godot.NativeCalls::godot_icall__OS_delay_usec_966aab97", (void*)godot_icall__OS_delay_usec_966aab97},
	{"Godot.NativeCalls::godot_icall__OS_delay_msec_966aab97", (void*)godot_icall__OS_delay_msec_966aab97},
	{"Godot.NativeCalls::godot_icall__OS_get_ticks_msec_54cc76d5", (void*)godot_icall__OS_get_ticks_msec_54cc76d5},
	{"Godot.NativeCalls::godot_icall__OS_get_ticks_usec_4bb7c348", (void*)godot_icall__OS_get_ticks_usec_4bb7c348},
	{"Godot.NativeCalls::godot_icall__OS_get_splash_tick_msec_54cc76d5", (void*)godot_icall__OS_get_splash_tick_msec_54cc76d5},
	{"Godot.NativeCalls::godot_icall__OS_get_locale_97be4a2e", (void*)godot_icall__OS_get_locale_97be4a2e},
	{"Godot.NativeCalls::godot_icall__OS_get_latin_keyboard_variant_97be4a2e", (void*)godot_icall__OS_get_latin_keyboard_variant_97be4a2e},
	{"Godot.NativeCalls::godot_icall__OS_get_model_name_97be4a2e", (void*)godot_icall__OS_get_model_name_97be4a2e},
	{"Godot.NativeCalls::godot_icall__OS_can_draw_68fe5f59", (void*)godot_icall__OS_can_draw_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_is_userfs_persistent_68fe5f59", (void*)godot_icall__OS_is_userfs_persistent_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_is_stdout_verbose_68fe5f59", (void*)godot_icall__OS_is_stdout_verbose_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_can_use_threads_68fe5f59", (void*)godot_icall__OS_can_use_threads_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_is_debug_build_68fe5f59", (void*)godot_icall__OS_is_debug_build_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_dump_memory_to_file_6964ff3e", (void*)godot_icall__OS_dump_memory_to_file_6964ff3e},
	{"Godot.NativeCalls::godot_icall__OS_dump_resources_to_file_3ca14953", (void*)godot_icall__OS_dump_resources_to_file_3ca14953},
	{"Godot.NativeCalls::godot_icall__OS_has_virtual_keyboard_68fe5f59", (void*)godot_icall__OS_has_virtual_keyboard_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_show_virtual_keyboard_6964ff3e", (void*)godot_icall__OS_show_virtual_keyboard_6964ff3e},
	{"Godot.NativeCalls::godot_icall__OS_hide_virtual_keyboard_c8e54a7b", (void*)godot_icall__OS_hide_virtual_keyboard_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__OS_get_virtual_keyboard_height_1f886eb0", (void*)godot_icall__OS_get_virtual_keyboard_height_1f886eb0},
	{"Godot.NativeCalls::godot_icall__OS_print_resources_in_use_ba24800b", (void*)godot_icall__OS_print_resources_in_use_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_print_all_resources_3ca14953", (void*)godot_icall__OS_print_all_resources_3ca14953},
	{"Godot.NativeCalls::godot_icall__OS_get_static_memory_usage_4bb7c348", (void*)godot_icall__OS_get_static_memory_usage_4bb7c348},
	{"Godot.NativeCalls::godot_icall__OS_get_static_memory_peak_usage_4bb7c348", (void*)godot_icall__OS_get_static_memory_peak_usage_4bb7c348},
	{"Godot.NativeCalls::godot_icall__OS_get_user_data_dir_97be4a2e", (void*)godot_icall__OS_get_user_data_dir_97be4a2e},
	{"Godot.NativeCalls::godot_icall__OS_get_system_dir_cafb1d6e", (void*)godot_icall__OS_get_system_dir_cafb1d6e},
	{"Godot.NativeCalls::godot_icall__OS_get_unique_id_97be4a2e", (void*)godot_icall__OS_get_unique_id_97be4a2e},
	{"Godot.NativeCalls::godot_icall__OS_is_ok_left_and_cancel_right_68fe5f59", (void*)godot_icall__OS_is_ok_left_and_cancel_right_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_print_all_textures_by_size_c8e54a7b", (void*)godot_icall__OS_print_all_textures_by_size_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__OS_print_resources_by_type_a4cdc50a", (void*)godot_icall__OS_print_resources_by_type_a4cdc50a},
	{"Godot.NativeCalls::godot_icall__OS_native_video_play_221902a", (void*)godot_icall__OS_native_video_play_221902a},
	{"Godot.NativeCalls::godot_icall__OS_native_video_is_playing_68fe5f59", (void*)godot_icall__OS_native_video_is_playing_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_native_video_stop_c8e54a7b", (void*)godot_icall__OS_native_video_stop_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__OS_native_video_pause_c8e54a7b", (void*)godot_icall__OS_native_video_pause_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__OS_native_video_unpause_c8e54a7b", (void*)godot_icall__OS_native_video_unpause_c8e54a7b},
	{"Godot.NativeCalls::godot_icall__OS_get_scancode_string_9f3844b7", (void*)godot_icall__OS_get_scancode_string_9f3844b7},
	{"Godot.NativeCalls::godot_icall__OS_is_scancode_unicode_242501fd", (void*)godot_icall__OS_is_scancode_unicode_242501fd},
	{"Godot.NativeCalls::godot_icall__OS_find_scancode_from_string_6d3db7c6", (void*)godot_icall__OS_find_scancode_from_string_6d3db7c6},
	{"Godot.NativeCalls::godot_icall__OS_set_use_file_access_save_and_swap_ba24800b", (void*)godot_icall__OS_set_use_file_access_save_and_swap_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_alert_fc93f18d", (void*)godot_icall__OS_alert_fc93f18d},
	{"Godot.NativeCalls::godot_icall__OS_set_thread_name_2660dbb2", (void*)godot_icall__OS_set_thread_name_2660dbb2},
	{"Godot.NativeCalls::godot_icall__OS_set_use_vsync_ba24800b", (void*)godot_icall__OS_set_use_vsync_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_is_vsync_enabled_68fe5f59", (void*)godot_icall__OS_is_vsync_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_set_vsync_via_compositor_ba24800b", (void*)godot_icall__OS_set_vsync_via_compositor_ba24800b},
	{"Godot.NativeCalls::godot_icall__OS_is_vsync_via_compositor_enabled_68fe5f59", (void*)godot_icall__OS_is_vsync_via_compositor_enabled_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_has_feature_8a7120b9", (void*)godot_icall__OS_has_feature_8a7120b9},
	{"Godot.NativeCalls::godot_icall__OS_request_permission_8a7120b9", (void*)godot_icall__OS_request_permission_8a7120b9},
	{"Godot.NativeCalls::godot_icall__OS_request_permissions_68fe5f59", (void*)godot_icall__OS_request_permissions_68fe5f59},
	{"Godot.NativeCalls::godot_icall__OS_get_granted_permissions_4cc8f2a7", (void*)godot_icall__OS_get_granted_permissions_4cc8f2a7},
	{"Godot.NativeCalls::godot_icall__ResourceLoader_load_interactive_ef466547", (void*)godot_icall__ResourceLoader_load_interactive_ef466547},
	{"Godot.NativeCalls::godot_icall__ResourceLoader_load_632b28d2", (void*)godot_icall__ResourceLoader_load_632b28d2},
	{"Godot.NativeCalls::godot_icall__ResourceLoader_get_recognized_extensions_for_type_82ee0a94", (void*)godot_icall__ResourceLoader_get_recognized_extensions_for_type_82ee0a94},
	{"Godot.NativeCalls::godot_icall__ResourceLoader_set_abort_on_missing_resources_ba24800b", (void*)godot_icall__ResourceLoader_set_abort_on_missing_resources_ba24800b},
	{"Godot.NativeCalls::godot_icall__ResourceLoader_get_dependencies_82ee0a94", (void*)godot_icall__ResourceLoader_get_dependencies_82ee0a94},
	{"Godot.NativeCalls::godot_icall__ResourceLoader_has_cached_8a7120b9", (void*)godot_icall__ResourceLoader_has_cached_8a7120b9},
	{"Godot.NativeCalls::godot_icall__ResourceLoader_exists_cdeda881", (void*)godot_icall__ResourceLoader_exists_cdeda881},
	{"Godot.NativeCalls::godot_icall__ResourceSaver_save_7666d7ab", (void*)godot_icall__ResourceSaver_save_7666d7ab},
	{"Godot.NativeCalls::godot_icall__ResourceSaver_get_recognized_extensions_e5c6fc3c", (void*)godot_icall__ResourceSaver_get_recognized_extensions_e5c6fc3c},
	{"Godot.NativeCalls::godot_icall__Semaphore_wait_f04570f5", (void*)godot_icall__Semaphore_wait_f04570f5},
	{"Godot.NativeCalls::godot_icall__Semaphore_post_f04570f5", (void*)godot_icall__Semaphore_post_f04570f5},
	{"Godot.NativeCalls::godot_icall__Thread_start_70aab363", (void*)godot_icall__Thread_start_70aab363},
	{"Godot.NativeCalls::godot_icall__Thread_get_id_97be4a2e", (void*)godot_icall__Thread_get_id_97be4a2e},
	{"Godot.NativeCalls::godot_icall__Thread_is_active_68fe5f59", (void*)godot_icall__Thread_is_active_68fe5f59},
	{"Godot.NativeCalls::godot_icall__Thread_wait_to_finish_a08d6f10", (void*)godot_icall__Thread_wait_to_finish_a08d6f10},
#ifdef TOOLS_ENABLED
	{"Godot.EditorNativeCalls::godot_icall__VisualScriptEditor_add_custom_node_3135d8d9", (void*)godot_icall__VisualScriptEditor_add_custom_node_3135d8d9},
	{"Godot.EditorNativeCalls::godot_icall__VisualScriptEditor_remove_custom_node_fc93f18d", (void*)godot_icall__VisualScriptEditor_remove_custom_node_fc93f18d},
#endif
};
} // end of anonymous namespace

void register_generated_icalls() {
    godot_register_glue_header_icalls();
    for(const auto & f : functions)
        mono_add_internal_call(f.name, (void*)f.ptr);
}

} // namespace GodotSharpBindings

#endif // MONO_GLUE_ENABLED
